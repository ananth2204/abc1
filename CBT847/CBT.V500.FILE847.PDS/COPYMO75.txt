*          DATA SET CBT990     AT LEVEL 075 AS OF 01/01/04               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     To see all the COPYMODS options, look at label       **           00031
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **           00032
**     parms for SYSIN, see the code a few lines after the  **           00033
**     label CARDREAD in the PARMCHEK CSECT.                **           00034
**                                                          **           00035
**     The different COPYMODS parms or options can be used  **           00036
**     in combination with each other, as long as they      **           00037
**     don't contradict each other.  In certain cases, the  **           00038
**     use of one option will cause the automatic turn-off  **           00039
**     of one or more other options that contradict with    **           00040
**     it.  This "adjustment" is done by the COPYMODS       **           00041
**     program just after it receives the options settings  **           00042
**     back from the PARMCHEK program.  For example, if     **           00043
**     both LABLDUMP and LABADDIN (which contradict each    **           00044
**     other) are set, COPYMODS will make a judgment that   **           00045
**     LABADDIN takes precedence, so it will turn off both  **           00046
**     the LABLDUMP and READ (read only) options.  On the   **           00047
**     other hand, the STRIP and LABLDUMP options do not    **           00048
**     contradict each other.  So in that case, when STRIP  **           00049
**     and LABLDUMP are both set, COPYMODS will dump all    **           00050
**     the labels from the input tape to the LABLDUMP file, **           00051
**     while at the same time, it will strip them from the  **           00052
**     tape copies.  To get the exact effect you want from  **           00053
**     a COPYMODS run, just be very careful to code the     **           00054
**     correct combination of options.  Look at the OPTIONS **           00055
**     report before you mount the tapes.  (The OPTIONS     **           00056
**     report in //SYSPRINT will be complete before the     **           00057
**     tapes are mounted.)                                  **           00058
**                                                          **           00059
**     Up to 132 bytes of the beginning n records of each   **           00060
**     tape file can be dumped in Hex, similarly to the     **           00061
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **           00062
**     tion of the printables in this hex dump can be       **           00063
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **           00064
**     are COPYMODS PARM or SYSIN keywords also.            **           00065
**                                                          **           00066
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **           00067
**     has been added.  COPYMODS can init ASCII tapes       **           00068
**     with the INASC3 and INASC4 keywords.  Additionally,  **           00069
**     the other functions of COPYMODS such as LABLDUMP,    **           00070
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **           00071
**     option with the ASCII keyword allows you to print    **           00072
**     tape records in hex, with an ASCII interpretation    **           00073
**     of the printables.  EOV2EOF works for ASCII tapes.   **           00074
**                                                          **           00075
**     COPYMODS will automatically read past any number     **           00076
**     of leading tape marks on a tape, and will copy       **           00077
**     any real data that is after them.  The leading       **           00078
**     tape marks can be included in the copied tapes       **           00079
**     (option LTMCOPY - default) or they can be skipped    **           00080
**     from the copied tapes and left off, so the real      **           00081
**     data will be at the beginning of the copied tapes    **           00082
**     (option LTMSKIP).                                    **           00083
**                                                          **           00084
**     See the "New Features" section below for some more   **           00085
**     details.  See the #MANUAL member of the install pds  **           00086
**     (CBT Tape File 229) for even more details.           **           00087
**                                                          **           00088
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **           00089
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00090
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00091
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00092
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00093
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00094
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00095
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00096
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00097
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00098
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00099
**    PARTICULAR OUTPUT TAPE.                               **           00100
**                                                          **           00101
**  COPYMODS has some optional DD's which will be used      **           00102
**    if they are present.  These following DD's are used   **           00103
**    by the PARMCHEK program, when COPYMODS is executed.   **           00104
**                                                          **           00105
**  //SYSIN    - Extra space to enter PARM keywords.        **           00106
**               Also, the only place to enter the          **           00107
**               "quantity" keywords, which start in        **           00108
**               column 1 of a SYSIN card.                  **           00109
**                                                          **           00110
**         OUTVOLALL=volser      (up to 6 characters)       **           00111
**         TAPEOWNER=owner name  (up to 10 characters)      **           00112
**         FILELIMIT=nnn         (numeric)                  **           00113
**         LABELIMIT=nnn         (numeric)                  **           00114
**         PRINTRCDS=nnn         (numeric)                  **           00115
**                                                          **           00116
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00117
**               program.  LRECL=133,RECFM=FBA.             **           00118
**                                                          **           00119
**    In addition, the COPYMODS program itself has some     **           00120
**    extra DD's, which are required if the appropriate     **           00121
**    options are set:                                      **           00122
**                                                          **           00123
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00124
**               receive the images of all tape labels      **           00125
**               read, together with some control cards     **           00126
**               that COPYMODS generates.  This DD name     **           00127
**               is necessary if the LABLDUMP option is     **           00128
**               in effect.                                 **           00129
**                                                          **           00130
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00131
**               contains the set of labels to be spliced   **           00132
**               into an NL tape to create an SL tape.      **           00133
**               This DD name is necessary if the LABADDIN  **           00134
**               option of COPYMODS is in effect.  Usually  **           00135
**               the LABADDIN file is a previous result of  **           00136
**               a LABLDUMP operation, or it is an altered  **           00137
**               or edited version of a previously created  **           00138
**               LABLDUMP file.                             **           00139
**                                                          **           00140
**  This program has to be assembled with PARM=BATCH in     **           00141
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00142
**    program has to be included in the assembly, because   **           00143
**    PARMCHEK has to be fitted to the current level of     **           00144
**    the COPYMODS program.                                 **           00145
**                                                          **           00146
**************************************************************           00147
**                                                          **           00148
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00149
**                                                          **           00150
**  //IN       -  Points to the Input Tape.  Only not       **           00151
**                required in a tape init operation, if     **           00152
**                the INITVOLS option is in effect.         **           00153
**                Otherwise, //IN is always required.       **           00154
**                                                          **           00155
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00156
**  //OUT16       These are for the output tapes.  These    **           00157
**                are not required if the READ (readonly)   **           00158
**                option is in effect.  Any one of these    **           00159
**                16 possible DD names may be coded, even   **           00160
**                if some numbers have been skipped.  For   **           00161
**                instance, if you have one output tape,    **           00162
**                it may be defined by //OUT13.  It is      **           00163
**                not necessary to code //OUT1.             **           00164
**                                                          **           00165
**  //SYSPRINT  - The output dataset to contain all the     **           00166
**                COPYMODS operation information that was   **           00167
**                called for by the various options set,    **           00168
**                including the OPTIONS display itself.     **           00169
**                This dataset should be LRECL=133,         **           00170
**                RECFM=FBA.                                **           00171
**                                                          **           00172
**************************************************************           00173
**                                                          **           00174
**  PROGRAM STRUCTURE:                                      **           00175
**                                                          **           00176
**  This program is no longer a single CSECT as it was in   **           00177
**    the old days.  There are now the following CSECTs,    **           00178
**    which should all be assembled together:               **           00179
**                                                          **           00180
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00181
**                                                          **           00182
**   COPYMODS - The main processing module, which contains  **           00183
**              most of the tape copy/reading processing.   **           00184
**                                                          **           00185
**   TRTCSECT - The translate tables for Hex printing of    **           00186
**              tape records.                               **           00187
**                                                          **           00188
**   COPYMOPT - The separate routine which reads the PARM   **           00189
**              bits that have been set, and which prints   **           00190
**              a report in SYSPRINT showing the options    **           00191
**              that are in effect.                         **           00192
**                                                          **           00193
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00194
**              done here.  PARM bits are passed back to    **           00195
**              COPYMODS in R1, the User Area is passed     **           00196
**              back to COPYMODS in R2.                     **           00197
**                                                          **           00198
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00199
**              program, this table contains all the option **           00200
**              bit meanings and their default settings.    **           00201
**                                                          **           00202
**   LABELCHK - Now a separate CSECT to check whether a     **           00203
**              record read by COPYMODS is part of a set    **           00204
**              of label records or not.                    **           00205
**                                                          **           00206
**   PRINTLBL - A separate CSECT to interpret all tape      **           00207
**              label contents in a report line.            **           00208
**                                                          **           00209
**   MSGCSECT - Contains all the texts of the messages      **           00210
**              used by the COPYMODS CSECT.  Addressed      **           00211
**              by two new macros:  MVFMS which does        **           00212
**              operations on fields in the messages, and   **           00213
**              PTMS, which prints a message to SYSPRINT.   **           00214
**                                                          **           00215
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00216
**  but they must be coordinated, and at the same level, so **           00217
**  to be safe, they should always be assembled together.   **           00218
**  The LABELCHK program has the same status.  It must be   **           00219
**  assembled together with the COPYMODS program.  Same     **           00220
**  with the PRINTLBL program.                              **           00221
**                                                          **           00222
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00223
**                                                          **           00224
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00225
**  ------- ------- -- ------- -----                        **           00226
**                                                          **           00227
**  COPYMODS is the first program to get control.  The      **           00228
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00229
**  and the entry locations are stored in fullwords for     **           00230
**  later use.                                              **           00231
**                                                          **           00232
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00233
**  if that ddname is present.  If //PARMREPT is present,   **           00234
**  it is also used by the PARMCHEK program.                **           00235
**                                                          **           00236
**  After PARMCHEK has returned all parm bit settings to    **           00237
**  COPYMODS and all user-quantities, the settings are      **           00238
**  examined by COPYMODS and inconsistent settings are      **           00239
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00240
**  has to be turned off, because only one of these can be  **           00241
**  done in one run.  These inconsistencies are all fixed,  **           00242
**  and then COPYMODS processing starts.                    **           00243
**                                                          **           00244
**  COPYMOPT is called to display all the options that have **           00245
**  been set, if the OPTION parm has been set.  This is     **           00246
**  done to //SYSPRINT.  If any adjustments of options have **           00247
**  been made, you can see the final result in the SYSPRINT **           00248
**  report that has been produced by COPYMOPT.              **           00249
**                                                          **           00250
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **           00251
**  and opened again by COPYMODS.                           **           00252
**                                                          **           00253
**  A significant note is, that the PARMREPT contains the   **           00254
**  options as they have been set by the PARMCHEK program,  **           00255
**  with no alteration.  The COPYMOPT call, which produces  **           00256
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00257
**  adjustments for inconsistent parm settings has been     **           00258
**  made by COPYMODS, so you can see the effect of those    **           00259
**  adjustments by comparing these two reports against      **           00260
**  each other.                                             **           00261
**                                                          **           00262
**  After that, COPYMODS does its things, depending on the  **           00263
**  options that have been set.  Most of the processing is  **           00264
**  done in the COPYMODS csect, except for the HEXPRT       **           00265
**  option, where the translation tables are in the         **           00266
**  TRTCSECT csect.                                         **           00267
**                                                          **           00268
**  The LABELCHK program is called whenever an 80-byte      **           00269
**  record is read, to see whether that record is part of   **           00270
**  a set of tape labels.                                   **           00271
**                                                          **           00272
**  Whenver a label is to be interpreted to SYSPRINT, the   **           00273
**  PRINTLBL program is called.                             **           00274
**                                                          **           00275
**************************************************************           00276
**                                                          **           00277
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00278
**                                                          **           00279
**                                                          **           00280
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00281
**                                                          **           00282
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00283
**                                                          **           00284
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00285
**       BE CORRECTLY COPIED.                               **           00286
**                                                          **           00287
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00288
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00289
**       FOUND ON THE INPUT TAPE.                           **           00290
**                                                          **           00291
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00292
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00293
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00294
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00295
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00296
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00297
**       MAIN SOURCE CODE.                                  **           00298
**                                                          **           00299
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00300
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00301
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00302
**       INVOKE THIS ACTION.                                **           00303
**                                                          **           00304
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00305
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00306
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00307
**                                                          **           00308
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00309
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00310
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00311
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00312
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00313
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00314
**                                                          **           00315
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00316
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00317
**                                                          **           00318
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00319
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00320
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00321
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00322
**       SERVICE.                                           **           00323
**                                                          **           00324
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00325
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00326
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00327
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00328
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00329
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00330
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00331
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00332
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00333
**                                                          **           00334
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00335
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00336
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00337
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00338
**                                                          **           00339
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00340
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00341
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00342
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00343
**                                                          **           00344
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00345
**       TAPEOWNER=xxxxxxxxxx                               **           00346
**       FILELIMIT=nnnn                                     **           00347
**       LABELIMIT=nnnn                                     **           00348
**       PRINTRCDS=nnnn                                     **           00349
**         or                                               **           00350
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00351
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00352
**                                                          **           00353
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00354
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00355
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00356
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00357
**                                                          **           00358
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00359
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00360
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00361
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00362
**       IN THE EXTERNAL LABEL DATASET.                     **           00363
**                                                          **           00364
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00365
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00366
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00367
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00368
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00369
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00370
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00371
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00372
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00373
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00374
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00375
**                                                          **           00376
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00377
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00378
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00379
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00380
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00381
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00382
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00383
**       DATA FILE HAS BEEN WRITTEN.                        **           00384
**                                                          **           00385
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00386
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00387
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00388
**       EXTERNAL LABEL DATASET.                            **           00389
**                                                          **           00390
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00391
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00392
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00393
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00394
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00395
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00396
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00397
**       THE HDR2.                                          **           00398
**                                                          **           00399
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00400
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00401
**                                                          **           00402
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00403
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00404
**       IN A SYSIN CARD.                                   **           00405
**                                                          **           00406
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00407
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00408
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00409
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00410
**       INTERPRETED AS NL.                                 **           00411
**                                                          **           00412
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00413
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00414
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00415
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00416
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00417
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00418
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00419
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00420
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00421
**       BYTE TOTALS COMING FROM DATA FILES.                **           00422
**                                                          **           00423
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00424
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00425
**       TO PRINT THEM.)                                    **           00426
**                                                          **           00427
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00428
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00429
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00430
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00431
**                                                          **           00432
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00433
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00434
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00435
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00436
**       DATA BLOCKS ON THE TAPE.                           **           00437
**                                                          **           00438
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00439
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00440
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00441
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00442
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00443
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00444
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00445
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00446
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00447
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00448
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00449
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00450
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00451
**       INPUT TAPE.                                        **           00452
**                                                          **           00453
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00454
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00455
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00456
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00457
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00458
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00459
**                                                          **           00460
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00461
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00462
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00463
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00464
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00465
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00466
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00467
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00468
**                                                          **           00469
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00470
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00471
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00472
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00473
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00474
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00475
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00476
**                                                          **           00477
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00478
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00479
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00480
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00481
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00482
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00483
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00484
**                                                          **           00485
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **           00486
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **           00487
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **           00488
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **           00489
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **           00490
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **           00491
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **           00492
**                                                          **           00493
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **
**       THESE INDICATORS (TURNED OFF) ARE:                 **
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **
**                                                          **
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **
**       TURN THEM OFF.  THE NOSECOFF KEYWORD NULLIFIES     **
**       THE EFFECT OF THE SECOFF KEYWORD.                  **
**                                                          **
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **
**                                                          **
**************************************************************           00494
         EJECT                                                           00495
**************************************************************           00496
**  CHANGE LOG:                                             **           00497
**                                                          **           00498
** LEVEL 003                                                **           00499
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00500
**                                                          **           00501
** LEVEL 004                                                **           00502
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00503
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00504
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00505
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00506
**             COPYING FILES.                     SBG 03/00 **           00507
**                                                          **           00508
** LEVEL 005                                                **           00509
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00510
**             R12,R11.                           SBG 03/00 **           00511
**                                                          **           00512
** LEVEL 006                                                **           00513
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00514
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00515
**             OUT16.                             SBG 03/00 **           00516
**                                                          **           00517
** LEVEL 007 AND 008                                        **           00518
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00519
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00520
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00521
**                                                          **           00522
** LEVEL 009                                                **           00523
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00524
**                                                          **           00525
** LEVEL 010                                                **           00526
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00527
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00528
**                                                          **           00529
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00530
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00531
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00532
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00533
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00534
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00535
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00536
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00537
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00538
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00539
**                                                          **           00540
** LEVEL 011                                                **           00541
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00542
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00543
**             ONE TAPEMARK.                      SBG 03/00 **           00544
**                                                SBG 03/00 **           00545
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00546
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00547
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00548
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00549
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00550
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00551
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00552
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00553
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00554
**                                                          **           00555
** LEVEL 012                                                **           00556
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00557
**             HAVING ONLY ONE TAPE MARK AFTER              **           00558
**             THEM.                                        **           00559
**                                                          **           00560
** LEVEL 013                                                **           00561
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00562
**             LABEL TYPES, AND THE SETTING OF              **           00563
**             FLAGS TO INDICATE EACH TYPE.                 **           00564
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00565
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00566
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00567
**             EASY PRINTING OF LABEL CONTENTS,             **           00568
**             BUT NO EXTRA PRINTING IS DONE AT             **           00569
**             THIS LEVEL.                                  **           00570
**                                                          **           00571
** LEVEL 014                                                **           00572
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00573
**             PARM SCANNER THAT IS EASY TO                 **           00574
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00575
**             FOR THE PARMS.  ADDED SUPPORT,               **           00576
**             VIA THE LBLINFO PARM, TO PRINT               **           00577
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00578
**             EOV2 LABEL INFORMATION, IF IT IS             **           00579
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00580
**             IF THE INPUT TAPE IS SL.                     **           00581
**                                                          **           00582
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00583
**             SEE LABEL PARMTABL.                          **           00584
**                                                          **           00585
** LEVEL 015                                                **           00586
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00587
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00588
**             THE ABILITY TO TURN IT ON. INCREASED         **           00589
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00590
**             BYTE.                                        **           00591
**                                                          **           00592
** LEVEL 016                                                **           00593
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00594
**             TO SET ANY PARM SETTING AS A                 **           00595
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00596
**             ENTRY THAT IS LATER IN THE TABLE,            **           00597
**             WILL OVERRIDE A SETTING FOR A                **           00598
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00599
**             TABLE.  SETTING A PARM EXPLICITLY            **           00600
**             IN THE JCL, WILL OVERRIDE ANY                **           00601
**             DEFAULT SETTING FOR THAT PARM.               **           00602
**                                                          **           00603
** LEVEL 017                                                **           00604
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00605
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00606
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00607
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00608
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00609
**             OF THIS IS CODED IN PARMTABL AND             **           00610
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00611
**             PRTXXX2.                                     **           00612
**                                                          **           00613
** LEVEL 018                                                **           00614
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00615
**             VOLSER OF THE COPIED TAPES, TO               **           00616
**             MATCH THE VOLSER INDICATED IN THE            **           00617
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00618
**             THE CHGVOL PARM KEYWORD.  THIS               **           00619
**             ACTION ONLY OCCURS IF THE INPUT              **           00620
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00621
**             DETECTED.  THE COPIED VOL1 LABEL             **           00622
**             IS ALTERED BEFORE THE WRITE.                 **           00623
**                                                          **           00624
** LEVEL 019                                                **           00625
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00626
**             AND EOV2 LABELS THAT ARE IN THE              **           00627
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00628
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00629
**             CAN HAPPEN WHEN YOU COPY FILES               **           00630
**             WITH THE COPYFILE PROGRAM, FROM              **           00631
**             THE END OF ONE TAPE, TO THE                  **           00632
**             BEGINNING OR THE MIDDLE OF                   **           00633
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00634
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00635
**             COPIES THE EOV LABELS AS IS.  THIS           **           00636
**             NEW OPTION IS CALLED EOVCHG OR               **           00637
**             EOV2EOF; THE EOV LABELS ARE                  **           00638
**             CHANGED (IN THE COPIED TAPES) TO             **           00639
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00640
**             REPORTS THIS FACT.                           **           00641
**                                                          **           00642
** LEVEL 020                                                **           00643
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00644
**             TO ALLOW A RUN OF COPYMODS THAT              **           00645
**             JUST READS THE INPUT TAPE, AND DOES          **           00646
**             NOT MAKE COPIES.                             **           00647
**                                                          **           00648
** LEVEL 021                                                **           00649
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00650
**             IEHINITTED TAPES.                            **           00651
**                                                          **           00652
** LEVEL 022                                                **           00653
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00654
**             LABELS FROM A TAPE, TO AN FB-80              **           00655
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00656
**                                                          **           00657
** LEVEL 023                                      SBG 09/00 **           00658
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00659
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00660
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00661
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00662
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00663
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00664
**             TO CODE                                      **           00665
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00666
**             OF THE SYSIN CARD FILE.  IF THERE            **           00667
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00668
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00669
**             AS CODING CHGVOL.                            **           00670
**                                                          **           00671
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00672
**             DUMPED LABELS HAVE CONTROL CARDS             **           00673
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00674
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00675
**             CONTROL CARDS.                               **           00676
**                                                          **           00677
** LEVEL 024                                      SBG 09/00 **           00678
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00679
**             OUTPUT COPIES FROM NL INPUT AND A            **           00680
**             SET OF LABELS CREATED BY LABLDUMP.           **           00681
**             CHANGED THE DCB NAMES AND DD CARDS           **           00682
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00683
**             RESTORE.                                     **           00684
**                                                          **           00685
**             CHANGED PROGRAM INITIALIZATION TO            **           00686
**             A STANDARD FORM.  GOT RID OF PRIME           **           00687
**             AND TERME MACROS.  HAVE 5 BASE               **           00688
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00689
**                                                          **           00690
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00691
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00692
**             LABELS ON AN SL TAPE, AND WON'T              **           00693
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00694
**             TAPE IS SL, ACCIDENTALLY.                    **           00695
**                                                          **           00696
** LEVEL 025                                      SBG 09/00 **           00697
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00698
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00699
**                                                          **           00700
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00701
**             BE USED.                                     **           00702
**                                                          **           00703
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00704
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00705
**                TAPEOWNER=xxxxxxxxxx                      **           00706
**                FILELIMIT=nnnn                            **           00707
**                LABELIMIT=nnnn                            **           00708
**                PRINTRCDS=nnnn                            **           00709
**                  or                                      **           00710
**                OUTVOLALL=volser ,                        **           00711
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00712
**             AND ANY PARM THAT IS CODED IN THE            **           00713
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00714
**             AND IT WILL OVERRIDE THE PARM IN             **           00715
**             THE EXEC CARD (SINCE SYSIN IS                **           00716
**             SCANNED LATER IN THE PROCESSING).            **           00717
**                                                          **           00718
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00719
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00720
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00721
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00722
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00723
**                                                          **           00724
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00725
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00726
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00727
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00728
**             WHEN COPYING AN INPUT TAPE.                  **           00729
**                                                          **           00730
** LEVEL 026                                      SBG 09/00 **           00731
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00732
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00733
**                                                          **           00734
** LEVEL 027                                      SBG 09/00 **           00735
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00736
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00737
**                                                          **           00738
** LEVEL 028                                      SBG 09/00 **           00739
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00740
**             STANDARD USER LABEL SUPPORT.                 **           00741
**                                                          **           00742
** LEVEL 029                                      SBG 09/00 **           00743
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00744
**             STANDARD USER LABELS.                        **           00745
**                                                          **           00746
** LEVEL 030                                      SBG 09/00 **           00747
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00748
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00749
**             OUTPUT TAPES, DURING THE COPY.               **           00750
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00751
**                                                          **           00752
**             FIXED THE EYECATCHERS A BIT.                 **           00753
**                                                          **           00754
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00755
**                                                          **           00756
** LEVEL 031                                      SBG 09/00 **           00757
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00758
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00759
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00760
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00761
**                                                          **           00762
** LEVEL 032                                      SBG 10/00 **           00763
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00764
**             LABADDIN PROCESSING WHEN THERE ARE           **           00765
**             MORE LABELS IN THE EXTERNAL LABEL            **           00766
**             DATASET, THAN THERE ARE NL FILES             **           00767
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00768
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00769
**             SAYS TO STOP AT THE END OF NL FILES          **           00770
**             AND NOT WRITE NULL SL FILES TO               **           00771
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00772
**             LABELS.                                      **           00773
**                                                          **           00774
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00775
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00776
**             AND THEN BACKING OVER IT AND CLOSING.        **           00777
**                                                          **           00778
** LEVEL 033                                      SBG 10/00 **           00779
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00780
**             PROCESSING WHEN THE LAST LABEL SET           **           00781
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00782
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00783
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00784
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00785
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00786
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00787
**             AND THE DATA AND A TAPEMARK), AND IT         **           00788
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00789
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00790
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00791
**             FROM THE EXISTING HDR2 AND EOF IS            **           00792
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00793
**             THE END.                                     **           00794
**                                                          **           00795
** LEVEL 034                                      SBG 10/00 **           00796
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00797
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00798
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00799
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00800
**             THE REWIND, AND LEAVES THE WRITTEN           **           00801
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00802
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00803
**             NOT ERASED.                                  **           00804
**                                                          **           00805
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00806
**             CONDITION IS FLAGGED WITH A PROPER           **           00807
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00808
**             FOR THAT DRIVE IS BYPASSED.                  **           00809
**                                                          **           00810
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00811
**             FIRST VERSION OF THIS PROGRAM.               **           00812
**                                                          **           00813
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00814
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00815
**             THESE ARE THE OPENDFLG SETTINGS.             **           00816
**                                                          **           00817
** LEVEL 035                                      SBG 10/00 **           00818
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00819
**             TAPES, BY NOT REUSING THE WRITE              **           00820
**             IOB WITHOUT REFRESHING THE PARTS             **           00821
**             THAT ARE USED BY IOS.  THIS IS THE           **           00822
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00823
**                                                          **           00824
**             LABLDUMP OF AN IEHINITTED TAPE               **           00825
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00826
**             CARD, IN ANTICIPATION OF CREATING            **           00827
**             A TAPE INITIALIZATION ROUTINE FROM           **           00828
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00829
**             NEXT LEVEL, IS BETTER.)                      **           00830
**                                                          **           00831
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00832
**                                                          **           00833
** LEVEL 036                                      SBG 10/00 **           00834
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00835
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00836
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00837
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00838
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00839
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00840
**                                                          **           00841
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00842
**             USE A PARM OF INITVOLS.                      **           00843
**                                                          **           00844
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00845
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00846
**                                                          **           00847
**             CONSOLIDATED CHGVOL CODE INTO A              **           00848
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00849
**                                                          **           00850
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00851
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00852
**             STEPPING ON EACH OTHER.                      **           00853
**                                                          **           00854
** LEVEL 037                                      SBG 10/00 **           00855
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00856
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00857
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00858
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00859
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00860
**             VALUE IS USED.                               **           00861
**                                                          **           00862
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00863
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00864
**             VALUE, IF THERE IS ONE.                      **           00865
**                                                          **           00866
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00867
**             SETS THE PARM VALUE OF LIMFILE OR            **           00868
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00869
**             THE PROGRAM ACTION.                          **           00870
**                                                          **           00871
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00872
**             PROGRAM COUNTS BYTES READ FROM THE           **           00873
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00874
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00875
**             THIS ACTION.                                 **           00876
**                                                          **           00877
** LEVEL 038                                      SBG 11/00 **           00878
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00879
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00880
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00881
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00882
**             FILES.                                       **           00883
**                                                          **           00884
** LEVEL 039                                      SBG 11/00 **           00885
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00886
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00887
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00888
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00889
**                                                          **           00890
** LEVEL 040                                      SBG 11/00 **           00891
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00892
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00893
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00894
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00895
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00896
**             COUNT, SO A USER WILL BE ABLE TO             **           00897
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00898
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00899
**                                                          **           00900
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00901
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00902
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00903
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00904
**             WHAT TO DO.                                  **           00905
**                                                          **           00906
** LEVEL 041                                      SBG 11/00 **           00907
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00908
**             OF LABEL SETS IN THE LABADDIN FILE           **           00909
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00910
**             IF THE LABADDIN FILE CONTAINS MANY           **           00911
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00912
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00913
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00914
**                                                          **           00915
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00916
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00917
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00918
**             FILE TO END AFTER NNN OF THEM.               **           00919
**                                                          **           00920
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00921
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00922
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00923
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00924
**             WHEN EOV LABELS ARE PRESENT.                 **           00925
**                                                          **           00926
** LEVEL 042                                      SBG 11/00 **           00927
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00928
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00929
**             REGISTER.                                    **           00930
**                                                          **           00931
** LEVEL 043                                      SBG 11/00 **           00932
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00933
**             "OPTION" PARAMETER.  CALL IS TO A            **           00934
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00935
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00936
**             ASSEMBLED AND LINKEDITED WITH                **           00937
**             THE COPYMODS PROGRAM.                        **           00938
**                                                          **           00939
**             CHANGED THE WORDING OF SOME OF THE           **           00940
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00941
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00942
**                                                          **           00943
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00944
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00945
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00946
**             LABADDIN WAS IN EFFECT.                      **           00947
**                                                          **           00948
** LEVEL 044                                      SBG 12/00 **           00949
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00950
**                                                          **           00951
** LEVEL 045                                      SBG 12/00 **           00952
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00953
**             COMPLETION OF THE COPY. SUPPWTO.             **           00954
**                                                          **           00955
** LEVEL 046                                      SBG 12/00 **           00956
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00957
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00958
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00959
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00960
**             COUNT CORRECTION.                            **           00961
**                                                          **           00962
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00963
**                                                          **           00964
** LEVEL 047                                      SBG 12/00 **           00965
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00966
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00967
**             NUMBERS OF DATA RECORDS.  IF THE             **           00968
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00969
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00970
**                                                          **           00971
** LEVEL 048                                      SBG 05/02 **           00972
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00973
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00974
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00975
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00976
**                                                          **           00977
** LEVEL 049                                      SBG 05/02 **           00978
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00979
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00980
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00981
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00982
**                                                          **           00983
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00984
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00985
**             EACH LABEL.  IT DOES NOT MATTER              **           00986
**             WHERE THE LABELS ARE, IN THE INPUT           **           00987
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00988
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00989
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00990
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00991
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00992
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00993
**                                                          **           00994
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00995
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00996
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00997
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00998
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00999
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           01000
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           01001
**             WE CAN NOW FORCE THE nnn TO BE               **           01002
**             INTERPRETED AS NL USING THE NLLIM            **           01003
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           01004
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           01005
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           01006
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           01007
**             OTHER KEYWORD IS ALSO CODED.                 **           01008
**                                                          **           01009
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           01010
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           01011
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           01012
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           01013
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           01014
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           01015
**             DURING THE WRITE OF THE TAPE MARK.           **           01016
**                                                          **           01017
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           01018
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           01019
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           01020
**             BEFORE ISSUING ABEND 069.                    **           01021
**                                                          **           01022
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           01023
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           01024
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           01025
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           01026
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           01027
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           01028
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           01029
**             SYSPRINT DATASET.                            **           01030
**                                                          **           01031
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           01032
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           01033
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           01034
**                                                          **           01035
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           01036
**             OF THE MAIN CSECT.                           **           01037
**                                                          **           01038
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           01039
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           01040
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           01041
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           01042
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           01043
**             PARM SCAN IN DETAIL.                         **           01044
**                                                          **           01045
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           01046
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           01047
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           01048
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           01049
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           01050
**                                                          **           01051
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           01052
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           01053
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           01054
**             PROGRAM AND NOT BY COPYMODS.                 **           01055
**                                                          **           01056
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           01057
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           01058
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           01059
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01060
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01061
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01062
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01063
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01064
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01065
**             PROGRAM.                                     **           01066
**                                                          **           01067
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01068
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01069
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01070
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01071
**             USER FIELD AREA.                             **           01072
**                                                          **           01073
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01074
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01075
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01076
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01077
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01078
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01079
**                                                          **           01080
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01081
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01082
**             POSSIBLE.                                    **           01083
**                                                          **           01084
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01085
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01086
**             IN ERROR.                                    **           01087
**                                                          **           01088
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01089
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01090
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01091
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01092
**                                                          **           01093
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01094
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01095
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01096
**                                                          **           01097
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01098
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01099
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01100
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01101
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01102
**             PROGRAM.                                     **           01103
**                                                          **           01104
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01105
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01106
**                                                          **           01107
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01108
**             TEN PARM BITS INSTEAD OF FIVE.               **           01109
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01110
**                                                          **           01111
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01112
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01113
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01114
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01115
**                                                          **           01116
** LEVEL 064 - Return Code adjustments.                     **           01117
**                                                          **           01118
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01119
**             processing.                                  **           01120
**             HEXPRT now works for INITVOLS.               **           01121
**             HEXPRT now prints the external labels in a   **           01122
**             LABADDIN operation.                          **           01123
**             TAPEOWNER= is now honored for an INITVOLS    **           01124
**             operation (this fixes a bug).                **           01125
**             Number for FILELIMIT=nnn is now filled in,   **           01126
**             in the message, when the EBCDIC value        **           01127
**             exists.                                      **           01128
**             Fix another bug--Tape Owner not altered--    **           01129
**             now use the value of tape owner passed from  **           01130
**             the PARMCHEK program.                        **           01131
**                                                          **           01132
** LEVEL 066 - Cosmetic changes.                            **           01133
**             Save original PARM pointer in COPYMODS       **           01134
**             csect itself.  (It got lost after PARMCHEK   **           01135
**             call.)                                       **           01136
**                                                          **           01137
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01138
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01139
**             INASC3 or INASC4 keywords.  You can control  **           01140
**             if the HEXPRT is interpreted in EBCDIC or    **           01141
**             ASCII using the ASCII or the EBCDIC          **           01142
**             keywords.  For an ASCII tape init, ASCII     **           01143
**             print interpretation is turned on by         **           01144
**             default.  If you are initting an ASCII       **           01145
**             tape using the INASCII keyword, a Level 3    **           01146
**             ASCII tape will be created.                  **           01147
**                                                          **           01148
**             ASCII Level 4 is only supported in MVS at    **           01149
**             the OS/390 2.4 level and higher.             **           01150
**                                                          **           01151
** LEVEL 068 - Split off label checking routine into a      **           01152
**             separate program, LABELCHK, which is         **           01153
**             assembled with COPYMODS together.            **           01154
**                                                          **           01155
** LEVEL 069 - More ASCII label detection support.          **           01156
**             LABLDUMP now works for ASCII tapes.  The     **           01157
**             control cards in the LABLDUMP DD name have   **           01158
**             been translated into ASCII, the same as the  **           01159
**             labels and the data.  PARM=STRIP now works   **           01160
**             for ASCII tapes.                             **           01161
**                                                          **           01162
**             Fixed a bug where OUTVOLALL didn't work      **           01163
**             for volumes other than VOLUME1.              **           01164
**                                                          **           01165
** LEVEL 070 - More ASCII label detection support.          **           01166
**             LABADDIN works for ASCII tapes now.          **           01167
**             BLKCNT option fixed to convert corrected     **           01168
**             block counts to ASCII when necessary.        **           01169
**             EOVTOEOF now works for ASCII and IBM tapes,  **           01170
**             because a call to LABELCHK now returns the   **           01171
**             altered copy of INAREA to the main program.  **           01172
**             A parm of EOV2 now requires a space after    **           01173
**             it, so as not to interfere with EOV2EOF.     **           01174
**                                                          **           01175
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **           01176
**                                                          **           01177
**             LBI support for XXX2 print of label          **           01178
**             contents.  Big blocksizes are printed        **           01179
**             in the XXX2 print message if they exist      **           01180
**             in the labels.  This is for IBM labels.      **           01181
**                                                          **           01182
**             Support 14-character tape owner for          **           01183
**             ANSI/ISO (ASCII) tapes.                      **           01184
**                                                          **           01185
**             Other cosmetic changes and many bug fixes.   **           01186
**                                                          **           01187
** LEVEL 072 - Separate all label print operations into a   **           01188
**             call to a separate CSECT called PRINTLBL.    **           01189
**             Now there is a unified label print routine   **           01190
**             for both EXTLBLIN and INAREA label input.    **           01191
**                                                          **           01192
** LEVEL 073 - Separate messages into their own CSECT.      **           01193
**             Address with PTMS macro, and special setup.  **           01194
**             Assembler instructions which access fields   **           01195
**             in the MSGCSECT CSECT are created with the   **           01196
**             new MVFMS macro.                             **           01197
**                                                          **           01198
** LEVEL 074 - Fix LTM service and reporting.               **           01199
**                                                          **           01200
** LEVEL 075 - Implement SECOFF (security indicators in     **
**             labels turned off in the copied tapes).      **
**             Involves VOL1 (byte 11) for ASCII tapes.     **
**             XXX1 (byte 54) which is turned to C'0' for   **
**             EBCDIC (IBM) tapes, and which is turned to   **
**             ASCII space (X'20') for ASCII tapes.         **
**                                                          **
**************************************************************           01201
**************************************************************           01202
         MACRO                                                           01203
.* ----------------------------------------------------------------- *   01204
.*  Print a message to SYSPRINT from a 133-character message line    *   01205
.*  that is in the MSGCSECT CSECT.                                   *   01206
.* ----------------------------------------------------------------- *   01207
&NAME    PTMS  &MSGLINE                                                  01208
*                                   Print a message line to SYSPRINT     01209
         STM   R4,R5,SAV45MSG             Store work registers           01210
         USING MSGCSECT,R5,R4             Address MSGCSECT               01211
         L     R5,=V(MSGCSECT)            Load CSECT entry               01212
         LA    R4,4095(,R5)               Second base                    01213
         LA    R4,1(,R4)                    completed                    01214
         MVI   LINE-1,X'40'               Move in blank                  01215
         MVC   LINE(133),LINE-1           And blank line                 01216
         MVC   LINE(133),&MSGLINE         Move message to line & print   01217
         PUT   SYSPRINT,LINE                                             01218
         LM    R4,R5,SAV45MSG             Restore work registers         01219
         DROP  R5,R4                      And tell that they're gone     01220
         MEND                                                            01221
         MACRO                                                           01222
.* ----------------------------------------------------------------- *   01223
.*  Perform an instruction with one or more operands from MSGCSECT.  *   01224
.* ----------------------------------------------------------------- *   01225
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC                                    01226
*                                         Operate with a message field   01227
         STM   R4,R5,SAV45MSG             Store work registers           01228
         USING MSGCSECT,R5,R4             Address MSGCSECT               01229
         L     R5,=V(MSGCSECT)            Load CSECT entry               01230
         LA    R4,4095(,R5)               Second base                    01231
         LA    R4,1(,R4)                    completed                    01232
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field     01233
         LM    R4,R5,SAV45MSG             Restore work registers         01234
         DROP  R5,R4                      And tell that they're gone     01235
         MEND                                                            01236
         MACRO                                                           01237
&NAME    HEX   &TO,&LEN,&FROM                                            01238
&NAME    DS    0H                                                        01239
         ST    R4,SAV4HEX                                                01240
         STM   R15,R1,HEXSAVE                                            01241
         LA    R1,&FROM                                                  01242
         LA    R0,&LEN                                                   01243
         LA    R15,&TO                                                   01244
         BAL   R4,HEX                                                    01245
         L     R4,SAV4HEX                                                01246
         LM    R15,R1,HEXSAVE                                            01247
         MEND                                                            01248
         EJECT                                                           01249
         YREGS                                                           01250
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01251
         GBLA  &HEXDFLA                                                  01252
* ------------------------------------------------------------------ *   01253
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01254
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01255
* ------------------------------------------------------------------ *   01256
&HEXDFLA SETA  4                                                         01257
&HEXDFLC SETC  '&HEXDFLA'                                                01258
COPYMODS CSECT                                                           01259
         USING *,R15                                          SBG 03/00  01260
         B     EYECATCH                                       SBG 03/00  01261
         DC    C'HEX DUMP '                                              01262
HEXDFLCC DC    C'&HEXDFLC'                                               01263
         DC    C' RECORDS '                                              01264
HEXDFLL  EQU   L'HEXDFLCC                                                01265
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01266
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01267
         DC    C'COPYMODS Level 075 '                         SBG 03/00  01268
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01269
         DC    C'SYSIN IN PARMCHEK PGM'                                  01270
SAVEAREA DC    18F'0'                                                    01271
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01272
         SAVE  (14,12)                                                   01273
         LR    R5,R1          SAVE PARM POINTER                          01274
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01275
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01276
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01277
         LR    R13,R1               NEW SAVE AREA ADDRESS                01278
         DROP  R15                                                       01279
* -----                       SET UP SIX BASE REGISTERS                  01280
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01281
         LR    R12,R15                                                   01282
         LA    R11,4095(,R12)                                            01283
         LA    R11,1(,R11)                                               01284
         LA    R10,4095(,R11)                                            01285
         LA    R10,1(,R10)                                               01286
         LA    R9,4095(,R10)                                             01287
         LA    R9,1(,R9)                                                 01288
         LA    R8,4095(,R9)                                              01289
         LA    R8,1(,R8)                                                 01290
         LA    R6,4095(,R8)                                              01291
         LA    R6,1(,R6)                                                 01292
         LR    R1,R5          RESTORE PARM POINTER                       01293
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01294
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01295
         ST    R1,PARMSAVE    And store the PARM pointer into this       01296
*                             program too, so it doesn't get lost.       01297
         L     R1,0(,R1)                                                 01298
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01299
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01300
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01301
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01302
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01303
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm  01304
         ST    R0,LABCHENT           Save entry point for calling later  01305
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  01306
         ST    R0,PRTLBENT           Save entry point for calling later  01307
* ----------------------------------------------------------------- *    01308
*                                                                   *    01309
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01310
*                                                                   *    01311
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01312
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01313
*              FIELDS.                                              *    01314
*                                                                   *    01315
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01316
*              FILLED IN.                                           *    01317
*                                                                   *    01318
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01319
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01320
*              THE PARM SCAN.                                       *    01321
*                                                                   *    01322
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01323
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01324
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01325
*                                                                   *    01326
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01327
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01328
*                                                                   *    01329
* ------------------------------------------------------------------*    01330
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01331
* ------------------------------------------------------------------*    01332
         L     R0,=V(PARMCHEK)                                           01333
         ST    R0,ENTRYPT                                                01334
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01335
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01336
         BALR  R14,R15                 DO CALL                           01337
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01338
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01339
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01340
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01341
* -- >  After PARMS gotten...........                                    01342
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name    01343
         TM    PARMFLG5,X'04'                                            01344
         BO    LTMNUMB0                                                  01345
         MVC   LTMCNTR(4),=F'0'           Init LTM count fullword        01346
         B     LTMNUMB1                                                  01347
LTMNUMB0 DS    0H                                                        01348
         MVC   LTMCNTR(4),LTMNUMB         Init LTM count fullword        01349
LTMNUMB1 DS    0H                                                        01350
         ZAP   LTMCOUNT,=P'0'             Init LTM ascending counter     01351
         MVC   LTMBINAD,=F'0'             Init LTM binary counter        01352
* ----------------------------------------------------------------- *    01353
* ----------------------------------------------------------------- *    01354
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01355
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01356
* ----------------------------------------------------------------- *    01357
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01358
SKIPLTMS DS    0H                                             SBG 06/00  01359
* ------- >> ------- >>                                                  01360
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01361
         BZ    NOASCII4            NO. DON'T ADJUST.                     01362
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01363
NOASCII4 DS    0H                                                        01364
* ------- >> ------- >>                                                  01365
* ----- * ----- * ------                                                 01366
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01367
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01368
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01369
NONOEXNL DS    0H                                                        01370
* ----- * ----- * ------                                                 01371
* ----- * ----- * ------ *------                                         01372
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01373
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01374
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01375
NOCUMSEP DS    0H                                                        01376
* ----- * ----- * ------ *------                                         01377
* ----- * -----                                                          01378
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01379
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01380
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01381
NOCUMTOT DS    0H                                                        01382
* ----- * -----                                                          01383
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01384
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01385
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01386
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01387
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01388
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01389
*                                      BECAUSE WE'RE COPYING TO SL.      01390
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01391
CANLBDMP DS    0H                                                        01392
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01393
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01394
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01395
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01396
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01397
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01398
NOLBDQUI DS    0H                                                        01399
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01400
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01401
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01402
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01403
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01404
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01405
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01406
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01407
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01408
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                        01409
NOSTRADJ DS    0H                  END of the STRIP adjustments          01410
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01411
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                   01412
         BZ    SKIXLTMS         NO. DON'T CHANGE INDICATOR               01413
         MVFMS LTMRPTI,READDD   INDICATE LTM'S HAVE BEEN READ            01414
SKIXLTMS DS    0H                                                        01415
* ----------------------------------------------------------------- *    01416
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01417
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01418
* ----------------------------------------------------------------- *    01419
* --                                                             -- *    01420
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01421
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01422
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01423
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01424
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01425
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01426
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01427
         BALR  R14,R15           CALL SUBPROGRAM                         01428
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01429
NOOPTRPT DS    0H                                                        01430
*  -------------------------------------------------------------- *      01431
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01432
         RDJFCB IN                                                       01433
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01434
         MVFMS SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01435
         MVFMS READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01436
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01437
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01438
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01439
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01440
         SPACE 3                                                         01441
OPENSYSP DS    0H                                                        01442
*                                                                        01443
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01444
*                                                                        01445
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01446
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01447
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01448
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01449
         L     R2,16          R2=CVT                                     01450
         L     R2,0(,R2)      R2=TCB WORDS                               01451
         L     R2,4(,R2)      R2=MY TCB                                  01452
         L     R2,12(,R2)     R2=TIOT                                    01453
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01454
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01455
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01456
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01457
         BNE   TIOT1          NO                                         01458
         OI    FLAG1,OP1      SHOW IT                                    01459
         STM   R14,R3,SAV14T03                                    TEST   01460
         RDJFCB OUT1                                                     01461
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01462
         MVC   VOLDD,DDOUT1                                              01463
         LM    R14,R3,SAV14T03                                    TEST   01464
         B     TIOTNEXT       CONTINUE                                   01465
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01466
         BNE   TIOT2          NO                                         01467
         OI    FLAG1,OP2      SHOW IT                                    01468
         STM   R14,R3,SAV14T03                                    TEST   01469
         RDJFCB OUT2                                                     01470
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01471
         MVC   VOLDD,DDOUT2                                              01472
         LM    R14,R3,SAV14T03                                    TEST   01473
         B     TIOTNEXT       CONTINUE                                   01474
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01475
         BNE   TIOT3          NO                                         01476
         OI    FLAG1,OP3      SHOW IT                                    01477
         STM   R14,R3,SAV14T03                                    TEST   01478
         RDJFCB OUT3                                                     01479
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01480
         MVC   VOLDD,DDOUT3                                              01481
         LM    R14,R3,SAV14T03                                    TEST   01482
         B     TIOTNEXT       CONTINUE                                   01483
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01484
         BNE   TIOT4          NO                                         01485
         OI    FLAG1,OP4      SHOW IT                                    01486
         STM   R14,R3,SAV14T03                                    TEST   01487
         RDJFCB OUT4                                                     01488
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01489
         MVC   VOLDD,DDOUT4                                              01490
         LM    R14,R3,SAV14T03                                    TEST   01491
         B     TIOTNEXT       CONTINUE                                   01492
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01493
         BNE   TIOT5          NO                                         01494
         OI    FLAG1,OP5      SHOW IT                                    01495
         STM   R14,R3,SAV14T03                                    TEST   01496
         RDJFCB OUT5                                                     01497
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01498
         MVC   VOLDD,DDOUT5                                              01499
         LM    R14,R3,SAV14T03                                    TEST   01500
         B     TIOTNEXT       CONTINUE                                   01501
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01502
         BNE   TIOT6          NO                                         01503
         OI    FLAG1,OP6      SHOW IT                                    01504
         STM   R14,R3,SAV14T03                                    TEST   01505
         RDJFCB OUT6                                                     01506
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01507
         MVC   VOLDD,DDOUT6                                              01508
         LM    R14,R3,SAV14T03                                    TEST   01509
         B     TIOTNEXT       CONTINUE                                   01510
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01511
         BNE   TIOT7          NO                                         01512
         OI    FLAG1,OP7      SHOW IT                                    01513
         STM   R14,R3,SAV14T03                                    TEST   01514
         RDJFCB OUT7                                                     01515
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01516
         MVC   VOLDD,DDOUT7                                              01517
         LM    R14,R3,SAV14T03                                    TEST   01518
         B     TIOTNEXT       CONTINUE                                   01519
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01520
         BNE   TIOT8          NO                                         01521
         OI    FLAG1,OP8      SHOW IT                                    01522
         STM   R14,R3,SAV14T03                                    TEST   01523
         RDJFCB OUT8                                                     01524
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01525
         MVC   VOLDD,DDOUT8                                              01526
         LM    R14,R3,SAV14T03                                    TEST   01527
         B     TIOTNEXT       CONTINUE                                   01528
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01529
         BNE   TIOT9          NO                                         01530
         OI    FLAG2,OP9      SHOW IT                                    01531
         STM   R14,R3,SAV14T03                                    TEST   01532
         RDJFCB OUT9                                                     01533
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01534
         MVC   VOLDD,DDOUT9                                              01535
         LM    R14,R3,SAV14T03                                    TEST   01536
         B     TIOTNEXT       CONTINUE                                   01537
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01538
         BNE   TIOT10         NO                                         01539
         OI    FLAG2,OP10     SHOW IT                                    01540
         STM   R14,R3,SAV14T03                                    TEST   01541
         RDJFCB OUT10                                                    01542
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01543
         MVC   VOLDD,DDOUT10                                             01544
         LM    R14,R3,SAV14T03                                    TEST   01545
         B     TIOTNEXT       CONTINUE                                   01546
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01547
         BNE   TIOT11         NO                                         01548
         OI    FLAG2,OP11     SHOW IT                                    01549
         STM   R14,R3,SAV14T03                                    TEST   01550
         RDJFCB OUT11                                                    01551
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01552
         MVC   VOLDD,DDOUT11                                             01553
         LM    R14,R3,SAV14T03                                    TEST   01554
         B     TIOTNEXT       CONTINUE                                   01555
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01556
         BNE   TIOT12         NO                                         01557
         OI    FLAG2,OP12     SHOW IT                                    01558
         STM   R14,R3,SAV14T03                                    TEST   01559
         RDJFCB OUT12                                                    01560
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01561
         MVC   VOLDD,DDOUT12                                             01562
         LM    R14,R3,SAV14T03                                    TEST   01563
         B     TIOTNEXT       CONTINUE                                   01564
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01565
         BNE   TIOT13         NO                                         01566
         OI    FLAG2,OP13     SHOW IT                                    01567
         STM   R14,R3,SAV14T03                                    TEST   01568
         RDJFCB OUT13                                                    01569
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01570
         MVC   VOLDD,DDOUT13                                             01571
         LM    R14,R3,SAV14T03                                    TEST   01572
         B     TIOTNEXT       CONTINUE                                   01573
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01574
         BNE   TIOT14         NO                                         01575
         OI    FLAG2,OP14     SHOW IT                                    01576
         STM   R14,R3,SAV14T03                                    TEST   01577
         RDJFCB OUT14                                                    01578
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01579
         MVC   VOLDD,DDOUT14                                             01580
         LM    R14,R3,SAV14T03                                    TEST   01581
         B     TIOTNEXT       CONTINUE                                   01582
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01583
         BNE   TIOT15         NO                                         01584
         OI    FLAG2,OP15     SHOW IT                                    01585
         STM   R14,R3,SAV14T03                                    TEST   01586
         RDJFCB OUT15                                                    01587
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01588
         MVC   VOLDD,DDOUT15                                             01589
         LM    R14,R3,SAV14T03                                    TEST   01590
         B     TIOTNEXT       CONTINUE                                   01591
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01592
         BNE   TIOTNEXT       NO                                         01593
         OI    FLAG2,OP16     SHOW IT                                    01594
         STM   R14,R3,SAV14T03                                    TEST   01595
         RDJFCB OUT16                                                    01596
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01597
         MVC   VOLDD,DDOUT16                                             01598
         LM    R14,R3,SAV14T03                                    TEST   01599
         B     TIOTNEXT       CONTINUE                                   01600
TIOTNEXT SR    R3,R3                                                     01601
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01602
         AR    R2,R3          R2=NEXT DD ENTRY                           01603
         B     TIOTLOOP       GO CHECK IT                                01604
*  ---------------------------------------------------------  SBG 09/00  01605
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01606
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01607
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01608
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01609
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01610
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER            01611
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                               01612
NOVOLOV  DS    0H                                                        01613
*  ---------------------------------------------------------  SBG 09/00  01614
         SPACE 3                                                         01615
*  -----------------------------------------------------------------  *  01616
*                                                                        01617
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01618
*                                                                        01619
*  -----------------------------------------------------------------  *  01620
OPENS    DS    0H               START OPENING FILES                      01621
         OPEN  (SYSPRINT,OUTPUT)                                         01622
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01623
         BO    OPENMOVE                                                  01624
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01625
         BO    OPENMOVE                                                  01626
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01627
         BO    OPENMOVE                                                  01628
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01629
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01630
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01631
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01632
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01633
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01634
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01635
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01636
NOLBLDD  DS    0H                                                        01637
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE             01638
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.           01639
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                   01640
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD        01641
         OPEN  (LABADDIN,INPUT)                                          01642
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                      01643
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01644
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01645
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.            01646
NOLABIN  DS    0H                                                        01647
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE             01648
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.           01649
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END                01650
         BZ    OPENIN             NOTHING WRONG.  GO ON.                 01651
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01652
         CLOSE (SYSPRINT)                                                01653
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                   01654
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.              01655
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    01656
         CLOSE (LABLDUMP)                                                01657
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01658
         BZ    REALYEND           NO. GET OUT.                           01659
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01660
         CLOSE (LABADDIN)                                                01661
REALYEND B     THEEND                                                    01662
         EJECT                                                           01663
OPENIN   OPEN  (IN,INPUT)                                                01664
         TM    IN+48,X'10'                                               01665
         BO    INISOPEN                                                  01666
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01667
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01668
         BO    INISOPEN             OK. //IN DD is not needed.           01669
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01671
         BO    INISOPEN             OK. //IN DD is not needed.           01672
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01674
         BO    INISOPEN             OK. //IN DD is not needed.           01675
** --- >>>   //IN DD is really needed, but is not OPEN.                  01676
         PTMS  INNOTOPN             Print message that //IN not open.    01677
         B     ENDEM                Go to CLOSE files, and get out.      01678
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01679
INISOPEN DS    0H                                                        01680
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01681
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01682
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01683
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01684
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01685
* ----                                                                   01686
OPENINCK DS    0H                                                        01687
         OI    DATFLAG,X'20'      Initialize "no data read yet" flag.    01688
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     01689
         MVC   LTMBINAD,=F'0'                                            01690
         LA    R2,IN              POINT TO IN DCB                        01691
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01692
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01693
         EXCP  REWIOB                                                    01694
         WAIT  ECB=REWECB                                                01695
OPINREAD DS    0H                                                        01696
         TM    DATFLAG,X'20'      Still no legitimate data read?         01697
         BZ    OPINCHEK           Legitimate data. Look for VOL1.        01698
         MVC   INECB,=F'0'        Initialize IN's ECB                    01699
         EXCP  INIOB                                                     01700
         WAIT  ECB=INECB                                                 01701
* ->->->       Break in to bypass LTMs    ->->->   below                 01702
         TM    INCSW+4,X'01'      Was a tape mark read?                  01703
         BZ    OPINCHEK           No. This is legitimate data.           01704
         AP    LTMCOUNT,=P'1'     Add 1 to Tape Mark count.              01705
         L     R0,LTMBINAD                                               01706
         A     R0,=F'1'                                                  01707
         ST    R0,LTMBINAD                                               01708
         MVFMS LTMRPTI,PASSED     Report tape mark was passed.           01709
         MVFMS LTMRNUM(11),LTMCTPAT             Edit pattern             01710
         MVFMS LTMRNUM(11),LTMCOUNT+1,OPC=ED    Put count in message     01711
         PTMS  LTMRPT             Report leading TM passed.              01712
         B     OPINREAD           Do another read until real data found  01713
* ->->->       Break in to bypass LTMs    ->->->   above                 01714
OPINCHEK DS    0H                                                        01715
         NI    DATFLAG,FF-X'20'   Show legitimate data read now.         01716
         OI    DATFLAG,X'40'      Show we came thru here.                01717
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                   01718
         BE    OPENINSL                 Yes, turn on SL flag.            01719
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                     01720
         BE    OPENINSL                 Yes, turn on SL flag.            01721
         B     RESETIN            No. Just rewind to reposition.         01722
OPENINSL DS    0H                                                        01723
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01724
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01725
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01726
****** ------ BELOW ------ SL FILE NUMBERS.                              01727
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01728
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01729
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01730
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01731
**** ----- >>>>>   Force file limiting by SL   - - -  below              01732
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01733
         BZ    NOSLFLIM              Not set, bypass code for it         01734
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01735
         L     R0,LTGFILE                                                01736
         A     R0,LTMBINAD                                               01737
         ST    R0,LTGFILE                                                01738
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01739
         MVFMS LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01740
         PTMS  FORCESLM              Say you'll force limiting by SL     01741
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01742
         BNO   SLLIMRES              No. only SLLIM. So go on.           01743
         PTMS  TWOFORCE              Say you'll force limiting by SL     01744
SLLIMRES DS    0H                                                        01745
         B     RESETIN                                                   01746
NOSLFLIM DS    0H                                                        01747
**** ----- >>>>>   Force file limiting by SL   - - -  above              01748
**** ----- >>>>>   Force file limiting by NL   - - -  below              01749
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01750
         BZ    NONLFLIM              Not set, bypass code for it         01751
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01752
         L     R0,LTGFILE                                                01753
         A     R0,LTMBINAD                                               01754
         ST    R0,LTGFILE                                                01755
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01756
         MVFMS LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01757
         PTMS  FORCENLM              Say you'll force limiting by NL     01758
         B     RESETIN                                                   01759
NONLFLIM DS    0H                                                        01760
**** ----- >>>>>   Force file limiting by NL   - - -  above              01761
* -- > Strip test                                                        01762
         TM    PARMFLG4,X'02'        Are we stripping labels?            01763
         BZ    OPENINXW              No. Bypass this section.            01764
         TM    PARMFLG3,X'02'        Are we limiting files also?         01765
         BO    OPENINXW              Yes. Use SL number.                 01766
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01767
         L     R0,LTGFILE                                                01768
         A     R0,LTMBINAD                                               01769
         ST    R0,LTGFILE                                                01770
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01771
         MVFMS LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01772
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01773
OPENINXW DS    0H                                                        01774
* -- > Strip test                                                        01775
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01776
         L     R0,LTGFILE                                                01777
         A     R0,LTMBINAD                                               01778
         ST    R0,LTGFILE                                                01779
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01780
         MVFMS LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01781
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01782
OPENINXX DS    0H                                                        01783
****** ------ ABOVE ------ SL FILE NUMBERS.                              01784
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01785
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                01786
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01787
         BZ    RESETEND           NO. GET OUT.                           01788
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01789
         CLOSE (LABADDIN)                                                01790
RESETEND CLOSE (IN)                                                      01791
         B     THEEND                                                    01792
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01793
RESETIN  DS    0H                                                        01794
         TM    PARMFLG2,X'80'     Came here for LABADDIN?                01795
         BZ    RESETSLD           No. Do complete rewind.                01796
         MVC   LTMCNTR(4),LTMBINAD                                       01797
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     01798
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    01799
         OI    RESLTMWF,X'01'                                            01800
         LA    R2,IN              POINT TO IN DCB                        01801
         ST    R2,BKBDCBPT        TELL IOB TO BACKSPACE ONLY ONE BLOCK   01802
         MVC   BK1BECB,=F'0'                                             01803
         EXCP  BK1BIOB                                                   01804
         WAIT  ECB=BK1BECB                                               01805
         B     NOLBLDMP                                                  01806
RESETSLD DS    0H                                                        01807
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     01808
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    01809
         MVC   REWECB,=F'0'                                              01810
         EXCP  REWIOB                                                    01811
         WAIT  ECB=REWECB                                                01812
NOINITOP DS    0H                                                        01813
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01814
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01815
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01816
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01817
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01818
         BNZ   NOLBLDD                  IF NOT, FLAG                     01819
         ST    R7,SAVE7REG              SAVE R7                          01820
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01821
         USING JFCBLK,R7                MAP THE AREA                     01822
         MVFMS LDMPOUTM+38(44),JFCBDSNM                                  01823
         MVFMS LDMPOUTM+89(8),JFCBELNM                                   01824
         MVFMS LDMPOUTM+105(6),JFCBVOLS                                  01825
         PTMS  LDMPOUTM                                                  01826
         DROP  R7                                                        01827
         L     R7,SAVE7REG              RESTORE R7                       01828
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01829
         TM    PARMFLG2,X'80'     TEST IF LABADDIN IS NEEDED.            01830
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01831
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01832
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01833
         BNZ   NOLABIN                  IF NOT, FLAG                     01834
         ST    R7,SAVE7REG              SAVE R7                          01835
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01836
         USING JFCBLK,R7                MAP THE AREA                     01837
         MVFMS LDMPINMS+38(44),JFCBDSNM                                  01838
         MVFMS LDMPINMS+89(8),JFCBELNM                                   01839
         MVFMS LDMPINMS+105(6),JFCBVOLS                                  01840
         PTMS  LDMPINMS                                                  01841
         DROP  R7                                                        01842
         L     R7,SAVE7REG              RESTORE R7                       01843
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01844
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01845
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01846
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01847
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01848
         PTMS  READOMSG              MOVE READ-ONLY MESSAGE              01849
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01850
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01851
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01852
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01853
         PTMS  LIMFMSG                  MOVE MESSAGE TEXT IN             01854
NOLIMFMR DS    0H                                                        01855
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01856
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01857
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01858
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01859
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01860
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01861
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01862
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01863
         B     N1LIMPRT             AND PRINT IT                         01864
N1LIMDEF DS    0H                                                        01865
         MVFMS LIMPMSG+11(10),PRTCHAR                                    01866
         MVFMS LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01867
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01868
N1LIMHEX DS    0H                                                        01869
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01870
         B     READIN                                         SBG 06/00  01871
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01872
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01873
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01874
*  ---------------------------------------------------------  SBG 03/00  01875
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01876
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01877
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01878
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01879
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01880
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01881
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01882
         B     NOLIMPRT             AND PRINT IT                         01883
NOLIMDEF DS    0H                                                        01884
         MVFMS LIMPMSG+11(10),PRTCHAR                                    01885
         MVFMS LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01886
NOLIMPRT PUT   SYSPRINT,LINE                                             01887
NOLIMHEX DS    0H                                                        01888
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01889
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01890
         BO    INITEBCD                                                  01891
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 01892
         BO    INITAS3                                                   01893
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 01894
         BO    INITAS4                                                   01895
         B     OPENOINT                                                  01896
INITEBCD DS    0H                                                        01897
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01898
         B     NOCORPRT                                                  01899
INITAS3  DS    0H                                                        01900
         MVFMS INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          01901
         MVFMS INITCOPD,INITCREA                                         01902
         B     NOCORPRT                                                  01903
INITAS4  DS    0H                                                        01904
         MVFMS INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          01905
         MVFMS INITCOPD,INITCREA                                         01906
         B     NOCORPRT                                                  01907
OPENOINT DS    0H                                                        01908
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01909
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01910
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01911
         ST    R7,SAVE7REG                                               01912
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01913
         L     R7,SAVE7REG                                               01914
NOCORPRT DS    0H                                                        01915
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01916
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01917
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01918
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01919
         MVFMS LIMFMSG+11(10),LIMCHAR   Insert number into message.      01920
         PTMS  LIMFMSG          MOVE MESSAGE TEXT IN                     01921
NOLIMFMS DS    0H                                                        01922
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01923
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01924
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01925
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01926
         MVFMS LIMLMSG+11(10),LABCHAR                                    01927
         PTMS  LIMLMSG          MOVE MESSAGE TEXT IN                     01928
NOLIMLMR DS    0H                                                        01929
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01930
         TM    PARMFLG5,X'04'       WRITE LTMS ENABLED?                  01931
         BZ    NOLTMSG0             NO. DON'T PRINT MESSAGE.             01932
         MVFMS LTMWMSG+11(10),LTMCHAR                                    01933
         MVFMS LINE(133),LTMWMSG    MOVE MESSAGE TEXT IN                 01934
         PUT   SYSPRINT,LINE        AND PRINT IT                         01935
NOLTMSG0 DS    0H                                                        01936
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01937
         TM    PARMFLG4,X'02'     Are labels being stripped?             01938
         BZ    NOSTRMSG                                                  01939
         PTMS  STRPMSG            Show we're stripping labels            01940
NOSTRMSG DS    0H                                                        01941
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01942
OPEN0    DS    0H                                                        01943
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01944
         BZ    OPEN1          NO                                         01945
         OPEN  (OUT1,OUTPUT)                                             01946
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01947
         BZ    OPEN2          NO                                         01948
         OPEN  (OUT2,OUTPUT)                                             01949
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01950
         BZ    OPEN3          NO                                         01951
         OPEN  (OUT3,OUTPUT)                                             01952
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01953
         BZ    OPEN4          NO                                         01954
         OPEN  (OUT4,OUTPUT)                                             01955
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01956
         BZ    OPEN5          NO                                         01957
         OPEN  (OUT5,OUTPUT)                                             01958
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01959
         BZ    OPEN6          NO                                         01960
         OPEN  (OUT6,OUTPUT)                                             01961
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01962
         BZ    OPEN7          NO                                         01963
         OPEN  (OUT7,OUTPUT)                                             01964
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01965
         BZ    OPEN8          NO                                         01966
         OPEN  (OUT8,OUTPUT)                                             01967
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01968
         BZ    OPEN9          NO                                         01969
         OPEN  (OUT9,OUTPUT)                                             01970
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01971
         BZ    OPEN10         NO                                         01972
         OPEN  (OUT10,OUTPUT)                                            01973
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01974
         BZ    OPEN11         NO                                         01975
         OPEN  (OUT11,OUTPUT)                                            01976
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01977
         BZ    OPEN12         NO                                         01978
         OPEN  (OUT12,OUTPUT)                                            01979
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01980
         BZ    OPEN13         NO                                         01981
         OPEN  (OUT13,OUTPUT)                                            01982
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01983
         BZ    OPEN14         NO                                         01984
         OPEN  (OUT14,OUTPUT)                                            01985
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01986
         BZ    OPEN15         NO                                         01987
         OPEN  (OUT15,OUTPUT)                                            01988
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01989
         BZ    READIN         NO                                         01990
         OPEN  (OUT16,OUTPUT)                                            01991
         EJECT                                                           01992
* --------------------------------------------------------- *            01993
*                                                           *            01994
*  READ INPUT                                               *            01995
*                                                           *            01996
* --------------------------------------------------------- *            01997
*                                                           *            01998
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01999
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            02000
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            02001
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            02002
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            02003
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            02004
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            02005
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            02006
*                                                           *            02007
* --------------------------------------------------------- *            02008
READIN   DS    0H                                                        02009
*---------------------------- Write Leading Tapemarks ----- below -->    02010
         TM    PARMFLG1,X'20'       Is LTMSKIP on?                       02011
         BO    NOWRLTMS             Yes. Don't manufacture passed LTMs.  02012
         TM    RESLTMWF,X'01'       Come from RESETIN for LABADDIN?      02013
         BO    READWLTM             Yes. Manufacture LTMs if any.        02014
         TM    PARMFLG5,X'08'       Set to write leading tapemarks?      02015
         BZ    NOWRLTMS             No. Only regular processing.         02016
READWLTM DS    0H                                                        02017
         L     R1,LTMCNTR           Check descending LTM counter         02018
*                                   Previously initialized to LTMNUMB    02019
         C     R1,=F'0'             Is it zero now?                      02020
         BE    NOWRLTMS             Yes. No more writing LTMs.           02021
         AP    LTMCOUNT,=P'1'                                            02022
         L     R0,LTMBINAD                                               02023
         A     R0,=F'1'                                                  02024
         ST    R0,LTMBINAD                                               02025
         BCTR  R1,0                 Not yet 0. Lower it by one.          02026
         ST    R1,LTMCNTR           And store it away for next pass.     02027
         MVI   OUTCCW,X'1F'         Load tape mark CCW opcode.           02028
         MVC   OUTCCW+6(2),=X'0001'    Put 1 in bytes field, and         02029
         MVFMS LTMRNUM(11),LTMCTPAT                                      02030
         MVFMS LTMRNUM(11),LTMCOUNT+1,OPC=ED                             02031
         MVFMS LTMRPTI,WRITTEN      Report tape mark written.            02032
         PTMS  LTMRPT               Write report line.                   02033
         B     WRITE1               Write the tape mark to outputs.      02034
NOWRLTMS DS    0H                                                        02035
*---------------------------- Write Leading Tapemarks ----- above -->    02036
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   02037
         BO    TLITWRIT                                                  02038
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           02039
         BO    TLITASCI                                                  02040
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           02041
         BO    TLITASCI                                                  02042
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  02043
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     02044
         MVI   INECB,X'00'    INITIALIZE ECB                             02045
* ------------------------------------------------------------------ *   02046
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   02047
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   02048
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   02049
* ------------------------------------------------------------------ *   02050
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  02051
         BZ    NONLSL0        NO. IGNORE THIS CODE                       02052
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          02053
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           02054
NONLSL0  DS    0H                                                        02055
* ----------------------------------------------------------- SBG 09/00  02056
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               02057
***** --------------- LIMITING FILES ------------------ ***** BELOW *    02058
         TM    PARMFLG3,X'02'     LIMITING FILES?                        02059
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  02060
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               02061
         BZ    INOLIMIT           NOT YET - JUST GO ON                   02062
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     02063
*                                 AND DON'T DO MORE READS OF INPUT TAPE  02064
INOLIMIT DS    0H                                                        02065
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    02066
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    02067
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  02068
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     02069
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     02070
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     02071
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      02072
         L     R7,SAVE7RG3        RESTORE R7                             02073
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     02074
NOLBDADJ DS    0H                                                        02075
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    02076
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02077
*                                                                        02078
*       Since there is a possibility that the WRITE will                 02079
*       not work for one of the output ddnames, we have                  02080
*       to save the total bytes successfully moved to the                02081
*       currently open output tapes.  Also file count for                02082
*       this tape, and block count for this file.                        02083
*                                                                        02084
         MVC   PRVBY,TOTBY        Total bytes before this READ           02085
         MVC   FILECNTP,FILECNT   Total file count before this READ      02086
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     02087
*                                                                        02088
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02089
         EXCP  INIOB          READ                                       02090
         WAIT  ECB=INECB      WAIT FOR READ                              02091
         TM    INCSW+4,X'01'  WAS TM READ?                               02092
         BO    READIN1        YES                                        02093
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                02094
         BNE   INERR          NO -- ERROR                                02095
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    02096
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  02097
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  02098
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  02099
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  02100
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  02101
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  02102
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  02103
         SR    R2,R3          R2=ACTUAL LENGTH READ                      02104
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              02105
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ          02106
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO           02107
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02108
         ST    R7,TOTB7REG        Save BAL Register                      02109
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02110
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER       02111
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK              02112
         L     R7,TOTB7REG        Restore BAL Register                   02113
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02114
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             02115
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     02116
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     02117
         ST    R7,R7HXPRT        SAVE R7.                                02118
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            02119
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             02120
         BCTR  R1,0              LOWER BY ONE                            02121
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               02122
         L     R7,R7HXPRT        RESTORE R7.                             02123
NPRTHEX  DS    0H                                                        02124
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             02125
**** ----  BYTE COUNTS ---- BELOW                                        02126
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     02127
         BZ    INNOBYTE       NO, SKIP INCREMENT                         02128
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED               02129
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  02130
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  02131
INNOBYTE DS    0H                                                        02132
**** ----  BYTE COUNTS ---- ABOVE                                        02133
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02134
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  02135
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  02136
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  02137
* ------------------------------------------------------------------*    02138
*    Call the LABELCHK program and get the returns.                 *    02139
* ------------------------------------------------------------------*    02140
         L     R15,LABCHENT       Get entry point of called program      02141
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        02142
         LA    R1,PARMFLGS        Point R1 to parm flags.                02143
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    02144
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         02145
         BALR  R14,R15                 Do CALL.                          02146
         ST    R2,SAVELBCK             Address of returned user area     02147
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    02148
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           02149
*                                 A call to LABCHECK overlays INAREA,    02150
*                                 so if a LABCHECK routine alters        02151
*                                 a label, the alteration will be        02152
*                                 written out to the output tapes.       02153
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     02154
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02155
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   02156
         BO    CLOSMALL           Yes. Close all files and finish up.    02157
* ------------------------------------------------------------------*    02158
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  02159
*                             FORMATS, AND SET FLAGS          SBG 04/00  02160
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  02161
*                             PRINT LABEL INFO FOUND.         SBG 04/00  02162
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              02163
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                02164
         BZ    LBLNOCNT                                                  02165
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?         02166
         BZ    LBLNOCNT                                                  02167
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02168
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        02169
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02170
LBLNOCNT DS    0H                                                        02171
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              02172
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02173
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        02174
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           02176
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        02177
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              02178
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              02179
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02180
*                                                             SBG 04/00  02181
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02182
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  02183
         BZ    READGO1            NO. WE CAN GO ON.                      02184
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?              02185
         BZ    READGO1            NO DON'T CHECK FOR SL                  02186
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02187
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02188
         CLOSE (LABADDIN)                                                02189
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            02190
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02191
         EJECT                                                           02192
*  ----------------------------------------------------------------  *   02193
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02194
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       02195
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        02196
*  ----------------------------------------------------------------  *   02197
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               02198
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               02199
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        02200
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             02201
         BZ    STILTAPE                                                  02202
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        02203
         BZ    STILTAPE                                                  02204
         B     WRTTAPMK                                                  02205
STILTAPE DS    0H                                                        02206
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        02207
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    02208
         BZ    DOTHEGET             NO. DO THE FILE GETS.                02209
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 02210
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    02211
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          02212
DOTHEGET DS    0H                                                        02213
*** ---                                                                  02214
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              02215
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   02216
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               02217
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 02218
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   02219
DOGETALW DS    0H                                                        02220
*** ---                                                                  02221
         GET   LABADDIN,EXTLBLIN                                         02222
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    02223
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     02224
*------------------------------------> Hex Print Limit - Below           02225
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02226
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            02227
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?     02228
         BE    NOHXPRAX                          Yes. Reset count.       02229
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      02230
         BNE   NOHXPREX                        No. Don't reset count.    02231
NOHXPRAX DS    0H                                                        02232
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02233
NOHXPREX DS    0H                                                        02234
*------------------------------------> Hex Print Limit - Above           02235
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        02236
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        02237
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN     02238
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                 02239
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        02240
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           02241
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN   02242
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER                02243
* ---------------------------------  EOV2EOF  BELOW  ------------- *     02244
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN  02245
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV             02246
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     02247
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            02248
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          02249
TRAIXEOV DS    0H                                                        02250
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     02251
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               02252
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02253
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02254
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02255
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02256
NTRALEOV DS    0H                                                        02257
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02258
*                                                                        02259
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02260
*                                                                        02261
* ------     Hex Print records from External Labels    ----  below       02262
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02263
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02264
         ST    R7,R7HXPRT           SAVE R7.                             02265
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02266
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02267
         BCTR  R1,0                 LOWER BY ONE                         02268
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02269
         L     R7,R7HXPRT           RESTORE R7.                          02270
EXTNOPRT DS    0H                                                        02271
* ------     Hex Print records from External Labels    ----  above       02272
* -- >                                                                   02273
ASCIITST DS    0H                                                        02274
         CLI   EXTLBLIN,X'56'              ASCII V                       02275
         BE    ISASCIIG                                                  02276
         CLI   EXTLBLIN,X'45'              ASCII E                       02277
         BE    ISASCIIG                                                  02278
         CLI   EXTLBLIN,X'48'              ASCII H                       02279
         BE    ISASCIIG                                                  02280
         CLI   EXTLBLIN,X'55'              ASCII U                       02281
         BE    ISASCIIG                                                  02282
         CLI   EXTLBLIN,X'2D'              ASCII DASH                    02283
         BE    ISASCIIG                                                  02284
         B     ISNTASCI                                                  02285
ISASCIIG DS    0H                                                        02286
         OI    ASCIIFLG,X'01'              ASSUME ASCII                  02287
         OI    EXASCFLG,X'01'              ASSUME ASCII                  02288
         B     ASCIITSE                                                  02289
ISNTASCI DS    0H                                                        02290
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02291
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02292
ASCIITSE DS    0H                                                        02293
* -- >                                                                   02294
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                   02295
         BE    NASCVOL1                    YES. TREAT AS A VOL1.         02296
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02297
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02298
NASCVOL1 DS    0H                                                        02299
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02300
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECV01             No. Don't affect these fields.
         TM    ASCIIFLG,X'01'       Only turn off security if ASCII.
         BO    NOSECV01             Otherwise, no security byte here.
         MVI   EXTLBLIN+10,X'20'    Move in ASCII blank.
NOSECV01 DS    0H
*** --- >>  Security off?  -  above
         B     GOTVOL01             PROCESS THE VOL1                     02301
NLABVOL1 DS    0H                                                        02302
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02303
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                   02304
         BE    NASCHDR1                    YES. TREAT AS A HDR1.         02305
         CLC   EXTLBLIN(4),=C'HDR1'                                      02306
         BNE   NLABHDR1                                                  02307
NASCHDR1 DS    0H                                                        02308
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02309
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02310
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSCEHE2             No. Don't affect these fields.
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?
         BO    NOSCEHA1             Yes, turn off appropriate security.
         B     NOSCEHE1             Otherwise do it in EBCDIC.
NOSCEHA1 DS    0H
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.
         B     NOSCEHE2
NOSCEHE1 DS    0H
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.
NOSCEHE2 DS    0H
*** --- >>  Security off?  -  above
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02311
         B     ENDIBMSL                                                  02312
NLABHDR1 DS    0H                                                        02313
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                   02314
         BE    NASCHDR2                    YES. TREAT AS A HDR2.         02315
         CLC   EXTLBLIN(4),=C'HDR2'                                      02316
         BNE   NLABHDR2                                                  02317
NASCHDR2 DS    0H                                                        02318
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02319
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02320
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02321
         B     ENDIBMSL                                                  02322
NLABHDR2 DS    0H                                                        02323
***** ----- *****                                                        02324
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                   02325
         BE    NASCEOF1                    YES. TREAT AS A EOF1.         02326
         CLC   EXTLBLIN(4),=C'EOF1'                                      02327
         BNE   NLABEOF1                                                  02328
NASCEOF1 DS    0H                                                        02329
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02330
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02331
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSCEEE2             No. Don't affect these fields.
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?
         BO    NOSCEEA1             Yes, turn off appropriate security.
         B     NOSCEEE1             Otherwise do it in EBCDIC.
NOSCEEA1 DS    0H
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.
         B     NOSCEEE2
NOSCEEE1 DS    0H
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.
NOSCEEE2 DS    0H
*** --- >>  Security off?  -  above
         B     ENDIBMSL                                                  02332
NLABEOF1 DS    0H                                                        02333
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                   02334
         BE    NASCEOF2                    YES. TREAT AS A EOF2.         02335
         CLC   EXTLBLIN(4),=C'EOF2'                                      02336
         BNE   NLABEOF2                                                  02337
NASCEOF2 DS    0H                                                        02338
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02339
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02340
         B     ENDIBMSL                                                  02341
NLABEOF2 DS    0H                                                        02342
***** ----- *****                                                        02343
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                   02344
         BE    NASCEOV1                    YES. TREAT AS A EOV1.         02345
         CLC   EXTLBLIN(4),=C'EOV1'                                      02346
         BNE   NLABEOV1                                                  02347
NASCEOV1 DS    0H                                                        02348
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02349
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02350
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSCEVE2             No. Don't affect these fields.
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?
         BO    NOSCEVA1             Yes, turn off appropriate security.
         B     NOSCEVE1             Otherwise do it in EBCDIC.
NOSCEVA1 DS    0H
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.
         B     NOSCEVE2
NOSCEVE1 DS    0H
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.
NOSCEVE2 DS    0H
*** --- >>  Security off?  -  above
         B     ENDIBMSL                                                  02351
NLABEOV1 DS    0H                                                        02352
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                   02353
         BE    NASCEOV2                    YES. TREAT AS A EOV2.         02354
         CLC   EXTLBLIN(4),=C'EOV2'                                      02355
         BNE   NLABEOV2                                                  02356
NASCEOV2 DS    0H                                                        02357
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02358
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02359
         B     ENDIBMSL                                                  02360
NLABEOV2 DS    0H                                                        02361
ENDIBMSL DS    0H                                                        02362
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02363
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02364
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02365
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                     02366
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR       02367
* -------------- EOV2EOF BELOW ----------------- *                       02368
ISITEOV  DS    0H                                                        02369
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                     02370
         BE    ISASCEOV                   TREAT AS ASCII EOV             02371
         CLC   EXTLBLIN(3),=C'EOV'                                       02372
         BNE   NOEOF2V                                                   02373
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02374
         BZ    NOEOF2V                                                   02375
         MVC   EXTLBLIN(3),=C'EOF'                                       02376
         PTMS  EOVCHG                     MOVE IN MESSAGE                02377
         B     NOEOF2V                                                   02378
ISASCEOV DS    0H                                                        02379
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02380
         BZ    NOEOF2V                                                   02381
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD       02382
         PTMS  EOVCHG                     MOVE IN MESSAGE                02383
NOEOF2V  DS    0H                                                        02384
* -------------- EOV2EOF ABOVE ----------------- *                       02385
* ----------                                                             02386
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02387
         BZ    BLNOCORR             NO. SKIP THIS.                       02388
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02389
         BE    CORBLKCT                                                  02390
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1                02391
         BE    CORBLKCT                                                  02392
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02393
         BE    CORBLKCT                                                  02394
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1                02395
         BE    CORBLKCT                                                  02396
BLNOCORR B     EOFOREOV                                                  02397
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02398
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02399
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02400
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02401
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02402
         MVC   EXTLBLIN(80),HDR2SAV                                      02403
         CLC   EXTLBLIN(3),=X'484452'                                    02404
         BNE   MAKEEOF2                                                  02405
         MVC   EXTLBLIN(3),=X'454F46'                                    02406
         B     NOMKEOF2                                                  02407
MAKEEOF2 DS    0H                                                        02408
         MVC   EXTLBLIN(3),=C'EOF'                                       02409
NOMKEOF2 DS    0H                                                        02410
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02411
* ----------                                                             02412
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02413
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02414
         CLC   EXTLBLIN(2),=X'454F'                                      02415
         BE    WRTLABEL                                                  02416
**** ---- ****                                                           02417
         CLC   EXTLBLIN(3),=X'55484C'                                    02418
         BE    ISASUHL                                                   02419
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02420
         BNE   NOTLUHL                                                   02421
ISASUHL  DS    0H                                                        02422
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02423
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02424
NOTLUHL  DS    0H                                                        02425
**** ---- ****                                                           02426
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02427
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02428
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                     02429
         BE    WRTLABEL                                                  02430
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02431
ENDHEADR DS    0H                                                        02432
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02433
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02434
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02435
*** -----                                                                02436
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02437
         BZ    NOEODFL1                                                  02438
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02439
         B     ENDTRAIL                                                  02440
NOEODFL1 DS    0H                                                        02441
*** -----                                                                02442
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02443
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02444
ENDTRAIL DS    0H                                                        02445
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02446
         A     R0,=F'1'         ADD 1 TO COUNT                           02447
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02448
*** ---                                                                  02449
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02450
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02451
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02452
         BL    ENDNOLIM             NOT YET. GET OUT.                    02453
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02454
ENDNOLIM DS    0H                                                        02455
*** ---                                                                  02456
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02457
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02458
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02459
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02460
         B     WRTTAPMK                                                  02461
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02462
CORBLKCT DS    0H                                                        02463
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02464
         BZ    NOCORBLK          NO. BYPASS.                             02465
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02466
         BZ    NOCORBLK          NO. BYPASS.                             02467
*** ---  FIXING LABELS  --- ***                                          02468
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02469
         BZ    NOFIXL1           NO. DON'T FIX.                          02470
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02471
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02472
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02473
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                    02474
         BNE   NOTASCHD                                                  02475
         MVC   EXTLBLIN(3),=X'454F46'     MOVE IN ASCII EOF              02476
NOTASCHD DS    0H                                                        02477
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02478
NOFIXL1  DS    0H                                                        02479
*** ---  FIXING LABELS  --- ***                                          02480
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                    02481
         BE    NOFIXL1A                                                  02482
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                    02483
         BNE   NOFIXL1B                                                  02484
NOFIXL1A DS    0H                                                        02485
         ST    R5,R5HXPRT              Save register.                    02486
         L     R5,SAVTRTCS             Point to translation table CSECT  02487
         USING TRTCSECT,R5                                               02488
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   02489
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          02490
         L     R5,R5HXPRT              Restore R5                        02491
         DROP  R5                                                        02492
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                 02493
         B     NOFIXL2                      AND NOT THE EBCDIC ONE       02494
NOFIXL1B DS    0H                                                        02495
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02496
NOFIXL2  DS    0H                                                        02497
         STM   R2,R3,SAVE2TO3                                            02498
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02499
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02500
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02501
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02502
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02503
         LM    R2,R3,SAVE2TO3                                            02504
NOCORBLK B     EOFOREOV                                                  02505
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02506
GOTVOL01 DS    0H                                                        02507
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02508
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02509
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02510
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02511
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02512
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS   02513
NOOVLALL DS    0H                                                        02514
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02515
         B     WRTLABEL                                                  02516
WRTLABEL OI    WRLBLFLG,X'01'                                            02517
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *        02518
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02519
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02520
* ----------------------------------------------------------------- *    02521
         L     R15,PRTLBENT       Get entry point of called program      02522
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       02523
         LA    R1,PARMFLGS        Point R1 to parm flags.                02524
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.     02525
         BALR  R14,R15                 Do CALL.                          02526
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     02527
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN      02528
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02529
* ----------------------------------------------------------------- *    02530
NOPRTEXT DS    0H             Don't print external label on report       02531
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *        02532
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02533
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02534
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02535
         B     WRITE1         WRITE LABEL RECORD                         02536
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02537
WRTTAPMK DS    0H                                                        02538
*** ----------------                                                     02539
         TM    INEODFLG,X'02'                                            02540
         BZ    NOEODNOW                                                  02541
         TM    WRLBLFLG,X'04'                                            02542
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02543
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02544
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02545
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02546
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02547
NOEODNOW DS    0H                                                        02548
*** ----------------                                                     02549
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02550
         B     WRITE1         WRITE TAPE MARK                            02551
* ------------------ SPECIAL ROUTINES ------------------------------- *  02552
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02553
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02554
         B     READIN             AND GO BACK WHERE YOU STARTED          02555
* ------------------ SPECIAL ROUTINES ------------------------------- *  02556
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02557
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02558
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02559
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02560
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02561
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02562
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02563
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02564
         B     CLOSMALL          FINISHED, GET OUT.                      02565
NOFIXLBL DS    0H                                                        02566
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02567
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02568
         B     READIN2        WRITE OUTPUTS AND FINISH                   02569
* ------------------------------------------------------------------- *  02570
*                                                                        02571
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02572
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02573
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02574
*      ALREADY.                                                          02575
*                                                                        02576
* ------------------ SPECIAL ROUTINES ------------------------------- *  02577
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02578
         EJECT                                                           02579
READGO1  DS    0H                                                        02580
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02581
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02582
         BZ    READNCNT                                                  02583
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                        02584
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02585
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02586
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02587
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02588
READNCNT DS    0H                                                        02589
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02590
**---->            LABEL STRIPPING CODE          BELOW                   02591
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02592
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02593
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02594
         BZ    RDNOSTRP           NO IT WASN'T                           02595
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02596
RDNOSTRP DS    0H                                                        02597
**---->            LABEL STRIPPING CODE          ABOVE                   02598
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02599
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02600
         ST    R7,STOR7REG                                               02601
         L     R7,BLOKCNT                                                02602
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02603
         ST    R7,BLOKCNT                                                02604
         L     R7,STOR7REG                                               02605
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02606
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02607
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02608
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.   02609
NOINITT1 DS    0H                                                        02610
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02611
         B     WRITE1           CONTINUE                                 02612
*                                                             SBG 04/00  02613
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02614
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02615
**** ------------------- Leading Tape Marks ------- below                02616
         TM    DATFLAG,X'10'    Has any real data been read?             02617
         BZ    NOSKLTME         Yes, bypass this entire routine.         02618
         TM    PARMFLG1,X'20'   Are we skipping LTMs?                    02619
         BZ    NOSKLTMO         PARM is off, we copy them.               02620
         AP    LTMCOUNT,=P'1'   Increment counter                        02621
         L     R0,LTMBINAD      Increment binary counter                 02622
         A     R0,=F'1'                                                  02623
         ST    R0,LTMBINAD                                               02624
         MVFMS LTMRNUM(11),LTMCTPAT             Edit pattern             02625
         MVFMS LTMRNUM(11),LTMCOUNT+1,OPC=ED    Put number in report     02626
         MVFMS LTMRPTI,SKIPPED      Report tape mark skipped.            02627
         PTMS  LTMRPT               Write report line.                   02628
         B     READIN           Skip this tapemark.                      02629
NOSKLTMO DS    0H                                                        02630
         TM    PARMFLG2,X'08'       Is this run READ only?               02631
         BO    NOSKLTMR                                                  02632
         MVFMS LTMRPTI,COPIED       Report tape mark copied.             02633
         B     NOSKLTME                                                  02634
NOSKLTMR DS    0H                                                        02635
         MVFMS LTMRPTI,READDD       Report tape mark read.               02636
NOSKLTME DS    0H                                                        02637
**** ------------------- Leading Tape Marks ------- above                02638
* ------------------------- ADD LABEL TO NL CODE ----------- *           02639
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02640
         BZ    NONLSL1          NO.  BYPASS.                             02641
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02642
*** ---                                                                  02643
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02644
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02645
*                               DO NOT COLLECT 200 DOLLARS.              02646
*** ---                                                                  02647
NONLSL1  DS    0H                                                        02648
* ------------------------- ADD LABEL TO NL CODE ----------- *           02649
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02650
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02651
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02652
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02653
         BO    WRCTLHDR         YES. PUT IT OUT.                         02654
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02655
         BO    WRCTLEOF         YES. PUT IT OUT.                         02656
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02657
         BO    WRCTLEOV         YES. PUT IT OUT.                         02658
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02659
WRCTLHDR DS    0H                                                        02660
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02661
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02662
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02663
         BZ    WRCTLAS1         No. Don't translate the control card.    02664
         ST    R5,R5HXPRT       Yes.   Save register.                    02665
         L     R5,SAVTRTCS             Point to translation table CSECT  02666
         USING TRTCSECT,R5                                               02667
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02668
         L     R5,R5HXPRT              Restore R5                        02669
         DROP  R5                                                        02670
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.      02671
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02672
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02673
WRCTLEOF DS    0H                                                        02674
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02675
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02676
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02677
         BZ    WRCTLAS2         No. Don't translate the control card.    02678
         ST    R5,R5HXPRT       Yes.   Save register.                    02679
         L     R5,SAVTRTCS             Point to translation table CSECT  02680
         USING TRTCSECT,R5                                               02681
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02682
         L     R5,R5HXPRT              Restore R5                        02683
         DROP  R5                                                        02684
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.      02685
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02686
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02687
WRCTLEOV DS    0H                                                        02688
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02689
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02690
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             02691
         BZ    WRCTLAS4         No. Don't translate the control card.    02692
         ST    R5,R5HXPRT       Yes.   Save register.                    02693
         L     R5,SAVTRTCS             Point to translation table CSECT  02694
         USING TRTCSECT,R5                                               02695
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     02696
         L     R5,R5HXPRT              Restore R5                        02697
         DROP  R5                                                        02698
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.      02699
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02700
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02701
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02702
NOCNTLWR DS    0H                                                        02703
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02704
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02705
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02706
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?      02707
         BNE   RDNOSKIP                                       SBG 03/00  02708
         AP    LTMCOUNT,=P'1'                                            02709
         L     R0,LTMBINAD                                               02710
         A     R0,=F'1'                                                  02711
         ST    R0,LTMBINAD                                               02712
         MVFMS LTMRNUM(11),LTMCTPAT                                      02713
         MVFMS LTMRNUM(11),LTMCOUNT+1,OPC=ED                             02714
         PTMS  LTMRPT            INDICATE LEADING TM SKIPPED             02715
         B     READIN         DO ANOTHER READ                 SBG 03/00  02716
RDNOSKIP DS    0H                                             SBG 03/00  02717
         AP    LTMCOUNT,=P'1'                                            02718
         L     R0,LTMBINAD                                               02719
         A     R0,=F'1'                                                  02720
         ST    R0,LTMBINAD                                               02721
         MVFMS LTMRNUM(11),LTMCTPAT                                      02722
         MVFMS LTMRNUM(11),LTMCOUNT+1,OPC=ED                             02723
         PTMS  LTMRPT            INDICATE LEADING TM COPIED   SBG 03/00  02724
         B     MARKFILE                                       SBG 03/00  02725
READINGO DS    0H                                             SBG 04/00  02726
*------------------------------------> HEX PRINT LIMIT - BELOW           02727
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02728
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02729
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02730
NOHXPRST DS    0H                                                        02731
*------------------------------------> HEX PRINT LIMIT - ABOVE           02732
         ST    R7,STOR7REG                                               02733
         L     R7,FILECNT                                                02734
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02735
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02736
         MVFMS FILEDONE+6(5),DWORD+5(3),OPC=UNPK  UNPACK FILE NUMBER     02737
         ST    R7,FILECNT                                                02738
         L     R7,BLOKCNT                                                02739
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02740
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02741
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT    02742
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02743
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02744
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02745
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02746
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02747
         MVFMS FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02748
         MVFMS FILECONT,=C'CONTAINING'                                   02749
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02750
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02751
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02752
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02753
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02754
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02755
         AP    QWORD,DWORD        AND ADD IT IN                          02756
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE           02757
** ----                                                                  02758
         LM    R4,R5,TOTBYTES                                            02759
         A     R5,DBINL            LOW ORDER COUNT                       02760
         BNO   MARKNOVR            B IF NO OVERFLOW                      02761
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02762
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02763
MARKNOVR DS    0H                                                        02764
         A     R4,DBINH            HIGH ORDER                            02765
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02766
** ----                                                                  02767
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02768
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02769
         LM    R4,R5,LABBYTES                                            02770
         A     R5,LABINL           LOW ORDER COUNT                       02771
         BNO   MARKNOVL            B IF NO OVERFLOW                      02772
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02773
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02774
MARKNOVL DS    0H                                                        02775
         A     R4,LABINH           HIGH ORDER                            02776
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02777
* - >                                                                    02778
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02779
         BZ    NOSEPLBL                                                  02780
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02781
         MVFMS FILECUMT,=C'CUM LABEL:'                                   02782
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02783
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02784
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02785
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02786
         CVD   R5,DWORD          LOW ORDER WORD                          02787
         AP    QWORD,DWORD       AND ADD IT IN                           02788
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE          02789
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02790
NOSEPLBL DS    0H                                                        02791
* - >                                                                    02792
         B     MARKNOLB                                                  02793
MARKISNL DS    0H                                                        02794
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02795
         BO    MARKNOLB                                                  02796
         LM    R4,R5,FILBYTES                                            02797
         A     R5,DBINFL           LOW ORDER COUNT                       02798
         BNO   MARKNOVF            B IF NO OVERFLOW                      02799
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02800
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02801
MARKNOVF DS    0H                                                        02802
         A     R4,DBINFH           HIGH ORDER                            02803
         STM   R4,R5,FILBYTES                                            02804
* - >                                                                    02805
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02806
         BZ    NOSEPDAT                                                  02807
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02808
         MVFMS FILECUMT,=C'CUM DATA :'                                   02809
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02810
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02811
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02812
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02813
         CVD   R5,DWORD          LOW ORDER WORD                          02814
         AP    QWORD,DWORD       AND ADD IT IN                           02815
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         02816
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02817
NOSEPDAT DS    0H                                                        02818
* - >                                                                    02819
MARKNOLB DS    0H                                                        02820
** ----                                                                  02821
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02822
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02823
* - >                                                                    02824
         MVFMS FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02825
         MVFMS FILECUMT,=C'CUM TOTAL:'                                   02826
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02827
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02828
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02829
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02830
         CVD   R5,DWORD          LOW ORDER WORD                          02831
         AP    QWORD,DWORD       AND ADD IT IN                           02832
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         02833
* - >                                                                    02834
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02835
MARKNCNT DS    0H                                                        02836
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02837
MARKNCN2 DS    0H                                                        02838
         MVFMS FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02839
MARKNCNE DS    0H                                                        02840
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02841
         PTMS  FILEDONE            WRITE IT                              02842
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                    02843
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.         02844
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02845
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02846
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02847
         MVFMS FILECONT,=C'          '                                   02848
         MVFMS FILECUMT,=C'          '                                   02849
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02850
         ST    R4,DBINH            ZERO BYTE COUNT                       02851
         ST    R4,DBINL            ZERO BYTE COUNT                       02852
         ST    R4,LABINH           ZERO BYTE COUNT                       02853
         ST    R4,LABINL           ZERO BYTE COUNT                       02854
         ST    R4,DBINFH           ZERO BYTE COUNT                       02855
         ST    R4,DBINFL           ZERO BYTE COUNT                       02856
MARKNTOT DS    0H                                                        02857
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02858
MARKFILE DS    0H                                                        02859
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02860
         ST    R7,BLOKCNT                                                02861
         L     R7,FILECNT                                                02862
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02863
         ST    R7,FILECNT                                                02864
         L     R7,STOR7REG                                               02865
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02866
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02867
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02868
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02869
         BZ    MARKFILA          NO - SKIP THIS CODE                     02870
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02871
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02872
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02873
MARKFILA DS    0H                                                        02874
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02875
         TM    PARMFLG4,X'02'   Stripping labels?                        02876
         BZ    MARKSTRX         no - bypass strip-related code           02877
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02878
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02879
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02880
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02881
MARKSTRX DS    0H                                                        02882
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02883
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02884
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02885
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02886
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02887
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02888
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02889
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02890
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02891
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02892
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02893
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02894
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02895
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02896
*                                                             SBG 04/00  02897
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02898
INEODATA DS    0H                                                        02899
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02900
*                                                                        02901
READIN2  DS    0H                                                        02902
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02903
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02904
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02905
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02906
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02907
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02908
         BZ    NOEXTMK           NO                                      02909
         B     WRTTAPMK                                                  02910
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02911
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02912
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02913
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02914
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02915
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02916
READ2STP DS    0H                                                        02917
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02918
READ2GO  DS    0H                                                        02919
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02920
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                   02921
* --- >>>  ------------------ below -------- Skip writing last T.M.      02922
* -------------------------------------------------------------- *       02923
*            When stripping labels, somehow an extra             *       02924
*            tape mark gets written.  This is a kludge           *       02925
*            to correct that.....                                *       02926
* -------------------------------------------------------------- *       02927
         TM    PARMFLG4,X'02'    Stripping Labels?                       02928
         BZ    READ2GNS          No. don't skip writing last t.m.        02929
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02930
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02931
*        PUT   SYSPRINT,LINE                                             02932
         B     WRITE17           Do not write the extra tape mark        02933
READ2GNS DS    0H                                                        02934
* --- >>>  ------------------ above -------- Skip writing last T.M.      02935
         B     WRITE1                                                    02936
         SPACE 3                                                         02937
* -------------------- Code for Initting Tapes ---------->>>>> below     02938
TLITWRIT DS    0H                                                        02939
         TM    PARMFLG3,X'01'                                            02940
         BZ    TLITWRIE                                                  02941
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02942
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02943
         BO    TLITREW2                YES. SET WRITE CCW BACK.          02944
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02945
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02946
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02947
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           02948
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02949
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02950
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02951
TLITSKP1 DS    0H                                                        02952
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02953
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02954
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02955
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02956
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02957
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02958
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02959
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       02960
* --> Hex printing - below                                               02961
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02962
         BZ    NPRHINT1                No. Bypass it.                    02963
         ST    R7,R7HXPRT              Save BAL register.                02964
         BAL   R7,HEXPRNEX             Hex print from external labels.   02965
         L     R7,R7HXPRT              Restore BAL register.             02966
NPRHINT1 DS    0H                                                        02967
* --> Hex printing - above                                               02968
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02969
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02970
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02971
TLITSKP2 DS    0H                                                        02972
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02973
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02974
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02975
* --> Hex printing - below                                               02976
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02977
         BZ    NPRHINT2                No. Bypass it.                    02978
         ST    R7,R7HXPRT              Save BAL register.                02979
         BAL   R7,HEXPRNEX             Hex print from external labels.   02980
         L     R7,R7HXPRT              Restore BAL register.             02981
NPRHINT2 DS    0H                                                        02982
* --> Hex printing - above                                               02983
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02984
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02985
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02986
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02987
TLITWRIE DS    0H                                                        02988
* -------------------- Code for Initting Tapes ---------->>>>> above     02989
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     02990
TLITASCI DS    0H               INIT ASCII TAPES.                        02991
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  02992
         BZ    TLITASCE         No. Bypass this code.                    02993
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02994
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02995
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          02996
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02997
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02998
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02999
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           03000
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  03001
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            03002
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          03003
TLITSKA1 DS    0H                                                        03004
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              03005
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        03006
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     03007
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          03008
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     03009
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          03010
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    03011
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any       03012
* --> Hex printing - below                                               03013
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03014
         BZ    NPRHINA1                No. Bypass it.                    03015
*           Temporary ASCII translation is done here.           *        03016
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03017
         ST    R5,R5HXPRT              Save register.                    03018
         L     R5,SAVTRTCS             Point to translation table CSECT  03019
         USING TRTCSECT,R5                                               03020
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03021
         ST    R7,R7HXPRT              Save BAL register.                03022
         BAL   R7,HEXPRNEX             Hex print from external labels.   03023
         L     R7,R7HXPRT              Restore BAL register.             03024
         L     R5,R5HXPRT              Restore R5                        03025
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03026
         DROP  R5                                                        03027
NPRHINA1 DS    0H                                                        03028
* --> Hex printing - above                                               03029
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03030
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        03031
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        03032
TLITSKA2 DS    0H                                                        03033
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    03034
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     03035
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    03036
* --------------------------------------------------------------*        03037
*           Note:  The real ASCII translation is                *        03038
*                  done in the CHANGVOL routine that            *        03039
*                  gets executed just before each               *        03040
*                  output write.  Please note that              *        03041
*                  INASC3 and INASC4 imply CHGVOL.              *        03042
* --------------------------------------------------------------*        03043
* --> Hex printing - below                                               03044
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03045
         BZ    NPRHINA2                No. Bypass it.                    03046
*           Temporary ASCII translation is done here.           *        03047
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03048
         ST    R5,R5HXPRT              Save register.                    03049
         L     R5,SAVTRTCS             Point to translation table CSECT  03050
         USING TRTCSECT,R5                                               03051
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03052
         ST    R7,R7HXPRT              Save BAL register.                03053
         BAL   R7,HEXPRNEX             Hex print from external labels.   03054
         L     R7,R7HXPRT              Restore BAL register.             03055
         L     R5,R5HXPRT              Restore R5                        03056
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03057
         DROP  R5                                                        03058
NPRHINA2 DS    0H                                                        03059
* --> Hex printing - above                                               03060
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03061
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             03062
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    03063
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     03064
TLITASCE DS    0H                                                        03065
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     03066
*                                                                        03067
*  WRITE TO OUTPUT TAPES                                                 03068
*                                                                        03069
WRITE1   DS    0H                                             SBG 06/00  03070
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              03071
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        03072
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              03073
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        03074
WRNOTPMK DS    0H                                                        03075
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  03076
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03077
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  03078
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  03079
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    03080
         BZ    WRITE2         NO                                         03081
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     03082
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  03083
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03084
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03085
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  03086
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03087
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03088
         EXCP  OUTIOB         WRITE IT                                   03089
         WAIT  ECB=OUTECB     WAIT FOR IT                                03090
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03091
         BNE   OUTERR         NO - ERROR                                 03092
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    03093
         BZ    WRITE3         NO                                         03094
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     03095
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  03096
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03097
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03098
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  03099
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03100
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03101
         EXCP  OUTIOB         WRITE IT                                   03102
         WAIT  ECB=OUTECB     WAIT FOR IT                                03103
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03104
         BNE   OUTERR         NO - ERROR                                 03105
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    03106
         BZ    WRITE4         NO                                         03107
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     03108
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  03109
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03110
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03111
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  03112
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03113
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03114
         EXCP  OUTIOB         WRITE IT                                   03115
         WAIT  ECB=OUTECB     WAIT FOR IT                                03116
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03117
         BNE   OUTERR         NO - ERROR                                 03118
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    03119
         BZ    WRITE5         NO                                         03120
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     03121
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  03122
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03123
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03124
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  03125
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03126
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03127
         EXCP  OUTIOB         WRITE IT                                   03128
         WAIT  ECB=OUTECB     WAIT FOR IT                                03129
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03130
         BNE   OUTERR         NO - ERROR                                 03131
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    03132
         BZ    WRITE6         NO                                         03133
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     03134
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  03135
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03136
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03137
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  03138
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03139
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03140
         EXCP  OUTIOB         WRITE IT                                   03141
         WAIT  ECB=OUTECB     WAIT FOR IT                                03142
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03143
         BNE   OUTERR         NO - ERROR                                 03144
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    03145
         BZ    WRITE7         NO                                         03146
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     03147
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  03148
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03149
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03150
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  03151
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03152
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03153
         EXCP  OUTIOB         WRITE IT                                   03154
         WAIT  ECB=OUTECB     WAIT FOR IT                                03155
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03156
         BNE   OUTERR         NO - ERROR                                 03157
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    03158
         BZ    WRITE8         NO                                         03159
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     03160
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  03161
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03162
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03163
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  03164
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03165
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03166
         EXCP  OUTIOB         WRITE IT                                   03167
         WAIT  ECB=OUTECB     WAIT FOR IT                                03168
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03169
         BNE   OUTERR         NO - ERROR                                 03170
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    03171
         BZ    WRITE9         NO                                         03172
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     03173
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  03174
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03175
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03176
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  03177
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03178
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03179
         EXCP  OUTIOB         WRITE IT                                   03180
         WAIT  ECB=OUTECB     WAIT FOR IT                                03181
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03182
         BNE   OUTERR         NO - ERROR                                 03183
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    03184
         BZ    WRITE10        NO                                         03185
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     03186
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  03187
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03188
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03189
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  03190
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03191
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03192
         EXCP  OUTIOB         WRITE IT                                   03193
         WAIT  ECB=OUTECB     WAIT FOR IT                                03194
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03195
         BNE   OUTERR         NO - ERROR                                 03196
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    03197
         BZ    WRITE11        NO                                         03198
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     03199
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  03200
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03201
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03202
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  03203
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03204
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03205
         EXCP  OUTIOB         WRITE IT                                   03206
         WAIT  ECB=OUTECB     WAIT FOR IT                                03207
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03208
         BNE   OUTERR         NO - ERROR                                 03209
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    03210
         BZ    WRITE12        NO                                         03211
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     03212
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  03213
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03214
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03215
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  03216
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03217
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03218
         EXCP  OUTIOB         WRITE IT                                   03219
         WAIT  ECB=OUTECB     WAIT FOR IT                                03220
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03221
         BNE   OUTERR         NO - ERROR                                 03222
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    03223
         BZ    WRITE13        NO                                         03224
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     03225
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  03226
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03227
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03228
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  03229
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03230
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03231
         EXCP  OUTIOB         WRITE IT                                   03232
         WAIT  ECB=OUTECB     WAIT FOR IT                                03233
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03234
         BNE   OUTERR         NO - ERROR                                 03235
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    03236
         BZ    WRITE14        NO                                         03237
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     03238
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  03239
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03240
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03241
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  03242
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03243
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03244
         EXCP  OUTIOB         WRITE IT                                   03245
         WAIT  ECB=OUTECB     WAIT FOR IT                                03246
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03247
         BNE   OUTERR         NO - ERROR                                 03248
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    03249
         BZ    WRITE15        NO                                         03250
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     03251
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  03252
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03253
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03254
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  03255
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03256
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03257
         EXCP  OUTIOB         WRITE IT                                   03258
         WAIT  ECB=OUTECB     WAIT FOR IT                                03259
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03260
         BNE   OUTERR         NO - ERROR                                 03261
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    03262
         BZ    WRITE16        NO                                         03263
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     03264
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  03265
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03266
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03267
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  03268
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03269
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03270
         EXCP  OUTIOB         WRITE IT                                   03271
         WAIT  ECB=OUTECB     WAIT FOR IT                                03272
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03273
         BNE   OUTERR         NO - ERROR                                 03274
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    03275
         BZ    WRITE17        NO                                         03276
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     03277
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  03278
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03279
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03280
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  03281
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03282
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03283
         EXCP  OUTIOB         WRITE IT                                   03284
         WAIT  ECB=OUTECB     WAIT FOR IT                                03285
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03286
         BNE   OUTERR         NO - ERROR                                 03287
WRITE17  DS    0H                                                        03288
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               03289
         BNE   WR17NTPM       No. Don't correct bytes moved field        03290
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    03291
WR17NTPM DS    0H                                                        03292
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         03293
         BO    ENDINPUT       YES. CLOSE.                                03294
         TM    FLAG2A,EOV     END OF INPUT?                              03295
         BO    ENDINPUT       YES - QUIT                                 03296
         B     READIN         NO - LOOP                                  03297
         SPACE 3                                                         03298
*                                                                        03299
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             03300
*                                                                        03301
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                03302
         BZ    INERR1         NO - ASSUME DATA CHECK                     03303
         MVFMS LINE(133),INEQC  SET ERROR MESSAGE                        03304
         MVFMS INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        03305
         B     INERR2         CONTINUE                                   03306
INERR1   DS    0H                                                        03307
         MVFMS LINE(133),INDCK  SET ERROR MESSAGE                        03308
         MVFMS INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        03309
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        03310
         MVI   INECB,X'00'    RESET ECB                                  03311
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 03312
               6,INECB,ROUTCDE=(3)                                       03313
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       03314
*                             WHO CARES WHAT THE REPLY IS                03315
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      03316
         B     CLOSMALL                                                  03317
*        ABEND 69             QUIT                                       03318
         SPACE 3                                                         03319
*                                                                        03320
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      03321
*                                                                        03322
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       03323
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      03324
         TM    OUTCSW+4,X'02' UNIT CHECK?                                03325
         BO    OUTERUC        YES. HANDLE IT.                            03326
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   03327
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     03328
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       03329
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       03330
         B     OUTERR2            GO FILL IN REST OF THE INFO            03331
OUTERUC  DS    0H                                                        03332
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                       03333
         B     OUTERR2        CONTINUE                                   03334
OUTERR1  DS    0H                                                        03335
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                       03336
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             03337
         L     R5,16          R5=CVT                                     03338
         L     R5,0(,R5)      R5=TCB WORDS                               03339
         L     R5,4(,R5)      R5=MY TCB                                  03340
         L     R5,12(,R5)     R5=TIOT                                    03341
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              03342
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  03343
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             03344
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     03345
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           03346
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                03347
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     03348
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 03349
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          03350
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       03351
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 03352
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       03353
         MVC   SAVELINE(133),LINE                                        03354
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03355
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      03356
         MVC   LINE(133),LINE-1      CLEAR LINE                          03357
         MVFMS LINE(133),OUTCOUNT    How much was copied?                03358
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   03359
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              03360
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        03361
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              03362
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        03363
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      03364
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  03365
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03366
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 03367
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03368
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03369
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03370
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03371
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03372
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03373
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03374
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03375
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03376
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03377
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03378
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03379
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03380
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03381
         AP    QWORD,DWORD        AND ADD IT IN                          03382
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03383
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03384
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03385
* ---- >    WTO on a Unit Exception   < ---- Below                       03386
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03387
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03388
* ---- >    WTO on a Unit Exception   < ---- Above                       03389
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03390
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03391
*                               THIS IS A SEMI-NORMAL CONDITION          03392
*                               AND WHY INVOLVE THE OPERATOR?            03393
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03394
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03395
OUTERR4  DS    0H                                                        03396
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03397
         WTOR  '                                                       X 03398
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03399
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03400
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03401
         BNE   OUTERR3        NO - TRY AGAIN                             03402
* ------------------------------------------------------------------- *  03403
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03404
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03405
* ------------------------------------------------------------------- *  03406
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03407
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03408
*                             DON'T BOTHER WAITING FOR REWIND            03409
* ------------------------------------------------------------------- *  03410
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03411
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03412
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03413
         BNE   OUTERR5        NO                                         03414
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03415
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03416
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03417
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03418
         BNE   OUTERR6        NO                                         03419
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03420
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03421
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03422
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03423
         BNE   OUTERR7        NO                                         03424
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03425
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03426
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03427
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03428
         BNE   OUTERR8        NO                                         03429
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03430
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03431
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03432
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03433
         BNE   OUTERR9        NO                                         03434
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03435
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03436
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03437
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03438
         BNE   OUTERR10       NO                                         03439
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03440
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03441
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03442
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03443
         BNE   OUTERR11       NO                                         03444
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03445
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03446
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03447
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03448
         BNE   OUTERR12       NO                                         03449
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03450
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03451
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03452
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03453
         BNE   OUTERR13       NO                                         03454
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03455
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03456
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03457
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03458
         BNE   OUTERR14       NO                                         03459
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03460
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03461
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03462
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03463
         BNE   OUTERR15       NO                                         03464
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03465
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03466
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03467
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03468
         BNE   OUTERR16       NO                                         03469
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03470
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03471
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03472
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03473
         BNE   OUTERR17       NO                                         03474
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03475
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03476
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03477
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03478
         BNE   OUTERR18       NO                                         03479
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03480
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03481
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03482
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03483
         BNE   OUTERR19       NO                                         03484
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03485
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03486
*                             THEN IT MUST BE OUTPUT 16                  03487
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03488
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03489
         SPACE 3                                                         03490
*                                                                        03491
*  END OF INPUT -- FINISH UP                                             03492
*                                                                        03493
ENDINPUT DS    0H                                                        03494
         SPACE 3                                                         03495
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03496
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03497
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03498
         MVFMS LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03499
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03500
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03501
ENDIN0   DS    0H                                                        03502
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03503
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03504
         BO    ENDIN1         YES - CONTINUE                             03505
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03506
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03507
         BO    ENDIN2         YES - CONTINUE                             03508
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03509
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03510
         BO    ENDIN3         YES - CONTINUE                             03511
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03512
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03513
         BO    ENDIN4         YES - CONTINUE                             03514
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03515
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03516
         BO    ENDIN5         YES - CONTINUE                             03517
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03518
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03519
         BO    ENDIN6         YES - CONTINUE                             03520
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03521
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03522
         BO    ENDIN7         YES - CONTINUE                             03523
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03524
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03525
         BO    ENDIN8         YES - CONTINUE                             03526
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03527
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03528
         BO    ENDIN9         YES - CONTINUE                             03529
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03530
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03531
         BO    ENDIN10        YES - CONTINUE                             03532
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03533
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03534
         BO    ENDIN11        YES - CONTINUE                             03535
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03536
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03537
         BO    ENDIN12        YES - CONTINUE                             03538
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03539
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03540
         BO    ENDIN13        YES - CONTINUE                             03541
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   03542
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        03543
         BO    ENDIN14        YES - CONTINUE                             03544
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   03545
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        03546
         BO    ENDIN15        YES - CONTINUE                             03547
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   03548
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        03549
         BO    ENDIN16        YES - CONTINUE                             03550
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  03551
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   03552
         SPACE 3                                                         03553
*                                                                        03554
*  CLOSE ALL FILES                                                       03555
*                                                                        03556
CLOSMALL DS    0H                                                        03557
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    03558
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              03559
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         03560
         BZ    ENDINTOT          NO - SKIP ROUTINE                       03561
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               03562
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03563
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03564
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03565
         CVD   R5,DWORD          LOW ORDER WORD                          03566
         AP    QWORD,DWORD       AND ADD IT IN                           03567
         MVFMS TOTBPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03568
         PTMS  TOTBLINE                                                  03569
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     03570
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03571
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03572
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03573
         CVD   R5,DWORD          LOW ORDER WORD                          03574
         AP    QWORD,DWORD       AND ADD IT IN                           03575
         MVFMS TOTLPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03576
         PTMS  TOTLLINE                                                  03577
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03578
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03579
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03580
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03581
         CVD   R5,DWORD          LOW ORDER WORD                          03582
         AP    QWORD,DWORD       AND ADD IT IN                           03583
         MVFMS TOTWPATT,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03584
         PTMS  TOTWLINE                                                  03585
         MVI   LINE,C' '                                                 03586
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03587
ENDINTOT DS    0H                                                        03588
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03589
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03590
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?     03591
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.       03592
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?              03593
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE       03594
         MVFMS INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1            03595
         PTMS  INITMSG               MSG-WE'RE DOING INITTED TAPE        03596
NOINITT3 DS    0H                                                        03597
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03598
         TM    PARMFLG3,X'01'   INIT ONLY?                               03599
         BO    NOCLOSIN                                                  03600
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      03601
         BO    NOCLOSIN                                                  03602
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      03603
         BO    NOCLOSIN                                                  03604
         CLOSE (IN)                                                      03605
NOCLOSIN DS    0H                                                        03606
         CLOSE (SYSPRINT)                                                03607
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03608
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03609
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03610
         CLOSE (LABLDUMP)                                                03611
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03612
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03613
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03614
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03615
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03616
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03617
         CLOSE (LABADDIN)                                                03618
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03619
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03620
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03621
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03622
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03623
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03624
         BZ    CLOSE1         NO                                         03625
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03626
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03627
         BZ    CLOSE2         NO                                         03628
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03629
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03630
         BZ    CLOSE3         NO                                         03631
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03632
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03633
         BZ    CLOSE4         NO                                         03634
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03635
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03636
         BZ    CLOSE5         NO                                         03637
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03638
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03639
         BZ    CLOSE6         NO                                         03640
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03641
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03642
         BZ    CLOSE7         NO                                         03643
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03644
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03645
         BZ    CLOSE8         NO                                         03646
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03647
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03648
         BZ    CLOSE9         NO                                         03649
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03650
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03651
         BZ    CLOSE10        NO                                         03652
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03653
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03654
         BZ    CLOSE11        NO                                         03655
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03656
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03657
         BZ    CLOSE12        NO                                         03658
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03659
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03660
         BZ    CLOSE13        NO                                         03661
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03662
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03663
         BZ    CLOSE14        NO                                         03664
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03665
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03666
         BZ    CLOSE15        NO                                         03667
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03668
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03669
         BZ    THEEND         NO                                         03670
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03671
         SPACE 3                                                         03672
*                                                                        03673
*  Test for ABEND 069 first.  Did we come from an Input Error?           03674
*                                                                        03675
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03676
         BZ    THEEND            No.  End normally.                      03677
         ABEND 69                QUIT                                    03678
*                                                                        03679
*  THE END                                                               03680
*                                                                        03681
THEEND   DS    0H                                                        03682
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03683
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03684
         MVFMS WTOCBT+16(41),FILEDONE                                    03685
WTOCBT   WTO   'CBT990                                              '    03686
THEENDS  DS    0H                                                        03687
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03688
         BO    THEEND16         Yes, issue RC = 16                       03689
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03690
         BO    THEEND8          Yes, issue RC = 8                        03691
         B     THEEND0          Otherwise, issue RC = 0                  03692
THEEND16 DS    0H                                                        03693
         L     R13,4(,R13)                                               03694
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03695
         B     THEEND2                                                   03696
THEEND8  DS    0H                                                        03697
         L     R13,4(,R13)                                               03698
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03699
         B     THEEND2                                                   03700
THEEND0  DS    0H                                                        03701
         L     R13,4(,R13)                                               03702
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03703
THEEND2  DS    0H                                                        03704
         LM    R14,R12,12(R13)                                           03705
         BR    R14                                                       03706
         EJECT                                                           03707
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03708
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03709
*    BAL REGISTER IS R4.                                                 03710
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03711
HEX      DS    0H                                                        03712
         MVC   1(1,R15),0(R1)        Move byte                           03713
         UNPK  0(3,R15),1(2,R15)     Unpack                              03714
         TR    0(2,R15),HEXTAB-240                                       03715
         LA    R15,2(,R15)           Increment output pointer            03716
         LA    R1,1(,R1)             Increment input pointer             03717
         BCT   R0,HEX                Decrement length, then loop         03718
         MVI   0(R15),C' '           Blank the trailing byte             03719
         BR    R4                    Return to caller                    03720
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03721
         SPACE                                                           03722
* --------------------------------------------------------- * SBG 05/00  03723
*    BAL REGISTER IS R7.                                      SBG 05/00  03724
* --------------------------------------------------------- * SBG 05/00  03725
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03726
*                         ALTERED.                                       03727
         MVFMS VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03728
         MVFMS VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03729
         MVFMS VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03730
         MVFMS VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03731
* ----                                                                   03732
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03733
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03734
         MVFMS VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG        03735
INDVVOLS DS    0H                                                        03736
* ----                                                                   03737
         MVFMS VOLDDN(5),LINE        CLEAR FIELD                         03738
         MVFMS VOLDDN(5),VOLDD       MOVE DD NAME IN                     03739
         PTMS  VOLALT                MOVE MESSAGE TO PRT                 03740
         BR    R7                    RETURN TO CALLER                    03741
* --------------------------------------------------------- *            03742
*    BAL REGISTER IS R7.                                                 03743
* --------------------------------------------------------- *            03744
PRTBLCNT DS    0H                                                        03745
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE               03746
PRTBLCNE BR    R7                                                        03747
* --------------------------------------------------------- *            03748
*    BAL REGISTER IS R7.                                                 03749
* --------------------------------------------------------- *            03750
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03751
         ST    R7,SAVE7REG                                               03752
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03753
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03754
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03755
BACKEXT1 L     R7,SAVE7REG                                               03756
BACKEXTE BR    R7                                                        03757
* --------------------------------------------------------- *            03758
*    BAL REGISTER IS R7.                                                 03759
* --------------------------------------------------------- *            03760
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03761
         ST    R7,SAVE7REG                                               03762
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03763
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03764
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03765
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03766
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03767
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03768
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03769
CLEARSV1 L     R7,SAVE7REG                                               03770
CLEARSVE BR    R7                                                        03771
* --------------------------------------------------------- *            03772
*    BAL REGISTER IS R7.                                                 03773
* --------------------------------------------------------- *            03774
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03775
         ST    R7,SAVE7REG                                               03776
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03777
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03778
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03779
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03780
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03781
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03782
         BZ    FIXALL3                                                   03783
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03784
         BZ    FIXLAST2                                                  03785
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03786
         BZ    FIXLAST1                                                  03787
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03788
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03789
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03790
         L     R7,SAVE7REG                                               03791
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03792
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03793
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03794
         L     R7,SAVE7REG                                               03795
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03796
FIXLAST1 DS    0H               REPLACE EOF2                             03797
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03798
         L     R7,SAVE7REG                                               03799
         B     ADDEOF2          CREATE THE EOF2                          03800
FIXEXTL1 DS    0H                                                        03801
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03802
         L     R7,SAVE7REG                                               03803
FIXEXTLE BR    R7                                                        03804
* --------------------------------------------------------- *            03805
*    BAL REGISTER IS R7.                                                 03806
* --------------------------------------------------------- *            03807
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03808
*                             IOS USES DURING EXCP PROCESSING.           03809
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03810
* ------------------------------------------------------------------- *  03811
         MVC   OUTIOB(4),IOB01                                           03812
         MVC   OUTCSW(8),FUL2ZERO                                        03813
         MVC   OUTDCBPT(4),FUL2ZERO                                      03814
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03815
         MVC   OUTDCBPT+8(4),IOB02                                       03816
CLEARIOE BR    R7                                                        03817
* --------------------------------------------------------- *            03818
*    BAL REGISTER IS R7.                                                 03819
* --------------------------------------------------------- *            03820
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03821
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03822
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03823
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03824
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03825
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03826
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03827
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03828
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03829
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03830
* -- >>                                                                  03831
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03832
         BZ    CHEBCVID             NO. NO TRANSLATION OF VOLSER         03833
         ST    R5,R5HXPRT           Save register.                       03834
         L     R5,SAVTRTCS          Point to translation table CSECT.    03835
         USING TRTCSECT,R5                                               03836
         MVC   VOLASC(6),VOLCHG                                          03837
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           03838
         DROP  R5                                                        03839
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace          03840
         B     CHASCVID             And not the EBCDIC one.              03841
CHEBCVID MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03842
CHASCVID DS    0H                                                        03843
* -- >>                                                                  03844
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03845
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03846
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03847
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03848
* -- >>                                                                  03849
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03850
         BZ    CHEBCTOW             NO. NO TRANSLATION OF VOLSER         03851
         ST    R5,R5HXPRT           Save register.                       03852
         L     R5,SAVTRTCS          Point to translation table CSECT.    03853
         USING TRTCSECT,R5                                               03854
         MVC   TAPEOASC(14),TAPEOWN                                      03855
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      03856
         DROP  R5                                                        03857
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace        03858
         B     CHASCTOW                  And not the EBCDIC one.         03859
CHEBCTOW DS    0H                                                        03860
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner          03861
CHASCTOW DS    0H                                                        03862
* -- >>                                                                  03863
         MVC   LINE(133),LINE-1                                          03864
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03865
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03866
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03867
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03868
         PTMS  OWNRMSG                                                   03869
CHNOTOWN DS    0H                                                        03870
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03871
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03872
CHEXTLAB DS    0H                                                        03873
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          03874
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            03875
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           03876
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03877
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03878
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03879
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03880
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03881
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03882
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03883
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03884
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03885
         BZ    CHNOZAPV            NO. BYPASS.                           03886
* -- >>                                                                  03887
         TM    ASCIIFLG,X'01'                                            03888
         BO    CHASCVE1                                                  03889
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03890
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER         03891
CHASCVE1 DS    0H                                                        03892
         ST    R5,R5HXPRT           Save register.                       03893
         L     R5,SAVTRTCS          Point to translation table CSECT.    03894
         USING TRTCSECT,R5                                               03895
         MVC   VOLASC(6),VOLCHG                                          03896
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           03897
         DROP  R5                                                        03898
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace          03899
         B     CHASCVEX             And not the EBCDIC one.              03900
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03901
CHASCVEX DS    0H                                                        03902
* -- >>                                                                  03903
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03904
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03905
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03906
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03907
* -- >>                                                                  03908
         TM    ASCIIFLG,X'01'                                            03909
         BO    CHASCVE2                                                  03910
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              03911
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER         03912
CHASCVE2 DS    0H                                                        03913
         ST    R5,R5HXPRT           Save register.                       03914
         L     R5,SAVTRTCS          Point to translation table CSECT.    03915
         USING TRTCSECT,R5                                               03916
         MVC   TAPEOASC(14),TAPEOWN                                      03917
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      03918
         DROP  R5                                                        03919
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace        03920
         B     CHASCTEX                  And not the EBCDIC one.         03921
CHEBCTEX DS    0H                                                        03922
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner          03923
CHASCTEX DS    0H                                                        03924
* -- >>                                                                  03925
         MVC   LINE(133),LINE-1                                          03926
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03927
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03928
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03929
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03930
         PTMS  OWNRMSG                                                   03931
CHNOZAPV DS    0H                                                        03932
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03933
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03934
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03935
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03936
         BO    CHGPRINT            YES, PRINT.                           03937
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03938
         BO    CHGPRINT            YES, PRINT                            03939
         B     CHGWRIT                                                   03940
CHGPRINT DS    0H                                                        03941
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03942
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03943
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03944
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03945
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03946
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03947
         TM    EXASCFLG,X'01'                                            03948
         BZ    CHGPRANT                                                  03949
         ST    R5,R5HXPRT        Save register.                          03950
         L     R5,SAVTRTCS       Point to translation table CSECT.       03951
         USING TRTCSECT,R5                                               03952
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC            03953
         ST    R7,SAVE7RG5                                               03954
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03955
         L     R7,SAVE7RG5                                               03956
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII             03957
         L     R5,R5HXPRT        Restore register.                       03958
         DROP  R5                                                        03959
         B     CHGWRIT                                                   03960
CHGPRANT DS    0H                                                        03961
         ST    R7,SAVE7RG5                                               03962
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03963
         L     R7,SAVE7RG5                                               03964
CHGWRIT  DS    0H                                             SBG 05/00  03965
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03966
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03967
         SPACE 3                                                         03968
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   03969
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03970
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        03971
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03972
CHASCLAB DS    0H                                                        03973
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03974
         BO    CHNOASCV            YES, SKIP SECOND WRITE                03975
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03976
         MVC   EXTLBLIN(4),AVOL1LIT                                      03977
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               03978
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          03979
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         03980
CHASCLX1 DS    0H                                                        03981
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   03982
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              03983
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    03984
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03985
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           03986
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO          03987
         MVC   LINE(133),LINE-1                                          03988
         MVFMS OWNRTID(14),LINE          CLEAR FIELD                     03989
         MVFMS OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03990
         MVFMS OWNRDDO(5),LINE           CLEAR FIELD                     03991
         MVFMS OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03992
         PTMS  OWNRMSG                                                   03993
CHNOASCV DS    0H                                                        03994
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03995
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03996
         BO    CHGWRASX            YES, SKIP SECOND WRITE                03997
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03998
         BO    CHGASPRT            YES, PRINT.                           03999
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       04000
         BO    CHGASPRT            YES, PRINT                            04001
         B     CHGWRAS                                                   04002
CHGASPRT DS    0H                                                        04003
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  04004
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04005
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04006
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04007
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04008
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04009
         ST    R7,SAVE7RG5                                               04010
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     04011
         L     R7,SAVE7RG5                                               04012
         B     CHGWRAS                                                   04013
CHGWRASX DS    0H                                                        04014
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       04015
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    04016
CHGWRAS  DS    0H                                                        04017
         ST    R5,R5HXPRT        Save register.                          04018
         L     R5,SAVTRTCS       Point to translation table CSECT.       04019
         USING TRTCSECT,R5                                               04020
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    04021
         DROP  R5                                                        04022
         L     R5,R5HXPRT        Restore register.                       04023
CHASCEND BR    R7                  END OF ROUTINE - RETURN               04024
         SPACE 3                                                         04025
* --------------------------------------------------------- *            04026
*    BAL REGISTER IS R7.                                                 04027
* --------------------------------------------------------- *            04028
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  04029
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          04030
* --------------------------------------------------------- *            04031
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             04032
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               04033
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               04034
         AR    R5,R2               ADD TO BYTE COUNT                     04035
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              04036
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           04037
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   04038
ADDCNOOV DS    0H                                                        04039
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        04040
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        04041
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               04042
* --------------------------------------------------------- *            04043
*    BAL REGISTER IS R7.                                                 04044
* --------------------------------------------------------- *            04045
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            04046
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              04047
* --------------------------------------------------------- *            04048
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          04049
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04050
         BE    MOVEHI09                                                  04051
         MVC   0(4,R3),0(R2)                                             04052
         B     MOVEHIEN                                                  04053
         LA    R2,1(,R2)                                                 04054
         LA    R3,1(,R3)                                                 04055
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04056
         BE    MOVEHI08                                                  04057
         MVC   0(3,R3),0(R2)                                             04058
         B     MOVEHIEN                                                  04059
         LA    R2,1(,R2)                                                 04060
         LA    R3,1(,R3)                                                 04061
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04062
         BE    MOVEHI07                                                  04063
         MVC   0(2,R3),0(R2)                                             04064
         B     MOVEHIEN                                                  04065
         LA    R2,1(,R2)                                                 04066
         LA    R3,1(,R3)                                                 04067
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04068
         BE    MOVEHIEN                                                  04069
         MVC   0(1,R3),0(R2)                                             04070
MOVEHIEN BR    R7                                                        04071
* --------------------------------------------------------- *            04072
*    BAL REGISTER IS R7.                                                 04073
* --------------------------------------------------------- *            04074
****                                                                     04075
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             04076
****                                                                     04077
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 04078
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    04079
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      04080
****                      THEN BACK SPACE FILE OVER TAPE MARK.           04081
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         04082
****                                                                     04083
* --------------------------------------------------------- *            04084
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     04085
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04086
         EXCP  INIOB          READ                                       04087
         WAIT  ECB=INECB      WAIT FOR READ                              04088
         TM    INCSW+4,X'01'  WAS TM READ?                               04089
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               04090
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                04091
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  04092
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04093
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         04094
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                04095
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04096
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 04097
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                04098
         SR    R2,R3                 R2=ACTUAL LENGTH READ               04099
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS            04100
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           04101
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      04102
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          04103
* ------------------------------------------------------------------*    04104
*    Call the LABELCHK program and get the returns.                 *    04105
* ------------------------------------------------------------------*    04106
         L     R15,LABCHENT       Get entry point of called program      04107
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        04108
         LA    R1,PARMFLGS        Point R1 to parm flags.                04109
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    04110
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         04111
         BALR  R14,R15                 Do CALL.                          04112
         ST    R2,SAVELBCK             Address of returned user area     04113
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    04114
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           04115
*                                 A call to LABCHECK overlays INAREA,    04116
*                                 so if a LABCHECK routine alters        04117
*                                 a label, the alteration will be        04118
*                                 written out to the output tapes.       04119
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     04120
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    04121
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   04122
         BO    CLOSMALL           Yes. Close all files and finish up.    04123
* ------------------------------------------------------------------*    04124
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             04125
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       04126
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          04127
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         04128
         TM    ISLBLFLG,X'02'                                            04129
         BO    LBDQLABL                                                  04130
*                             NORMALLY WITHOUT CHANGING ANYTHING.        04131
*                             BUT IF IT IS A DATA FILE,                  04132
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   04133
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          04134
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04135
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            04136
         EXCP  INIOB          DO THIS EXCP                               04137
         WAIT  ECB=INECB      WAIT FOR READ                              04138
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04139
         BNE   LBDQINER       NO -- ERROR                                04140
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04141
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04142
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             04143
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     04144
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         04145
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04146
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      04147
         EXCP  INIOB          DO THIS EXCP                               04148
         WAIT  ECB=INECB      WAIT FOR READ                              04149
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04150
         BNE   LBDQINER       NO -- ERROR                                04151
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04152
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04153
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          04154
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04155
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     04156
         EXCP  INIOB          DO THIS EXCP                               04157
         WAIT  ECB=INECB      WAIT FOR READ                              04158
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04159
         BNE   LBDQINER       NO -- ERROR                                04160
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04161
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04162
LBDQREND BR    R7                                                        04163
* --------------------------------------------------------- *            04164
*    BAL REGISTER IS R7.                                                 04165
* --------------------------------------------------------- *            04166
****                                                                     04167
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        04168
****                                                                     04169
* --------------------------------------------------------- *            04170
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       04171
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04172
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04173
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     04174
         ST    R5,R5HXPRT        Save register.                          04175
         L     R5,SAVTRTCS       Point to translation table CSECT.       04176
         USING TRTCSECT,R5                                               04177
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04178
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04179
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04180
         B     HEXPRNXX          Bypass Hex Print from external labels   04181
*                                                                        04182
HEXPRNEX DS    0H                Hex Print from External Label Input     04183
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04184
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04185
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      04186
         ST    R5,R5HXPRT        Save register.                          04187
         L     R5,SAVTRTCS       Point to translation table CSECT.       04188
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04189
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04190
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04191
         L     R2,=F'80'         We know to print exactly 80 bytes.      04192
         B     MOVESIZ1          Now go print them.                      04193
*                                                                        04194
HEXPRNXX DS    0H                                                        04195
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      04196
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           04197
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           04198
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   04199
MOVESIZ1 DS    0H                                                        04200
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04201
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04202
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04203
         EX    R2,MOVRULER         PUT IN HEX RULER                      04204
         PUT   SYSPRINT,LINE                                             04205
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04206
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04207
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     04208
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04209
         B     HEXEN000            and continue to print.                04210
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04211
HEXEN000 DS    0H                                                        04212
         TM    PARMFLG5,X'80'      Is ASCII on?                          04213
         BZ    HEXEN001            No. Use EBCDIC printables.            04214
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            04215
         B     HEXENSK1                                                  04216
HEXEN001 DS    0H                                                        04217
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04218
HEXENSK1 DS    0H                                                        04219
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04220
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04221
         PUT   SYSPRINT,LINE                                             04222
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04223
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     04224
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04225
         B     HEXEN002            and continue to print.                04226
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04227
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04228
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04229
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04230
         PUT   SYSPRINT,LINE                                             04231
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04232
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04233
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04234
         B     HEXEN003            and continue to print.                04235
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04236
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04237
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04238
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04239
         PUT   SYSPRINT,LINE                                             04240
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04241
         B     HEXPREND                                                  04242
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04243
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04244
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04245
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04246
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             04247
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04248
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04249
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04250
HEXPREND DS    0H                                                        04251
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04252
NOHEXPRO DS    0H                                                        04253
         L     R5,R5HXPRT                                                04254
         DROP  R5                                                        04255
         BR    R7             RETURN TO CALLER                           04256
* --------------------------------------------------------- *            04257
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  04258
         EJECT                                                           04259
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04260
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04261
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04262
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04263
FUL2ZERO DC    2F'0'                                                     04264
IOB01    DC    X'02000000'                                               04265
IOB02    DC    X'00010000'                                               04266
PL4NO3   DC    PL4'3'                                                    04267
BLOKCNTP DC    F'0'                                                      04268
FILECNTP DC    F'1'                                                      04269
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04270
TOTBYH   DC    F'0'                                                      04271
TOTBYL   DC    F'0'                                                      04272
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04273
PRVBYH   DC    F'0'                                                      04274
PRVBYL   DC    F'0'                                                      04275
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04276
DBINFH   DC    F'0'                                                      04277
DBINFL   DC    F'0'                                                      04278
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04279
DBINH    DC    F'0'                                                      04280
DBINL    DC    F'0'                                                      04281
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04282
LABINH   DC    F'0'                                                      04283
LABINL   DC    F'0'                                                      04284
WORKA    DC    D'0'                                                      04285
WORKL    DC    D'0'                                                      04286
WORKP    DC    D'0'                                                      04287
SAV01MLT DC    D'0'                                                      04288
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04289
HEXSAVE  DS    3F                    Register save for HEX macro         04290
BLOKCNT  DC    F'0'                                                      04291
FILECNT  DC    F'1'                                                      04292
LABELCNT DC    F'0'                                                      04293
SAVUNIT  DC    CL4' '                                                    04294
         DC    CL1' '         Need this to absorb blank from HEX macro   04295
SAVDDN   DC    CL5' '                                                    04296
SAVVOLSR DC    CL6' '                                                    04297
SAVBYTES DC    X'0000'                                                   04298
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04299
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04300
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04301
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04302
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04303
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04304
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04305
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04306
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04307
*              X'01'          TAPE IS SL                                 04308
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04309
*              X'01'          Hex printing from EXTLBLIN.                04310
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04311
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04312
*                             INPUT TAPE. X'01' IS OFF.                  04313
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04314
*                             EXTERNAL FILE                              04315
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04316
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04317
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04318
*                             THIS MEANS EOF OF THE LABADDIN FILE        04319
*              X'10'          FINISHED FIXING LABELS                     04320
RESLTMWF DC    X'00'                                                     04321
*              X'01'          CAME FROM RESETIN FOR LABADDIN             04322
**** ----- LABELCHK -------------------->>>>  Passed area, below         04323
*                                                                        04324
LCHKPASS DS    0H                                                        04325
*                                                                        04326
INAREAX  DC    CL80' '        Read labels into here.                     04327
         DC    CL40' '        Padding for possible overflow.             04328
* --------------------------------------------------------- *            04329
*                                                                        04330
*                                                                        04331
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04332
*              X'00'          DATA IS NOT A LABEL                        04333
*              X'01'          DATA IS A LABEL                            04334
*              X'02'          DATA IS AN ASCII LABEL                     04335
*                                                                        04336
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04337
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04338
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04339
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04340
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04341
*              X'01'          LABLDUMP DD IS OPEN                        04342
*              X'02'          SYSIN    DD IS OPEN                        04343
*              X'04'          LABADDIN DD IS OPEN                        04344
L80FLAG  DC    X'00'                                                     04345
*              X'01'          LAST DATA WAS 80 BYTE RECORD               04346
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    04347
*              X'01'          HDR1 HAS BEEN SEEN                         04348
*              X'02'          HDR2 HAS BEEN SEEN                         04349
*              X'04'          VOL1 HAS BEEN SEEN                         04350
*              X'08'          HDR1 IS FROM AN INITTED TAPE               04351
*              X'10'          EOF1 HAS BEEN SEEN                         04352
*              X'20'          EOF2 HAS BEEN SEEN                         04353
*              X'40'          EOV1 HAS BEEN SEEN                         04354
*              X'80'          EOV2 HAS BEEN SEEN                         04355
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    04356
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           04357
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04358
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          04359
CLOSMFLG DC    X'00'          If X'01' then close all open files         04360
* --------------------------                                             04361
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04362
*              X'01'          WE ARE IN A HDR GROUP                      04363
*              X'02'          WE ARE IN A EOF GROUP                      04364
*              X'04'          WE ARE IN A EOV GROUP                      04365
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    04366
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    04367
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       04368
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     04369
* ---------- *                                                           04370
* --------------------------------------------------------- *            04371
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        04372
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04373
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04374
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04375
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04376
VOLCHG   DC    C'      '                                                 04377
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        04378
VOLASC   DC    C'      '     ASCII VOLUME                                04379
LCHKPASE EQU   *-LCHKPASS                                                04380
**** ----- LABELCHK -------------------->>>>  Passed area, above         04381
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04382
*              X'01'          ERROR WAS PRESENT                          04383
OUTBYT   DS    0F                                                        04384
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04385
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04386
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04387
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04388
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04389
LTMCNTR  DC    F'0'                                                      04390
LTMBINAD DC    F'0'                                                      04391
LTMCOUNT DC    PL6'0'                                                    04392
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04393
         DC    C'      '                                                 04394
         DC    C'0'                                                      04395
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04396
         DC    C'      '                                                 04397
DWORD    DC    D'0'                                                      04398
QWORD    DS    PL16                                                      04399
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04400
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1             04401
         CNOP  0,8                                                       04402
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                         04403
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                         04404
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                         04405
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04406
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES   04407
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE  04408
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04409
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04410
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04411
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04412
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE      04413
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.      04414
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04415
INECB    DC    F'0'                                                      04416
INIOB    DC    X'02000000'                                               04417
         DC    A(INECB)                                                  04418
INCSW    DC    2F'0'                                                     04419
INCCWPT  DC    A(INCCW)                                                  04420
         DC    A(IN)                                                     04421
         DC    F'0'                                                      04422
         DC    X'00010000'                                               04423
OUTECB   DC    F'0'                                                      04424
OUTIOB   DC    X'02000000'                                               04425
         DC    A(OUTECB)                                                 04426
OUTCSW   DC    2F'0'                                                     04427
OUTCCWPT DC    A(OUTCCW)                                                 04428
OUTDCBPT DC    A(OUT1)                                                   04429
         DC    F'0'                                                      04430
         DC    X'00010000'                                               04431
REWECB   DC    F'0'                                                      04432
REWIOB   DC    X'02000000'                                               04433
         DC    A(REWECB)                                                 04434
REWCSW   DC    2F'0'                                                     04435
REWCCWPT DC    A(REWCCW)                                                 04436
REWDCBPT DC    A(OUT1)                                                   04437
         DC    F'0'                                                      04438
         DC    X'00010000'                                               04439
BK1BECB  DC    F'0'                                                      04440
BK1BIOB  DC    X'02000000'                                               04441
         DC    A(BK1BECB)                                                04442
BK1BCSW  DC    2F'0'                                                     04443
BKBCCWPT DC    A(BK1BCCW)                                                04444
BKBDCBPT DC    A(IN)                                                     04445
         DC    F'0'                                                      04446
         DC    X'00010000'                                               04447
         SPACE 3                                                         04448
DDOCHG   DC    C'     '                                                  04449
DDOUT1   DC    C'OUT1 '                                                  04450
DDOUT2   DC    C'OUT2 '                                                  04451
DDOUT3   DC    C'OUT3 '                                                  04452
DDOUT4   DC    C'OUT4 '                                                  04453
DDOUT5   DC    C'OUT5 '                                                  04454
DDOUT6   DC    C'OUT6 '                                                  04455
DDOUT7   DC    C'OUT7 '                                                  04456
DDOUT8   DC    C'OUT8 '                                                  04457
DDOUT9   DC    C'OUT9 '                                                  04458
DDOUT10  DC    C'OUT10'                                                  04459
DDOUT11  DC    C'OUT11'                                                  04460
DDOUT12  DC    C'OUT12'                                                  04461
DDOUT13  DC    C'OUT13'                                                  04462
DDOUT14  DC    C'OUT14'                                                  04463
DDOUT15  DC    C'OUT15'                                                  04464
DDOUT16  DC    C'OUT16'                                                  04465
FLAGLIT  DC    C' - FLAGS - '                                            04466
* --------------------------                                             04467
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04468
FLAG1    DC    X'00'                                                     04469
OP1      EQU   X'80'                                                     04470
OP2      EQU   X'40'                                                     04471
OP3      EQU   X'20'                                                     04472
OP4      EQU   X'10'                                                     04473
OP5      EQU   X'08'                                                     04474
OP6      EQU   X'04'                                                     04475
OP7      EQU   X'02'                                                     04476
OP8      EQU   X'01'                                                     04477
FLAG2    DC    X'00'                                                     04478
OP9      EQU   X'80'                                                     04479
OP10     EQU   X'40'                                                     04480
OP11     EQU   X'20'                                                     04481
OP12     EQU   X'10'                                                     04482
OP13     EQU   X'08'                                                     04483
OP14     EQU   X'04'                                                     04484
OP15     EQU   X'02'                                                     04485
OP16     EQU   X'01'                                                     04486
FLAG2A   DC    X'00'                                          SBG 03/00  04487
ERR      EQU   X'02'                                                     04488
EOV      EQU   X'01'                                                     04489
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                   04490
FF       EQU   X'FF'                                                     04491
FLAG3    DC    X'00'                                                     04492
FLAG4    DC    X'00'                                                     04493
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04494
* ---------- *                                                           04495
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04496
*              x'01'    Yes.                                             04497
* ---------- *                                                           04498
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04499
*              X'01'    HDR1 HAS BEEN READ IN                            04500
*              X'02'    HDR2 HAS BEEN READ IN                            04501
*              X'04'    VOL1 HAS BEEN READ IN                            04502
*              X'08'    UHL  HAS BEEN READ IN                            04503
*              X'10'    EOF1 HAS BEEN READ IN                            04504
*              X'20'    EOF2 HAS BEEN READ IN                            04505
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04506
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04507
* ---------- *                                                           04508
STRIPFLG DC    X'00'                                                     04509
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04510
DATFLAG  DC    X'00'                                          SBG 03/00  04511
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04512
* --------------------------------------------------------- * SBG 04/00  04513
VOLDD    DC    C'     '                                                  04514
STOR7REG DS    F                                                         04515
TOTB7REG DS    F                                                         04516
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04517
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04518
SAVE13LC DC    3F'0'                                                     04519
SAV45MSG DC    2F'0'                                                     04520
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04521
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04522
         SPACE 3                                                         04523
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04524
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04525
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04526
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04527
LTMCTPAT DC    X'4020202020202020202120'                                 04528
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04529
VOL1LABL DS    0CL80                                                     04530
VOL1LIT  DC    CL4'VOL1'                                                 04531
VOL1SERL DC    CL6' '                                                    04532
VOL1FIL1 DC    CL31' '                                                   04533
VOL1ONER DC    CL10' '                                                   04534
VOL1FIL2 DC    CL29' '                                                   04535
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04536
HDR1INIT DS    0CL80                                                     04537
HDR1ILIT DC    CL4'HDR1'                                                 04538
HDR1IFIL DC    76C'0'                                                    04539
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04540
AVOL1LAB DS    0CL80                                                     04541
AVOL1LIT DC    CL4'VOL1'                                                 04542
AVOL1SER DC    CL6' '                                                    04543
AVOL1ACC DC    CL1' '                                                    04544
AVOL1RS1 DC    CL13' '                                                   04545
AVOL1IMP DC    CL13' '                                                   04546
AVOL1OWN DC    CL14' '                                                   04547
AVOL1RS2 DC    CL28' '                                                   04548
AVOL1LVL DC    CL1'3'                                                    04549
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04550
AHDR1INI DS    0CL80                                                     04551
AHDR1LIT DC    CL4'HDR1'                                                 04552
AHDR1ID1 DC    23C'0'                                                    04553
AHDR1FSN DC    CL4'0001'                                                 04554
AHDR1FSQ DC    CL4'0001'                                                 04555
AHDR1GNM DC    CL4'0001'                                                 04556
AHDR1VNM DC    CL2'00'                                                   04557
AHDR1CRD DC    CL6' 00000'                                               04558
AHDR1EXD DC    CL6' 00000'                                               04559
AHDR1ACC DC    CL1' '                                                    04560
AHDR1BKC DC    CL6'000000'                                               04561
AHDR1OSC DC    CL20'IBMZLA '                                             04562
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04563
MSGCSECT CSECT                                                           04564
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04565
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04566
         DC    CL78' '                                                   04567
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04568
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04569
         DC    CL78' '                                                   04570
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04571
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04572
         DC    CL78' '                                                   04573
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04574
         DC    C'R TAPE COPY OPERATION '                                 04575
         DC    CL58' '                                                   04576
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04577
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04578
         DC    C'A PARM OF INITVOLS.'                                    04579
         DC    CL8' '                                                    04580
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04581
         DC    C'                             MEMBER=         VOLUME= '  04582
         DC    C'                          '                             04583
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04584
         DC    C'                             MEMBER=         VOLUME= '  04585
         DC    C'                          '                             04586
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04587
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04588
         DC    C' MULTIPLE OF 80           '                             04589
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  04590
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  04591
         DC    C' TAPES. '                                               04592
         DC    CL19' '                                                   04593
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04594
         DC    C' IS TREATED AS NL.                                   '  04595
         DC    CL27' '                                                   04596
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04597
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04598
         DC    CL27' '                                                   04599
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04600
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04601
         DC    CL27' '                                                   04602
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04603
         DC    CL6'&HEXDFLM'                                             04604
         DC    C' RECORDS WILL'                                          04605
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04606
         DC    C'SYSIN.'                                                 04607
         DC    CL17' '                                                   04608
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04609
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04610
         DC    C'UT TAPES.                 '                             04611
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04612
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04613
         DC    C' MULTIPLE OF 80           '                             04614
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04615
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04616
         DC    C'IMAGES.                   '                             04617
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04618
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04619
         DC    C'                           '                            04620
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04621
         DC    C'ing a Tape Mark right now.                           '  04622
         DC    C'                          '                             04623
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04624
         DC    C'.  Divide by 3 for the SL file number ***            '  04625
         DC    C'                          '                             04626
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04627
         DC    C'.  Multiply by 3 for the NL file number ***          '  04628
         DC    C'                          '                             04629
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04630
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04631
         DC    C't code PARM=SLLIM.        '                             04632
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04633
         DC    C'TERMINATED '                                            04634
         DC    76C'*'                                                    04635
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04636
         DC    82C'*'                                                    04637
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04638
         DC    C' FOR DDNAME '                                           04639
VOLDDN   DC    C'     '                                                  04640
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04641
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04642
OWNRTID  DC    C'          '                                             04643
OWNRTIDE DC    C'    '                                                   04644
OWNRLIT1 DC    C' FOR DDNAME '                                           04645
OWNRDDO  DC    C'     '                                                  04646
OWNRFIL2 DC    64C' '                                                    04647
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04648
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04649
         DC    C'  '                                                     04650
         DC    C'LTM Number ='                                           04651
LTMRNUM  DC    C'           '                                            04652
         DC    78C' '                                                    04653
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04654
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04655
         DC    69C' '                                         SBG 06/00  04656
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                04657
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                04658
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04659
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04660
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04661
INITSER  DC    C'      '                                      SBG 03/00  04662
INITBLNK DC    76C' '                                         SBG 03/00  04663
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04664
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04665
OUTCFCNT DC    C'XXXXXXXXXX'                                             04666
         DC    C'  Bytes:'                                               04667
OUTCBCNT DC    CL26' '                                                   04668
         DC    C' '                                                      04669
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04670
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04671
         DC    40C'*'                                                    04672
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04673
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04674
         DC    40C'*'                                                    04675
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04676
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04677
         DC    40C'*'                                                    04678
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04679
FILEPBYT DS    0CL44                                                     04680
FILEDFL1 DC    C' '                                                      04681
FILECONT DC    C'          '                                             04682
FILEDFL2 DC    C' '                                                      04683
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04684
         DC    C' BYTES'                                                 04685
FILETBYT DS    0CL44                                                     04686
FILEDFL3 DC    C'    '                                                   04687
FILECUMT DC    C'          '                                             04688
FILEDFL4 DC    C' '                                                      04689
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04690
         DC    8C' '                                                     04691
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04692
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04693
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04694
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04695
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04696
               LSER: XXXXXX '                                 SBG 06/00  04697
         DC    66C' '                                         SBG 06/00  04698
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04699
               ERIAL XXXXXX '                                 SBG 06/00  04700
         DC    66C' '                                         SBG 06/00  04701
         DC    C' '                                                      04702
COPYMODS CSECT                                                           04703
HEXPRTWK DC    CL133' '                                                  04704
         DC    C' '                                                      04705
LINE     DC    CL133' '                                                  04706
         DC    C' '                                                      04707
SAVELINE DC    CL133' '                                                  04708
LINE44   DC    CL44' '                                                   04709
RULERHEX DS    0CL132                                                    04710
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04711
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04712
         DC    C'----1----+----2----+----3----+----4'                    04713
REPLY    DC    C'      '                                                 04714
COPIED   DC    C'COPIED '                                     SBG 03/00  04715
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04716
WRITTEN  DC    C'WRITTEN'                                                04717
READDD   DC    C'READ   '                                                04718
PASSED   DC    C'PASSED '                                                04719
FULLWORK DS    0F                                             SBG 03/00  04720
         DC    H'0'                                           SBG 03/00  04721
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04722
         DC    2F'0'               FILLER                     SBG 05/00  04723
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04724
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04725
* --------------------------------------------------------- * SBG 05/00  04726
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04727
PARMFLG1 DC    X'00'                                                     04728
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04729
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04730
PARMFLG2 DC    X'00'                                                     04731
PARMFLG3 DC    X'00'                                                     04732
PARMFLG4 DC    X'00'                                                     04733
PARMFLG5 DC    X'00'                                                     04734
PARMFLG6 DC    X'00'                                                     04735
PARMFLG7 DC    X'00'                                                     04736
PARMFLG8 DC    X'00'                                                     04737
PARMFLG9 DC    X'00'                                                     04738
PARMFLGA DC    X'00'                                                     04739
PARMFLLN EQU   *-PARMFLGS                                                04740
* --------------------------------------------------------- * SBG 05/00  04741
         DS    0F                                                        04742
STRTVALU DS    0CL(ENDVALUE)                                             04743
         DC    A(ENDVALUE)                                               04744
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04745
*                                  Upon entry to PARMCHEK, contains      04746
*                                  the PARM address from COPYMODS,       04747
*                                  which gets overlaid.                  04748
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04749
*                                  Upon entry to PARMCHEK, contains      04750
*                                  the PARM address from COPYMODS,       04751
*                                  which gets overlaid.                  04752
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04753
*                                  Upon entry to PARMCHEK, contains      04754
*                                  the PARM length from COPYMODS,        04755
*                                  which gets overlaid.                  04756
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04757
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04758
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04759
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04760
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04761
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04762
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04763
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04764
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04765
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04766
         DC    CL7' '              FILLER                                04767
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04768
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04769
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04770
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04771
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04772
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04773
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04774
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04775
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       04776
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04777
TAPEOWN  DC    CL10' '                                                   04778
TAPEOEXT DC    CL4' '                                                    04779
TAPEOASC DC    CL14' '                                                   04780
OVERFLAG DC    X'00'                                                     04781
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04782
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04783
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04784
LIMCHAR  DC    CL10' '                                                   04785
LABCHAR  DC    CL10' '                                                   04786
PRTCHAR  DC    CL10' '                                                   04787
LTMCHAR  DC    CL10' '                                                   04788
ENDVALUE EQU   (*-PARMSLEN)+4                                            04789
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04790
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04791
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04792
* --------------------------------------------------------- *            04793
*              FORMAT OF PARM TABLE                                      04794
*              ONE ENTRY IS 20 BYTES                                     04795
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04796
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04797
*                               X'00' SAYS TURN FLAG ON                  04798
*                               X'10' SET ENTRY AS A DEFAULT             04799
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04800
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04801
*                                WHICH ALLOWS FOR 80 PARMS               04802
*                                THAT DON'T HAVE TO BE                   04803
*                                SEPARATED BY A COMMA.                   04804
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04805
* --------------------------------------------------------- *            04806
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04807
* --------------------------------------------------------- *            04808
         SPACE 3                                                         04809
         LTORG                                                           04810
         SPACE 3                                                         04811
         DS    0D                                             SBG 09/00  04812
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04813
LBNJFCB  DC    44F'0'                                                    04814
         DS    0D                                             SBG 09/00  04815
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04816
LBLJFCB  DC    44F'0'                                                    04817
         DS    0D                                             SBG 05/00  04818
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04819
OUTJFCB  DC    44F'0'                                                    04820
         DS    0D                                             SBG 06/00  04821
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04822
INJFCB   DC    44F'0'                                         SBG 06/00  04823
         SPACE 3                                                         04824
VOLALL   DS    0CL96         16 X 6                                      04825
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04826
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04827
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04828
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04829
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04830
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04831
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04832
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04833
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04834
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04835
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04836
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04837
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04838
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04839
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04840
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04841
VOLALLLN EQU   *-VOLALL                                                  04842
* --------------------------------------------------------- * SBG 05/00  04843
         SPACE 3                                                         04844
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04845
               EXLST=INEXLST                                             04846
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04847
               EXLST=OUTEXLST                                            04848
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04849
               EXLST=OUTEXLST                                            04850
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04851
               EXLST=OUTEXLST                                            04852
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04853
               EXLST=OUTEXLST                                            04854
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04855
               EXLST=OUTEXLST                                            04856
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04857
               EXLST=OUTEXLST                                            04858
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04859
               EXLST=OUTEXLST                                            04860
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04861
               EXLST=OUTEXLST                                            04862
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04863
               EXLST=OUTEXLST                                            04864
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04865
               EXLST=OUTEXLST                                            04866
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04867
               EXLST=OUTEXLST                                            04868
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04869
               EXLST=OUTEXLST                                            04870
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04871
               EXLST=OUTEXLST                                            04872
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04873
               EXLST=OUTEXLST                                            04874
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04875
               EXLST=OUTEXLST                                            04876
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04877
               EXLST=OUTEXLST                                            04878
         ENTRY SYSPRINT                                                  04879
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04880
               BLKSIZE=133                                               04881
         ENTRY LABLDUMP                                                  04882
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04883
               EXLST=LBLEXLST                                            04884
         ENTRY LABADDIN                                                  04885
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04886
               EXLST=LBNEXLST,EODAD=LBLINEND                             04887
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04888
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04889
SAVE2TO3 DC    2F'0'                                                     04890
SAVE3REG DC    F'0'                                                      04891
SAVE7BA1 DC    F'0'                                                      04892
SAVE7REG DC    F'0'                                                      04893
SAVE7BAL DC    F'0'                                                      04894
SAVE7RG1 DC    F'0'                                                      04895
SAVE7RG2 DC    F'0'                                                      04896
SAVE7RG3 DC    F'0'                                                      04897
SAVE7RG4 DC    F'0'                                                      04898
SAVE7RG5 DC    F'0'                                                      04899
R5HXPRT  DC    F'0'                                                      04900
R7HXPRT  DC    F'0'                                                      04901
SAVTRTCS DC    F'0'                                                      04902
ENTRYPT  DC    F'0'                                                      04903
LABCHENT DC    F'0'                                                      04904
PRTLBENT DC    F'0'                                                      04905
PARMSAVE DC    F'0'                                                      04906
PARMADDR DC    F'0'                                                      04907
USERSAVE DC    F'0'                                                      04908
SAVELBCK DC    F'0'                                                      04909
         DC    CL4' '                                                    04910
HDR1SAV  DC    CL80' '                                                   04911
HDR2SAV  DC    CL80' '                                                   04912
UHL1SAV  DC    CL80' '                                                   04913
UHL2SAV  DC    CL80' '                                                   04914
UHL3SAV  DC    CL80' '                                                   04915
UHL4SAV  DC    CL80' '                                                   04916
UHL5SAV  DC    CL80' '                                                   04917
UHL6SAV  DC    CL80' '                                                   04918
UHL7SAV  DC    CL80' '                                                   04919
UHL8SAV  DC    CL80' '                                                   04920
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04921
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      04922
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04923
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04924
TRTCSECT CSECT                                                           04925
* ------------------------------------------------------------------- *  04926
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    *  04927
*   (and possibly other places) in synchronization with this CSECT.   *  04928
* ------------------------------------------------------------------- *  04929
TRTBL0   DS    0D                                                        04930
         DC    XL16'40404040404040404040404040404040'                    04931
         DC    XL16'40404040404040404040404040404040'                    04932
         DC    XL16'40404040404040404040404040404040'                    04933
         DC    XL16'40404040404040404040404040404040'                    04934
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04935
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04936
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04937
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04938
         DC    XL16'40818283848586878889404040404040'                    04939
         DC    XL16'40919293949596979899404040404040'                    04940
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04941
         DC    XL16'40404040404040404040404040404040'                    04942
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04943
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04944
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04945
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04946
TRTBL1   DS    0D                                                        04947
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04948
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04949
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04950
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04951
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04952
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04953
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04954
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04955
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04956
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04957
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04958
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04959
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04960
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04961
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04962
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04963
TRTBL2   DS    0D                                                        04964
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04965
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04966
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04967
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04968
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04969
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04970
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04971
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04972
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04973
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04974
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04975
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04976
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04977
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04978
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04979
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04980
TRTE2A   DS    0D                                                        04981
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04982
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04983
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    04984
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    04985
         DC    XL16'20414243444546474849A22E3C282B7C'                    04986
         DC    XL16'2651525354555657585921242A293B5E'                    04987
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    04988
         DC    XL16'707172737475767778603A2340273D22'                    04989
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    04990
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    04991
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    04992
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    04993
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    04994
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    04995
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    04996
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    04997
TRTA2E   DS    0D                                                        04998
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04999
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    05000
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05001
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05002
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05003
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05004
         DC    XL16'79818283848586878889919293949596'                    05005
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    05006
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    05007
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    05008
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    05009
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    05010
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    05011
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    05012
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    05013
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    05014
TRTASPRT DS    0D                                                        05015
         DC    XL16'40404040404040404040404040404040'                    05016
         DC    XL16'40404040404040404040404040404040'                    05017
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05018
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05019
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05020
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05021
         DC    XL16'40818283848586878889919293949596'                    05022
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    05023
         DC    XL16'40404040404040404040404040404040'                    05024
         DC    XL16'40404040404040404040404040404040'                    05025
         DC    XL16'40404040404040404040404040404040'                    05026
         DC    XL16'40404040404040404040404040404040'                    05027
         DC    XL16'40404040404040404040404040404040'                    05028
         DC    XL16'40404040404040404040404040404040'                    05029
         DC    XL16'40404040404040404040404040404040'                    05030
         DC    XL16'40404040404040404040404040404040'                    05031
         EJECT                                                           05032
JFCBLK   DSECT                                                           05033
         IEFJFCBN LIST=YES                                               05034
COPYMODS CSECT                                                           05035
INAREA   DS    CL65535                                        SBG 03/00  05036
#PAN$AUD CSECT                                                           05037
$PAN#AUD DC    CL30'LEVEL 075 COPYMODS  01/01/04 '                       05038
         END                                                             05039
*          PRINT OPTION LIST   AT LEVEL 075 AS OF 01/01/04               05040
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 05041
**************************************************************           05042
**************************************************************           05043
**                                                          **           05044
**                                                          **           05045
**  MODULE: COPYMOPT                                        **           05046
**                                                          **           05047
**                                                          **           05048
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           05049
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           05050
**            PROGRAM.                                      **           05051
**                                                          **           05052
**                                                          **           05053
**************************************************************           05054
**************************************************************           05055
         EJECT                                                           05056
         YREGS                                                           05057
COPYMOPT CSECT                                                           05058
         USING *,R15                                          SBG 03/00  05059
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     05060
         B     EYECATCH                                       SBG 03/00  05061
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  05062
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   05063
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  05064
SAVEAREA DC    18F'0'                                                    05065
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  05066
         SAVE  (14,12)                                                   05067
         LR    R5,R1          SAVE PASSED QUANTITY                       05068
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05069
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05070
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05071
         LR    R13,R1               NEW SAVE AREA ADDRESS                05072
         DROP  R15                                                       05073
* -----                       SET UP TWO BASE REGISTERS                  05074
         USING COPYMOPT,R12,R11                                          05075
         LR    R12,R15                                                   05076
         LA    R11,4095(,R12)                                            05077
         LA    R11,1(,R11)                                               05078
         LR    R1,R5          RESTORE PARM POINTER                       05079
OPTMOVE  DS    0H                                                        05080
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           05081
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       05082
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       05083
         OPEN  (SYSPRINT,OUTPUT)                                         05084
         MVC   LINE(133),LINE-1       CLEAR LINE                         05085
         MVC   LINE(133),DISPLINH                                        05086
         PUT   SYSPRINT,LINE                                             05087
         MVC   LINE(133),LINE-1       CLEAR LINE                         05088
         MVC   LINE(133),DISPLINO                                        05089
         PUT   SYSPRINT,LINE                                             05090
         MVC   LINE(133),LINE-1       CLEAR LINE                         05091
         PUT   SYSPRINT,LINE                                             05092
         BAL   R7,FILLOPTS                                               05093
         MVC   LINE(133),LINE-1       CLEAR LINE                         05094
         MVC   LINE(133),DISPOP02                                        05095
         PUT   SYSPRINT,LINE                                             05096
         MVC   LINE(133),LINE-1       CLEAR LINE                         05097
         MVC   LINE(133),DISPOP01                                        05098
         PUT   SYSPRINT,LINE                                             05099
         MVC   LINE(133),LINE-1       CLEAR LINE                         05100
         MVC   LINE(133),DISPOP03                                        05101
         PUT   SYSPRINT,LINE                                             05102
         MVC   LINE(133),LINE-1       CLEAR LINE                         05103
         MVC   LINE(133),DISPHEXM                                        05104
         PUT   SYSPRINT,LINE                                             05105
         MVC   LINE(133),LINE-1       CLEAR LINE                         05106
         PUT   SYSPRINT,LINE                                             05107
         CLOSE (SYSPRINT)                                                05108
* ----------------------------------------------------------------- *    05109
THEEND   EQU   *                                                         05110
THEEND1  DS    0H                                                        05111
         L     R13,4(,R13)                                               05112
         RETURN (14,12),RC=0                                             05113
         EJECT                                                           05114
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    05115
* ----------------------------------------------------------------- *    05116
*    BAL REGISTER IS R7.                                            *    05117
* ------------------------------------------------------------------*    05118
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            05119
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        05120
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        05121
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     05122
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  05123
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        05124
         BE    FILOPEND                                                  05125
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            05126
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                05127
         BZ    FILLZER                                                   05128
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    05129
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05130
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05131
         BCT   R4,FILLOOP             LOOP BACK                          05132
         B     FILNEXTB                                                  05133
FILLZER  DS    0H                                                        05134
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   05135
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05136
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05137
         BCT   R4,FILLOOP             LOOP BACK                          05138
FILNEXTB DS    0H                                                        05139
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  05140
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      05141
         PUT   SYSPRINT,LINE                                             05142
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    05143
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     05144
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     05145
FILOPEND BR    R7                                                        05146
* ----------------------------------------------------------------- *    05147
* ----------  CONSTANTS  ------------------------------------------ *    05148
         LTORG                                                           05149
         DS    0F                                                        05150
PARMTBIN DC    X'00000000000000000000'                                   05151
PARMWORK DC    X'00000000000000000000'                                   05152
PARMZERO DC    X'00000000000000000000'                                   05153
OPTABLE  DS    0D                                                        05154
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       05155
OPTENTLN EQU   *-OPTABLE                                                 05156
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       05157
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       05158
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       05159
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       05160
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       05161
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       05162
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       05163
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       05164
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       05165
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       05166
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       05167
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       05168
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       05169
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       05170
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       05171
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       05172
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       05173
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       05174
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       05175
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       05176
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       05177
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       05178
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       05179
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       05180
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       05181
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       05182
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       05183
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       05184
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       05185
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       05186
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       05187
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       05188
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       05189
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       05190
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       05191
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       05192
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       05193
         DC    X'00000000040000000000',C'          ',C'NOENABLT  '       05194
         DC    X'00000000080000000000',C'WRTLTM    ',C'          '       05195
         DC    X'00000000001000000000',C'SECOFF    ',C'NOSECOFF  '       05196
         DC    X'00000000002000000000',C'          ',C'          '       05197
         DC    X'00000000004000000000',C'          ',C'          '       05198
         DC    X'00000000008000000000',C'          ',C'          '       05199
         DC    X'00000000000100000000',C'          ',C'          '       05200
         DC    X'00000000000200000000',C'          ',C'          '       05201
         DC    X'00000000000400000000',C'          ',C'          '       05202
         DC    X'00000000000800000000',C'          ',C'          '       05203
         DC    X'00000000000010000000',C'          ',C'          '       05204
         DC    X'00000000000020000000',C'          ',C'          '       05205
         DC    X'00000000000040000000',C'          ',C'          '       05206
         DC    X'00000000000080000000',C'          ',C'          '       05207
         DC    X'00000000000001000000',C'          ',C'          '       05208
         DC    X'00000000000002000000',C'          ',C'          '       05209
         DC    X'00000000000004000000',C'          ',C'          '       05210
         DC    X'00000000000008000000',C'          ',C'          '       05211
         DC    X'00000000000000100000',C'          ',C'          '       05212
         DC    X'00000000000000200000',C'          ',C'          '       05213
         DC    X'00000000000000400000',C'          ',C'          '       05214
         DC    X'00000000000000800000',C'          ',C'          '       05215
         DC    X'00000000000000010000',C'          ',C'          '       05216
         DC    X'00000000000000020000',C'          ',C'          '       05217
         DC    X'00000000000000040000',C'          ',C'          '       05218
         DC    X'00000000000000080000',C'          ',C'          '       05219
         DC    X'00000000000000001000',C'          ',C'          '       05220
         DC    X'00000000000000002000',C'          ',C'          '       05221
         DC    X'00000000000000004000',C'          ',C'          '       05222
         DC    X'00000000000000008000',C'          ',C'          '       05223
         DC    X'00000000000000000100',C'          ',C'          '       05224
         DC    X'00000000000000000200',C'          ',C'          '       05225
         DC    X'00000000000000000400',C'          ',C'          '       05226
         DC    X'00000000000000000800',C'          ',C'          '       05227
         DC    X'00000000000000000010',C'          ',C'          '       05228
         DC    X'00000000000000000020',C'          ',C'          '       05229
         DC    X'00000000000000000040',C'          ',C'          '       05230
         DC    X'00000000000000000080',C'          ',C'          '       05231
         DC    X'00000000000000000001',C'          ',C'          '       05232
         DC    X'00000000000000000002',C'          ',C'          '       05233
         DC    X'00000000000000000004',C'          ',C'          '       05234
         DC    X'00000000000000000008',C'          ',C'          '       05235
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   05236
*  -----                                                                 05237
DISPAREA DS    0D                                                        05238
DISPLINH DS    0CL133                                                    05239
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  05240
         DC    C'LEVEL 075 - OPTIONS DISPLAY                          '  05241
         DC    27C' '                                                    05242
DISPLINO DS    0CL133                                                    05243
         DC    C'-    OPTIONS IN EFFECT:                              '  05244
         DC    C'                                                     '  05245
         DC    27C' '                                                    05246
DISPOP01 DS    0CL133                                                    05247
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  05248
         DC    C'LIMIT=   SYSIN CARD                                  '  05249
         DC    27C' '                                                    05250
DISPOP02 DS    0CL133                                                    05251
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  05252
         DC    C'LIMIT=   SYSIN CARD                                  '  05253
         DC    27C' '                                                    05254
DISPOP03 DS    0CL133                                                    05255
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  05256
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  05257
         DC    27C' '                                                    05258
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco'  05259
         DC    C'rds before they have been changed by the COPYMODS pro'  05260
         DC    C'gram.                     '                             05261
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05262
               BLKSIZE=133                                               05263
         DC    C' '                                                      05264
LINE     DS    CL133                                                     05265
DISPLIN1 DS    0CL133                                                    05266
         DC    C'0    '                                                  05267
DISPL1A  DC    8CL12' '                                                  05268
         DC    32C' '                                                    05269
DISPLIN2 DS    0CL133                                                    05270
         DC    C'     '                                                  05271
DISPL2A  DC    8CL12' '                                                  05272
         DC    32C' '                                                    05273
DISPLIN3 DS    0CL133                                                    05274
         DC    C'     '                                                  05275
DISPL3A  DC    8CL12' '                                                  05276
         DC    32C' '                                                    05277
DISPLIN4 DS    0CL133                                                    05278
         DC    C'     '                                                  05279
DISPL4A  DC    8CL12' '                                                  05280
         DC    32C' '                                                    05281
DISPLIN5 DS    0CL133                                                    05282
         DC    C'     '                                                  05283
DISPL5A  DC    8CL12' '                                                  05284
         DC    32C' '                                                    05285
DISPLIN6 DS    0CL133                                                    05286
         DC    C'     '                                                  05287
DISPL6A  DC    8CL12' '                                                  05288
         DC    32C' '                                                    05289
DISPLIN7 DS    0CL133                                                    05290
         DC    C'     '                                                  05291
DISPL7A  DC    8CL12' '                                                  05292
         DC    32C' '                                                    05293
DISPLIN8 DS    0CL133                                                    05294
         DC    C'     '                                                  05295
DISPL8A  DC    8CL12' '                                                  05296
         DC    32C' '                                                    05297
DISPLIN9 DS    0CL133                                                    05298
         DC    C'     '                                                  05299
DISPL9A  DC    8CL12' '                                                  05300
         DC    32C' '                                                    05301
DISPLINA DS    0CL133                                                    05302
         DC    C'     '                                                  05303
DISPLAA  DC    8CL12' '                                                  05304
         DC    32C' '                                                    05305
         SPACE 3                                                         05306
         EJECT                                                           05307
@PAN$AUD CSECT                                                           05308
$PAN#AUD DC    CL30'LEVEL 075 COPYMOPT  01/01/04 '                       05309
         END                                                             05310
*          PARM CHECKER        AT LEVEL 1.6 AS OF 01/01/04               05311
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       05312
**************************************************************           05313
**************************************************************           05314
**                                                          **           05315
**                                                          **           05316
**  MODULE:   PARMCHEK - Set option bits, based on          **           05317
**                       keywords coded in PARM and/or      **           05318
**                       SYSIN.                             **           05319
**                                                          **           05320
**  AUTHOR:   Sam Golob                                     **           05321
**                                                          **           05322
**  PURPOSE:  This program converts keywords in a PARM      **           05323
**            field or in SYSIN, into bit settings that     **           05324
**            a program can use, to control options in      **           05325
**            its execution.                                **           05326
**                                                          **           05327
**            This program can be run as a subroutine       **           05328
**            which is called, to set up to 10 bytes of     **           05329
**            bits, up to 80 bits in all, based on the      **           05330
**            settings of keywords in a table.              **           05331
**                                                          **           05332
**            This routine makes it easy to put a lot of    **           05333
**            options into a program.  If you want to       **           05334
**            add options, or use other words in PARM or    **           05335
**            SYSIN to call the same options, all you       **           05336
**            have to do, is to change or add entries in    **           05337
**            a table.  There is no extra coding to be      **           05338
**            done.                                         **           05339
**                                                          **           05340
**            Keywords in the PARM or SYSIN areas do not    **           05341
**            have to be delimited by commas or spaces or   **           05342
**            anything else.  Although for clarity, I'd     **           05343
**            certainly recommend that you put commas or    **           05344
**            spaces between the PARM field keywords.       **           05345
**            Therefore, I'd also advise that when you      **           05346
**            design keywords to put into the table to      **           05347
**            designate options, that you make them         **           05348
**            significantly different from each other.      **           05349
**            There is a length field in the table,         **           05350
**            however, which gives you some more control    **           05351
**            in this area.                                 **           05352
**                                                          **           05353
**            From a calling program, it would be possible  **           05354
**            to call PARMCHEK twice, against two different **           05355
**            tables, to set 20 bytes of options, instead   **           05356
**            of 10 bytes of options, and so forth...       **           05357
**                                                          **           05358
**            This gives you the opportunity of having      **           05359
**            a tremendous number of options, set by        **           05360
**            keywords, in your program, without using      **           05361
**            up valuable "base register space" for such    **           05362
**            coding.                                       **           05363
**                                                          **           05364
**                                                          **           05365
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05366
**            from a table, based on assembled defaults.    **           05367
**            These default settings are then overridden    **           05368
**            from a scan of words in the PARM field of     **           05369
**            the EXEC card.                                **           05370
**                                                          **           05371
**            If a SYSIN DD card is present, its cards      **           05372
**            are scanned against the table entries, to     **           05373
**            further override the bit settings which       **           05374
**            have already been done by the defaults and    **           05375
**            the PARM field.                               **           05376
**                                                          **           05377
**            The main purpose of this routine is to set    **           05378
**            bits from words.  However, if you need some   **           05379
**            keywords with values, such as (for example)   **           05380
**            FILELIMIT=69  in your program, you may use    **           05381
**            the "user code" section of this program       **           05382
**            to code that stuff in, so that these special  **           05383
**            keywords can be coded in SYSIN.               **           05384
**                                                          **           05385
**            Two sample keywords expecting number values:  **           05386
**            FILELIMIT=nnn  or                             **           05387
**            LABELIMIT=mmm                                 **           05388
**            have been coded here, just to illustrate      **           05389
**            how the user coding might work.               **           05390
**                                                          **           05391
**            Search order is:  Defaults, then PARM in      **           05392
**            the EXEC card, then SYSIN.                    **           05393
**                                                          **           05394
**            As coded here, the FILELIMIT= and             **           05395
**            LABELIMIT= keywords in SYSIN have to be in    **           05396
**            column 1 of the SYSIN cards, and if these     **           05397
**            "special keywords" are present in a card,     **           05398
**            the rest of that card is not scanned for      **           05399
**            the table keywords.                           **           05400
**                                                          **           05401
**            As coded here, the PARMTABL is a separate     **           05402
**            CSECT, addressable by V-CONs from the         **           05403
**            PARMCHEK CSECT.                               **           05404
**                                                          **           05405
**            It would probably be best to invoke the       **           05406
**            PARMCHEK program as a separate CSECT which    **           05407
**            is linkedited with the calling program,       **           05408
**            but it may be LOADed and BALR 14,15 'ed to,   **           05409
**            and run as a separate program.  (See the      **           05410
**            PARMDRVR program that is included in this     **           05411
**            package, as a sample.)                        **           05412
**                                                          **           05413
**    Input:  A fullword containing the address of the      **           05414
**            saved Register 1 from the calling program,    **           05415
**            which points to its parms.                    **           05416
**                                                          **           05417
**            A table containing parms, which is coded      **           05418
**            according to the following rules, and which   **           05419
**            has entries of 20 bytes apiece.               **           05420
**                                                          **           05421
**      FORMAT OF THE PARM TABLE                            **           05422
**                                                          **           05423
**        ONE ENTRY IS 20 BYTES                             **           05424
**                                                          **           05425
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           05426
**                         (This is the word which          **           05427
**                          controls the bit settings.)     **           05428
**                         (up to and including 8 bytes)    **           05429
**                                                          **           05430
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           05431
**                         X'00' says turn bit flag(s) ON   **           05432
**                         X'10' set entry as a DEFAULT     **           05433
**                                                          **           05434
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           05435
**                         (This is the word searched on,   **           05436
**                          in the EXEC PARM and SYSIN      **           05437
**                          areas.)                         **           05438
**                                                          **           05439
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           05440
**                          this keyword.                   **           05441
**                                                          **           05442
**                         These are the bits which the     **           05443
**                          keyword will flip on (or off).  **           05444
**                                                          **           05445
**                         You may control multiple bits    **           05446
**                          using one keyword.  All bits    **           05447
**                          controlled by this keyword      **           05448
**                          are coded in this entry field.  **           05449
**                                                          **           05450
**          The table is ended by an entry of X'FF's.       **           05451
**                                                          **           05452
**                                                          **           05453
**    Output:  R1 points to a 10-byte area containing the   **           05454
**             80 switch settings.                          **           05455
**                                                          **           05456
**             Sample code to use PARMCHEK output:          **           05457
**                                                          **           05458
**                      ST    R1,PARMADDR                   **           05459
**                      USING PARMFLGS,R1                   **           05460
**             *                                            **           05461
**             PARMFLGS DSECT                               **           05462
**             PARMFLG1 DS    X                             **           05463
**             PARMFLG2 DS    X                             **           05464
**             PARMFLG3 DS    X                             **           05465
**             PARMFLG4 DS    X                             **           05466
**             PARMFLG5 DS    X                             **           05467
**             PARMFLG6 DS    X                             **           05468
**             PARMFLG7 DS    X                             **           05469
**             PARMFLG8 DS    X                             **           05470
**             PARMFLG9 DS    X                             **           05471
**             PARMFLGA DS    X                             **           05472
**                                                          **           05473
**               then ....                                  **           05474
**                                                          **           05475
**                      TM    PARMFLG2,X'04'                **           05476
**                      BZ    some location                 **           05477
**                        ....                              **           05478
**                                                          **           05479
**             R2 points to the address of a data area      **           05480
**             containing values generated by this          **           05481
**             program.  It's address is at label STRTVALU  **           05482
**             and its length is in the first fullword      **           05483
**             at STRTVALU.                                 **           05484
**                                                          **           05485
**             R2 is accessed in a similar manner to R1.    **           05486
**             See the PARMDRVR program for an example      **           05487
**             illustrating one way in which PARMCHEK       **           05488
**             may be called.                               **           05489
**                                                          **           05490
**                                                          **           05491
**************************************************************           05492
         EJECT                                                           05493
**************************************************************           05494
**                                                          **           05495
**  CHANGE LOG:                                             **           05496
**                                                          **           05497
**    Version 1.1 - Separate Parm Table into different      **           05498
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05499
**                                                          **           05500
**    Version 1.2 - Uppercase keyword before comparing      **           05501
**       against the table entries.  This assumes you       **           05502
**       will code your table with all uppercase keyword    **           05503
**       entries.                                           **           05504
**                                                          **           05505
**    Version 1.3 - Option for requiring commas or spaces   **           05506
**       as delimiters between parms.  Comment out one      **           05507
**       instruction to require delimiters.                 **           05508
**                                                          **           05509
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05510
**                                                          **           05511
**    Version 1.5 - Fitted to COPYMODS Level 075.           **           05512
**                  Ten parm bits instead of five.          **           05513
**                                                          **           05514
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **           05515
**                                                          **           05516
**                                                          **           05517
**************************************************************           05518
**************************************************************           05519
         EJECT                                                           05520
**************************************************************           05521
*  ---------------------------------------------------------------  *    05522
*    This macro is used to display hex values in a printed report.       05523
*  ---------------------------------------------------------------  *    05524
         MACRO                                                           05525
&NAME    HEX   &TO,&LEN,&FROM                                            05526
&NAME    DS    0H                                                        05527
         ST    R4,SAV4HEX                                                05528
         STM   R15,R1,HEXSAVE                                            05529
         LA    R1,&FROM                                                  05530
         LA    R0,&LEN                                                   05531
         LA    R15,&TO                                                   05532
         BAL   R4,HEX                                                    05533
         L     R4,SAV4HEX                                                05534
         LM    R15,R1,HEXSAVE                                            05535
         MEND                                                            05536
         SPACE                                                           05537
**************************************************************           05538
         GBLC  &LLEV                                                     05539
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05540
         GBLA  &HEXDFLA                                                  05541
&LLEV    SETC  '1.6 '                                                    05542
         YREGS                                                           05543
* ------------------------------------------------------------------ *   05544
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05545
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05546
* ------------------------------------------------------------------ *   05547
         ENTRY CARDREAD                                                  05548
         ENTRY PARMCHEK                                                  05549
&HEXDFLA SETA  4                                                         05550
&HEXDFLC SETC  '&HEXDFLA'                                                05551
PARMCHEK CSECT                                                           05552
         USING *,R15                                                     05553
         B     EYECATCH                                                  05554
         DC    C'HEX DUMP '                                              05555
HEXDFLCC DC    C'&HEXDFLC'                                               05556
         DC    C' RECORDS '                                              05557
HEXDFLL  EQU   L'HEXDFLCC                                                05558
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05559
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05560
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05561
         DC    C' - '                                                    05562
         DC    C'PARM INPUT IN SYSIN '                                   05563
         DC    C' - '                                                    05564
         DC    C'LEVEL '                                                 05565
SYSLEV   DC    C'&LLEV'                                                  05566
         DC    C' - '                                                    05567
SYSDAT   DC    C'&SYSDATE'                                               05568
         DC    C'  ',C'&SYSTIME ',C'--- '                                05569
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05570
SAVEAREA DC    18F'0'                                                    05571
EYECATCH DS    0D             ENSURE ALIGNMENT                           05572
         SAVE  (14,12)                                                   05573
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05574
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05575
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05576
         LR    R13,R1               NEW SAVE AREA ADDRESS                05577
         DROP  R15                                                       05578
* -----                       SET UP BASE REGISTERS                      05579
         USING PARMCHEK,R12,R11,R10                                      05580
         LR    R12,R15                                                   05581
         LA    R11,4095(,R12)                                            05582
         LA    R11,1(,R11)                                               05583
         LA    R10,4095(,R11)                                            05584
         LA    R10,1(,R10)                                               05585
*                                                                        05586
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05587
*                                                                        05588
         LR    R6,R2          SAVE USER AREA POINTER                     05589
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05590
         LR    R1,R6          RESTORE PARM POINTER                       05591
         ST    R1,PARMSAVE                                               05592
* ----------------------------------------------------------------- *    05593
TIOTSCAN DS    0H             Determine the presence of Optional         05594
*                             DDNAMES:  SYSIN AND PARMREPT.              05595
* ----->                      OPEN them if there is JCL for them.        05596
* ----------------------------------------------------------------- *    05597
         L     R5,16          R5=CVT                                     05598
         L     R5,0(,R5)      R5=TCB WORDS                               05599
         L     R5,4(,R5)      R5=MY TCB                                  05600
         L     R5,12(,R5)     R5=TIOT                                    05601
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05602
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05603
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05604
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05605
         BNE   TIOTSYSN       NO                                         05606
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05607
         B     TIOTNEXT       CONTINUE                                   05608
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05609
         BNE   TIOTNEXT                                                  05610
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05611
         B     TIOTNEXT                                                  05612
TIOTNEXT SR    R3,R3                                                     05613
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05614
         AR    R5,R3          R5=NEXT DD ENTRY                           05615
         B     TIOTLOOP       GO CHECK IT                                05616
TIOTSEND DS    0H                                                        05617
***********************************************************************  05618
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05619
***********************************************************************  05620
         STM   R14,R2,SAVE1402                                           05621
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05622
         OI    DATE+4,X'0F'                                              05623
         UNPK  DATED,DATE                                                05624
         OI    TIME+3,X'0F'                                              05625
         UNPK  TIMED,TIME                                                05626
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05627
         MVC   HEADDATE(2),DATED                                         05628
         MVI   HEADDATE+2,C'/'                                           05629
         MVC   HEADDATE+3(2),DATED+2                                     05630
         MVI   HEADDATE+5,C'/'                                           05631
         MVC   HEADDATE+6(4),DATED+4                                     05632
         MVC   HEADDATE+12(2),TIMED                                      05633
         MVI   HEADDATE+14,C':'                                          05634
         MVC   HEADDATE+15(2),TIMED+2                                    05635
         MVI   HEADDATE+17,C':'                                          05636
         MVC   HEADDATE+18(2),TIMED+4                                    05637
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05638
         LM    R14,R2,SAVE1402                                           05639
***********************************************************************  05640
         MVC   LEVDATE(8),SYSDAT                                         05641
***********************************************************************  05642
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05643
* ----------------------------------------------------------------- *    05644
INITCONS DS    0H                                                        05645
         ZAP   TOTMLCNT,=P'0'                                            05646
* ----------------------------------------------------------------- *    05647
CHEKPRNT DS    0H                                                        05648
         TM    FLAGSYST,X'01'                                            05649
         BZ    CHEKPREN                                                  05650
         OPEN  (PARMREPT,OUTPUT)                                         05651
         OI    OPENDFLG,X'01'                                            05652
         MVC   PRTLINE,PRTLINE-1                                         05653
         MVC   PRTLINE,MESSAGE1                                          05654
         PUT   PARMREPT,MESSAGE1                                         05655
         MVC   PRTLINE,PRTLINE-1                                         05656
         PUT   PARMREPT,PRTLINE                                          05657
CHEKPREN DS    0H                                                        05658
* ----------------------------------------------------------------- *    05659
* --------------------------------------------------------- *            05660
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05661
*                         PRESENCE OR ABSENCE.                           05662
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05663
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05664
         L     R1,0(,R1)      Get PARM field                             05665
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05666
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05667
         MVC   SAVMSLEN,PARMSLEN                                         05668
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05669
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05670
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05671
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05672
* -----------------------------------------------------------            05673
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05674
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05675
* -----------------------------------------------------------            05676
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05677
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05678
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05679
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05680
         BO    PARMDSET       YES, GO SET IT.                            05681
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05682
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05683
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05684
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05685
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05686
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05687
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05688
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05689
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05690
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05691
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05692
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05693
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05694
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05695
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05696
* ----------------------------------------------------------------- *    05697
SCANPARM DS    0H                                                        05698
         ST    R7,SAVE7BA0                                               05699
         ZAP   PARMLCNT,=P'0'                                            05700
         ZAP   PARMHITS,=P'0'                                            05701
         MVC   PARMSLEN,SAVMSLEN                                         05702
         BAL   R7,PARMLOOP      Now check the PARM field                 05703
         MVC   SAVPHITS,PARMHITS                                         05704
         MVC   SAVCHRCT,PRMCHRCT                                         05705
         MVC   SAVELCNT,PARMLCNT                                         05706
         AP    TOTMHITS,PARMHITS                                         05707
         AP    TOTMLCNT,PARMLCNT                                         05708
         L     R7,SAVE7BA0                                               05709
* ----------------------------------------------------------------- *    05710
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05711
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05712
         OPEN  (SYSIN,INPUT)                                             05713
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05714
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05715
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05716
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05717
NOSYSIN  DS    0H                                                        05718
         B     CARDREND                                                  05719
OPNSYSNE DS    0H                                                        05720
* ----------------------------------------------------------------- *    05721
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05722
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05723
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05724
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05725
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05726
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05727
*              Insert User Code Here for Keywords                        05728
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05729
         GET   SYSIN,CARDIN                                              05730
*                                                                        05731
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05732
* -- >>              <--    before you start the table scan       -->    05733
*                                                                        05734
* ----------------------------------------------------------------- *    05735
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS    05736
         MVC   CARDWORK+1(79),CARDWORK                                   05737
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA      05738
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                        05739
* ----------------------------------------------------------------- *    05740
*      CARDWORK now contains an uppercased version of CARDIN.            05741
* ----------------------------------------------------------------- *    05742
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05743
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05744
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05745
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05746
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05747
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05748
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05749
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05750
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05751
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05752
         CLC   =C'WRITELTMS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05753
         BE    LTMNMGET          PROCESS THIS CARD FOR KEYWORD           05754
         CLC   =C'/*',CARDIN                                             05755
         BE    SYSINEND                                                  05756
*                                                                        05757
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05758
* ----         Resume Checking SYSIN in PARM Table                       05759
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05760
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05761
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05762
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05763
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05764
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05765
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05766
         L     R1,TOTCHRCT                                               05767
         A     R1,PRMCHRCT                                               05768
         ST    R1,TOTCHRCT                                               05769
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05770
         ZAP   PARMHITS,=P'0'                                            05771
         ZAP   PARMLCNT,=P'0'                                            05772
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05773
         AP    TOTMHITS,PARMHITS                                         05774
         AP    TOTMLCNT,PARMLCNT                                         05775
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05776
         B     CARDREAD        GET ANOTHER CARD                          05777
* ----                                                                   05778
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05779
*              Handle User Code Here for Keywords                        05780
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05781
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05782
         BE    CARDREAD                 YES. IGNORE CARD                 05783
         MVC   VOLSTG1(6),CARDIN+10                                      05784
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05785
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05786
         B     CARDREAD          GET ANOTHER CARD                        05787
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05788
         BE    CARDREAD                 YES. IGNORE CARD                 05789
         MVC   TAPEOWN(14),CARDIN+10                                     05790
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05791
         B     CARDREAD                                                  05792
FILELGET DS    0H                                                        05793
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05794
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05795
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05796
         BL    CARDREAD          YES. IGNORE.                            05797
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05798
         BH    CARDREAD          YES. IGNORE.                            05799
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05800
         LA    R15,CARDIN+10     STARTING ADDRESS                        05801
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05802
FILELNUM DS    0H                                                        05803
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05804
         C     R15,=A(CARDIN+71) END OF CARD?                            05805
         BH    FILELGNM          YES, GET NUMBER                         05806
         CLI   0(R15),C' '       BLANK HERE?                             05807
         BE    FILELGNM          YES, GET NUMBER                         05808
         B     FILELNUM          NO. STEP UP ONE PLACE                   05809
FILELGNM DS    0H                                                        05810
         SR    R15,R1            HOW BIG IS THE NUMBER                   05811
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05812
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05813
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05814
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05815
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05816
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05817
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05818
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05819
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05820
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05821
FILELCLG DS    0H                                                        05822
         B     CARDREAD                                                  05823
LABELGET DS    0H                                                        05824
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05825
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05826
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05827
         BL    CARDREAD          YES. IGNORE.                            05828
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05829
         BH    CARDREAD          YES. IGNORE.                            05830
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05831
         LA    R15,CARDIN+10     STARTING ADDRESS                        05832
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05833
LABELNUM DS    0H                                                        05834
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05835
         C     R15,=A(CARDIN+71) END OF CARD?                            05836
         BH    LABELGNM          YES, GET NUMBER                         05837
         CLI   0(R15),C' '       BLANK HERE?                             05838
         BE    LABELGNM          YES, GET NUMBER                         05839
         B     LABELNUM          NO. STEP UP ONE PLACE                   05840
LABELGNM DS    0H                                                        05841
         SR    R15,R1            HOW BIG IS THE NUMBER                   05842
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05843
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05844
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05845
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05846
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05847
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05848
LABELCLG DS    0H                                                        05849
         B     CARDREAD                                                  05850
PRINTGET DS    0H                                                        05851
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05852
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05853
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05854
         BL    CARDREAD          YES. IGNORE.                            05855
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05856
         BH    CARDREAD          YES. IGNORE.                            05857
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05858
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05859
         LA    R15,CARDIN+10     STARTING ADDRESS                        05860
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05861
PRINTNUM DS    0H                                                        05862
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05863
         C     R15,=A(CARDIN+71) END OF CARD?                            05864
         BH    PRINTGNM          YES, GET NUMBER                         05865
         CLI   0(R15),C' '       BLANK HERE?                             05866
         BE    PRINTGNM          YES, GET NUMBER                         05867
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05868
PRINTGNM DS    0H                                                        05869
         SR    R15,R1            HOW BIG IS THE NUMBER                   05870
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05871
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05872
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05873
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05874
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05875
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05876
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05877
PRINTCLG DS    0H                                                        05878
         B     CARDREAD                                                  05879
LTMNMGET DS    0H                                                        05880
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05881
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05882
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05883
         BL    CARDREAD          YES. IGNORE.                            05884
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05885
         BH    CARDREAD          YES. IGNORE.                            05886
         OI    PARMFLG5,X'08'    SET WRTLTM OPTION ON                    05887
         LA    R15,CARDIN+10     STARTING ADDRESS                        05888
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05889
LTMNMNUM DS    0H                                                        05890
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05891
         C     R15,=A(CARDIN+71) END OF CARD?                            05892
         BH    LTMNMGNM          YES, GET NUMBER                         05893
         CLI   0(R15),C' '       BLANK HERE?                             05894
         BE    LTMNMGNM          YES, GET NUMBER                         05895
         B     LTMNMNUM          NO. STEP UP ONE PLACE                   05896
LTMNMGNM DS    0H                                                        05897
         SR    R15,R1            HOW BIG IS THE NUMBER                   05898
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05899
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05900
         EX    R15,MVLTMNUM      COPY THE NUMBER TO MESSAGE AREA         05901
         EX    R15,MVLTMCHR      COPY THE NUMBER TO USER PASS AREA       05902
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05903
         ST    R0,LTMNUMB        STORE THE VALUE FOR LATER USE           05904
LTMNMCLG DS    0H                                                        05905
         B     CARDREAD                                                  05906
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05907
*              End of User Code Here for Keywords                        05908
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05909
CHECKEND DS    0H                                                        05910
* -----------------------------------------------------------            05911
SYSINEND DS    0H                                                        05912
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05913
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05914
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05915
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05916
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05917
         L     R1,TOTCHRCT                                               05918
         A     R1,PRMCHRCT         Final totals for last card            05919
         ST    R1,TOTCHRCT                                               05920
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05921
         CLOSE (SYSIN)                                                   05922
         B     CARDREND                                                  05923
CARNOSYS DS    0H                                                        05924
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05925
CARDREND DS    0H                                                        05926
         BAL   R7,SUMMREPT                                               05927
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05928
         BZ    PARMRPEN         NO.  GET OUT.                            05929
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05930
         CLOSE (PARMREPT)                                                05931
PARMRPEN DS    0H                                                        05932
THEEND   DS    0H                                                        05933
         L     R13,4(,R13)                                               05934
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05935
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05936
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05937
         LM    R14,R12,12(R13)                                           05938
         BR    R14                                                       05939
* -----------------------------------------------------------            05940
*        S U B R O U T I N E S                                           05941
* -----------------------------------------------------------            05942
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05943
* -----------------------------------------------------------            05944
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05945
         BNL   PARMFIN        YES - GET OUT                              05946
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05947
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05948
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05949
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05950
*        ------------------------------------------------------------    05951
*--->                    code to require a delimiter (space, etc)        05952
*                        to enable, comment out the next instruction     05953
*        ------------------------------------------------------------    05954
         B     PRMNODLM         comment this line to require delimiter   05955
         TM    PRMFDFLG,X'01'                                            05956
         BO    PRMNFND                                                   05957
PRMNODLM DS    0H                                                        05958
*--->                                                                    05959
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05960
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05961
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05962
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05963
*                                                                        05964
*   If you want to require parm comparisons as case sensitive,           05965
*    then comment out the following instruction....                      05966
*                                                                        05967
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05968
*                                                                        05969
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05970
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05971
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05972
         B     BOPPTBL        INNER LOOP                                 05973
*                                                                        05974
PRMNFND  DS    0H                                                        05975
*--->                 below - Parm Found flagging to require delimiter   05976
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05977
         BE    PRMFDOFF                                                  05978
         CLI   0(R4),C','                                                05979
         BE    PRMFDOFF                                                  05980
         B     PRMFDEND                                                  05981
PRMFDOFF DS    0H                                                        05982
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05983
PRMFDEND DS    0H                                                        05984
*--->                 above - Parm Found flagging to require delimiter   05985
*                                                                        05986
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05987
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05988
*                                                                        05989
         B     PARMLOOP       TRY AGAIN                                  05990
*                                                                        05991
PRMFOUND DS    0H                                                        05992
*                                                                        05993
*--->                 below - Parm Found flagging to require delimiter   05994
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05995
*--->                 above - Parm Found flagging to require delimiter   05996
PRMNOSEP DS    0H                                                        05997
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05998
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05999
         TM    1(R2),X'01'         PARM ON OR OFF?                       06000
         BO    PARMOFF             OFF                                   06001
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     06002
         B     PARMGO                        AND GO ON                   06003
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           06004
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              06005
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        06006
PARMGO   DS    0H                                                        06007
         XR    R5,R5          Clear Work Reg befor IC                    06008
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             06009
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  06010
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   06011
         B     PARMLOOP       LOOK FOR MORE PARMS                        06012
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              06013
*                             COUNT FOR DEBUGGING                        06014
PRMCHEND DS    0H                                                        06015
         BR    R7                                                        06016
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    06017
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    06018
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    06019
* --------------------------------------------------------- *            06020
SUMMREPT DS    0H                  Print details of PARMREPT             06021
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  06022
         BZ    SUMMREND            No. Bypass this routine.              06023
         MVC   PRTLINE,PRTLINE-1                                         06024
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        06025
         HEX   PRTLINE+27,1,PARMFLG1                                     06026
         HEX   PRTLINE+30,1,PARMFLG2                                     06027
         HEX   PRTLINE+33,1,PARMFLG3                                     06028
         HEX   PRTLINE+36,1,PARMFLG4                                     06029
         HEX   PRTLINE+39,1,PARMFLG5                                     06030
         HEX   PRTLINE+42,1,PARMFLG6                                     06031
         HEX   PRTLINE+45,1,PARMFLG7                                     06032
         HEX   PRTLINE+48,1,PARMFLG8                                     06033
         HEX   PRTLINE+51,1,PARMFLG9                                     06034
         HEX   PRTLINE+54,1,PARMFLGA                                     06035
         PUT   PARMREPT,PRTLINE                                          06036
         MVC   PRTLINE,PRTLINE-1                                         06037
         PUT   PARMREPT,PRTLINE                                          06038
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  06039
         MVC   PRTLINE+4(12),=C'User Area : '                            06040
         HEX   PRTLINE+16,48,STRTVALU                                    06041
         PUT   PARMREPT,PRTLINE                                          06042
         MVC   PRTLINE,PRTLINE-1                                         06043
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          06044
         HEX   PRTLINE+16,48,STRTVALU+48                                 06045
         PUT   PARMREPT,PRTLINE                                          06046
         MVC   PRTLINE,PRTLINE-1                                         06047
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          06048
         HEX   PRTLINE+16,48,STRTVALU+96                                 06049
         PUT   PARMREPT,PRTLINE                                          06050
         MVC   PRTLINE,PRTLINE-1                                         06051
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          06052
         HEX   PRTLINE+16,38,STRTVALU+144                                06053
         PUT   PARMREPT,PRTLINE                                          06054
         MVC   PRTLINE,PRTLINE-1                                         06055
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  06056
         HEX   PRTLINE+30,4,STRTVALU                                     06057
         MVC   PRTLINE+42(6),=C'Hex   '                                  06058
         PUT   PARMREPT,PRTLINE                                          06059
         MVC   PRTLINE,PRTLINE-1                                         06060
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  06061
         HEX   PRTLINE+30,4,PARMSLEN                                     06062
         MVC   PRTLINE+42(6),=C'Hex   '                                  06063
         PUT   PARMREPT,PRTLINE                                          06064
         MVC   PRTLINE,PRTLINE-1                                         06065
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  06066
         HEX   PRTLINE+30,4,SAVMSLEN                                     06067
         MVC   PRTLINE+42(6),=C'Hex   '                                  06068
         PUT   PARMREPT,PRTLINE                                          06069
         MVC   PRTLINE,PRTLINE-1                                         06070
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  06071
         HEX   PRTLINE+30,4,PARMSTRT                                     06072
         MVC   PRTLINE+42(6),=C'Hex   '                                  06073
         PUT   PARMREPT,PRTLINE                                          06074
         MVC   PRTLINE,PRTLINE-1                                         06075
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  06076
         HEX   PRTLINE+30,4,PRMCHRCT                                     06077
         MVC   PRTLINE+42(6),=C'Hex   '                                  06078
         PUT   PARMREPT,PRTLINE                                          06079
         MVC   PRTLINE,PRTLINE-1                                         06080
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  06081
         HEX   PRTLINE+30,4,SAVCHRCT                                     06082
         MVC   PRTLINE+42(6),=C'Hex   '                                  06083
         PUT   PARMREPT,PRTLINE                                          06084
         MVC   PRTLINE,PRTLINE-1                                         06085
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  06086
         HEX   PRTLINE+30,4,TOTCHRCT                                     06087
         MVC   PRTLINE+42(6),=C'Hex   '                                  06088
         PUT   PARMREPT,PRTLINE                                          06089
         MVC   PRTLINE,PRTLINE-1                                         06090
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  06091
         HEX   PRTLINE+30,4,SAVPHITS                                     06092
         MVC   PRTLINE+42(6),=C'Packed'                                  06093
         PUT   PARMREPT,PRTLINE                                          06094
         MVC   PRTLINE,PRTLINE-1                                         06095
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  06096
         HEX   PRTLINE+30,4,PARMHITS                                     06097
         MVC   PRTLINE+42(6),=C'Packed'                                  06098
         PUT   PARMREPT,PRTLINE                                          06099
         MVC   PRTLINE,PRTLINE-1                                         06100
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  06101
         HEX   PRTLINE+30,4,TOTMHITS                                     06102
         MVC   PRTLINE+42(6),=C'Packed'                                  06103
         PUT   PARMREPT,PRTLINE                                          06104
         MVC   PRTLINE,PRTLINE-1                                         06105
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  06106
         HEX   PRTLINE+30,4,SAVELCNT                                     06107
         MVC   PRTLINE+42(6),=C'Packed'                                  06108
         PUT   PARMREPT,PRTLINE                                          06109
         MVC   PRTLINE,PRTLINE-1                                         06110
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  06111
         HEX   PRTLINE+30,4,PARMLCNT                                     06112
         MVC   PRTLINE+42(6),=C'Packed'                                  06113
         PUT   PARMREPT,PRTLINE                                          06114
         MVC   PRTLINE,PRTLINE-1                                         06115
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  06116
         HEX   PRTLINE+30,4,TOTMLCNT                                     06117
         MVC   PRTLINE+42(6),=C'Packed'                                  06118
         PUT   PARMREPT,PRTLINE                                          06119
         MVC   PRTLINE,PRTLINE-1                                         06120
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  06121
         HEX   PRTLINE+30,20,PARMTENT                                    06122
         PUT   PARMREPT,PRTLINE                                          06123
SUMMREND DS    0H                                                        06124
         BR    R7                                                        06125
* --------------------------------------------------------- *            06126
* --------------------------------------------------------- *            06127
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    06128
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    06129
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    06130
MVLTMNUM MVC   LTMWMSG+11(0),0(R1)   <<< EXECUTED >>>                    06131
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    06132
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    06133
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    06134
MVLTMCHR MVC   LTMCHAR(0),0(R1)      <<< EXECUTED >>>                    06135
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    06136
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    06137
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    06138
         LTORG                                                           06139
         EJECT                                                           06140
* --------------------------------------------------------- *            06141
WORKA    DC    D'0'                                                      06142
WORKL    DC    D'0'                                                      06143
WORKP    DC    D'0'                                                      06144
PL4NO3   DC    PL4'3'                                                    06145
FF       EQU   X'FF'                                                     06146
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  06147
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  06148
         DC    C'S.'                                                     06149
         DC    CL25' '                                                   06150
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06151
         DC    C' IS TREATED AS NL.                                   '  06152
         DC    CL27' '                                                   06153
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06154
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  06155
         DC    CL27' '                                                   06156
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  06157
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  06158
         DC    CL27' '                                                   06159
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 06160
         DC    CL6'&HEXDFLM'                                             06161
         DC    C' RECORDS WILL'                                          06162
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  06163
         DC    C'SYSIN.'                                                 06164
         DC    CL17' '                                                   06165
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     06166
* --------------------------------------------------------- *            06167
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                06168
PARMFLG1 DC    X'00'                                                     06169
PARMFLG2 DC    X'00'                                                     06170
PARMFLG3 DC    X'00'                                                     06171
PARMFLG4 DC    X'00'                                                     06172
PARMFLG5 DC    X'00'                                                     06173
PARMFLG6 DC    X'00'                                                     06174
PARMFLG7 DC    X'00'                                                     06175
PARMFLG8 DC    X'00'                                                     06176
PARMFLG9 DC    X'00'                                                     06177
PARMFLGA DC    X'00'                                                     06178
* --------------------------------------------------------- *            06179
         DS    0F                                                        06180
STRTVALU DS    0CL(ENDVALUE)                                             06181
         DC    A(ENDVALUE)                                               06182
PARMSLEN DC    F'0'                LENGTH OF PARMS                       06183
*                                  Upon entry, this field contains       06184
*                                  the PARM address from COPYMODS,       06185
*                                  which gets overlaid by PARMCHEK.      06186
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       06187
*                                  Upon entry, this field contains       06188
*                                  the PARM address from COPYMODS,       06189
*                                  which gets overlaid by PARMCHEK.      06190
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               06191
*                                  Upon entry, this field contains       06192
*                                  the PARM length from COPYMODS,        06193
*                                  which gets overlaid by PARMCHEK.      06194
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06195
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06196
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06197
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   06198
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06199
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06200
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06201
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06202
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06203
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 06204
         DC    CL7' '              FILLER                                06205
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            06206
*  -----    User Stuff                                                   06207
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          06208
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  06209
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      06210
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         06211
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         06212
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         06213
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       06214
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       06215
TAPEOWN  DC    CL10' '                                                   06216
TAPEOEXT DC    CL4' '                                                    06217
TAPEOASC DC    CL14' '                                                   06218
OVERFLAG DC    X'00'                                                     06219
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               06220
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    06221
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         06222
LIMCHAR  DC    CL10' '                                                   06223
LABCHAR  DC    CL10' '                                                   06224
PRTCHAR  DC    CL10' '                                                   06225
LTMCHAR  DC    CL10' '                                                   06226
ENDVALUE EQU   (*-PARMSLEN)+4                                            06227
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     06228
* --------------------------------------------------------- *            06229
*              FORMAT OF PARM TABLE                                      06230
*              ONE ENTRY IS 20 BYTES                                     06231
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               06232
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 06233
*                               X'00' SAYS TURN FLAG ON                  06234
*                               X'10' SET ENTRY AS A DEFAULT             06235
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               06236
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                06237
*                                WHICH ALLOWS FOR 80 PARMS               06238
*                                THAT DON'T HAVE TO BE                   06239
*                                SEPARATED BY A COMMA.                   06240
PBYTES   EQU   10               Number of bytes of parm switches         06241
PTELEN   EQU   20               Length of each table entry               06242
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  06243
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   06244
* --------------------------------------------------------- *            06245
PARMTABL CSECT                                                           06246
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           06247
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           06248
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           06249
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           06250
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           06251
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           06252
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           06253
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           06254
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           06255
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           06256
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           06257
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           06258
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           06259
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           06260
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           06261
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           06262
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           06263
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           06264
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           06265
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space   06266
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           06267
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           06268
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           06269
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           06270
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           06271
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           06272
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           06273
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           06274
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           06275
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           06276
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           06277
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           06278
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           06279
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           06280
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           06281
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           06282
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           06283
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           06284
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           06285
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           06286
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           06287
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           06288
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           06289
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           06290
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           06291
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           06292
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           06293
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           06294
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'           06295
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           06296
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           06297
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           06298
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           06299
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           06300
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           06301
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'           06302
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           06303
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           06304
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           06305
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           06306
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           06307
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           06308
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           06309
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           06310
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           06311
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           06312
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           06313
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           06314
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           06315
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           06316
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           06317
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           06318
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           06319
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           06320
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           06321
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           06322
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           06323
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           06324
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           06325
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           06326
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           06327
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           06328
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           06329
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           06330
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           06331
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           06332
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           06333
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           06334
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           06335
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           06336
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           06337
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           06338
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           06339
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           06340
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           06341
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           06342
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           06343
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           06344
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           06345
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           06346
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           06347
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           06348
         DC    X'08',X'00',C'ENABLTMW',X'00000000040000000000'           06349
         DC    X'08',X'01',C'NOENABLT',X'00000000040000000000'           06350
         DC    X'06',X'00',C'WRTLTM  ',X'00000000080000000000'           06351
         DC    X'08',X'11',C'NOWRTLTM',X'00000000080000000000'           06352
         DC    X'06',X'00',C'SECOFF  ',X'00000000001000000000'           06351
         DC    X'08',X'01',C'NOSECOFF',X'00000000001000000000'           06351
         DC    X'FFFFFFFFFFFFFFFF'                                       06353
* --------------------------------------------------------- *            06354
PARMCHEK CSECT                                                           06355
         SPACE 3                                                         06356
         LTORG                                                           06357
         SPACE 3                                                         06358
         DS    0D                                                        06359
* --------------------------------------------------------- *            06360
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 06361
               COPYMODS LVL-075'                                         06362
* --------------------------------------------------------- *            06363
         SPACE 3                                                         06364
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 06365
               EODAD=SYSINEND                                            06366
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     06367
* --------------------------------------------------------- *            06368
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06369
HEX      DS    0H                                                        06370
         MVC   1(1,R15),0(R1)        Move byte                           06371
         UNPK  0(3,R15),1(2,R15)     Unpack                              06372
         TR    0(2,R15),HEXTAB-240                                       06373
         LA    R15,2(,R15)           Increment output pointer            06374
         LA    R1,1(,R1)             Increment input pointer             06375
         BCT   R0,HEX                Decrement length, then loop         06376
         MVI   0(R15),C' '           Blank the trailing byte             06377
         BR    R4                    Return to caller                    06378
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     06379
         SPACE                                                           06380
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06381
HEXSAVE  DS    3F                    Register save for HEX macro         06382
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06383
* --------------------------------------------------------- *            06384
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             06385
*              X'01'          PARMREPT DD IS PRESENT                     06386
*              X'02'          SYSIN    DD IS PRESENT                     06387
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06388
*              X'01'          PARMREPT DD IS OPEN                        06389
*              X'02'          SYSIN    DD IS OPEN                        06390
* --------------------------------------------------------- *            06391
         SPACE 3                                                         06392
PARMSAVE DC    F'0'                                                      06393
SAV4HEX  DC    F'0'                                                      06394
SAVE2TO3 DC    2F'0'                                                     06395
SAVE3REG DC    F'0'                                                      06396
SAVE7BA0 DC    F'0'                                                      06397
SAVE7BA1 DC    F'0'                                                      06398
PARMWORK DC    CL8' '                                                    06399
UPCASEOR DC    CL8' '                                                    06400
         DC    CL4' '                                                    06401
*    ------------------------ >   Constants for Date and Time - below    06402
SAVE1402 DS    6F                 Extra fullword for safety              06403
TIMED    DS    CL7                                                       06404
DATED    DS    CL9                                                       06405
DATETIME DS    4F                                                        06406
         ORG   DATETIME                                                  06407
TIME     DS    CL4                                                       06408
         DS    CL4                                                       06409
DATE     DS    CL5                                                       06410
         DS    CL3                                                       06411
HEADDLIT DS    0CL31              Literal for headings - date and time   06412
         DC    CL6'Today:'                                               06413
         DC    CL2' '                                                    06414
HEADDATE DC    CL23' '                                                   06415
LEVELLIT DS    0CL21              Level number display for headings      06416
         DC    CL6'Level '                                               06417
LEVELL   DC    CL4'&LLEV'                                                06418
         DC    CL2' ('                                                   06419
LEVDATE  DC    CL8' '             Assembly date for this program         06420
         DC    CL1')'                                                    06421
*    ------------------------ >   Constants for Date and Time - above    06422
*    --------------- >            Output line buffers - below            06423
PRMFDFLG DC    X'00'              Parm Found Flag                        06424
*              X'01'              Parm has been found in this record     06425
         DC    CL3' '                                                    06426
         DC    C' '                                                      06427
LINE     DC    CL133' '                                                  06428
         DC    C' '                                                      06429
CNTLINE  DC    CL133' '                                                  06430
         DC    C' '                                                      06431
OUTLINE  DC    CL133' '                                                  06432
         DC    C' '                                                      06433
PRTLINE  DC    CL133' '                                                  06434
         DC    CL80' '            Padding                                06435
*    --------------- >            Output line buffers - above            06436
*                                                                        06437
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                       06438
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  06439
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                   06440
         END                                                             06441
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 01/01/04               06442
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                       06443
**************************************************************           06444
**************************************************************           06445
**                                                          **           06446
**                                                          **           06447
**  MODULE:   LABELCHK - Check tape files to see if they    **           06448
**                       are tape labels.                   **           06449
**                                                          **           06450
**  AUTHOR:   Sam Golob                                     **           06451
**                                                          **           06452
**  PURPOSE:  This is a subroutine for programs which read  **           06453
**            tapes under BLP, so that tape label files     **           06454
**            would appear as ordinary files to the calling **           06455
**            program.  As file contents are passed to      **           06456
**            this program, LABELCHK detects whether they   **           06457
**            are tape labels, and tells the caller what    **           06458
**            type of labels they are.  If labels need to   **           06459
**            be interpreted, the PRINTLBL program is       **           06460
**            called.                                       **           06461
**                                                          **           06462
**  METHOD:   Label headers (usually the first 4 bytes)     **           06463
**            are scanned, and if a match to a known label  **           06464
**            type is found, then that type of label is     **           06465
**            processed appropriately.                      **           06466
**                                                          **           06467
**  Flags Set:  The principal flag set by this routine is   **           06468
**            the ISLABEL byte:                             **           06469
**                                                          **           06470
**   Setting of ISLABEL:   X'01'  - record is an IBM        **           06471
**                                  standard label          **           06472
**                                                          **           06473
**                         X'02'  - record is an ANSI/ISO   **           06474
**                                  (ASCII) standard label  **           06475
**                                                          **           06476
**                         X'00'  - the tested record is    **           06477
**                                  not a tape label        **           06478
**                                                          **           06479
**   Other flags and quantities are also set by this        **           06480
**   routine.  They are passed back to the caller in the    **           06481
**   LCHKPASS user area, in register 2.  Sometimes the      **           06482
**   PARMFLGS are changed.  These are passed back to the    **           06483
**   caller in register 1.  Sometimes the INAREA (record    **           06484
**   input area, usually containing a label image) is       **           06485
**   changed.  The altered label image is passed back to    **           06486
**   the caller in register 3.  At present, 80 bytes are    **           06487
**   passed back in register 3.                             **           06488
**                                                          **           06489
**************************************************************           06490
         EJECT                                                           06491
**************************************************************           06492
**                                                          **           06493
**  CHANGE LOG:                                             **           06494
**                                                          **           06495
**    Version 1.0 - Base program to detect IBM tape labels. **           06496
**                                                          **           06497
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **           06498
**                                                          **           06499
**                                                          **           06500
**************************************************************           06501
**************************************************************           06502
         EJECT                                                           06503
**************************************************************           06504
*  ---------------------------------------------------------------  *    06505
*    This macro is used to display hex values in a printed report.       06506
*  ---------------------------------------------------------------  *    06507
         MACRO                                                           06508
&NAME    HEX   &TO,&LEN,&FROM                                            06509
&NAME    DS    0H                                                        06510
         ST    R4,SAV4HEX                                                06511
         STM   R15,R1,HEXSAVE                                            06512
         LA    R1,&FROM                                                  06513
         LA    R0,&LEN                                                   06514
         LA    R15,&TO                                                   06515
         BAL   R4,HEX                                                    06516
         L     R4,SAV4HEX                                                06517
         LM    R15,R1,HEXSAVE                                            06518
         MEND                                                            06519
         SPACE                                                           06520
**************************************************************           06521
         GBLC  &LLEV                                                     06522
&LLEV    SETC  '1.1 '                                                    06523
         YREGS                                                           06524
         ENTRY LABELCHK                                                  06525
LABELCHK CSECT                                                           06526
         USING *,R15                                                     06527
         B     EYECATCH                                                  06528
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06529
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'         06530
         DC    C' - '                                                    06531
         DC    C'LEVEL '                                                 06532
SYSLEV   DC    C'&LLEV'                                                  06533
         DC    C' - '                                                    06534
SYSDAT   DC    C'&SYSDATE'                                               06535
         DC    C'  ',C'&SYSTIME ',C'--- '                                06536
         DC    C'Copyright (c) 2003 by Sam Golob '                       06537
         DC    C'--- '              MAKE EYECATCHER VISIBLE              06538
SAVEAREA DC    18F'0'                                                    06539
EYECATCH DS    0D                   ENSURE ALIGNMENT                     06540
         SAVE  (14,12)                                                   06541
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     06542
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   06543
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          06544
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         06545
         LR    R13,R1               NEW SAVE AREA ADDRESS                06546
         DROP  R15                                                       06547
* -----                             SET UP BASE REGISTERS                06548
         USING LABELCHK,R12,R11,R10,R9                                   06549
         LR    R12,R15                                                   06550
         LA    R11,4095(,R12)                                            06551
         LA    R11,1(,R11)                                               06552
         LA    R10,4095(,R11)                                            06553
         LA    R10,1(,R10)                                               06554
         LA    R9,4095(,R10)                                             06555
         LA    R9,1(,R9)                                                 06556
         LR    R1,R5                RESTORE REGISTER 1 INPUT             06557
* ----------------------------------------------------------------- *    06558
         ST    R1,PARMSAVE          Address of parm flags in caller      06559
         ST    R2,USERSAVE          Address of user area in caller       06560
         ST    R3,INARSAVE          Address of INAREA in caller          06561
* ----------------------------------------------------------------- *    06562
***********************************************************************  06563
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  06564
***********************************************************************  06565
         STM   R14,R2,SAVE1402                                           06566
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             06567
         OI    DATE+4,X'0F'                                              06568
         UNPK  DATED,DATE                                                06569
         OI    TIME+3,X'0F'                                              06570
         UNPK  TIMED,TIME                                                06571
*                          FILL HEADDATE AREA WITH INFO TO REUSE         06572
         MVC   HEADDATE(2),DATED                                         06573
         MVI   HEADDATE+2,C'/'                                           06574
         MVC   HEADDATE+3(2),DATED+2                                     06575
         MVI   HEADDATE+5,C'/'                                           06576
         MVC   HEADDATE+6(4),DATED+4                                     06577
         MVC   HEADDATE+12(2),TIMED                                      06578
         MVI   HEADDATE+14,C':'                                          06579
         MVC   HEADDATE+15(2),TIMED+2                                    06580
         MVI   HEADDATE+17,C':'                                          06581
         MVC   HEADDATE+18(2),TIMED+4                                    06582
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         06583
         LM    R14,R2,SAVE1402                                           06584
***********************************************************************  06585
         MVC   LEVDATE(8),SYSDAT                                         06586
***********************************************************************  06587
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES      06588
* ----------------------------------------------------------------- *    06589
INITCONS DS    0H                    Initialize necessary quantities.    06590
         MVI   LINE-1,X'40'          Make sure the print line is blank.  06591
         MVC   LINE,LINE-1                                               06592
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      06593
         ST    R0,SYSPRDCB             store for the program's use       06594
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      06595
         ST    R0,LABLDDCB             store for the program's use       06596
         L     R0,LABADDIV           LABADDIN DCB address in caller      06597
         ST    R0,LABADDCB             store for the program's use       06598
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    06599
         ST    R0,SAVTRTCS             store it for later use            06600
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  06601
         ST    R0,PRTLBENT           Save entry point for calling later  06602
* ----------------------------------------------------------------*      06603
PROCESS  DS    0H                    First copy over passed areas.       06604
* ----------------------------------------------------------------*      06605
         L     R1,PARMSAVE              Point to caller's parm flags     06606
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.      06607
         L     R2,USERSAVE              Point to caller's user area.     06608
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.      06609
         L     R3,INARSAVE              Point to INAREA in caller.       06610
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.    06611
* ----------------------------------------------------------------*      06612
*   Then execute this entire program as a called subroutine.      *      06613
* ----------------------------------------------------------------*      06614
         BAL   R7,LABLCHEK                                               06615
* ----------------------------------------------------------------*      06616
*                                                                        06617
         B     THEEND                                                    06618
LBLINEND DS    0H                                                        06619
         OI    LBLINENF,X'01'                                            06620
THEEND   DS    0H                                                        06621
         L     R13,4(,R13)                                               06622
         MVC   16(4,R13),=F'0'          Return code 0     in R15         06623
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     06624
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    06625
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2   06626
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3      06627
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06628
         LM    R14,R12,12(R13)                                           06629
         BR    R14                                                       06630
         EJECT                                                           06631
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06632
*    BAL REGISTER IS R7.                                                 06633
* --------------------------------------------------------- *            06634
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS              06635
*                         AND SET LABEL FLAGS, ACCORDINGLY,              06636
*                         IN THE LBLFLAG BYTE.                           06637
* --------------------------------------------------------- *            06638
*     The type of labels last seen on the input tape                     06639
*     are generally flagged by bits in the LBLFLAG byte.                 06640
*     These bit settings are set by this program as                      06641
*     follows:   (These are for both IBM and ASCII labels)               06642
* --------------------------------------------------------- *            06643
*              X'01'    HDR1 HAS BEEN SEEN                               06644
*              X'02'    HDR2 HAS BEEN SEEN                               06645
*              X'04'    VOL1 HAS BEEN SEEN                               06646
*              X'08'    HDR1 IS FROM AN INITTED TAPE                     06647
*              X'10'    EOF1 HAS BEEN SEEN                               06648
*              X'20'    EOF2 HAS BEEN SEEN                               06649
*              X'40'    EOV1 HAS BEEN SEEN                               06650
*              X'80'    EOV2 HAS BEEN SEEN                               06651
* --------------------------------------------------------- *            06652
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            06653
* -                                                       - *            06654
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            06655
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            06656
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            06657
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            06658
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            06659
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            06660
* --------------------------------------------------------- *            06661
*                                                           *            06662
*   Beginning of processing:                                *            06663
*                                                           *            06664
*     Check the input record (that has been copied to       *            06665
*     INAREA) for each possible type of label, and direct   *            06666
*     the processing to the appropriate routine, if a       *            06667
*     label type has been found.                            *            06668
*                                                           *            06669
*     If an input record does not fit any of these          *            06670
*     criteria, it is not considered a tape label.          *            06671
*                                                           *            06672
* --------------------------------------------------------- *            06673
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START      06674
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                     06675
         BE    CVOL1                PROCESS THE VOL1                     06676
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                     06677
         BE    CHDR1                PROCESS HDR1                         06678
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                        06679
         BE    CHDR2                PROCESS HDR2                         06680
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                       06681
         BE    CEOF1                PROCESS EOF1                         06682
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                       06683
         BE    CEOF2                PROCESS EOF2                         06684
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                       06685
         BE    CEOV1                PROCESS EOV1                         06686
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                       06687
         BE    CEOV2                PROCESS EOV2                         06688
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?            06689
         BE    CUHL                 PROCESS UHL                          06690
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?           06691
         BE    CUTL                 PROCESS UTL                          06692
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         06693
         BE    ASC                     PROCESS ALL VOL TYPES             06694
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         06695
         BE    ASC                     PROCESS ALL HDR TYPES             06696
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         06697
         BE    ASC                     PROCESS ALL EOF TYPES             06698
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         06699
         BE    ASC                     PROCESS ALL EOV TYPES             06700
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     06701
         BE    ASC                     PROCESS ALL UVL TYPES             06702
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     06703
         BE    ASC                     PROCESS ALL UHL TYPES             06704
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    06705
         BE    ASC                     PROCESS ALL UTL TYPES             06706
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL   06707
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------             06708
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             06709
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG       06710
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          06711
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06712
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    06713
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      06714
CLRIDRCV DS    0H                                                        06715
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          06716
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE            06717
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE             06718
* ---------------- LABEL ADDING CODE ---------------------- *            06719
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                06720
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    06721
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   06722
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              06723
         ST    R6,SAVER6                                                 06724
         L     R6,SYSPRDCB                                               06725
         PUT   (6),LINE                                                  06726
         L     R6,SAVER6                                                 06727
*        PUT   SYSPRINT,LINE        WRITE MSG                            06728
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  06729
*        CLOSE (LABADDIN)                                                06730
         OI    LABADFLG,X'01'                                            06731
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM            06732
         OI    CLOSMFLG,X'01'                                            06733
         B     THEEND                                                    06734
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          06735
* ---------------- LABEL ADDING CODE ---------------------- *            06736
* ---------------- LABEL DUMPING CODE --------------------- *            06737
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06738
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                 06739
         ST    R7,SAVE7LDM          Save BAL register.                   06740
         LA    R4,INAREA            Point to area to be dumped.          06741
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06742
         L     R7,SAVE7LDM          Restore BAL register.                06743
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            06744
* ---------------- LABEL DUMPING CODE --------------------- *            06745
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                       06746
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                    06747
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND             06748
*                                                                        06749
* ------ Call PRINTLBL routine to print this label.....   below          06750
         ST    R7,SAVE7BA2        Save BAL register.                     06751
         BAL   R7,PRNTLABL        Print the current label.               06752
         L     R7,SAVE7BA2                                               06753
* ------ Call PRINTLBL routine to print this label.....   above          06754
*                                                                        06755
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06756
         B     LABCHEND                                                  06757
CHDR1    DS    0H                                                        06758
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06759
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      06760
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR       06761
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                       06762
* ---------------- LABEL DUMPING CODE --------------------- *            06763
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06764
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                 06765
         ST    R7,SAVE7LDM          Save BAL register.                   06766
         LA    R4,INAREA            Point to area to be dumped.          06767
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06768
         L     R7,SAVE7LDM          Restore BAL register.                06769
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            06770
* ---------------- LABEL DUMPING CODE --------------------- *            06771
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?              06772
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET             06773
* ---------------- LABEL DUMPING CODE --------------------- *            06774
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06775
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      06776
         ST    R7,SAVE7LDM          Save BAL register.                   06777
         ST    R4,SAVE4LDM                                               06778
         LA    R4,LABELITI          Point to area to be dumped.          06779
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06780
         L     R4,SAVE4LDM                                               06781
         L     R7,SAVE7LDM          Restore BAL register.                06782
CHDR1NDM DS    0H                                                        06783
* ---------------- LABEL DUMPING CODE --------------------- *            06784
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE              06785
CHDR1A   DS    0H
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECCH1             No. Don't affect these fields.
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.
NOSECCH1 DS    0H
*** --- >>  Security off?  -  above
         TM    PARMFLG1,X'02' DO WE PRINT LABELS?                        06786
         BZ    CHDR1Z         NO. DON'T PRINT.                           06787
*                                                                        06788
* ------ Call PRINTLBL routine to print this label.....   below          06789
         ST    R7,SAVE7BA2        Save BAL register.                     06790
         BAL   R7,PRNTLABL        Print the current label.               06791
         L     R7,SAVE7BA2                                               06792
* ------ Call PRINTLBL routine to print this label.....   above          06793
*                                                                        06794
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06795
         B     LABCHEND                                                  06796
CHDR2    DS    0H                                                        06797
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06798
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      06799
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          06800
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06801
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    06802
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06803
         BNE   CLRIDRH2                                                  06804
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06805
CLRIDRH2 DS    0H                                                        06806
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          06807
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2            06808
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                       06809
* ---------------- LABEL DUMPING CODE --------------------- *            06810
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06811
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                 06812
         ST    R7,SAVE7LDM          Save BAL register.                   06813
         LA    R4,INAREA            Point to area to be dumped.          06814
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06815
         L     R7,SAVE7LDM          Restore BAL register.                06816
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           06817
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            06818
* ---------------- LABEL DUMPING CODE --------------------- *            06819
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                      06820
         BZ    CHDR2Z           NO.                                      06821
*                                                                        06822
* ------ Call PRINTLBL routine to print this label.....   below          06823
         ST    R7,SAVE7BA2        Save BAL register.                     06824
         BAL   R7,PRNTLABL        Print the current label.               06825
         L     R7,SAVE7BA2                                               06826
* ------ Call PRINTLBL routine to print this label.....   above          06827
*                                                                        06828
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06829
         B     LABCHEND                                                  06830
CEOF1    DS    0H                                                        06831
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06832
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      06833
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                 06834
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                       06835
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06836
BCTCEOF1 DS    0H                                                        06837
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06838
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  06839
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06840
         STM   R2,R3,SAVE2TO3                                            06841
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06842
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06843
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06844
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06845
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06846
         LM    R2,R3,SAVE2TO3                                            06847
BCTCEOFX DS    0H                                                        06848
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06849
* ---------------- LABEL DUMPING CODE --------------------- *            06850
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06851
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                 06852
         ST    R7,SAVE7LDM          Save BAL register.                   06853
         LA    R4,INAREA            Point to area to be dumped.          06854
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06855
         L     R7,SAVE7LDM          Restore BAL register.                06856
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            06857
* ---------------- LABEL DUMPING CODE --------------------- *            06858
CEOF1A   DS    0H
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECCF1             No. Don't affect these fields.
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.
NOSECCF1 DS    0H
*** --- >>  Security off?  -  above
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                      06859
         BZ    CEOF1Z           NO.                                      06860
*                                                                        06861
* ------ Call PRINTLBL routine to print this label.....   below          06862
         ST    R7,SAVE7BA2        Save BAL register.                     06863
         BAL   R7,PRNTLABL        Print the current label.               06864
         L     R7,SAVE7BA2                                               06865
* ------ Call PRINTLBL routine to print this label.....   above          06866
*                                                                        06867
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06868
         B     LABCHEND                                                  06869
CEOF2    DS    0H                                                        06870
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06871
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      06872
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06873
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06874
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    06875
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06876
         BNE   CLRIDRF2                                                  06877
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06878
CLRIDRF2 DS    0H                                                        06879
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06880
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                 06881
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                       06882
* ---------------- LABEL DUMPING CODE --------------------- *            06883
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06884
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                 06885
         ST    R7,SAVE7LDM          Save BAL register.                   06886
         LA    R4,INAREA            Point to area to be dumped.          06887
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06888
         L     R7,SAVE7LDM          Restore BAL register.                06889
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06890
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            06891
* ---------------- LABEL DUMPING CODE --------------------- *            06892
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                      06893
         BZ    CEOF2Z           NO.                                      06894
*                                                                        06895
* ------ Call PRINTLBL routine to print this label.....   below          06896
         ST    R7,SAVE7BA2        Save BAL register.                     06897
         BAL   R7,PRNTLABL        Print the current label.               06898
         L     R7,SAVE7BA2                                               06899
* ------ Call PRINTLBL routine to print this label.....   above          06900
*                                                                        06901
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06902
         B     LABCHEND                                                  06903
CEOV1    DS    0H                                                        06904
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06905
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      06906
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 06907
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06908
         BZ    CEOVN1         NO, PROCESS ORDINARILY                     06909
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    06910
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            06911
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06912
         MVI   LINE-1,C' '                                               06913
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06914
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        06915
         ST    R6,SAVER6                                                 06916
         L     R6,SYSPRDCB                                               06917
         PUT   (6),LINE                                                  06918
         L     R6,SAVER6                                                 06919
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               06920
         B     CEOVY1                                                    06921
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       06922
CEOVY1   DS    0H                                                        06923
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06924
BCTCEOV1 DS    0H                                                        06925
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06926
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  06927
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06928
         STM   R2,R3,SAVE2TO3                                            06929
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06930
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06931
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06932
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06933
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06934
         LM    R2,R3,SAVE2TO3                                            06935
BCTCEOVX DS    0H                                                        06936
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06937
* ---------------- LABEL DUMPING CODE --------------------- *            06938
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06939
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                 06940
         ST    R7,SAVE7LDM          Save BAL register.                   06941
         LA    R4,INAREA            Point to area to be dumped.          06942
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06943
         L     R7,SAVE7LDM          Restore BAL register.                06944
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            06945
* ---------------- LABEL DUMPING CODE --------------------- *            06946
CEOV1A   DS    0H
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECCV1             No. Don't affect these fields.
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.
NOSECCV1 DS    0H
*** --- >>  Security off?  -  above
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                      06947
         BZ    CEOV1Z           NO.                                      06948
*                                                                        06949
* ------ Call PRINTLBL routine to print this label.....   below          06950
         ST    R7,SAVE7BA2        Save BAL register.                     06951
         BAL   R7,PRNTLABL        Print the current label.               06952
         L     R7,SAVE7BA2                                               06953
* ------ Call PRINTLBL routine to print this label.....   above          06954
*                                                                        06955
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06956
         B     LABCHEND                                                  06957
CEOV2    DS    0H                                                        06958
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06959
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      06960
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06961
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06962
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    06963
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06964
         BNE   CLRIDRV2                                                  06965
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06966
CLRIDRV2 DS    0H                                                        06967
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06968
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                 06969
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06970
         BZ    CEOVN2         NO, PROCESS ORDINARILY                     06971
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                    06972
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            06973
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06974
         B     CEOVY2                                                    06975
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                       06976
CEOVY2   DS    0H                                                        06977
* ---------------- LABEL DUMPING CODE --------------------- *            06978
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06979
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                 06980
         ST    R7,SAVE7LDM          Save BAL register.                   06981
         LA    R4,INAREA            Point to area to be dumped.          06982
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  06983
         L     R7,SAVE7LDM          Restore BAL register.                06984
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   06985
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        06986
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           06987
         B     CEOV2ND              AND GET OUT                          06988
CEOV2F   DS    0H                                                        06989
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06990
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            06991
* ---------------- LABEL DUMPING CODE --------------------- *            06992
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                      06993
         BZ    CEOV2Z           NO.                                      06994
*                                                                        06995
* ------ Call PRINTLBL routine to print this label.....   below          06996
         ST    R7,SAVE7BA2        Save BAL register.                     06997
         BAL   R7,PRNTLABL        Print the current label.               06998
         L     R7,SAVE7BA2                                               06999
* ------ Call PRINTLBL routine to print this label.....   above          07000
*                                                                        07001
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07002
         B     LABCHEND                                                  07003
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            07004
CUHL     DS    0H             HANDLE USER HEADER LABELS                  07005
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07006
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      07007
*                                                                        07008
* ------ Call PRINTLBL routine to print this label.....   below          07009
         ST    R7,SAVE7BA2        Save BAL register.                     07010
         BAL   R7,PRNTLABL        Print the current label.               07011
         L     R7,SAVE7BA2                                               07012
* ------ Call PRINTLBL routine to print this label.....   above          07013
*                                                                        07014
* ---------------- LABEL DUMPING CODE --------------------- *            07015
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07016
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 07017
         ST    R7,SAVE7LDM          Save BAL register.                   07018
         LA    R4,INAREA            Point to area to be dumped.          07019
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07020
         L     R7,SAVE7LDM          Restore BAL register.                07021
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            07022
* ---------------- LABEL DUMPING CODE --------------------- *            07023
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07024
         B     LABCHEND                                                  07025
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 07026
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07027
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      07028
*                                                                        07029
* ------ Call PRINTLBL routine to print this label.....   below          07030
         ST    R7,SAVE7BA2        Save BAL register.                     07031
         BAL   R7,PRNTLABL        Print the current label.               07032
         L     R7,SAVE7BA2                                               07033
* ------ Call PRINTLBL routine to print this label.....   above          07034
*                                                                        07035
* ---------------- LABEL DUMPING CODE --------------------- *            07036
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07037
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 07038
         ST    R7,SAVE7LDM          Save BAL register.                   07039
         LA    R4,INAREA            Point to area to be dumped.          07040
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07041
         L     R7,SAVE7LDM          Restore BAL register.                07042
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            07043
* ---------------- LABEL DUMPING CODE --------------------- *            07044
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07045
         B     LABCHEND                                                  07046
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            07047
         EJECT                                                           07048
* ----------------  ASCII   Labels  ----------------------- *            07049
* --------------------------------------------------------- *            07050
*  ANSI/ISO label rules are a bit more relaxed than IBM     *            07051
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *            07052
*  UTLx are all considered labels, with a lot of latitude   *            07053
*  as to what the "x" is.  Therefore, for ASCII tape        *            07054
*  labels, we check the first 3 characters in each label    *            07055
*  category, and then further subdivide within that         *            07056
*  category if necessary.                                   *            07057
* --------------------------------------------------------- *            07058
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE      07059
*                                                                        07060
*        Common ASCII preparation routines......                         07061
*                                                                        07062
         OI    ASCIIFLG,X'01'       Say we're working in ASCII           07063
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    07064
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label   07065
*                                   This is being done early for ASCII   07066
*                                                                        07067
* -- >  Make an EBCDIC version of this label in the INASCI field.        07068
         ST    R5,R5HXPRT              Save register.                    07069
         L     R5,SAVTRTCS             Point to translation table CSECT  07070
         USING TRTDSECT,R5                                               07071
         MVC   INASCI(80),INAREA       Move LABEL area to workarea       07072
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print     07073
         L     R5,R5HXPRT              Restore R5                        07074
         DROP  R5                                                        07075
* -- >                                                                   07076
* ----------------------------------------------------- *                07077
* --   Again pick which type of ASCII label we have     *                07078
* ----------------------------------------------------- *                07079
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         07080
         BE    ASCVOL                  PROCESS ALL VOL TYPES             07081
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         07082
         BE    ASCHDR                  PROCESS ALL HDR TYPES             07083
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         07084
         BE    ASCEOF                  PROCESS ALL EOF TYPES             07085
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         07086
         BE    ASCEOV                  PROCESS ALL EOV TYPES             07087
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     07088
         BE    ASCUVL                  PROCESS ALL UVL TYPES             07089
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     07090
         BE    ASCUHL                  PROCESS ALL UHL TYPES             07091
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    07092
         BE    ASCUTL                  PROCESS ALL UTL TYPES             07093
* ----------------------------------                                     07094
ASCVOL   DS    0H                                                        07095
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07096
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG      07097
* ---------------- LABEL ADDING CODE ---------------------- *            07098
*       Forbid adding new labels to an already AL tape.     *            07099
* --------------------------------------------------------- *            07100
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                07101
         BZ    ASCVOLNS             NO. WE CAN GO ON.                    07102
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   07103
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              07104
         ST    R6,SAVER6                                                 07105
         L     R6,SYSPRDCB                                               07106
         PUT   (6),LINE                                                  07107
         L     R6,SAVER6                                                 07108
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  07109
*        CLOSE (LABADDIN)                                                07110
         OI    LABADFLG,X'01'                                            07111
         OI    CLOSMFLG,X'01'                                            07112
         B     THEEND                                                    07113
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.          07114
* ---------------- LABEL ADDING CODE ---------------------- *            07115
* ---------------- LABEL DUMPING CODE ------ below -------- *            07116
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07117
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                 07118
         ST    R7,SAVE7LDM          Save BAL register.                   07119
         LA    R4,INAREA            Point to area to be dumped.          07120
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07121
         L     R7,SAVE7LDM          Restore BAL register.                07122
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            07123
* ---------------- LABEL DUMPING CODE ------ above -------- *            07124
* --------------------------------------------------------- *            07125
*  At this point, we specifically check for a VOL1 label.   *            07126
* --------------------------------------------------------- *            07127
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?             07128
         BNE   ASCVOLLB             No. Just mark as an ASCII label.     07129
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                      07130
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there       07131
         MVC   INVOLUME(6),INASCI+4    Send to message too               07132
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECF01             No. Don't affect these fields.
         MVI   INAREA+10,X'20'      Move in ASCII blank.
NOSECF01 DS    0H
*** --- >>  Security off?  -  above
* --- >>>    VOL1  Label Printing   -----   below                        07133
         TM    PARMFLG2,X'02'          Printing Volume Labels?           07134
         BZ    ASCVOLLB                No. Skip this code.               07135
*                                                                        07136
* ------ Call PRINTLBL routine to print this label.....   below          07137
         ST    R7,SAVE7BA2        Save BAL register.                     07138
         BAL   R7,PRNTLABL        Print the current label.               07139
         L     R7,SAVE7BA2                                               07140
* ------ Call PRINTLBL routine to print this label.....   above          07141
*                                                                        07142
* --- >>>    VOL1  Label Printing   -----   above                        07143
ASCVOLLB DS    0H                                                        07144
ASCVOLE  DS    0H                                                        07145
         B     LABCHEND                                                  07146
*                                                                        07147
ASCHDR   DS    0H                                                        07148
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?           07149
         BE    ASCHDR1                                                   07150
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?           07151
         BE    ASCHDR2                                                   07152
         B     ASCHDRO                                                   07153
ASCHDR1  DS    0H                   ASCII Header 1                       07154
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07155
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.        07156
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR       07157
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                      07158
* ---------------- LABEL DUMPING CODE --------------------- *            07159
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07160
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                 07161
         ST    R7,SAVE7LDM          Save BAL register.                   07162
         LA    R4,INAREA            Point to area to be dumped.          07163
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07164
         L     R7,SAVE7LDM          Restore BAL register.                07165
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            07166
* ---------------- LABEL DUMPING CODE --------------------- *            07167
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?             07168
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET     07169
* ---------------- LABEL DUMPING CODE --------------------- *            07170
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07171
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      07172
         ST    R7,SAVE7LDM          Save BAL register.                   07173
         ST    R4,SAVE4LDM                                               07174
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII.  07175
         LA    R4,LABELITI          Point to area to be dumped.          07176
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07177
         L     R4,SAVE4LDM                                               07178
         L     R7,SAVE7LDM          Restore BAL register.                07179
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                 07180
CASC1NDM DS    0H                                                        07181
* ---------------- LABEL DUMPING CODE --------------------- *            07182
         OI    LBLFLAG,X'08'        Show initted header label found.     07183
CASC1A   DS    0H                                                        07184
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECAH1             No. Don't affect these fields.
         MVI   INAREA+53,X'20'      Move in ASCII blank.
NOSECAH1 DS    0H
*** --- >>  Security off?  -  above
* --- >      Print  Labels     - -   below                               07185
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?               07186
         BZ    ASCHDR1Z                NO. DON'T PRINT.                  07187
*                                                                        07188
* ------ Call PRINTLBL routine to print this label.....   below          07189
         ST    R7,SAVE7BA2        Save BAL register.                     07190
         BAL   R7,PRNTLABL        Print the current label.               07191
         L     R7,SAVE7BA2                                               07192
* ------ Call PRINTLBL routine to print this label.....   above          07193
*                                                                        07194
ASCHDR1Z DS    0H                                                        07195
* --- >      Print  Labels     - -   above                               07196
         B     LABCHEND                                                  07197
ASCHDR2  DS    0H                   ASCII Header 2                       07198
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07199
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.    07200
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2      07201
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                 07202
* ---------------- LABEL DUMPING CODE --------------------- *            07203
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07204
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                 07205
         ST    R7,SAVE7LDM          Save BAL register.                   07206
         LA    R4,INAREA            Point to area to be dumped.          07207
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07208
         L     R7,SAVE7LDM          Restore BAL register.                07209
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           07210
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07211
* ---------------- LABEL DUMPING CODE --------------------- *            07212
ASCHDR2A DS    0H                                                        07213
* --- >      Print  Labels     - -   below                               07214
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?               07215
         BZ    ASCHDR2Z                NO. DON'T PRINT.                  07216
*                                                                        07217
* ------ Call PRINTLBL routine to print this label.....   below          07218
         ST    R7,SAVE7BA2        Save BAL register.                     07219
         BAL   R7,PRNTLABL        Print the current label.               07220
         L     R7,SAVE7BA2                                               07221
* ------ Call PRINTLBL routine to print this label.....   above          07222
*                                                                        07223
ASCHDR2Z DS    0H                                                        07224
* --- >      Print  Labels     - -   above                               07225
         B     LABCHEND                                                  07226
ASCHDRO  DS    0H                    ASCII Other header labels           07227
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07228
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED.  07229
*                                                                        07230
* ------ Call PRINTLBL routine to print this label.....   below          07231
         ST    R7,SAVE7BA2        Save BAL register.                     07232
         BAL   R7,PRNTLABL        Print the current label.               07233
         L     R7,SAVE7BA2                                               07234
* ------ Call PRINTLBL routine to print this label.....   above          07235
*                                                                        07236
* ---------------- LABEL DUMPING CODE --------------------- *            07237
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07238
         BZ    AHDROND              NO. SKIP PUTTING OUT                 07239
         ST    R7,SAVE7LDM          Save BAL register.                   07240
         LA    R4,INAREA            Point to area to be dumped.          07241
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07242
         L     R7,SAVE7LDM          Restore BAL register.                07243
AHDROND  DS    0H                   END OF LABEL DUMPING CODE            07244
* ---------------- LABEL DUMPING CODE --------------------- *            07245
ASCHDRE  DS    0H                                                        07246
         B     LABCHEND                                                  07247
ASCEOF   DS    0H                                                        07248
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07249
         BE    ASCEOF1                                                   07250
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07251
         BE    ASCEOF2                                                   07252
         B     ASCEOFO                                                   07253
ASCEOF1  DS    0H                    ASCII EOF 1                         07254
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07255
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED.  07256
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1          07257
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                     07258
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07259
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07260
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.        07261
         TM    PARMFLG1,X'01'          Is block count correction on?     07262
         BZ    NOTASCEF                No-don't plug in corrected value  07263
ASCBLKF1 DS    0H                                                        07264
         ST    R5,R5HXPRT              Save register.                    07265
         L     R5,SAVTRTCS             Point to translation table CSECT  07266
         USING TRTDSECT,R5                                               07267
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07268
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07269
         L     R5,R5HXPRT              Restore R5                        07270
         DROP  R5                                                        07271
         MVC   INAREA+54(6),BLKCNASC+4                                   07272
NOTASCEF DS    0H                                                        07273
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07274
* ---------------- LABEL DUMPING CODE --------------------- *            07275
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07276
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                 07277
         ST    R7,SAVE7LDM          Save BAL register.                   07278
         LA    R4,INAREA            Point to area to be dumped.          07279
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07280
         L     R7,SAVE7LDM          Restore BAL register.                07281
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07282
* ---------------- LABEL DUMPING CODE --------------------- *            07283
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECAF1             No. Don't affect these fields.
         MVI   INAREA+53,X'20'      Move in ASCII blank.
NOSECAF1 DS    0H
*** --- >>  Security off?  -  above
ASCEOF1A DS    0H                                                        07284
* --- >      Print  Labels     - -   below                               07285
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?               07286
         BZ    ASCEOF1Z                NO. DON'T PRINT.                  07287
*                                                                        07288
* ------ Call PRINTLBL routine to print this label.....   below          07289
         ST    R7,SAVE7BA2        Save BAL register.                     07290
         BAL   R7,PRNTLABL        Print the current label.               07291
         L     R7,SAVE7BA2                                               07292
* ------ Call PRINTLBL routine to print this label.....   above          07293
*                                                                        07294
ASCEOF1Z DS    0H                                                        07295
* --- >      Print  Labels     - -   above                               07296
         B     LABCHEND                                                  07297
ASCEOF2  DS    0H                   ASCII EOF 2                          07298
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07299
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG       07300
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2           07301
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                 07302
* ---------------- LABEL DUMPING CODE --------------------- *            07303
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07304
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                 07305
         ST    R7,SAVE7LDM          Save BAL register.                   07306
         LA    R4,INAREA            Point to area to be dumped.          07307
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07308
         L     R7,SAVE7LDM          Restore BAL register.                07309
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07310
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07311
* ---------------- LABEL DUMPING CODE --------------------- *            07312
ASCEOF2A DS    0H                                                        07313
* --- >      Print  Labels     - -   below                               07314
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?               07315
         BZ    ASCEOF2Z                NO. DON'T PRINT.                  07316
*                                                                        07317
* ------ Call PRINTLBL routine to print this label.....   below          07318
         ST    R7,SAVE7BA2        Save BAL register.                     07319
         BAL   R7,PRNTLABL        Print the current label.               07320
         L     R7,SAVE7BA2                                               07321
* ------ Call PRINTLBL routine to print this label.....   above          07322
*                                                                        07323
ASCEOF2Z DS    0H                                                        07324
* --- >      Print  Labels     - -   above                               07325
         B     LABCHEND                                                  07326
ASCEOFO  DS    0H                    ASCII Other EOF labels              07327
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07328
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED.  07329
*                                                                        07330
* ------ Call PRINTLBL routine to print this label.....   below          07331
         ST    R7,SAVE7BA2        Save BAL register.                     07332
         BAL   R7,PRNTLABL        Print the current label.               07333
         L     R7,SAVE7BA2                                               07334
* ------ Call PRINTLBL routine to print this label.....   above          07335
*                                                                        07336
* ---------------- LABEL DUMPING CODE --------------------- *            07337
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07338
         BZ    AEOFOND              NO. SKIP PUTTING OUT                 07339
         ST    R7,SAVE7LDM          Save BAL register.                   07340
         LA    R4,INAREA            Point to area to be dumped.          07341
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07342
         L     R7,SAVE7LDM          Restore BAL register.                07343
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE            07344
* ---------------- LABEL DUMPING CODE --------------------- *            07345
ASCEOFE  DS    0H                                                        07346
         B     LABCHEND                                                  07347
ASCEOV   DS    0H                                                        07348
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07349
         BE    ASCEOV1                                                   07350
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07351
         BE    ASCEOV2                                                   07352
         B     ASCEOVO                                                   07353
ASCEOV1  DS    0H                    ASCII EOV 1                         07354
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07355
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG      07356
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 07357
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07358
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                     07359
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    07360
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                         07361
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                   07362
         MVI   LINE-1,C' '                                               07363
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07364
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        07365
         ST    R6,SAVER6                                                 07366
         L     R6,SYSPRDCB                                               07367
         PUT   (6),LINE                                                  07368
         L     R6,SAVER6                                                 07369
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               07370
         B     ASCEOVY1                                                  07371
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       07372
ASCEOVY1 DS    0H                                                        07373
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07374
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07375
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.        07376
         TM    PARMFLG1,X'01'          Is block count correction on?     07377
         BZ    NOTASCEV                No-don't plug in corrected value  07378
ASCBLKV1 DS    0H                                                        07379
         ST    R5,R5HXPRT              Save register.                    07380
         L     R5,SAVTRTCS             Point to translation table CSECT  07381
         USING TRTDSECT,R5                                               07382
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07383
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07384
         L     R5,R5HXPRT              Restore R5                        07385
         DROP  R5                                                        07386
         MVC   INAREA+54(6),BLKCNASC+4                                   07387
NOTASCEV DS    0H                                                        07388
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07389
* ---------------- LABEL DUMPING CODE --------------------- *            07390
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07391
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                 07392
         ST    R7,SAVE7LDM          Save BAL register.                   07393
         LA    R4,INAREA            Point to area to be dumped.          07394
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07395
         L     R7,SAVE7LDM          Restore BAL register.                07396
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            07397
* ---------------- LABEL DUMPING CODE --------------------- *            07398
*** --- >>  Security off?  -  below
         TM    PARMFLG6,X'10'       Turn off security indics in labels?
         BZ    NOSECAV1             No. Don't affect these fields.
         MVI   INAREA+53,X'20'      Move in ASCII blank.
NOSECAV1 DS    0H
*** --- >>  Security off?  -  above
* --- >      Print  Labels     - -   below                               07399
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?               07400
         BZ    ASCEOV1Z                NO. DON'T PRINT.                  07401
*                                                                        07402
* ------ Call PRINTLBL routine to print this label.....   below          07403
         ST    R7,SAVE7BA2        Save BAL register.                     07404
         BAL   R7,PRNTLABL        Print the current label.               07405
         L     R7,SAVE7BA2                                               07406
* ------ Call PRINTLBL routine to print this label.....   above          07407
*                                                                        07408
ASCEOV1Z DS    0H                                                        07409
* --- >      Print  Labels     - -   above                               07410
         B     LABCHEND                                                  07411
ASCEOV2  DS    0H                    ASCII EOV 2                         07412
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07413
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.    07414
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2          07415
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                  07416
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY              07417
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN             07418
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                         07419
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                  07420
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE          07421
         B     ASCEOVY2                                                  07422
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.                07423
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE          07424
ASCEOVY2 DS    0H                                                        07425
* ---------------- LABEL DUMPING CODE --------------------- *            07426
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07427
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                 07428
         ST    R7,SAVE7LDM          Save BAL register.                   07429
         LA    R4,INAREA            Point to area to be dumped.          07430
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07431
         L     R7,SAVE7LDM          Restore BAL register.                07432
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           07433
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            07434
* ---------------- LABEL DUMPING CODE --------------------- *            07435
ASCEOV2N DS    0H                                                        07436
* --- >      Print  Labels     - -   below                               07437
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?               07438
         BZ    ASCEOV2Z                NO. DON'T PRINT.                  07439
*                                                                        07440
* ------ Call PRINTLBL routine to print this label.....   below          07441
         ST    R7,SAVE7BA2        Save BAL register.                     07442
         BAL   R7,PRNTLABL        Print the current label.               07443
         L     R7,SAVE7BA2                                               07444
* ------ Call PRINTLBL routine to print this label.....   above          07445
*                                                                        07446
ASCEOV2Z DS    0H                                                        07447
* --- >      Print  Labels     - -   above                               07448
         B     LABCHEND                                                  07449
ASCEOVO  DS    0H                    ASCII Other EOV labels              07450
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07451
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED.  07452
*                                                                        07453
* ------ Call PRINTLBL routine to print this label.....   below          07454
         ST    R7,SAVE7BA2        Save BAL register.                     07455
         BAL   R7,PRNTLABL        Print the current label.               07456
         L     R7,SAVE7BA2                                               07457
* ------ Call PRINTLBL routine to print this label.....   above          07458
*                                                                        07459
* ---------------- LABEL DUMPING CODE --------------------- *            07460
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07461
         BZ    AEOVOND              NO. SKIP PUTTING OUT                 07462
         ST    R7,SAVE7LDM          Save BAL register.                   07463
         LA    R4,INAREA            Point to area to be dumped.          07464
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07465
         L     R7,SAVE7LDM          Restore BAL register.                07466
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE            07467
* ---------------- LABEL DUMPING CODE --------------------- *            07468
ASCEOVE  DS    0H                                                        07469
         B     LABCHEND                                                  07470
ASCUVL   DS    0H                                                        07471
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07472
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG      07473
*                                                                        07474
* ------ Call PRINTLBL routine to print this label.....   below          07475
         ST    R7,SAVE7BA2        Save BAL register.                     07476
         BAL   R7,PRNTLABL        Print the current label.               07477
         L     R7,SAVE7BA2                                               07478
* ------ Call PRINTLBL routine to print this label.....   above          07479
*                                                                        07480
* ---------------- LABEL DUMPING CODE --------------------- *            07481
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07482
         BZ    AUVLEND              NO. SKIP PUTTING OUT                 07483
         ST    R7,SAVE7LDM          Save BAL register.                   07484
         LA    R4,INAREA            Point to area to be dumped.          07485
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07486
         L     R7,SAVE7LDM          Restore BAL register.                07487
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE            07488
* ---------------- LABEL DUMPING CODE --------------------- *            07489
ASCUVLE  DS    0H                                                        07490
         B     LABCHEND                                                  07491
ASCUHL   DS    0H                                                        07492
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07493
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG      07494
*                                                                        07495
* ------ Call PRINTLBL routine to print this label.....   below          07496
         ST    R7,SAVE7BA2        Save BAL register.                     07497
         BAL   R7,PRNTLABL        Print the current label.               07498
         L     R7,SAVE7BA2                                               07499
* ------ Call PRINTLBL routine to print this label.....   above          07500
*                                                                        07501
* ---------------- LABEL DUMPING CODE --------------------- *            07502
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07503
         BZ    AUHLEND              NO. SKIP PUTTING OUT                 07504
         ST    R7,SAVE7LDM          Save BAL register.                   07505
         LA    R4,INAREA            Point to area to be dumped.          07506
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07507
         L     R7,SAVE7LDM          Restore BAL register.                07508
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE            07509
* ---------------- LABEL DUMPING CODE --------------------- *            07510
ASCUHLE  DS    0H                                                        07511
         B     LABCHEND                                                  07512
ASCUTL   DS    0H                                                        07513
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07514
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG      07515
*                                                                        07516
* ------ Call PRINTLBL routine to print this label.....   below          07517
         ST    R7,SAVE7BA2        Save BAL register.                     07518
         BAL   R7,PRNTLABL        Print the current label.               07519
         L     R7,SAVE7BA2                                               07520
* ------ Call PRINTLBL routine to print this label.....   above          07521
*                                                                        07522
* ---------------- LABEL DUMPING CODE --------------------- *            07523
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07524
         BZ    AUTLEND              NO. SKIP PUTTING OUT                 07525
         ST    R7,SAVE7LDM          Save BAL register.                   07526
         LA    R4,INAREA            Point to area to be dumped.          07527
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07528
         L     R7,SAVE7LDM          Restore BAL register.                07529
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE            07530
* ---------------- LABEL DUMPING CODE --------------------- *            07531
ASCUTLE  DS    0H                                                        07532
         B     LABCHEND                                                  07533
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG               07534
LABCHEND DS    0H                                                        07535
         BR    R7                                                        07536
* --------------------------------------------------------- *            07537
*    BAL REGISTER IS R7.                                                 07538
* --------------------------------------------------------- *            07539
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            07540
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              07541
* --------------------------------------------------------- *            07542
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          07543
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07544
         BE    MOVEHI09                                                  07545
         MVC   0(4,R3),0(R2)                                             07546
         B     MOVEHIEN                                                  07547
         LA    R2,1(,R2)                                                 07548
         LA    R3,1(,R3)                                                 07549
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07550
         BE    MOVEHI08                                                  07551
         MVC   0(3,R3),0(R2)                                             07552
         B     MOVEHIEN                                                  07553
         LA    R2,1(,R2)                                                 07554
         LA    R3,1(,R3)                                                 07555
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07556
         BE    MOVEHI07                                                  07557
         MVC   0(2,R3),0(R2)                                             07558
         B     MOVEHIEN                                                  07559
         LA    R2,1(,R2)                                                 07560
         LA    R3,1(,R3)                                                 07561
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        07562
         BE    MOVEHIEN                                                  07563
         MVC   0(1,R3),0(R2)                                             07564
MOVEHIEN BR    R7                                                        07565
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07566
*    BAL REGISTER IS R7.                                                 07567
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07568
*              Upon entry, R4 points to the 80-byte record               07569
*              to be dumped into the LABLDUMP DD.                        07570
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07571
DUMLABRC DS    0H                                                        07572
         TM    PARMFLG2,X'10'       Are we dumping labels?               07573
         BZ    DUMLABRN             No. Skip putting out.                07574
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.         07575
         MVC   LLINE(80),0(R4)      Move in record info to line.         07576
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             07577
         BZ    NOASCIID             No. Don't translate label bytes.     07578
         MVI   LLINE,X'20'                  Clear to ASCII blanks        07579
         MVC   LLINE+1(L'LLINE-1),LLINE                                  07580
         MVC   LLINE(80),0(R4)      Move in record info to line.         07581
         ST    R5,SAVE5LDM          Save register.                       07582
         L     R5,SAVTRTCS          Point to translation table CSECT     07583
         USING TRTDSECT,R5          Map it.                              07584
         TM    ATRNLFLG,X'01'       Is this record to be translated?     07585
         BZ    ANOTRANS             No. Dump it as is.                   07586
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII   07587
ANOTRANS DS    0H                                                        07588
         L     R5,SAVE5LDM          Restore register.                    07589
         DROP  R5                                                        07590
NOASCIID DS    0H                                                        07591
         ST    R6,SAVER6            Prepare to write record. Save reg.   07592
         L     R6,LABLDDCB          Point to LABLDUMP DCB.               07593
         PUT   (6),LLINE                                                 07594
         L     R6,SAVER6            Restore register.                    07595
*        PUT   LABLDUMP,LLINE       Write out label info.                07596
DUMLABRN DS    0H                                                        07597
         BR    R7                                                        07598
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07599
*    BAL REGISTER IS R4.                                                 07600
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07601
HEX      DS    0H                                                        07602
         MVC   1(1,R15),0(R1)        Move byte                           07603
         UNPK  0(3,R15),1(2,R15)     Unpack                              07604
         TR    0(2,R15),HEXTAB-240                                       07605
         LA    R15,2(,R15)           Increment output pointer            07606
         LA    R1,1(,R1)             Increment input pointer             07607
         BCT   R0,HEX                Decrement length, then loop         07608
         MVI   0(R15),C' '           Blank the trailing byte             07609
         BR    R4                    Return to caller                    07610
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     07611
         SPACE                                                           07612
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07613
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07614
*    BAL REGISTER IS R7.                                                 07615
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07616
PRNTLABL DS    0H                                                        07617
*                                                                        07618
* ------ Call PRINTLBL routine to print this label.....   below          07619
         L     R15,PRTLBENT       Get entry point of called program      07620
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       07621
         LA    R1,PARMFLGS        Point R1 to parm flags.                07622
         L     R3,=A(INAREA)      Point R3 to address of input area.     07623
         BALR  R14,R15                 Do CALL.                          07624
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     07625
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA        07626
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    07627
* ------ Call PRINTLBL routine to print this label.....   above          07628
*                                                                        07629
         BR    R7                                                        07630
* --------------------------------------------------------- *            07631
* ---        C O N S T A N T S                          --- *            07632
* --------------------------------------------------------- *            07633
*    ------------------------ >   Constants for Date and Time - below    07634
SAVE1402 DS    6F                 Extra fullword for safety              07635
TIMED    DS    CL7                                                       07636
DATED    DS    CL9                                                       07637
DATETIME DS    4F                                                        07638
         ORG   DATETIME                                                  07639
TIME     DS    CL4                                                       07640
         DS    CL4                                                       07641
DATE     DS    CL5                                                       07642
         DS    CL3                                                       07643
HEADDLIT DS    0CL31              Literal for headings - date and time   07644
         DC    CL6'Today:'                                               07645
         DC    CL2' '                                                    07646
HEADDATE DC    CL23' '                                                   07647
LEVELLIT DS    0CL21              Level number display for headings      07648
         DC    CL6'Level '                                               07649
LEVELL   DC    CL4'&LLEV'                                                07650
         DC    CL2' ('                                                   07651
LEVDATE  DC    CL8' '             Assembly date for this program         07652
         DC    CL1')'                                                    07653
*    ------------------------ >   Constants for Date and Time - above    07654
         LTORG                                                           07655
FF       EQU   X'FF'                                                     07656
LABELITH DC    CL80'----ENDOFLABELHEADER '                               07657
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            07658
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               07659
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            07660
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR- 07661
               AM              '                                         07662
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '             07663
         DC    C'EOV2EOF PARM OR OPTION'                                 07664
         DC    69C' '                                                    07665
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  07666
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  07667
         DC    C'                           '                            07668
         DC    C'0'                                                      07669
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    07670
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              07671
* --------------------------------------------------------- *            07672
         DC    C' '                                                      07673
LINE     DC    CL133' '                                                  07674
* ---------------------  Register Save Areas  ---------------->>>        07675
SYSPRINV DC    V(SYSPRINT)                                               07676
LABLDUMV DC    V(LABLDUMP)                                               07677
LABADDIV DC    V(LABADDIN)                                               07678
SAVTRTCS DC    F'0'                                                      07679
PRTLBENT DC    F'0'                                                      07680
PARMSAVE DC    F'0'                                                      07681
USERSAVE DC    F'0'                                                      07682
INARSAVE DC    F'0'                                                      07683
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     07684
HEXSAVE  DS    3F                    Register save for HEX macro         07685
SAVE2TO3 DC    2F'0'                                                     07686
SAVER6   DC    F'0'                                                      07687
SAVE3REG DC    F'0'                                                      07688
SAVE7BA1 DC    F'0'                                                      07689
SAVE7BA2 DC    F'0'                                                      07690
SAVE7REG DC    F'0'                                                      07691
SAVE7BAL DC    F'0'                                                      07692
SAVE4LDM DC    F'0'                                                      07693
SAVE5LDM DC    F'0'                                                      07694
R5HXPRT  DC    F'0'                                                      07695
SAVE7LDM DC    F'0'                                                      07696
SAVE7RG1 DC    F'0'                                                      07697
SAVE7RG2 DC    F'0'                                                      07698
SAVE7RG3 DC    F'0'                                                      07699
SAVE7RG4 DC    F'0'                                                      07700
SAVE7RG5 DC    F'0'                                                      07701
SAVE13LC DC    3F'0'                                                     07702
* ---------- *           Save V(CON)s to DCBs                            07703
SYSPRDCB DC    F'0'                                                      07704
LABLDDCB DC    F'0'                                                      07705
LABADDCB DC    F'0'                                                      07706
* ---------- *                                                           07707
         DC    C' '          BLANK FOR CLEARING AREA                     07708
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                  07709
INASCI   DC    CL80' '       Read labels from here.                      07710
INAREA   DC    CL80' '       Read labels from here.                      07711
         DC    CL40' '       Padding for possible overflow.              07712
* ---------- *                                                           07713
**** ----------------------------------->>>>  Passed area, below         07714
* --------------------------------------------------------- *            07715
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           07716
PARMFLG1 DC    X'00'                                                     07717
PARMFLG2 DC    X'00'                                                     07718
PARMFLG3 DC    X'00'                                                     07719
PARMFLG4 DC    X'00'                                                     07720
PARMFLG5 DC    X'00'                                                     07721
PARMFLG6 DC    X'00'                                                     07722
PARMFLG7 DC    X'00'                                                     07723
PARMFLG8 DC    X'00'                                                     07724
PARMFLG9 DC    X'00'                                                     07725
PARMFLGA DC    X'00'                                                     07726
PARMFLLN EQU   *-PARMFLGS                                                07727
* --------------------------------------------------------- *            07728
**** ----- LABELCHK -------------------->>>>  Passed area, below         07729
*                                                                        07730
LCHKPASS DS    0H                                                        07731
*                                                                        07732
INAREAX  DC    CL80' '        Read labels into here.                     07733
         DC    CL40' '        Padding for possible overflow.             07734
* --------------------------------------------------------- *            07735
*                                                                        07736
*                                                                        07737
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       07738
*              X'00'          DATA IS NOT A LABEL                        07739
*              X'01'          DATA IS A LABEL                            07740
*              X'02'          DATA IS AN ASCII LABEL                     07741
*                                                                        07742
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               07743
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             07744
*              X'02'          BECAUSE OF SYSIN    DD MISSING             07745
*              X'04'          BECAUSE OF LABADDIN DD MISSING             07746
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                07747
*              X'01'          LABLDUMP DD IS OPEN                        07748
*              X'02'          SYSIN    DD IS OPEN                        07749
*              X'04'          LABADDIN DD IS OPEN                        07750
L80FLAG  DC    X'00'                                                     07751
*              X'01'          LAST DATA WAS 80 BYTE RECORD               07752
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    07753
*              X'01'          HDR1 HAS BEEN SEEN                         07754
*              X'02'          HDR2 HAS BEEN SEEN                         07755
*              X'04'          VOL1 HAS BEEN SEEN                         07756
*              X'08'          HDR1 IS FROM AN INITTED TAPE               07757
*              X'10'          EOF1 HAS BEEN SEEN                         07758
*              X'20'          EOF2 HAS BEEN SEEN                         07759
*              X'40'          EOV1 HAS BEEN SEEN                         07760
*              X'80'          EOV2 HAS BEEN SEEN                         07761
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    07762
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           07763
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   07764
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          07765
CLOSMFLG DC    X'00'          If X'01' then close all open files         07766
* --------------------------                                             07767
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     07768
*              X'01'          WE ARE IN A HDR GROUP                      07769
*              X'02'          WE ARE IN A EOF GROUP                      07770
*              X'04'          WE ARE IN A EOV GROUP                      07771
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    07772
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    07773
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       07774
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     07775
* ---------- *                                                           07776
* --------------------------------------------------------- *            07777
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        07778
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           07779
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           07780
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           07781
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             07782
VOLCHG   DC    C'      '                                                 07783
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        07784
VOLASC   DC    C'      '     ASCII VOLUME                                07785
LCHKPASE EQU   *-LCHKPASS                                                07786
**** ----- LABELCHK -------------------->>>>  Passed area, above         07787
** ---------------------------------------------------------------- **   07788
TRTDSECT DSECT                 Displacements must match TRTCSECT.        07789
TRTBL0   DS    256X                                                      07790
TRTBL1   DS    256X                                                      07791
TRTBL2   DS    256X                                                      07792
TRTE2A   DS    256X                                                      07793
TRTA2E   DS    256X                                                      07794
TRTASPRT DS    256X                                                      07795
** ---------------------------------------------------------------- **   07796
         END                                                             07797
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 01/01/04               07798
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'              07799
         GBLC  &LLEV                                                     07800
&LLEV    SETC  '1.1 '                                                    07801
         YREGS                                                           07802
         ENTRY PRINTLBL                                                  07803
PRINTLBL CSECT                                                           07804
         USING *,R15                                                     07805
         B     EYECATCH                                                  07806
         DC    C'--- '            MAKE EYECATCHER VISIBLE                07807
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'         07808
         DC    C' - '                                                    07809
         DC    C'LEVEL '                                                 07810
SYSLEV   DC    C'&LLEV'                                                  07811
         DC    C' - '                                                    07812
SYSDAT   DC    C'&SYSDATE'                                               07813
         DC    C'  ',C'&SYSTIME ',C'--- '                                07814
         DC    C'Copyright (c) 2003 by Sam Golob '                       07815
         DC    C'--- '              MAKE EYECATCHER VISIBLE              07816
SAVEAREA DC    18F'0'                                                    07817
EYECATCH DS    0D                   ENSURE ALIGNMENT                     07818
         SAVE  (14,12)                                                   07819
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     07820
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   07821
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          07822
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         07823
         LR    R13,R1               NEW SAVE AREA ADDRESS                07824
         DROP  R15                                                       07825
* -----                             SET UP BASE REGISTERS                07826
         USING PRINTLBL,R12,R11,R10,R9                                   07827
         LR    R12,R15                                                   07828
         LA    R11,4095(,R12)                                            07829
         LA    R11,1(,R11)                                               07830
         LA    R10,4095(,R11)                                            07831
         LA    R10,1(,R10)                                               07832
         LA    R9,4095(,R10)                                             07833
         LA    R9,1(,R9)                                                 07834
         LR    R1,R5                RESTORE REGISTER 1 INPUT             07835
* ----------------------------------------------------------------- *    07836
         ST    R1,PARMSAVE          Address of parm flags in caller      07837
         ST    R3,INARSAVE          Address of input area in caller      07838
* ----------------------------------------------------------------- *    07839
INITCONS DS    0H                    Initialize necessary quantities.    07840
         MVI   LINE-1,X'40'          Make sure the print line is blank.  07841
         MVC   LINE,LINE-1                                               07842
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      07843
         ST    R0,SYSPRDCB             store for the program's use       07844
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      07845
         ST    R0,LABLDDCB             store for the program's use       07846
         L     R0,LABADDIV           LABADDIN DCB address in caller      07847
         ST    R0,LABADDCB             store for the program's use       07848
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    07849
         ST    R0,SAVTRTCS             store it for later use            07850
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.      07851
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.   07852
* ----------------------------------------------------------------- *    07853
WHATLBL  DS    0H                                                        07854
         CLC   EXTLBLIN(4),=C'VOL1'                                      07855
         BE    WHATLBLE                                                  07856
         CLC   EXTLBLIN(4),=C'HDR1'                                      07857
         BE    WHATLBLE                                                  07858
         CLC   EXTLBLIN(4),=C'EOF1'                                      07859
         BE    WHATLBLE                                                  07860
         CLC   EXTLBLIN(4),=C'EOV1'                                      07861
         BE    WHATLBLE                                                  07862
         CLC   EXTLBLIN(4),=C'HDR2'                                      07863
         BE    WHATLBLE                                                  07864
         CLC   EXTLBLIN(4),=C'EOF2'                                      07865
         BE    WHATLBLE                                                  07866
         CLC   EXTLBLIN(4),=C'EOV2'                                      07867
         BE    WHATLBLE                                                  07868
         CLC   EXTLBLIN(3),=C'UHL'                                       07869
         BE    WHATLBLE                                                  07870
         CLC   EXTLBLIN(3),=C'UTL'                                       07871
         BE    WHATLBLE                                                  07872
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    07873
         BE    WHATLBLA                                                  07874
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    07875
         BE    WHATLBLA                                                  07876
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    07877
         BE    WHATLBLA                                                  07878
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    07879
         BE    WHATLBLA                                                  07880
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    07881
         BE    WHATLBLA                                                  07882
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    07883
         BE    WHATLBLA                                                  07884
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    07885
         BE    WHATLBLA                                                  07886
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    07887
         BE    WHATLBLA                                                  07888
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    07889
         BE    WHATLBLA                                                  07890
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    07891
         BE    WHATLBLA                                                  07892
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    07893
         BE    WHATLBLA                                                  07894
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    07895
         BE    WHATLBLA                                                  07896
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    07897
         BE    WHATLBLA                                                  07898
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    07899
         BE    WHATLBLA                                                  07900
         B     NOPRTEXT                    Not a label format            07901
*                                                                        07902
WHATLBLE DS    0H                          EBCDIC Labels                 07903
*                                          Go to appropriate routine     07904
         CLC   EXTLBLIN(4),=C'VOL1'                                      07905
         BE    PXTVOL1                                                   07906
         CLC   EXTLBLIN(4),=C'HDR1'                                      07907
         BE    PXT1PR                                                    07908
         CLC   EXTLBLIN(4),=C'EOF1'                                      07909
         BE    PXT1PR                                                    07910
         CLC   EXTLBLIN(4),=C'EOV1'                                      07911
         BE    PXT1PR                                                    07912
         CLC   EXTLBLIN(4),=C'HDR2'                                      07913
         BE    PXT2PR                                                    07914
         CLC   EXTLBLIN(4),=C'EOF2'                                      07915
         BE    PXT2PR                                                    07916
         CLC   EXTLBLIN(4),=C'EOV2'                                      07917
         BE    PXT2PR                                                    07918
         CLC   EXTLBLIN(3),=C'UHL'                                       07919
         BE    PXTUSE                                                    07920
         CLC   EXTLBLIN(3),=C'UTL'                                       07921
         BE    PXTUSE                                                    07922
         B     NOPRTEXT                    Not a label format            07923
WHATLBLA DS    0H                          ASCII  Labels                 07924
*                                                                        07925
*        Common ASCII preparation routines......                         07926
*                                                                        07927
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    07928
*                                                                        07929
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.      07930
         ST    R5,R5HXPRT              Save register.                    07931
         L     R5,SAVTRTCS             Point to translation table CSECT  07932
         USING TRTDSECT,R5                                               07933
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea       07934
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print     07935
         L     R5,R5HXPRT              Restore R5                        07936
         DROP  R5                                                        07937
* -- >                                                                   07938
*                                                                        07939
*        ASCII preparations done......                                   07940
*                                          Go to appropriate routine     07941
*                                                                        07942
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    07943
         BE    PXTVOL1A                                                  07944
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    07945
         BE    PXT1PRA                                                   07946
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    07947
         BE    PXT1PRA                                                   07948
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    07949
         BE    PXT1PRA                                                   07950
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    07951
         BE    PXT2PRA                                                   07952
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    07953
         BE    PXT2PRA                                                   07954
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    07955
         BE    PXT2PRA                                                   07956
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    07957
         BE    PXTUSEA                                                   07958
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    07959
         BE    PXTUSEA                                                   07960
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    07961
         BE    PXTUSEA                                                   07962
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    07963
         BE    PXTUSEA                                                   07964
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    07965
         BE    PXTUSEA                                                   07966
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    07967
         BE    PXTUSEA                                                   07968
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    07969
         BE    PXTUSEA                                                   07970
         B     NOPRTEXT                    Not a label format            07971
* ----------------------------------------------------------------- *    07972
*                                                                   *    07973
*   Various Label Printing Routines follow at this point.           *    07974
*                                                                   *    07975
* ----------------------------------------------------------------- *    07976
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label           07977
         MVI   LINE-1,C' '                                               07978
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  07979
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             07980
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL              07981
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS             07982
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION              07983
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          07984
         ST    R6,SAVER6                                                 07985
         L     R6,SYSPRDCB                                               07986
         PUT   (6),LINE                                                  07987
         L     R6,SAVER6                                                 07988
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         07989
         B     NOPRTEXT                                                  07990
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label           07991
         MVI   LINE-1,C' '                                               07992
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  07993
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             07994
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL              07995
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS             07996
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION              07997
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4     07998
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message        07999
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          08000
         ST    R6,SAVER6                                                 08001
         L     R6,SYSPRDCB                                               08002
         PUT   (6),LINE                                                  08003
         L     R6,SAVER6                                                 08004
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         08005
         B     NOPRTEXT                                                  08006
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label           08007
         ST    R3,SAVE3REG                                               08008
         LA    R3,EXTLBLIN                                               08009
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08010
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT           08011
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08012
         L     R3,SAVE3REG                                               08013
         B     NOPRTEXT                                                  08014
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label           08015
         ST    R3,SAVE3REG                                               08016
         LA    R3,EXTLBLWK             Point to label area to print      08017
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08018
         BAL   R7,PRTXXX1              PRINT LABEL INFO                  08019
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08020
         L     R3,SAVE3REG                                               08021
         B     NOPRTEXT                                                  08022
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label           08023
         ST    R3,SAVE3REG                                               08024
         LA    R3,EXTLBLIN             Point to label area to print      08025
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08026
         BAL   R7,PRTXXX2              PRINT LABEL INFO                  08027
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08028
         L     R3,SAVE3REG                                               08029
         B     NOPRTEXT                                                  08030
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label           08031
         ST    R3,SAVE3REG                                               08032
         LA    R3,EXTLBLWK             Point to label area to print      08033
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08034
         BAL   R7,PRTAXX2              PRINT LABEL INFO                  08035
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08036
         L     R3,SAVE3REG                                               08037
         B     NOPRTEXT                                                  08038
PXTUSE   DS    0H                      Print EBCDIC USER Label           08039
         ST    R3,SAVE3REG                                               08040
         LA    R3,EXTLBLIN             Point to label area to print      08041
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08042
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08043
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08044
         L     R3,SAVE3REG                                               08045
         B     NOPRTEXT                                                  08046
PXTUSEA  DS    0H                      Print ASCII  USER Label           08047
         ST    R3,SAVE3REG                                               08048
         LA    R3,EXTLBLWK             Point to label area to print      08049
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08050
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08051
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08052
         L     R3,SAVE3REG                                               08053
         B     NOPRTEXT                                                  08054
* ----------------------------------------------------------------- *    08055
NOPRTEXT DS    0H             Don't print external label on report       08056
* ----------------------------------------------------------------- *    08057
THEEND   DS    0H                                                        08058
         L     R13,4(,R13)                                               08059
         MVC   16(4,R13),=F'0'          Return code 0     in R15         08060
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     08061
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    08062
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3    08063
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08064
         LM    R14,R12,12(R13)                                           08065
         BR    R14                                                       08066
         EJECT                                                           08067
* --------------------------------------------------------- *            08068
*    BAL REGISTER IS R7.                                                 08069
* --------------------------------------------------------- *            08070
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII     08071
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08072
         MVI   LINE-1,C' '                                               08073
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08074
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08075
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS               08076
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL                08077
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS               08078
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                        08079
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS               08080
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER             08081
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS               08082
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER              08083
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS               08084
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS              08085
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               08086
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         08087
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS               08088
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS              08089
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS               08090
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS              08091
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE                08092
         ST    R6,SAVER6                                                 08093
         L     R6,SYSPRDCB                                               08094
         PUT   (6),LINE                                                  08095
         L     R6,SAVER6                                                 08096
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08097
PRTXXX1R BR    R7                                                        08098
* --------------------------------------------------------- *            08099
*    BAL REGISTER IS R7.                                                 08100
* --------------------------------------------------------- *            08101
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC        08102
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08103
         MVI   LINE-1,C' '                                               08104
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08105
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08106
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08107
         MVC   XXX2RFM(1),4(R3)      RECFM                               08108
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                     08109
         MVC   XXX2RFM+2(1),36(R3)   Control Character                   08110
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08111
         CLC   =C'00000',5(R3)       Is Block Length 00000?              08112
         BNE   PRX2NLBI              No. No LBI. Print what's here.      08113
         CLI   70(R3),X'40'          Is first LBI field a blank?         08114
         BNE   PRX2NLBI              No LBI field either. Print zeros.   08115
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display   08116
         B     PRX2LBI               And not the old blksize field.      08117
PRX2NLBI DS    0H                                                        08118
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                        08119
PRX2LBI  DS    0H                                                        08120
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08121
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                       08122
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08123
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                        08124
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08125
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                      08126
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS               08127
         CLI   34(R3),C'P'           INDICATE IDRC?                      08128
         BNE   PRX2NOI               NO. SAY NO                          08129
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                   08130
         B     PRX2MOV                                                   08131
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                        08132
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE                08133
         ST    R6,SAVER6                                                 08134
         L     R6,SYSPRDCB                                               08135
         PUT   (6),LINE                                                  08136
         L     R6,SAVER6                                                 08137
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08138
PRTXXX2R BR    R7                                                        08139
* --------------------------------------------------------- *            08140
*    BAL REGISTER IS R7.                                                 08141
* --------------------------------------------------------- *            08142
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII         08143
*                                                                        08144
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.    08145
*                                                                        08146
         MVI   LINE-1,C' '                                               08147
         MVC   LINE,LINE-1           CLEAR PRINT LINE                    08148
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE          08149
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08150
         MVC   AXX2RFM(1),4(R3)      RECFM                               08151
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                     08152
         MVC   AXX2RFM+2(1),36(R3)   Control Character                   08153
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08154
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                        08155
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08156
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                       08157
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08158
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                        08159
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08160
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                      08161
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS               08162
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                   08163
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE             08164
         ST    R6,SAVER6                                                 08165
         L     R6,SYSPRDCB                                               08166
         PUT   (6),LINE                                                  08167
         L     R6,SAVER6                                                 08168
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL              08169
PRTAXX2R BR    R7                                                        08170
* --------------------------------------------------------- *            08171
*    BAL REGISTER IS R7.                                                 08172
* --------------------------------------------------------- *            08173
PRTUSER  DS    0H                                                        08174
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08175
         MVI   LINE-1,C' '                                               08176
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08177
         MVI   USERLBL-1,C' '                                            08178
         MVC   USERLBL(133),USERLBL-1                                    08179
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          08180
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                08181
         ST    R6,SAVER6                                                 08182
         L     R6,SYSPRDCB                                               08183
         PUT   (6),LINE                                                  08184
         L     R6,SAVER6                                                 08185
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08186
PRTUSERR BR    R7                                                        08187
* ----------------------------------------------------------------- *    08188
* ---               C  O  N  S  T  A  N  T  S                   --- *    08189
* ----------------------------------------------------------------- *    08190
         LTORG                                                           08191
FF       EQU   X'FF'                                                     08192
LABELITH DC    CL80'----ENDOFLABELHEADER '                               08193
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            08194
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               08195
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            08196
         DC    C'0'                                                      08197
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    08198
         DC    X'30'                                                     08199
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              08200
* --------------------------------------------------------- *            08201
         DC    C' '                                                      08202
LINE     DC    CL133' '                                                  08203
* ---------------------  Register Save Areas  ---------------->>>        08204
SYSPRINV DC    V(SYSPRINT)                                               08205
LABLDUMV DC    V(LABLDUMP)                                               08206
LABADDIV DC    V(LABADDIN)                                               08207
SAVTRTCS DC    F'0'                                                      08208
SYSPRDCB DC    F'0'                                                      08209
LABLDDCB DC    F'0'                                                      08210
LABADDCB DC    F'0'                                                      08211
SAVER6   DC    F'0'                                                      08212
SAVE3REG DC    F'0'                                                      08213
SAVE7BA1 DC    F'0'                                                      08214
SAVE7REG DC    F'0'                                                      08215
SAVE7BAL DC    F'0'                                                      08216
SAVE4LDM DC    F'0'                                                      08217
SAVE5LDM DC    F'0'                                                      08218
R5HXPRT  DC    F'0'                                                      08219
SAVE7LDM DC    F'0'                                                      08220
SAVE7RG1 DC    F'0'                                                      08221
SAVE7RG2 DC    F'0'                                                      08222
SAVE7RG3 DC    F'0'                                                      08223
SAVE7RG4 DC    F'0'                                                      08224
* ----------------------------------------------------------------- *    08225
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW    08226
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '              08227
VOL1SER  DC    C'      '                                                 08228
VOL1OWNT DC    C'     OWNER = '                                          08229
VOL1OWNR DC    C'          '                                             08230
VOL1OWNE DC    C'    '                                                   08231
VOL1BLNK DC    59C' '                                                    08232
         DC    C' '                                                      08233
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW    08234
USERLBL  DC    81C' '                                                    08235
         DC    52C' '                                                    08236
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW    08237
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                  08238
XXX1VOL  DC    C'      '                                                 08239
XXX1DSNL DC    C' DSN='                                                  08240
XXX1DSN  DC    C'                 '                                      08241
XXX1DSQL DC    C' DS SEQ #: '                                            08242
XXX1DSQ  DC    C'    '                                                   08243
XXX1VSQL DC    C' VOL SEQ #: '                                           08244
XXX1VSQ  DC    C'    '                                                   08245
XXX1BLCL DC    C' BLK CNT: '                                             08246
XXX1BLCH DC    C'    '                                                   08247
XXX1BLC  DC    C'      '                                                 08248
XXX1CRDL DC    C' CRDATE: '                                              08249
XXX1CRD  DC    C'      '                                                 08250
XXX1EXDL DC    C' EXDATE: '                                              08251
XXX1EXD  DC    C'      '                                                 08252
XXX1BLNK DC    30C' '                                                    08253
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW    08254
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08255
XXX2RFM  DC    C' '                                                      08256
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     08257
XXX2BKLE DS    0CL10                                                     08258
XXX2BKL  DC    C'     '                                                  08259
         DC    C'     '                                                  08260
XXX2RCLL DC    C'   RECORD LENGTH: '                                     08261
XXX2RCL  DC    C'     '                                                  08262
XXX2TDNL DC    C'  TAPE DEN: '                                           08263
XXX2TDN  DC    C' '                                                      08264
XXX2JSTL DC    C'   JOB/JOB STEP: '                                      08265
XXX2JST  DC    C'                 '                                      08266
XXX2IDRL DC    C'   IDRC? '                                              08267
XXX2IDR  DC    C'   '                                                    08268
XXX2BLNK DC    8C' '                                                     08269
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW    08270
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08271
AXX2RFM  DC    C' '                                                      08272
AXX2BKLL DC    C'    BLOCK LENGTH: '                                     08273
AXX2BKLE DS    0CL10                                                     08274
AXX2BKL  DC    C'     '                                                  08275
         DC    C'     '                                                  08276
AXX2RCLL DC    C'   RECORD LENGTH: '                                     08277
AXX2RCL  DC    C'     '                                                  08278
AXX2TDNL DC    C'  TAPE DEN: '                                           08279
AXX2TDN  DC    C' '                                                      08280
AXX2JSTL DC    C'   JOB/JOB STEP: '                                      08281
AXX2JST  DC    C'                 '                                      08282
AXX2CCSL DC    C'   CCSID '                                              08283
AXX2CCS  DC    C'     '                                                  08284
AXX2BLNK DC    6C' '                                                     08285
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE    08286
* --------------------------------------------------------- *            08287
* ----------------------------------------------------------------- *    08288
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          08289
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      08290
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 08291
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  08292
PARMSAVE DC    F'0'                                                      08293
USERSAVE DC    F'0'                                                      08294
INARSAVE DC    F'0'                                                      08295
** ---------------------------------------------------------------- **   08296
**** ----------------------------------->>>>  Passed area, below         08297
* --------------------------------------------------------- *            08298
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08299
PARMFLG1 DC    X'00'                                                     08300
PARMFLG2 DC    X'00'                                                     08301
PARMFLG3 DC    X'00'                                                     08302
PARMFLG4 DC    X'00'                                                     08303
PARMFLG5 DC    X'00'                                                     08304
PARMFLG6 DC    X'00'                                                     08305
PARMFLG7 DC    X'00'                                                     08306
PARMFLG8 DC    X'00'                                                     08307
PARMFLG9 DC    X'00'                                                     08308
PARMFLGA DC    X'00'                                                     08309
PARMFLLN EQU   *-PARMFLGS                                                08310
* --------------------------------------------------------- *            08311
TRTDSECT DSECT                 Displacements must match TRTCSECT.        08312
TRTBL0   DS    256X                                                      08313
TRTBL1   DS    256X                                                      08314
TRTBL2   DS    256X                                                      08315
TRTE2A   DS    256X                                                      08316
TRTA2E   DS    256X                                                      08317
TRTASPRT DS    256X                                                      08318
** ---------------------------------------------------------------- **   08319
         END                                                             08320
