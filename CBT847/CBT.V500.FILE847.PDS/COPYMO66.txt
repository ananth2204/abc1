*          DATA SET CBT990     AT LEVEL 066 AS OF 08/21/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **           00031
**     in combination with each other, as long as they      **           00032
**     don't contradict each other.  In certain cases, the  **           00033
**     use of one option will cause the automatic turn-off  **           00034
**     of one or more other options that contradict with    **           00035
**     it.  This "adjustment" is done by the COPYMODS       **           00036
**     program just after it receives the options settings  **           00037
**     back from the PARMCHEK program.  For example, if     **           00038
**     both LABLDUMP and LABADDIN (which contradict each    **           00039
**     other) are set, COPYMODS will make a judgment that   **           00040
**     LABADDIN takes precedence, so it will turn off both  **           00041
**     the LABLDUMP and READ (read only) options.  On the   **           00042
**     other hand, the STRIP and LABLDUMP options do not    **           00043
**     contradict each other.  So in that case, when STRIP  **           00044
**     and LABLDUMP are both set, COPYMODS will dump all    **           00045
**     the labels from the input tape to the LABLDUMP file, **           00046
**     while at the same time, it will strip them from the  **           00047
**     tape copies.  To get the exact effect you want from  **           00048
**     a COPYMODS run, just be very careful to code the     **           00049
**     correct combination of options.  Look at the OPTIONS **           00050
**     report before you mount the tapes.  (The OPTIONS     **           00051
**     report in //SYSPRINT will be complete before the     **           00052
**     tapes are mounted.)                                  **           00053
**                                                          **           00054
**     Up to 132 bytes of the beginning n records of each   **           00055
**     tape file can be dumped in Hex, similarly to the     **           00056
**     way TAPESCAN does it (HEXPRT option).                **           00057
**                                                          **           00058
**     See the "New Features" section below for some more   **           00059
**     details.  See the #MANUAL member of the install pds  **           00060
**     (CBT Tape File 229) for even more details.           **           00061
**                                                          **           00062
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S     **           00063
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00064
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00065
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00066
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00067
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00068
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00069
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00070
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00071
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00072
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00073
**    PARTICULAR OUTPUT TAPE.                               **           00074
**                                                          **           00075
**  COPYMODS has some optional DD's which will be used      **           00076
**    if they are present.  These following DD's are used   **           00077
**    by the PARMCHEK program, when COPYMODS is executed.   **           00078
**                                                          **           00079
**  //SYSIN    - Extra space to enter PARM keywords.        **           00080
**               Also, the only place to enter the          **           00081
**               "quantity" keywords, which start in        **           00082
**               column 1 of a SYSIN card.                  **           00083
**                                                          **           00084
**         OUTVOLALL=volser      (up to 6 characters)       **           00085
**         TAPEOWNER=owner name  (up to 10 characters)      **           00086
**         FILELIMIT=nnn         (numeric)                  **           00087
**         LABELIMIT=nnn         (numeric)                  **           00088
**         PRINTRCDS=nnn         (numeric)                  **           00089
**                                                          **           00090
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00091
**               program.  LRECL=133,RECFM=FBA.             **           00092
**                                                          **           00093
**    In addition, the COPYMODS program itself has some     **           00094
**    extra DD's, which are required if the appropriate     **           00095
**    options are set:                                      **           00096
**                                                          **           00097
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00098
**               receive the images of all tape labels      **           00099
**               read, together with some control cards     **           00100
**               that COPYMODS generates.  This DD name     **           00101
**               is necessary if the LABLDUMP option is     **           00102
**               in effect.                                 **           00103
**                                                          **           00104
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00105
**               contains the set of labels to be spliced   **           00106
**               into an NL tape to create an SL tape.      **           00107
**               This DD name is necessary if the LABADDIN  **           00108
**               option of COPYMODS is in effect.  Usually  **           00109
**               the LABADDIN file is a previous result of  **           00110
**               a LABLDUMP operation, or it is an altered  **           00111
**               or edited version of a previously created  **           00112
**               LABLDUMP file.                             **           00113
**                                                          **           00114
**  This program has to be assembled with PARM=BATCH in     **           00115
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00116
**    program has to be included in the assembly, because   **           00117
**    PARMCHEK has to be fitted to the current level of     **           00118
**    the COPYMODS program.                                 **           00119
**                                                          **           00120
**************************************************************           00121
**                                                          **           00122
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00123
**                                                          **           00124
**  //IN       -  Points to the Input Tape.  Only not       **           00125
**                required in a tape init operation, if     **           00126
**                the INITVOLS option is in effect.         **           00127
**                Otherwise, //IN is always required.       **           00128
**                                                          **           00129
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00130
**  //OUT16       These are for the output tapes.  These    **           00131
**                are not required if the READ (readonly)   **           00132
**                option is in effect.  Any one of these    **           00133
**                16 possible DD names may be coded, even   **           00134
**                if some numbers have been skipped.  For   **           00135
**                instance, if you have one output tape,    **           00136
**                it may be defined by //OUT13.  It is      **           00137
**                not necessary to code //OUT1.             **           00138
**                                                          **           00139
**  //SYSPRINT  - The output dataset to contain all the     **           00140
**                COPYMODS operation information that was   **           00141
**                called for by the various options set,    **           00142
**                including the OPTIONS display itself.     **           00143
**                This dataset should be LRECL=133,         **           00144
**                RECFM=FBA.                                **           00145
**                                                          **           00146
**************************************************************           00147
**                                                          **           00148
**  PROGRAM STRUCTURE:                                      **           00149
**                                                          **           00150
**  This program is no longer a single CSECT as it was in   **           00151
**    the old days.  There are now the following CSECTs,    **           00152
**    which should all be assembled together:               **           00153
**                                                          **           00154
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00155
**                                                          **           00156
**   COPYMODS - The main processing module, which contains  **           00157
**              most of the tape copy/reading processing.   **           00158
**                                                          **           00159
**   TRTCSECT - The translate tables for Hex printing of    **           00160
**              tape records.                               **           00161
**                                                          **           00162
**   COPYMOPT - The separate routine which reads the PARM   **           00163
**              bits that have been set, and which prints   **           00164
**              a report in SYSPRINT showing the options    **           00165
**              that are in effect.                         **           00166
**                                                          **           00167
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00168
**              done here.  PARM bits are passed back to    **           00169
**              COPYMODS in R1, the User Area is passed     **           00170
**              back to COPYMODS in R2.                     **           00171
**                                                          **           00172
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00173
**              program, this table contains all the option **           00174
**              bit meanings and their default settings.    **           00175
**                                                          **           00176
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00177
**  but they must be coordinated, and at the same level, so **           00178
**  to be safe, they should always be assembled together.   **           00179
**                                                          **           00180
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00181
**                                                          **           00182
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00183
**  ------- ------- -- ------- -----                        **           00184
**                                                          **           00185
**  COPYMODS is the first program to get control.  The      **           00186
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00187
**  and the entry locations are stored in fullwords for     **           00188
**  later use.                                              **           00189
**                                                          **           00190
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00191
**  if that ddname is present.  If //PARMREPT is present,   **           00192
**  it is also used by the PARMCHEK program.                **           00193
**                                                          **           00194
**  After PARMCHEK has returned all parm bit settings to    **           00195
**  COPYMODS and all user-quantities, the settings are      **           00196
**  examined by COPYMODS and inconsistent settings are      **           00197
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00198
**  has to be turned off, because only one of these can be  **           00199
**  done in one run.  These inconsistencies are all fixed,  **           00200
**  and then COPYMODS processing starts.                    **           00201
**                                                          **           00202
**  COPYMOPT is called to display all the options that have **           00203
**  been set, if the OPTION parm has been set.  This is     **           00204
**  done to //SYSPRINT.  If any adjustments of options have **           00205
**  been made, you can see the final result in the SYSPRINT **           00206
**  report that has been produced by COPYMOPT.              **           00207
**                                                          **           00208
**  A significant note is, that the PARMREPT contains the   **           00209
**  options as they have been set by the PARMCHEK program,  **           00210
**  with no alteration.  The COPYMOPT call, which produces  **           00211
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00212
**  adjustments for inconsistent parm settings has been     **           00213
**  made by COPYMODS, so you can see the effect of those    **           00214
**  adjustments by comparing these two reports against      **           00215
**  each other.                                             **           00216
**                                                          **           00217
**  After that, COPYMODS does its things, depending on the  **           00218
**  options that have been set.  Most of the processing is  **           00219
**  done in the COPYMODS csect, except for the HEXPRT       **           00220
**  option, where the translation tables are in the         **           00221
**  TRTCSECT csect.                                         **           00222
**                                                          **           00223
**************************************************************           00224
**                                                          **           00225
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00226
**                                                          **           00227
**                                                          **           00228
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00229
**                                                          **           00230
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00231
**                                                          **           00232
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00233
**       BE CORRECTLY COPIED.                               **           00234
**                                                          **           00235
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00236
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00237
**       FOUND ON THE INPUT TAPE.                           **           00238
**                                                          **           00239
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00240
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00241
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00242
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00243
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00244
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00245
**       MAIN SOURCE CODE.                                  **           00246
**                                                          **           00247
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00248
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00249
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00250
**       INVOKE THIS ACTION.                                **           00251
**                                                          **           00252
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00253
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00254
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00255
**                                                          **           00256
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00257
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00258
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00259
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00260
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00261
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00262
**                                                          **           00263
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00264
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00265
**                                                          **           00266
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00267
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00268
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00269
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00270
**       SERVICE.                                           **           00271
**                                                          **           00272
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00273
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00274
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00275
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00276
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00277
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00278
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00279
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00280
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00281
**                                                          **           00282
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00283
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00284
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00285
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00286
**                                                          **           00287
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00288
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00289
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00290
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00291
**                                                          **           00292
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00293
**       TAPEOWNER=xxxxxxxxxx                               **           00294
**       FILELIMIT=nnnn                                     **           00295
**       LABELIMIT=nnnn                                     **           00296
**       PRINTRCDS=nnnn                                     **           00297
**         or                                               **           00298
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00299
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00300
**                                                          **           00301
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00302
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00303
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00304
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00305
**                                                          **           00306
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00307
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00308
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00309
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00310
**       IN THE EXTERNAL LABEL DATASET.                     **           00311
**                                                          **           00312
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00313
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00314
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00315
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00316
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00317
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00318
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00319
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00320
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00321
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00322
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00323
**                                                          **           00324
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00325
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00326
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00327
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00328
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00329
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00330
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00331
**       DATA FILE HAS BEEN WRITTEN.                        **           00332
**                                                          **           00333
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00334
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00335
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00336
**       EXTERNAL LABEL DATASET.                            **           00337
**                                                          **           00338
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00339
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00340
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00341
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00342
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00343
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00344
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00345
**       THE HDR2.                                          **           00346
**                                                          **           00347
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00348
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00349
**                                                          **           00350
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00351
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00352
**       IN A SYSIN CARD.                                   **           00353
**                                                          **           00354
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00355
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00356
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00357
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00358
**       INTERPRETED AS NL.                                 **           00359
**                                                          **           00360
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00361
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00362
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00363
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00364
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00365
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00366
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00367
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00368
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00369
**       BYTE TOTALS COMING FROM DATA FILES.                **           00370
**                                                          **           00371
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00372
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00373
**       TO PRINT THEM.)                                    **           00374
**                                                          **           00375
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00376
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00377
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00378
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00379
**                                                          **           00380
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00381
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00382
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00383
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00384
**       DATA BLOCKS ON THE TAPE.                           **           00385
**                                                          **           00386
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00387
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00388
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00389
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00390
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00391
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00392
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00393
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00394
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00395
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00396
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00397
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00398
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00399
**       INPUT TAPE.                                        **           00400
**                                                          **           00401
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00402
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00403
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00404
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00405
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00406
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00407
**                                                          **           00408
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00409
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00410
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00411
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00412
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00413
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00414
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00415
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00416
**                                                          **           00417
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00418
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00419
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00420
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00421
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00422
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00423
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00424
**                                                          **           00425
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00426
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00427
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00428
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00429
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00430
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00431
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00432
**                                                          **           00433
**************************************************************           00434
         EJECT                                                           00435
**************************************************************           00436
**  CHANGE LOG:                                             **           00437
**                                                          **           00438
** LEVEL 003                                                **           00439
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00440
**                                                          **           00441
** LEVEL 004                                                **           00442
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00443
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00444
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00445
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00446
**             COPYING FILES.                     SBG 03/00 **           00447
**                                                          **           00448
** LEVEL 005                                                **           00449
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00450
**             R12,R11.                           SBG 03/00 **           00451
**                                                          **           00452
** LEVEL 006                                                **           00453
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00454
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00455
**             OUT16.                             SBG 03/00 **           00456
**                                                          **           00457
** LEVEL 007 AND 008                                        **           00458
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00459
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00460
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00461
**                                                          **           00462
** LEVEL 009                                                **           00463
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00464
**                                                          **           00465
** LEVEL 010                                                **           00466
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00467
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00468
**                                                          **           00469
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00470
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00471
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00472
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00473
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00474
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00475
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00476
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00477
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00478
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00479
**                                                          **           00480
** LEVEL 011                                                **           00481
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00482
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00483
**             ONE TAPEMARK.                      SBG 03/00 **           00484
**                                                SBG 03/00 **           00485
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00486
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00487
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00488
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00489
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00490
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00491
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00492
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00493
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00494
**                                                          **           00495
** LEVEL 012                                                **           00496
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00497
**             HAVING ONLY ONE TAPE MARK AFTER              **           00498
**             THEM.                                        **           00499
**                                                          **           00500
** LEVEL 013                                                **           00501
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00502
**             LABEL TYPES, AND THE SETTING OF              **           00503
**             FLAGS TO INDICATE EACH TYPE.                 **           00504
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00505
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00506
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00507
**             EASY PRINTING OF LABEL CONTENTS,             **           00508
**             BUT NO EXTRA PRINTING IS DONE AT             **           00509
**             THIS LEVEL.                                  **           00510
**                                                          **           00511
** LEVEL 014                                                **           00512
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00513
**             PARM SCANNER THAT IS EASY TO                 **           00514
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00515
**             FOR THE PARMS.  ADDED SUPPORT,               **           00516
**             VIA THE LBLINFO PARM, TO PRINT               **           00517
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00518
**             EOV2 LABEL INFORMATION, IF IT IS             **           00519
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00520
**             IF THE INPUT TAPE IS SL.                     **           00521
**                                                          **           00522
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00523
**             SEE LABEL PARMTABL.                          **           00524
**                                                          **           00525
** LEVEL 015                                                **           00526
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00527
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00528
**             THE ABILITY TO TURN IT ON. INCREASED         **           00529
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00530
**             BYTE.                                        **           00531
**                                                          **           00532
** LEVEL 016                                                **           00533
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00534
**             TO SET ANY PARM SETTING AS A                 **           00535
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00536
**             ENTRY THAT IS LATER IN THE TABLE,            **           00537
**             WILL OVERRIDE A SETTING FOR A                **           00538
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00539
**             TABLE.  SETTING A PARM EXPLICITLY            **           00540
**             IN THE JCL, WILL OVERRIDE ANY                **           00541
**             DEFAULT SETTING FOR THAT PARM.               **           00542
**                                                          **           00543
** LEVEL 017                                                **           00544
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00545
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00546
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00547
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00548
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00549
**             OF THIS IS CODED IN PARMTABL AND             **           00550
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00551
**             PRTXXX2.                                     **           00552
**                                                          **           00553
** LEVEL 018                                                **           00554
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00555
**             VOLSER OF THE COPIED TAPES, TO               **           00556
**             MATCH THE VOLSER INDICATED IN THE            **           00557
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00558
**             THE CHGVOL PARM KEYWORD.  THIS               **           00559
**             ACTION ONLY OCCURS IF THE INPUT              **           00560
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00561
**             DETECTED.  THE COPIED VOL1 LABEL             **           00562
**             IS ALTERED BEFORE THE WRITE.                 **           00563
**                                                          **           00564
** LEVEL 019                                                **           00565
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00566
**             AND EOV2 LABELS THAT ARE IN THE              **           00567
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00568
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00569
**             CAN HAPPEN WHEN YOU COPY FILES               **           00570
**             WITH THE COPYFILE PROGRAM, FROM              **           00571
**             THE END OF ONE TAPE, TO THE                  **           00572
**             BEGINNING OR THE MIDDLE OF                   **           00573
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00574
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00575
**             COPIES THE EOV LABELS AS IS.  THIS           **           00576
**             NEW OPTION IS CALLED EOVCHG OR               **           00577
**             EOV2EOF; THE EOV LABELS ARE                  **           00578
**             CHANGED (IN THE COPIED TAPES) TO             **           00579
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00580
**             REPORTS THIS FACT.                           **           00581
**                                                          **           00582
** LEVEL 020                                                **           00583
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00584
**             TO ALLOW A RUN OF COPYMODS THAT              **           00585
**             JUST READS THE INPUT TAPE, AND DOES          **           00586
**             NOT MAKE COPIES.                             **           00587
**                                                          **           00588
** LEVEL 021                                                **           00589
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00590
**             IEHINITTED TAPES.                            **           00591
**                                                          **           00592
** LEVEL 022                                                **           00593
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00594
**             LABELS FROM A TAPE, TO AN FB-80              **           00595
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00596
**                                                          **           00597
** LEVEL 023                                      SBG 09/00 **           00598
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00599
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00600
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00601
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00602
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00603
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00604
**             TO CODE                                      **           00605
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00606
**             OF THE SYSIN CARD FILE.  IF THERE            **           00607
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00608
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00609
**             AS CODING CHGVOL.                            **           00610
**                                                          **           00611
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00612
**             DUMPED LABELS HAVE CONTROL CARDS             **           00613
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00614
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00615
**             CONTROL CARDS.                               **           00616
**                                                          **           00617
** LEVEL 024                                      SBG 09/00 **           00618
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00619
**             OUTPUT COPIES FROM NL INPUT AND A            **           00620
**             SET OF LABELS CREATED BY LABLDUMP.           **           00621
**             CHANGED THE DCB NAMES AND DD CARDS           **           00622
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00623
**             RESTORE.                                     **           00624
**                                                          **           00625
**             CHANGED PROGRAM INITIALIZATION TO            **           00626
**             A STANDARD FORM.  GOT RID OF PRIME           **           00627
**             AND TERME MACROS.  HAVE 5 BASE               **           00628
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00629
**                                                          **           00630
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00631
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00632
**             LABELS ON AN SL TAPE, AND WON'T              **           00633
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00634
**             TAPE IS SL, ACCIDENTALLY.                    **           00635
**                                                          **           00636
** LEVEL 025                                      SBG 09/00 **           00637
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00638
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00639
**                                                          **           00640
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00641
**             BE USED.                                     **           00642
**                                                          **           00643
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00644
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00645
**                TAPEOWNER=xxxxxxxxxx                      **           00646
**                FILELIMIT=nnnn                            **           00647
**                LABELIMIT=nnnn                            **           00648
**                PRINTRCDS=nnnn                            **           00649
**                  or                                      **           00650
**                OUTVOLALL=volser ,                        **           00651
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00652
**             AND ANY PARM THAT IS CODED IN THE            **           00653
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00654
**             AND IT WILL OVERRIDE THE PARM IN             **           00655
**             THE EXEC CARD (SINCE SYSIN IS                **           00656
**             SCANNED LATER IN THE PROCESSING).            **           00657
**                                                          **           00658
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00659
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00660
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00661
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00662
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00663
**                                                          **           00664
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00665
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00666
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00667
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00668
**             WHEN COPYING AN INPUT TAPE.                  **           00669
**                                                          **           00670
** LEVEL 026                                      SBG 09/00 **           00671
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00672
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00673
**                                                          **           00674
** LEVEL 027                                      SBG 09/00 **           00675
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00676
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00677
**                                                          **           00678
** LEVEL 028                                      SBG 09/00 **           00679
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00680
**             STANDARD USER LABEL SUPPORT.                 **           00681
**                                                          **           00682
** LEVEL 029                                      SBG 09/00 **           00683
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00684
**             STANDARD USER LABELS.                        **           00685
**                                                          **           00686
** LEVEL 030                                      SBG 09/00 **           00687
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00688
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00689
**             OUTPUT TAPES, DURING THE COPY.               **           00690
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00691
**                                                          **           00692
**             FIXED THE EYECATCHERS A BIT.                 **           00693
**                                                          **           00694
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00695
**                                                          **           00696
** LEVEL 031                                      SBG 09/00 **           00697
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00698
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00699
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00700
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00701
**                                                          **           00702
** LEVEL 032                                      SBG 10/00 **           00703
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00704
**             LABADDIN PROCESSING WHEN THERE ARE           **           00705
**             MORE LABELS IN THE EXTERNAL LABEL            **           00706
**             DATASET, THAN THERE ARE NL FILES             **           00707
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00708
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00709
**             SAYS TO STOP AT THE END OF NL FILES          **           00710
**             AND NOT WRITE NULL SL FILES TO               **           00711
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00712
**             LABELS.                                      **           00713
**                                                          **           00714
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00715
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00716
**             AND THEN BACKING OVER IT AND CLOSING.        **           00717
**                                                          **           00718
** LEVEL 033                                      SBG 10/00 **           00719
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00720
**             PROCESSING WHEN THE LAST LABEL SET           **           00721
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00722
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00723
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00724
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00725
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00726
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00727
**             AND THE DATA AND A TAPEMARK), AND IT         **           00728
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00729
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00730
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00731
**             FROM THE EXISTING HDR2 AND EOF IS            **           00732
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00733
**             THE END.                                     **           00734
**                                                          **           00735
** LEVEL 034                                      SBG 10/00 **           00736
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00737
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00738
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00739
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00740
**             THE REWIND, AND LEAVES THE WRITTEN           **           00741
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00742
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00743
**             NOT ERASED.                                  **           00744
**                                                          **           00745
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00746
**             CONDITION IS FLAGGED WITH A PROPER           **           00747
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00748
**             FOR THAT DRIVE IS BYPASSED.                  **           00749
**                                                          **           00750
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00751
**             FIRST VERSION OF THIS PROGRAM.               **           00752
**                                                          **           00753
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00754
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00755
**             THESE ARE THE OPENDFLG SETTINGS.             **           00756
**                                                          **           00757
** LEVEL 035                                      SBG 10/00 **           00758
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00759
**             TAPES, BY NOT REUSING THE WRITE              **           00760
**             IOB WITHOUT REFRESHING THE PARTS             **           00761
**             THAT ARE USED BY IOS.  THIS IS THE           **           00762
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00763
**                                                          **           00764
**             LABLDUMP OF AN IEHINITTED TAPE               **           00765
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00766
**             CARD, IN ANTICIPATION OF CREATING            **           00767
**             A TAPE INITIALIZATION ROUTINE FROM           **           00768
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00769
**             NEXT LEVEL, IS BETTER.)                      **           00770
**                                                          **           00771
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00772
**                                                          **           00773
** LEVEL 036                                      SBG 10/00 **           00774
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00775
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00776
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00777
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00778
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00779
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00780
**                                                          **           00781
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00782
**             USE A PARM OF INITVOLS.                      **           00783
**                                                          **           00784
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00785
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00786
**                                                          **           00787
**             CONSOLIDATED CHGVOL CODE INTO A              **           00788
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00789
**                                                          **           00790
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00791
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00792
**             STEPPING ON EACH OTHER.                      **           00793
**                                                          **           00794
** LEVEL 037                                      SBG 10/00 **           00795
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00796
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00797
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00798
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00799
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00800
**             VALUE IS USED.                               **           00801
**                                                          **           00802
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00803
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00804
**             VALUE, IF THERE IS ONE.                      **           00805
**                                                          **           00806
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00807
**             SETS THE PARM VALUE OF LIMFILE OR            **           00808
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00809
**             THE PROGRAM ACTION.                          **           00810
**                                                          **           00811
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00812
**             PROGRAM COUNTS BYTES READ FROM THE           **           00813
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00814
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00815
**             THIS ACTION.                                 **           00816
**                                                          **           00817
** LEVEL 038                                      SBG 11/00 **           00818
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00819
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00820
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00821
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00822
**             FILES.                                       **           00823
**                                                          **           00824
** LEVEL 039                                      SBG 11/00 **           00825
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00826
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00827
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00828
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00829
**                                                          **           00830
** LEVEL 040                                      SBG 11/00 **           00831
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00832
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00833
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00834
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00835
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00836
**             COUNT, SO A USER WILL BE ABLE TO             **           00837
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00838
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00839
**                                                          **           00840
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00841
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00842
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00843
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00844
**             WHAT TO DO.                                  **           00845
**                                                          **           00846
** LEVEL 041                                      SBG 11/00 **           00847
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00848
**             OF LABEL SETS IN THE LABADDIN FILE           **           00849
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00850
**             IF THE LABADDIN FILE CONTAINS MANY           **           00851
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00852
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00853
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00854
**                                                          **           00855
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00856
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00857
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00858
**             FILE TO END AFTER NNN OF THEM.               **           00859
**                                                          **           00860
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00861
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00862
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00863
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00864
**             WHEN EOV LABELS ARE PRESENT.                 **           00865
**                                                          **           00866
** LEVEL 042                                      SBG 11/00 **           00867
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00868
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00869
**             REGISTER.                                    **           00870
**                                                          **           00871
** LEVEL 043                                      SBG 11/00 **           00872
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00873
**             "OPTION" PARAMETER.  CALL IS TO A            **           00874
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00875
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00876
**             ASSEMBLED AND LINKEDITED WITH                **           00877
**             THE COPYMODS PROGRAM.                        **           00878
**                                                          **           00879
**             CHANGED THE WORDING OF SOME OF THE           **           00880
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00881
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00882
**                                                          **           00883
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00884
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00885
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00886
**             LABADDIN WAS IN EFFECT.                      **           00887
**                                                          **           00888
** LEVEL 044                                      SBG 12/00 **           00889
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00890
**                                                          **           00891
** LEVEL 045                                      SBG 12/00 **           00892
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00893
**             COMPLETION OF THE COPY. SUPPWTO.             **           00894
**                                                          **           00895
** LEVEL 046                                      SBG 12/00 **           00896
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00897
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00898
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00899
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00900
**             COUNT CORRECTION.                            **           00901
**                                                          **           00902
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00903
**                                                          **           00904
** LEVEL 047                                      SBG 12/00 **           00905
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00906
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00907
**             NUMBERS OF DATA RECORDS.  IF THE             **           00908
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00909
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00910
**                                                          **           00911
** LEVEL 048                                      SBG 05/02 **           00912
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00913
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00914
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00915
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00916
**                                                          **           00917
** LEVEL 049                                      SBG 05/02 **           00918
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00919
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00920
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00921
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00922
**                                                          **           00923
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00924
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00925
**             EACH LABEL.  IT DOES NOT MATTER              **           00926
**             WHERE THE LABELS ARE, IN THE INPUT           **           00927
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00928
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00929
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00930
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00931
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00932
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00933
**                                                          **           00934
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00935
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00936
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00937
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00938
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00939
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00940
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00941
**             WE CAN NOW FORCE THE nnn TO BE               **           00942
**             INTERPRETED AS NL USING THE NLLIM            **           00943
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00944
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00945
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00946
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00947
**             OTHER KEYWORD IS ALSO CODED.                 **           00948
**                                                          **           00949
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00950
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00951
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00952
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00953
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00954
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00955
**             DURING THE WRITE OF THE TAPE MARK.           **           00956
**                                                          **           00957
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00958
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00959
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00960
**             BEFORE ISSUING ABEND 069.                    **           00961
**                                                          **           00962
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00963
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00964
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00965
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00966
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00967
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00968
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00969
**             SYSPRINT DATASET.                            **           00970
**                                                          **           00971
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00972
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00973
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00974
**                                                          **           00975
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00976
**             OF THE MAIN CSECT.                           **           00977
**                                                          **           00978
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00979
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00980
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00981
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00982
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00983
**             PARM SCAN IN DETAIL.                         **           00984
**                                                          **           00985
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00986
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00987
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00988
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00989
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           00990
**                                                          **           00991
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           00992
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           00993
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           00994
**             PROGRAM AND NOT BY COPYMODS.                 **           00995
**                                                          **           00996
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           00997
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           00998
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           00999
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01000
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01001
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01002
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01003
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01004
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01005
**             PROGRAM.                                     **           01006
**                                                          **           01007
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01008
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01009
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01010
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01011
**             USER FIELD AREA.                             **           01012
**                                                          **           01013
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01014
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01015
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01016
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01017
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01018
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01019
**                                                          **           01020
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01021
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01022
**             POSSIBLE.                                    **           01023
**                                                          **           01024
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01025
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01026
**             IN ERROR.                                    **           01027
**                                                          **           01028
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01029
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01030
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01031
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01032
**                                                          **           01033
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01034
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01035
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01036
**                                                          **           01037
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01038
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01039
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01040
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01041
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01042
**             PROGRAM.                                     **           01043
**                                                          **           01044
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01045
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01046
**                                                          **           01047
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01048
**             TEN PARM BITS INSTEAD OF FIVE.               **           01049
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01050
**                                                          **           01051
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01052
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01053
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01054
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01055
**                                                          **           01056
** LEVEL 064 - Return Code adjustments.                     **           01057
**                                                          **           01058
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01059
**             processing.                                  **           01060
**             HEXPRT now works for INITVOLS.               **           01061
**             HEXPRT now prints the external labels in a   **           01062
**             LABADDIN operation.                          **           01063
**             TAPEOWNER= is now honored for an INITVOLS    **           01064
**             operation (this fixes a bug).                **           01065
**             Number for FILELIMIT=nnn is now filled in,   **           01066
**             in the message, when the EBCDIC value        **           01067
**             exists.                                      **           01068
**             Fix another bug--Tape Owner not altered--    **           01069
**             now use the value of tape owner passed from  **           01070
**             the PARMCHEK program.                        **           01071
**                                                          **           01072
** LEVEL 066 - Cosmetic changes.                            **
**             Save original PARM pointer in COPYMODS       **
**             csect itself.  (It got lost after PARMCHEK   **
**             call.)                                       **
**                                                          **
**************************************************************           01073
**************************************************************           01074
         MACRO                                                           01075
&NAME    HEX   &TO,&LEN,&FROM                                            01076
&NAME    DS    0H                                                        01077
         ST    R4,SAV4HEX                                                01078
         STM   15,1,HEXSAVE                                              01079
         LA    1,&FROM                                                   01080
         LA    0,&LEN                                                    01081
         LA    15,&TO                                                    01082
         BAL   4,HEX                                                     01083
         L     R4,SAV4HEX                                                01084
         LM    15,1,HEXSAVE                                              01085
         MEND                                                            01086
         EJECT                                                           01087
         YREGS                                                           01088
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01089
         GBLA  &HEXDFLA                                                  01090
* ------------------------------------------------------------------ *   01091
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01092
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01093
* ------------------------------------------------------------------ *   01094
&HEXDFLA SETA  4                                                         01095
&HEXDFLC SETC  '&HEXDFLA'                                                01096
COPYMODS CSECT                                                           01097
         USING *,R15                                          SBG 03/00  01098
         B     EYECATCH                                       SBG 03/00  01099
         DC    C'HEX DUMP '                                              01100
HEXDFLCC DC    C'&HEXDFLC'                                               01101
         DC    C' RECORDS '                                              01102
HEXDFLL  EQU   L'HEXDFLCC                                                01103
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01104
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01105
         DC    C'COPYMODS Level 066 '                         SBG 03/00  01106
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01107
         DC    C'SYSIN IN PARMCHEK PGM'                                  01108
SAVEAREA DC    18F'0'                                                    01109
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01110
         SAVE  (14,12)                                                   01111
         LR    R5,R1          SAVE PARM POINTER                          01112
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01113
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01114
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01115
         LR    R13,R1               NEW SAVE AREA ADDRESS                01116
         DROP  R15                                                       01117
* -----                       SET UP SIX BASE REGISTERS                  01118
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01119
         LR    R12,R15                                                   01120
         LA    R11,4095(,R12)                                            01121
         LA    R11,1(,R11)                                               01122
         LA    R10,4095(,R11)                                            01123
         LA    R10,1(,R10)                                               01124
         LA    R9,4095(,R10)                                             01125
         LA    R9,1(,R9)                                                 01126
         LA    R8,4095(,R9)                                              01127
         LA    R8,1(,R8)                                                 01128
         LA    R6,4095(,R8)                                              01129
         LA    R6,1(,R6)                                                 01130
         LR    R1,R5          RESTORE PARM POINTER                       01131
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01132
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01133
         ST    R1,PARMSAVE    And store the PARM pointer into this       01134
*                             program too, so it doesn't get lost.       01135
         L     R1,0(,R1)                                                 01136
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01137
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01138
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01139
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01140
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01141
* ----------------------------------------------------------------- *    01142
*                                                                   *    01143
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01144
*                                                                   *    01145
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01146
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01147
*              FIELDS.                                              *    01148
*                                                                   *    01149
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01150
*              FILLED IN.                                           *    01151
*                                                                   *    01152
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01153
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01154
*              THE PARM SCAN.                                       *    01155
*                                                                   *    01156
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01157
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01158
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01159
*                                                                   *    01160
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01161
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01162
*                                                                   *    01163
* ------------------------------------------------------------------*    01164
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01165
* ------------------------------------------------------------------*    01166
         L     R0,=V(PARMCHEK)                                           01167
         ST    R0,ENTRYPT                                                01168
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01169
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01170
         BALR  R14,R15                 DO CALL                           01171
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01172
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01173
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01174
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01175
* ----------------------------------------------------------------- *    01176
* ----------------------------------------------------------------- *    01177
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01178
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01179
* ----------------------------------------------------------------- *    01180
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01181
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01182
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01183
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01184
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01185
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01186
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01187
SKIPLTMS DS    0H                                             SBG 06/00  01188
* ----- * ----- * ------                                                 01189
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01190
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01191
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01192
NONOEXNL DS    0H                                                        01193
* ----- * ----- * ------                                                 01194
* ----- * ----- * ------ *------                                         01195
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01196
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01197
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01198
NOCUMSEP DS    0H                                                        01199
* ----- * ----- * ------ *------                                         01200
* ----- * -----                                                          01201
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01202
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01203
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01204
NOCUMTOT DS    0H                                                        01205
* ----- * -----                                                          01206
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01207
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01208
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01209
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01210
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01211
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01212
*                                      BECAUSE WE'RE COPYING TO SL.      01213
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01214
CANLBDMP DS    0H                                                        01215
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01216
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01217
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01218
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01219
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01220
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01221
NOLBDQUI DS    0H                                                        01222
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01223
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01224
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01225
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01226
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01227
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01228
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01229
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01230
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01231
NOSTRADJ DS    0H                  END of the STRIP adjustments          01232
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01233
* ----------------------------------------------------------------- *    01234
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01235
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01236
* ----------------------------------------------------------------- *    01237
* --                                                             -- *    01238
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01239
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01240
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01241
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01242
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01243
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01244
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01245
         BALR  R14,R15           CALL SUBPROGRAM                         01246
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01247
NOOPTRPT DS    0H                                                        01248
*  -------------------------------------------------------------- *      01249
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01250
         RDJFCB IN                                                       01251
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01252
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01253
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01254
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01255
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01256
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01257
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01258
         SPACE 3                                                         01259
OPENSYSP DS    0H                                                        01260
*                                                                        01261
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01262
*                                                                        01263
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01264
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01265
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01266
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01267
         L     R2,16          R2=CVT                                     01268
         L     R2,0(,R2)      R2=TCB WORDS                               01269
         L     R2,4(,R2)      R2=MY TCB                                  01270
         L     R2,12(,R2)     R2=TIOT                                    01271
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01272
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01273
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01274
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01275
         BNE   TIOT1          NO                                         01276
         OI    FLAG1,OP1      SHOW IT                                    01277
         STM   R14,R3,SAV14T03                                    TEST   01278
         RDJFCB OUT1                                                     01279
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01280
         MVC   VOLDD,DDOUT1                                              01281
         LM    R14,R3,SAV14T03                                    TEST   01282
         B     TIOTNEXT       CONTINUE                                   01283
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01284
         BNE   TIOT2          NO                                         01285
         OI    FLAG1,OP2      SHOW IT                                    01286
         STM   R14,R3,SAV14T03                                    TEST   01287
         RDJFCB OUT2                                                     01288
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01289
         MVC   VOLDD,DDOUT2                                              01290
         LM    R14,R3,SAV14T03                                    TEST   01291
         B     TIOTNEXT       CONTINUE                                   01292
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01293
         BNE   TIOT3          NO                                         01294
         OI    FLAG1,OP3      SHOW IT                                    01295
         STM   R14,R3,SAV14T03                                    TEST   01296
         RDJFCB OUT3                                                     01297
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01298
         MVC   VOLDD,DDOUT3                                              01299
         LM    R14,R3,SAV14T03                                    TEST   01300
         B     TIOTNEXT       CONTINUE                                   01301
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01302
         BNE   TIOT4          NO                                         01303
         OI    FLAG1,OP4      SHOW IT                                    01304
         STM   R14,R3,SAV14T03                                    TEST   01305
         RDJFCB OUT4                                                     01306
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01307
         MVC   VOLDD,DDOUT4                                              01308
         LM    R14,R3,SAV14T03                                    TEST   01309
         B     TIOTNEXT       CONTINUE                                   01310
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01311
         BNE   TIOT5          NO                                         01312
         OI    FLAG1,OP5      SHOW IT                                    01313
         STM   R14,R3,SAV14T03                                    TEST   01314
         RDJFCB OUT5                                                     01315
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01316
         MVC   VOLDD,DDOUT5                                              01317
         LM    R14,R3,SAV14T03                                    TEST   01318
         B     TIOTNEXT       CONTINUE                                   01319
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01320
         BNE   TIOT6          NO                                         01321
         OI    FLAG1,OP6      SHOW IT                                    01322
         STM   R14,R3,SAV14T03                                    TEST   01323
         RDJFCB OUT6                                                     01324
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01325
         MVC   VOLDD,DDOUT6                                              01326
         LM    R14,R3,SAV14T03                                    TEST   01327
         B     TIOTNEXT       CONTINUE                                   01328
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01329
         BNE   TIOT7          NO                                         01330
         OI    FLAG1,OP7      SHOW IT                                    01331
         STM   R14,R3,SAV14T03                                    TEST   01332
         RDJFCB OUT7                                                     01333
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01334
         MVC   VOLDD,DDOUT7                                              01335
         LM    R14,R3,SAV14T03                                    TEST   01336
         B     TIOTNEXT       CONTINUE                                   01337
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01338
         BNE   TIOT8          NO                                         01339
         OI    FLAG1,OP8      SHOW IT                                    01340
         STM   R14,R3,SAV14T03                                    TEST   01341
         RDJFCB OUT8                                                     01342
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01343
         MVC   VOLDD,DDOUT8                                              01344
         LM    R14,R3,SAV14T03                                    TEST   01345
         B     TIOTNEXT       CONTINUE                                   01346
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01347
         BNE   TIOT9          NO                                         01348
         OI    FLAG2,OP9      SHOW IT                                    01349
         STM   R14,R3,SAV14T03                                    TEST   01350
         RDJFCB OUT9                                                     01351
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01352
         MVC   VOLDD,DDOUT9                                              01353
         LM    R14,R3,SAV14T03                                    TEST   01354
         B     TIOTNEXT       CONTINUE                                   01355
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01356
         BNE   TIOT10         NO                                         01357
         OI    FLAG2,OP10     SHOW IT                                    01358
         STM   R14,R3,SAV14T03                                    TEST   01359
         RDJFCB OUT10                                                    01360
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01361
         MVC   VOLDD,DDOUT10                                             01362
         LM    R14,R3,SAV14T03                                    TEST   01363
         B     TIOTNEXT       CONTINUE                                   01364
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01365
         BNE   TIOT11         NO                                         01366
         OI    FLAG2,OP11     SHOW IT                                    01367
         STM   R14,R3,SAV14T03                                    TEST   01368
         RDJFCB OUT11                                                    01369
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01370
         MVC   VOLDD,DDOUT11                                             01371
         LM    R14,R3,SAV14T03                                    TEST   01372
         B     TIOTNEXT       CONTINUE                                   01373
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01374
         BNE   TIOT12         NO                                         01375
         OI    FLAG2,OP12     SHOW IT                                    01376
         STM   R14,R3,SAV14T03                                    TEST   01377
         RDJFCB OUT12                                                    01378
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01379
         MVC   VOLDD,DDOUT12                                             01380
         LM    R14,R3,SAV14T03                                    TEST   01381
         B     TIOTNEXT       CONTINUE                                   01382
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01383
         BNE   TIOT13         NO                                         01384
         OI    FLAG2,OP13     SHOW IT                                    01385
         STM   R14,R3,SAV14T03                                    TEST   01386
         RDJFCB OUT13                                                    01387
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01388
         MVC   VOLDD,DDOUT13                                             01389
         LM    R14,R3,SAV14T03                                    TEST   01390
         B     TIOTNEXT       CONTINUE                                   01391
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01392
         BNE   TIOT14         NO                                         01393
         OI    FLAG2,OP14     SHOW IT                                    01394
         STM   R14,R3,SAV14T03                                    TEST   01395
         RDJFCB OUT14                                                    01396
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01397
         MVC   VOLDD,DDOUT14                                             01398
         LM    R14,R3,SAV14T03                                    TEST   01399
         B     TIOTNEXT       CONTINUE                                   01400
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01401
         BNE   TIOT15         NO                                         01402
         OI    FLAG2,OP15     SHOW IT                                    01403
         STM   R14,R3,SAV14T03                                    TEST   01404
         RDJFCB OUT15                                                    01405
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01406
         MVC   VOLDD,DDOUT15                                             01407
         LM    R14,R3,SAV14T03                                    TEST   01408
         B     TIOTNEXT       CONTINUE                                   01409
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01410
         BNE   TIOTNEXT       NO                                         01411
         OI    FLAG2,OP16     SHOW IT                                    01412
         STM   R14,R3,SAV14T03                                    TEST   01413
         RDJFCB OUT16                                                    01414
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01415
         MVC   VOLDD,DDOUT16                                             01416
         LM    R14,R3,SAV14T03                                    TEST   01417
         B     TIOTNEXT       CONTINUE                                   01418
TIOTNEXT SR    R3,R3                                                     01419
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01420
         AR    R2,R3          R2=NEXT DD ENTRY                           01421
         B     TIOTLOOP       GO CHECK IT                                01422
*  ---------------------------------------------------------  SBG 09/00  01423
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01424
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01425
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01426
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01427
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01428
         MVC   VOLALL,VOLSTG     PROPAGATE VOLSER TO ALL OUTPUTS         01429
NOVOLOV  DS    0H                                                        01430
*  ---------------------------------------------------------  SBG 09/00  01431
         SPACE 3                                                         01432
*  -----------------------------------------------------------------  *  01433
*                                                                        01434
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01435
*                                                                        01436
*  -----------------------------------------------------------------  *  01437
OPENS    DS    0H               START OPENING FILES                      01438
         OPEN  (SYSPRINT,OUTPUT)                                         01439
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01440
         BO    OPENMOVE                                                  01441
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01442
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01443
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01444
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01445
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01446
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01447
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01448
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01449
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01450
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01451
         PUT   SYSPRINT,LINE                                             01452
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01453
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01454
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01455
         OPEN  (LABADDIN,INPUT)                                          01456
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01457
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01458
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01459
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01460
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01461
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01462
         PUT   SYSPRINT,LINE                                             01463
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01464
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01465
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01466
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01467
         CLOSE (SYSPRINT)                                                01468
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01469
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01470
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01471
         CLOSE (LABLDUMP)                                                01472
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01473
         BZ    REALYEND         NO.  GET OUT.                            01474
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01475
         CLOSE (LABADDIN)                                                01476
REALYEND B     THEEND                                                    01477
         EJECT                                                           01478
OPENIN   OPEN  (IN,INPUT)                                                01479
         TM    IN+48,X'10'                                               01480
         BO    INISOPEN                                                  01481
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01482
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01483
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01484
*                                   BYPASS MESSAGE.                      01485
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01486
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01487
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01488
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01489
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01490
INISOPEN DS    0H                                                        01491
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01492
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01493
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01494
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01495
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01496
* ----                                                                   01497
OPENINCK DS    0H                                                        01498
         LA    R2,IN              POINT TO IN DCB                        01499
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01500
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01501
         EXCP  REWIOB                                                    01502
         WAIT  ECB=REWECB                                                01503
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01504
         EXCP  INIOB                                                     01505
         WAIT  ECB=INECB                                                 01506
         CLC   INAREA(4),=C'VOL1' IS THE TAPE IBM SL ?                   01507
         BNE   RESETIN            NO. JUST REWIND TO REPOSITION.         01508
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01509
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01510
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01511
****** ------ BELOW ------ SL FILE NUMBERS.                              01512
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01513
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01514
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01515
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01516
**** ----- >>>>>   Force file limiting by SL   - - -  below              01517
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01518
         BZ    NOSLFLIM              Not set, bypass code for it         01519
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01520
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01521
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01522
         MVC   LINE(133),LINE-1      Clear message line                  01523
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01524
         PUT   SYSPRINT,LINE         Write msg                           01525
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01526
         BNO   SLLIMRES              No. only SLLIM. So go on.           01527
         MVC   LINE(133),LINE-1      Clear message line                  01528
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01529
         PUT   SYSPRINT,LINE         Write msg                           01530
SLLIMRES DS    0H                                                        01531
         B     RESETIN                                                   01532
NOSLFLIM DS    0H                                                        01533
**** ----- >>>>>   Force file limiting by SL   - - -  above              01534
**** ----- >>>>>   Force file limiting by NL   - - -  below              01535
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01536
         BZ    NONLFLIM              Not set, bypass code for it         01537
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01538
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01539
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01540
         MVC   LINE(133),LINE-1      Clear message line                  01541
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01542
         PUT   SYSPRINT,LINE         Write msg                           01543
         B     RESETIN                                                   01544
NONLFLIM DS    0H                                                        01545
**** ----- >>>>>   Force file limiting by NL   - - -  above              01546
* -- > Strip test                                                        01547
         TM    PARMFLG4,X'02'        Are we stripping labels?            01548
         BZ    OPENINXW              No. Bypass this section.            01549
         TM    PARMFLG3,X'02'        Are we limiting files also?         01550
         BO    OPENINXW              Yes. Use SL number.                 01551
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01552
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01553
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01554
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01555
OPENINXW DS    0H                                                        01556
* -- > Strip test                                                        01557
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01558
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01559
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01560
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01561
OPENINXX DS    0H                                                        01562
****** ------ ABOVE ------ SL FILE NUMBERS.                              01563
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01564
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01565
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01566
         PUT   SYSPRINT,LINE      WRITE MSG                              01567
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01568
         BZ    RESETEND         NO.  GET OUT.                            01569
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01570
         CLOSE (LABADDIN)                                                01571
RESETEND CLOSE (IN)                                                      01572
         B     THEEND                                                    01573
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01574
RESETIN  DS    0H                                                        01575
         MVC   REWECB,=F'0'                                              01576
         EXCP  REWIOB                                                    01577
         WAIT  ECB=REWECB                                                01578
NOINITOP DS    0H                                                        01579
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01580
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01581
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01582
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01583
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01584
         BNZ   NOLBLDD                  IF NOT, FLAG                     01585
         ST    R7,SAVE7REG              SAVE R7                          01586
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01587
         USING JFCBLK,R7                MAP THE AREA                     01588
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01589
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01590
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01591
         MVC   LINE(133),LINE-1                                          01592
         MVC   LINE(133),LDMPOUTM                                        01593
         PUT   SYSPRINT,LINE                                             01594
         DROP  R7                                                        01595
         L     R7,SAVE7REG              RESTORE R7                       01596
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01597
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01598
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01599
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01600
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01601
         BNZ   NOLABIN                  IF NOT, FLAG                     01602
         ST    R7,SAVE7REG              SAVE R7                          01603
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01604
         USING JFCBLK,R7                MAP THE AREA                     01605
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01606
         MVC   LDMPINMS+89(8),JFCBELNM                                   01607
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01608
         MVC   LINE(133),LINE-1                                          01609
         MVC   LINE(133),LDMPINMS                                        01610
         PUT   SYSPRINT,LINE                                             01611
         DROP  R7                                                        01612
         L     R7,SAVE7REG              RESTORE R7                       01613
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01614
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01615
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01616
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01617
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01618
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01619
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01620
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01621
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01622
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01623
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01624
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01625
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01626
         PUT   SYSPRINT,LINE                                             01627
NOLIMFMR DS    0H                                                        01628
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01629
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01630
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01631
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01632
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01633
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01634
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01635
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01636
         B     N1LIMPRT             AND PRINT IT                         01637
N1LIMDEF DS    0H                                                        01638
         MVC   LIMPMSG+11(10),PRTCHAR                                    01639
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01640
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01641
N1LIMHEX DS    0H                                                        01642
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01643
         B     READIN                                         SBG 06/00  01644
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01645
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01646
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01647
*  ---------------------------------------------------------  SBG 03/00  01648
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01649
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01650
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01651
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01652
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01653
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01654
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01655
         B     NOLIMPRT             AND PRINT IT                         01656
NOLIMDEF DS    0H                                                        01657
         MVC   LIMPMSG+11(10),PRTCHAR                                    01658
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01659
NOLIMPRT PUT   SYSPRINT,LINE                                             01660
NOLIMHEX DS    0H                                                        01661
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01662
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01663
         BZ    OPENOINT                                                  01664
         MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01665
         B     NOCORPRT                                                  01666
OPENOINT DS    0H                                                        01667
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01668
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01669
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01670
         ST    R7,SAVE7REG                                               01671
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01672
         L     R7,SAVE7REG                                               01673
NOCORPRT DS    0H                                                        01674
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01675
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01676
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01677
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01678
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01679
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01680
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01681
         PUT   SYSPRINT,LINE                                             01682
NOLIMFMS DS    0H                                                        01683
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01684
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01685
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01686
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01687
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01688
         MVC   LIMLMSG+11(10),LABCHAR                                    01689
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01690
         PUT   SYSPRINT,LINE                                             01691
NOLIMLMR DS    0H                                                        01692
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01693
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01694
         TM    PARMFLG4,X'02'     Are labels being stripped?             01695
         BZ    NOSTRMSG                                                  01696
         MVC   LINE(133),LINE-1   Clear message line                     01697
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01698
         PUT   SYSPRINT,LINE                                             01699
NOSTRMSG DS    0H                                                        01700
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01701
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01702
         BZ    OPEN1          NO                                         01703
         OPEN  (OUT1,OUTPUT)                                             01704
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01705
         BZ    OPEN2          NO                                         01706
         OPEN  (OUT2,OUTPUT)                                             01707
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01708
         BZ    OPEN3          NO                                         01709
         OPEN  (OUT3,OUTPUT)                                             01710
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01711
         BZ    OPEN4          NO                                         01712
         OPEN  (OUT4,OUTPUT)                                             01713
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01714
         BZ    OPEN5          NO                                         01715
         OPEN  (OUT5,OUTPUT)                                             01716
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01717
         BZ    OPEN6          NO                                         01718
         OPEN  (OUT6,OUTPUT)                                             01719
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01720
         BZ    OPEN7          NO                                         01721
         OPEN  (OUT7,OUTPUT)                                             01722
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01723
         BZ    OPEN8          NO                                         01724
         OPEN  (OUT8,OUTPUT)                                             01725
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01726
         BZ    OPEN9          NO                                         01727
         OPEN  (OUT9,OUTPUT)                                             01728
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01729
         BZ    OPEN10         NO                                         01730
         OPEN  (OUT10,OUTPUT)                                            01731
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01732
         BZ    OPEN11         NO                                         01733
         OPEN  (OUT11,OUTPUT)                                            01734
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01735
         BZ    OPEN12         NO                                         01736
         OPEN  (OUT12,OUTPUT)                                            01737
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01738
         BZ    OPEN13         NO                                         01739
         OPEN  (OUT13,OUTPUT)                                            01740
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01741
         BZ    OPEN14         NO                                         01742
         OPEN  (OUT14,OUTPUT)                                            01743
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01744
         BZ    OPEN15         NO                                         01745
         OPEN  (OUT15,OUTPUT)                                            01746
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01747
         BZ    READIN         NO                                         01748
         OPEN  (OUT16,OUTPUT)                                            01749
         EJECT                                                           01750
* --------------------------------------------------------- *            01751
*                                                           *            01752
*  READ INPUT                                               *            01753
*                                                           *            01754
* --------------------------------------------------------- *            01755
*                                                           *            01756
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01757
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01758
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01759
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01760
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01761
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01762
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01763
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01764
*                                                           *            01765
* --------------------------------------------------------- *            01766
READIN   DS    0H                                                        01767
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01768
         BO    TLITWRIT                                                  01769
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01770
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01771
         MVI   INECB,X'00'    INITIALIZE ECB                             01772
* ------------------------------------------------------------------ *   01773
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01774
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01775
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01776
* ------------------------------------------------------------------ *   01777
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01778
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01779
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01780
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01781
NONLSL0  DS    0H                                                        01782
* ----------------------------------------------------------- SBG 09/00  01783
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01784
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01785
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01786
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01787
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01788
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01789
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01790
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01791
INOLIMIT DS    0H                                                        01792
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01793
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01794
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01795
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01796
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01797
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01798
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01799
         L     R7,SAVE7RG3        RESTORE R7                             01800
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01801
NOLBDADJ DS    0H                                                        01802
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01803
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01804
*                                                                        01805
*       Since there is a possibility that the WRITE will                 01806
*       not work for one of the output ddnames, we have                  01807
*       to save the total bytes successfully moved to the                01808
*       currently open output tapes.  Also file count for                01809
*       this tape, and block count for this file.                        01810
*                                                                        01811
         MVC   PRVBY,TOTBY        Total bytes before this READ           01812
         MVC   FILECNTP,FILECNT   Total file count before this READ      01813
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01814
*                                                                        01815
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01816
         EXCP  INIOB          READ                                       01817
         WAIT  ECB=INECB      WAIT FOR READ                              01818
         TM    INCSW+4,X'01'  WAS TM READ?                               01819
         BO    READIN1        YES                                        01820
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01821
         BNE   INERR          NO -- ERROR                                01822
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01823
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01824
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01825
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01826
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01827
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01828
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01829
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01830
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01831
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01832
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01833
         ST    R7,TOTB7REG        Save BAL Register                      01834
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01835
         LA    R3,TOTBY           POINT REGISTER TO LABEL COUNTER        01836
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01837
         L     R7,TOTB7REG        Restore BAL Register                   01838
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01839
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01840
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01841
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01842
         ST    R7,R7HXPRT        SAVE R7.                                01843
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01844
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01845
         BCTR  R1,0              LOWER BY ONE                            01846
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01847
         L     R7,R7HXPRT        RESTORE R7.                             01848
NPRTHEX  DS    0H                                                        01849
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01850
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG               01851
**** ----  BYTE COUNTS ---- BELOW                                        01852
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01853
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01854
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01855
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01856
INNOBYTE DS    0H                                                        01857
**** ----  BYTE COUNTS ---- ABOVE                                        01858
         NI    DATFLAG,FF-X'10'  SHOW REAL DATA HAS BEEN READ SBG 03/00  01859
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01860
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01861
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01862
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01863
         BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01864
*                             FORMATS, AND SET FLAGS          SBG 04/00  01865
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01866
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01867
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01868
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01869
         BZ    LBLNOCNT                                                  01870
         TM    ISLBLFLG,X'01'     WAS LAST INPUT RECORD A LABEL?         01871
         BZ    LBLNOCNT                                                  01872
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01873
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01874
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01875
LBLNOCNT DS    0H                                                        01876
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01877
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01878
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01879
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01881
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01882
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01883
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01884
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01885
*                                                             SBG 04/00  01886
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01887
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01888
         BZ    READGO1            NO. WE CAN GO ON.                      01889
         TM    ISLBLFLG,X'01'     DID WE JUST READ A LABEL?              01890
         BZ    READGO1            NO DON'T CHECK FOR SL                  01891
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01892
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01893
         PUT   SYSPRINT,LINE      WRITE MSG                              01894
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01895
         CLOSE (LABADDIN)                                                01896
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01897
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01898
         EJECT                                                           01899
*  ----------------------------------------------------------------  *   01900
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01901
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01902
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01903
*  ----------------------------------------------------------------  *   01904
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01905
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01906
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01907
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01908
         BZ    STILTAPE                                                  01909
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01910
         BZ    STILTAPE                                                  01911
         B     WRTTAPMK                                                  01912
STILTAPE DS    0H                                                        01913
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01914
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01915
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01916
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01917
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01918
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          01919
DOTHEGET DS    0H                                                        01920
*** ---                                                                  01921
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              01922
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   01923
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               01924
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 01925
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   01926
DOGETALW DS    0H                                                        01927
*** ---                                                                  01928
         GET   LABADDIN,EXTLBLIN                                         01929
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    01930
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     01931
*------------------------------------> Hex Print Limit - Below           01932
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     01933
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            01934
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      01935
         BNE   NOHXPREX                        No. Don't reset count.    01936
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           01937
NOHXPREX DS    0H                                                        01938
*------------------------------------> Hex Print Limit - Above           01939
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        01940
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        01941
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        01942
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           01943
* ---------------------------------  EOV2EOF  BELOW  ------------- *     01944
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     01945
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            01946
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          01947
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     01948
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               01949
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      01950
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             01951
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             01952
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           01953
NTRALEOV DS    0H                                                        01954
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     01955
*                                                                        01956
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    01957
*                                                                        01958
* ------     Hex Print records from External Labels    ----  below       01959
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              01960
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   01961
         ST    R7,R7HXPRT           SAVE R7.                             01962
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         01963
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          01964
         BCTR  R1,0                 LOWER BY ONE                         01965
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            01966
         L     R7,R7HXPRT           RESTORE R7.                          01967
EXTNOPRT DS    0H                                                        01968
* ------     Hex Print records from External Labels    ----  above       01969
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  01970
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            01971
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    01972
         B     GOTVOL01             PROCESS THE VOL1                     01973
NLABVOL1 DS    0H                                                        01974
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                01975
         CLC   EXTLBLIN(4),=C'HDR1'                                      01976
         BNE   NLABHDR1                                                  01977
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              01978
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01979
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      01980
         B     ENDIBMSL                                                  01981
NLABHDR1 DS    0H                                                        01982
         CLC   EXTLBLIN(4),=C'HDR2'                                      01983
         BNE   NLABHDR2                                                  01984
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              01985
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01986
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      01987
         B     ENDIBMSL                                                  01988
NLABHDR2 DS    0H                                                        01989
***** ----- *****                                                        01990
         CLC   EXTLBLIN(4),=C'EOF1'                                      01991
         BNE   NLABEOF1                                                  01992
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              01993
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01994
         B     ENDIBMSL                                                  01995
NLABEOF1 DS    0H                                                        01996
         CLC   EXTLBLIN(4),=C'EOF2'                                      01997
         BNE   NLABEOF2                                                  01998
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              01999
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02000
         B     ENDIBMSL                                                  02001
NLABEOF2 DS    0H                                                        02002
***** ----- *****                                                        02003
         CLC   EXTLBLIN(4),=C'EOV1'                                      02004
         BNE   NLABEOV1                                                  02005
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02006
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02007
         B     ENDIBMSL                                                  02008
NLABEOV1 DS    0H                                                        02009
         CLC   EXTLBLIN(4),=C'EOV2'                                      02010
         BNE   NLABEOV2                                                  02011
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02012
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02013
         B     ENDIBMSL                                                  02014
NLABEOV2 DS    0H                                                        02015
ENDIBMSL DS    0H                                                        02016
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02017
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02018
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02019
* -------------- EOF2EOV BELOW ----------------- *                       02020
ISITEOV  DS    0H                                                        02021
         CLC   EXTLBLIN(3),=C'EOV'                                       02022
         BNE   NOEOF2V                                                   02023
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02024
         BZ    NOEOF2V                                                   02025
         MVC   EXTLBLIN(3),=C'EOF'                                       02026
NOEOF2V  DS    0H                                                        02027
* -------------- EOF2EOV ABOVE ----------------- *                       02028
* ----------                                                             02029
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02030
         BZ    BLNOCORR             NO. SKIP THIS.                       02031
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02032
         BE    CORBLKCT                                                  02033
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02034
         BE    CORBLKCT                                                  02035
BLNOCORR B     EOFOREOV                                                  02036
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02037
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02038
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02039
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02040
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02041
MAKEEOF2 DS    0H                                                        02042
         MVC   EXTLBLIN(80),HDR2SAV                                      02043
         MVC   EXTLBLIN(3),=C'EOF'                                       02044
NOMKEOF2 DS    0H                                                        02045
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02046
* ----------                                                             02047
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02048
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02049
**** ---- ****                                                           02050
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02051
         BNE   NOTLUHL                                                   02052
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02053
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02054
NOTLUHL  DS    0H                                                        02055
**** ---- ****                                                           02056
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02057
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02058
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02059
ENDHEADR DS    0H                                                        02060
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02061
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02062
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02063
*** -----                                                                02064
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02065
         BZ    NOEODFL1                                                  02066
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02067
         B     ENDTRAIL                                                  02068
NOEODFL1 DS    0H                                                        02069
*** -----                                                                02070
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02071
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02072
ENDTRAIL DS    0H                                                        02073
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02074
         A     R0,=F'1'         ADD 1 TO COUNT                           02075
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02076
*** ---                                                                  02077
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02078
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02079
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02080
         BL    ENDNOLIM             NOT YET. GET OUT.                    02081
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02082
ENDNOLIM DS    0H                                                        02083
*** ---                                                                  02084
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02085
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02086
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02087
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02088
         B     WRTTAPMK                                                  02089
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02090
CORBLKCT DS    0H                                                        02091
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02092
         BZ    NOCORBLK          NO. BYPASS.                             02093
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02094
         BZ    NOCORBLK          NO. BYPASS.                             02095
*** ---  FIXING LABELS  --- ***                                          02096
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02097
         BZ    NOFIXL1           NO. DON'T FIX.                          02098
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02099
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02100
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02101
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02102
NOFIXL1  DS    0H                                                        02103
*** ---  FIXING LABELS  --- ***                                          02104
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02105
         STM   R2,R3,SAVE2TO3                                            02106
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02107
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02108
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02109
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02110
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02111
         LM    R2,R3,SAVE2TO3                                            02112
NOCORBLK B     EOFOREOV                                                  02113
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02114
GOTVOL01 DS    0H                                                        02115
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02116
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02117
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02118
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02119
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02120
         MVC   VOLNEW(6),VOLSTG        OVERLAY NEW VOLSER FOR ALL OUTS   02121
NOOVLALL DS    0H                                                        02122
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02123
         B     WRTLABEL                                                  02124
WRTLABEL OI    WRLBLFLG,X'01'                                            02125
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02126
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02127
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02128
TRYPXXX0 DS    0H                                                        02129
         CLC   EXTLBLIN(4),=C'VOL1'                                      02130
         BNE   TRYPUSER                                                  02131
         MVI   LINE-1,C' '                                    SBG 09/00  02132
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 09/00  02133
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 09/00  02134
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL   SBG 09/00  02135
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 09/00  02136
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION   SBG 09/00  02137
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 09/00  02138
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 09/00  02139
         B     NOPRTEXT                                                  02140
TRYPUSER DS    0H                                                        02141
         CLC   EXTLBLIN(3),=C'UHL'     USER HEADER LABEL?                02142
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02143
         CLC   EXTLBLIN(3),=C'UTL'     USER TRAILER LABEL?               02144
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02145
         B     TRYPXXX1                                                  02146
PUSERPR  ST    R3,SAVE3REG                                               02147
         LA    R3,EXTLBLIN                                               02148
         BAL   R7,PRTUSER     PRINT LABEL INFO                           02149
         L     R3,SAVE3REG                                               02150
         B     NOPRTEXT                                                  02151
TRYPXXX1 CLC   EXTLBLIN(4),=C'HDR1'                                      02152
         BE    PXXX1PR                                                   02153
         CLC   EXTLBLIN(4),=C'EOF1'                                      02154
         BE    PXXX1PR                                                   02155
         CLC   EXTLBLIN(4),=C'EOV1'                                      02156
         BE    PXXX1PR                                                   02157
         B     TRYPXXX2                                                  02158
PXXX1PR  ST    R3,SAVE3REG                                               02159
         LA    R3,EXTLBLIN                                               02160
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           02161
         L     R3,SAVE3REG                                               02162
         B     NOPRTEXT                                                  02163
TRYPXXX2 CLC   EXTLBLIN(4),=C'HDR2'                                      02164
         BE    PXXX2PR                                                   02165
         CLC   EXTLBLIN(4),=C'EOF2'                                      02166
         BE    PXXX2PR                                                   02167
         CLC   EXTLBLIN(4),=C'EOV2'                                      02168
         BE    PXXX2PR                                                   02169
         B     NOPRTEXT                                                  02170
PXXX2PR  ST    R3,SAVE3REG                                               02171
         LA    R3,EXTLBLIN                                               02172
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02173
         L     R3,SAVE3REG                                               02174
NOPRTEXT DS    0H             DON'T PRINT EXTERNAL LABEL ON REPORT       02175
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02176
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02177
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02178
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02179
         B     WRITE1         WRITE LABEL RECORD                         02180
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02181
WRTTAPMK DS    0H                                                        02182
*** ----------------                                                     02183
         TM    INEODFLG,X'02'                                            02184
         BZ    NOEODNOW                                                  02185
         TM    WRLBLFLG,X'04'                                            02186
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02187
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02188
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02189
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02190
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02191
NOEODNOW DS    0H                                                        02192
*** ----------------                                                     02193
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02194
         B     WRITE1         WRITE TAPE MARK                            02195
* ------------------ SPECIAL ROUTINES ------------------------------- *  02196
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02197
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02198
         B     READIN             AND GO BACK WHERE YOU STARTED          02199
* ------------------ SPECIAL ROUTINES ------------------------------- *  02200
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02201
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02202
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02203
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02204
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02205
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02206
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02207
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02208
         B     CLOSMALL          FINISHED, GET OUT.                      02209
NOFIXLBL DS    0H                                                        02210
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02211
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02212
         B     READIN2        WRITE OUTPUTS AND FINISH                   02213
* ------------------------------------------------------------------- *  02214
*                                                                        02215
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02216
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02217
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02218
*      ALREADY.                                                          02219
*                                                                        02220
* ------------------ SPECIAL ROUTINES ------------------------------- *  02221
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02222
         EJECT                                                           02223
READGO1  DS    0H                                                        02224
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02225
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02226
         BZ    READNCNT                                                  02227
         TM    ISLBLFLG,X'01'  LAST READ A LABEL?                        02228
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02229
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02230
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02231
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02232
READNCNT DS    0H                                                        02233
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02234
**---->            LABEL STRIPPING CODE          BELOW                   02235
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02236
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02237
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02238
         BZ    RDNOSTRP           NO IT WASN'T                           02239
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02240
RDNOSTRP DS    0H                                                        02241
**---->            LABEL STRIPPING CODE          ABOVE                   02242
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02243
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02244
         ST    R7,STOR7REG                                               02245
         L     R7,BLOKCNT                                                02246
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02247
         ST    R7,BLOKCNT                                                02248
         L     R7,STOR7REG                                               02249
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02250
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02251
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02252
         OI    FLAG2A,EOV       YES. WRITE AND GET OUT OF PROGRAM.       02253
NOINITT1 DS    0H                                                        02254
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02255
         B     WRITE1         CONTINUE                                   02256
*                                                             SBG 04/00  02257
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02258
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02259
* ------------------------- ADD LABEL TO NL CODE ----------- *           02260
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02261
         BZ    NONLSL1          NO.  BYPASS.                             02262
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02263
*** ---                                                                  02264
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02265
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02266
*                               DO NOT COLLECT 200 DOLLARS.              02267
*** ---                                                                  02268
NONLSL1  DS    0H                                                        02269
* ------------------------- ADD LABEL TO NL CODE ----------- *           02270
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02271
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02272
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02273
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02274
         BO    WRCTLHDR         YES. PUT IT OUT.                         02275
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02276
         BO    WRCTLEOF         YES. PUT IT OUT.                         02277
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02278
         BO    WRCTLEOV         YES. PUT IT OUT.                         02279
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02280
WRCTLHDR DS    0H                                                        02281
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02282
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02283
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02284
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02285
WRCTLEOF DS    0H                                                        02286
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02287
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02288
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02289
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02290
WRCTLEOV DS    0H                                                        02291
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02292
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02293
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02294
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02295
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02296
NOCNTLWR DS    0H                                                        02297
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02298
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02299
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02300
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  02301
         BNE   RDNOSKIP                                       SBG 03/00  02302
         MVI   LINE-1,C' '                                    SBG 03/00  02303
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02304
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  02305
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02306
         B     READIN         DO ANOTHER READ                 SBG 03/00  02307
RDNOSKIP DS    0H                                             SBG 03/00  02308
         MVI   LINE-1,C' '                                    SBG 03/00  02309
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02310
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  02311
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02312
         B     MARKFILE                                       SBG 03/00  02313
READINGO DS    0H                                             SBG 04/00  02314
*------------------------------------> HEX PRINT LIMIT - BELOW           02315
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02316
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02317
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02318
NOHXPRST DS    0H                                                        02319
*------------------------------------> HEX PRINT LIMIT - ABOVE           02320
         ST    R7,STOR7REG                                               02321
         L     R7,FILECNT                                                02322
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02323
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02324
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              02325
         ST    R7,FILECNT                                                02326
         L     R7,BLOKCNT                                                02327
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02328
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02329
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             02330
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02331
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02332
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02333
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02334
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02335
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02336
         MVC   FILECONT,=C'CONTAINING'                                   02337
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02338
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02339
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02340
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02341
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02342
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02343
         AP    QWORD,DWORD        AND ADD IT IN                          02344
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  02345
** ----                                                                  02346
         LM    R4,R5,TOTBYTES                                            02347
         A     R5,DBINL            LOW ORDER COUNT                       02348
         BNO   MARKNOVR            B IF NO OVERFLOW                      02349
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02350
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02351
MARKNOVR DS    0H                                                        02352
         A     R4,DBINH            HIGH ORDER                            02353
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02354
** ----                                                                  02355
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02356
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02357
         LM    R4,R5,LABBYTES                                            02358
         A     R5,LABINL           LOW ORDER COUNT                       02359
         BNO   MARKNOVL            B IF NO OVERFLOW                      02360
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02361
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02362
MARKNOVL DS    0H                                                        02363
         A     R4,LABINH           HIGH ORDER                            02364
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02365
* - >                                                                    02366
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02367
         BZ    NOSEPLBL                                                  02368
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02369
         MVC   FILECUMT,=C'CUM LABEL:'                                   02370
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02371
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02372
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02373
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02374
         CVD   R5,DWORD          LOW ORDER WORD                          02375
         AP    QWORD,DWORD       AND ADD IT IN                           02376
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02377
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02378
NOSEPLBL DS    0H                                                        02379
* - >                                                                    02380
         B     MARKNOLB                                                  02381
MARKISNL DS    0H                                                        02382
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02383
         BO    MARKNOLB                                                  02384
         LM    R4,R5,FILBYTES                                            02385
         A     R5,DBINFL           LOW ORDER COUNT                       02386
         BNO   MARKNOVF            B IF NO OVERFLOW                      02387
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02388
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02389
MARKNOVF DS    0H                                                        02390
         A     R4,DBINFH           HIGH ORDER                            02391
         STM   R4,R5,FILBYTES                                            02392
* - >                                                                    02393
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02394
         BZ    NOSEPDAT                                                  02395
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02396
         MVC   FILECUMT,=C'CUM DATA :'                                   02397
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02398
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02399
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02400
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02401
         CVD   R5,DWORD          LOW ORDER WORD                          02402
         AP    QWORD,DWORD       AND ADD IT IN                           02403
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02404
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02405
NOSEPDAT DS    0H                                                        02406
* - >                                                                    02407
MARKNOLB DS    0H                                                        02408
** ----                                                                  02409
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02410
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02411
* - >                                                                    02412
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02413
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02414
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02415
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02416
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02417
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02418
         CVD   R5,DWORD          LOW ORDER WORD                          02419
         AP    QWORD,DWORD       AND ADD IT IN                           02420
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02421
* - >                                                                    02422
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02423
MARKNCNT DS    0H                                                        02424
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02425
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02426
MARKNCNE DS    0H                                                        02427
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02428
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02429
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02430
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02431
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02432
         MVC   FILECONT,=C'          '                                   02433
         MVC   FILECUMT,=C'          '                                   02434
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02435
         ST    R4,DBINH            ZERO BYTE COUNT                       02436
         ST    R4,DBINL            ZERO BYTE COUNT                       02437
         ST    R4,LABINH           ZERO BYTE COUNT                       02438
         ST    R4,LABINL           ZERO BYTE COUNT                       02439
         ST    R4,DBINFH           ZERO BYTE COUNT                       02440
         ST    R4,DBINFL           ZERO BYTE COUNT                       02441
MARKNTOT DS    0H                                                        02442
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02443
MARKFILE DS    0H                                                        02444
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02445
         ST    R7,BLOKCNT                                                02446
         L     R7,FILECNT                                                02447
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02448
         ST    R7,FILECNT                                                02449
         L     R7,STOR7REG                                               02450
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02451
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02452
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02453
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02454
         BZ    MARKFILA          NO - SKIP THIS CODE                     02455
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02456
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02457
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02458
MARKFILA DS    0H                                                        02459
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02460
         TM    PARMFLG4,X'02'   Stripping labels?                        02461
         BZ    MARKSTRX         no - bypass strip-related code           02462
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02463
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02464
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02465
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02466
MARKSTRX DS    0H                                                        02467
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02468
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02469
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02470
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02471
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02472
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02473
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02474
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02475
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02476
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02477
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02478
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02479
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02480
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02481
*                                                             SBG 04/00  02482
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02483
INEODATA DS    0H                                                        02484
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02485
*                                                                        02486
READIN2  DS    0H                                                        02487
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02488
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02489
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02490
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02491
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02492
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02493
         BZ    NOEXTMK           NO                                      02494
         B     WRTTAPMK                                                  02495
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02496
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02497
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02498
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02499
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02500
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02501
READ2STP DS    0H                                                        02502
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02503
READ2GO  DS    0H                                                        02504
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02505
         OI    FLAG2A,EOV     INDICATE EOV ON INPUT                      02506
* --- >>>  ------------------ below -------- Skip writing last T.M.      02507
* -------------------------------------------------------------- *       02508
*            When stripping labels, somehow an extra             *       02509
*            tape mark gets written.  This is a kludge           *       02510
*            to correct that.....                                *       02511
* -------------------------------------------------------------- *       02512
         TM    PARMFLG4,X'02'    Stripping Labels?                       02513
         BZ    READ2GNS          No. don't skip writing last t.m.        02514
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02515
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02516
*        PUT   SYSPRINT,LINE                                             02517
         B     WRITE17           Do not write the extra tape mark        02518
READ2GNS DS    0H                                                        02519
* --- >>>  ------------------ above -------- Skip writing last T.M.      02520
         B     WRITE1                                                    02521
         SPACE 3                                                         02522
* -------------------- Code for Initting Tapes ---------->>>>> below     02523
TLITWRIT DS    0H                                                        02524
         TM    PARMFLG3,X'01'                                            02525
         BZ    TLITWRIE                                                  02526
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02527
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02528
         BO    TLITREW2                YES. SET WRITE CCW BACK.          02529
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02530
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02531
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02532
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           02533
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02534
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02535
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02536
TLITSKP1 DS    0H                                                        02537
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02538
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02539
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02540
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02541
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02542
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02543
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02544
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       02545
* --> Hex printing - below                                               02546
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02547
         BZ    NPRHINT1                No. Bypass it.                    02548
         ST    R7,R7HXPRT              Save BAL register.                02549
         BAL   R7,HEXPRNEX             Hex print from external labels.   02550
         L     R7,R7HXPRT              Restore BAL register.             02551
NPRHINT1 DS    0H                                                        02552
* --> Hex printing - above                                               02553
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02554
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02555
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02556
TLITSKP2 DS    0H                                                        02557
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02558
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02559
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02560
* --> Hex printing - below                                               02561
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02562
         BZ    NPRHINT2                No. Bypass it.                    02563
         ST    R7,R7HXPRT              Save BAL register.                02564
         BAL   R7,HEXPRNEX             Hex print from external labels.   02565
         L     R7,R7HXPRT              Restore BAL register.             02566
NPRHINT2 DS    0H                                                        02567
* --> Hex printing - above                                               02568
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02569
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02570
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02571
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02572
TLITWRIE DS    0H                                                        02573
* -------------------- Code for Initting Tapes ---------->>>>> above     02574
*                                                                        02575
*  WRITE TO OUTPUT TAPES                                                 02576
*                                                                        02577
WRITE1   DS    0H                                             SBG 06/00  02578
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02579
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02580
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02581
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02582
WRNOTPMK DS    0H                                                        02583
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02584
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02585
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02586
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02587
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02588
         BZ    WRITE2         NO                                         02589
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02590
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02591
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02592
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02593
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02594
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02595
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02596
         EXCP  OUTIOB         WRITE IT                                   02597
         WAIT  ECB=OUTECB     WAIT FOR IT                                02598
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02599
         BNE   OUTERR         NO - ERROR                                 02600
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02601
         BZ    WRITE3         NO                                         02602
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02603
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02604
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02605
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02606
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02607
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02608
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02609
         EXCP  OUTIOB         WRITE IT                                   02610
         WAIT  ECB=OUTECB     WAIT FOR IT                                02611
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02612
         BNE   OUTERR         NO - ERROR                                 02613
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02614
         BZ    WRITE4         NO                                         02615
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02616
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02617
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02618
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02619
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02620
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02621
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02622
         EXCP  OUTIOB         WRITE IT                                   02623
         WAIT  ECB=OUTECB     WAIT FOR IT                                02624
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02625
         BNE   OUTERR         NO - ERROR                                 02626
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02627
         BZ    WRITE5         NO                                         02628
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02629
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02630
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02631
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02632
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02633
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02634
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02635
         EXCP  OUTIOB         WRITE IT                                   02636
         WAIT  ECB=OUTECB     WAIT FOR IT                                02637
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02638
         BNE   OUTERR         NO - ERROR                                 02639
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02640
         BZ    WRITE6         NO                                         02641
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02642
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02643
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02644
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02645
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02646
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02647
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02648
         EXCP  OUTIOB         WRITE IT                                   02649
         WAIT  ECB=OUTECB     WAIT FOR IT                                02650
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02651
         BNE   OUTERR         NO - ERROR                                 02652
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02653
         BZ    WRITE7         NO                                         02654
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02655
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02656
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02657
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02658
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02659
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02660
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02661
         EXCP  OUTIOB         WRITE IT                                   02662
         WAIT  ECB=OUTECB     WAIT FOR IT                                02663
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02664
         BNE   OUTERR         NO - ERROR                                 02665
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02666
         BZ    WRITE8         NO                                         02667
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02668
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02669
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02670
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02671
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02672
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02673
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02674
         EXCP  OUTIOB         WRITE IT                                   02675
         WAIT  ECB=OUTECB     WAIT FOR IT                                02676
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02677
         BNE   OUTERR         NO - ERROR                                 02678
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02679
         BZ    WRITE9         NO                                         02680
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02681
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02682
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02683
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02684
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02685
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02686
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02687
         EXCP  OUTIOB         WRITE IT                                   02688
         WAIT  ECB=OUTECB     WAIT FOR IT                                02689
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02690
         BNE   OUTERR         NO - ERROR                                 02691
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02692
         BZ    WRITE10        NO                                         02693
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02694
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02695
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02696
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02697
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02698
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02699
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02700
         EXCP  OUTIOB         WRITE IT                                   02701
         WAIT  ECB=OUTECB     WAIT FOR IT                                02702
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02703
         BNE   OUTERR         NO - ERROR                                 02704
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02705
         BZ    WRITE11        NO                                         02706
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02707
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02708
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02709
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02710
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02711
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02712
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02713
         EXCP  OUTIOB         WRITE IT                                   02714
         WAIT  ECB=OUTECB     WAIT FOR IT                                02715
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02716
         BNE   OUTERR         NO - ERROR                                 02717
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02718
         BZ    WRITE12        NO                                         02719
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02720
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02721
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02722
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02723
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02724
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02725
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02726
         EXCP  OUTIOB         WRITE IT                                   02727
         WAIT  ECB=OUTECB     WAIT FOR IT                                02728
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02729
         BNE   OUTERR         NO - ERROR                                 02730
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02731
         BZ    WRITE13        NO                                         02732
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02733
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02734
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02735
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02736
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02737
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02738
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02739
         EXCP  OUTIOB         WRITE IT                                   02740
         WAIT  ECB=OUTECB     WAIT FOR IT                                02741
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02742
         BNE   OUTERR         NO - ERROR                                 02743
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02744
         BZ    WRITE14        NO                                         02745
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02746
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02747
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02748
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02749
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02750
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02751
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02752
         EXCP  OUTIOB         WRITE IT                                   02753
         WAIT  ECB=OUTECB     WAIT FOR IT                                02754
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02755
         BNE   OUTERR         NO - ERROR                                 02756
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02757
         BZ    WRITE15        NO                                         02758
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02759
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02760
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02761
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02762
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02763
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02764
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02765
         EXCP  OUTIOB         WRITE IT                                   02766
         WAIT  ECB=OUTECB     WAIT FOR IT                                02767
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02768
         BNE   OUTERR         NO - ERROR                                 02769
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02770
         BZ    WRITE16        NO                                         02771
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02772
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02773
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02774
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02775
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02776
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02777
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02778
         EXCP  OUTIOB         WRITE IT                                   02779
         WAIT  ECB=OUTECB     WAIT FOR IT                                02780
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02781
         BNE   OUTERR         NO - ERROR                                 02782
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02783
         BZ    WRITE17        NO                                         02784
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02785
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02786
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02787
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02788
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02789
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02790
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02791
         EXCP  OUTIOB         WRITE IT                                   02792
         WAIT  ECB=OUTECB     WAIT FOR IT                                02793
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02794
         BNE   OUTERR         NO - ERROR                                 02795
WRITE17  DS    0H                                                        02796
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02797
         BNE   WR17NTPM       No. Don't correct bytes moved field        02798
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02799
WR17NTPM DS    0H                                                        02800
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02801
         BO    ENDINPUT       YES. CLOSE.                                02802
         TM    FLAG2A,EOV     END OF INPUT?                              02803
         BO    ENDINPUT       YES - QUIT                                 02804
         B     READIN         NO - LOOP                                  02805
         SPACE 3                                                         02806
*                                                                        02807
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02808
*                                                                        02809
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02810
         BZ    INERR1         NO - ASSUME DATA CHECK                     02811
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02812
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02813
         B     INERR2         CONTINUE                                   02814
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02815
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02816
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02817
         MVI   INECB,X'00'    RESET ECB                                  02818
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02819
               6,INECB,ROUTCDE=(3)                                       02820
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02821
*                             WHO CARES WHAT THE REPLY IS                02822
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02823
         B     CLOSMALL                                                  02824
*        ABEND 69             QUIT                                       02825
         SPACE 3                                                         02826
*                                                                        02827
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02828
*                                                                        02829
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02830
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      02831
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02832
         BO    OUTERUC        YES. HANDLE IT.                            02833
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02834
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02835
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02836
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02837
         B     OUTERR2            GO FILL IN REST OF THE INFO            02838
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02839
         B     OUTERR2        CONTINUE                                   02840
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02841
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             02842
         L     R5,16          R5=CVT                                     02843
         L     R5,0(,R5)      R5=TCB WORDS                               02844
         L     R5,4(,R5)      R5=MY TCB                                  02845
         L     R5,12(,R5)     R5=TIOT                                    02846
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              02847
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  02848
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             02849
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     02850
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           02851
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                02852
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     02853
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 02854
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          02855
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       02856
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 02857
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       02858
         MVC   SAVELINE(133),LINE                                        02859
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02860
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      02861
         MVC   LINE(133),LINE-1      CLEAR LINE                          02862
         MVC   LINE(133),OUTCOUNT    How much was copied?                02863
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   02864
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              02865
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        02866
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              02867
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        02868
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      02869
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02870
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02871
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 02872
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       02873
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          02874
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02875
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02876
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            02877
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02878
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           02879
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        02880
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 02881
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02882
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02883
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02884
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                02885
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02886
         AP    QWORD,DWORD        AND ADD IT IN                          02887
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               02888
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              02889
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02890
* ---- >    WTO on a Unit Exception   < ---- Below                       02891
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           02892
         BO    OUTERR2A         Yes. WTO anyway, as of old.              02893
* ---- >    WTO on a Unit Exception   < ---- Above                       02894
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           02895
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             02896
*                               THIS IS A SEMI-NORMAL CONDITION          02897
*                               AND WHY INVOLVE THE OPERATOR?            02898
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    02899
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  02900
OUTERR4  DS    0H                                                        02901
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               02902
         WTOR  '                                                       X 02903
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       02904
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 02905
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           02906
         BNE   OUTERR3        NO - TRY AGAIN                             02907
* ------------------------------------------------------------------- *  02908
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  02909
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  02910
* ------------------------------------------------------------------- *  02911
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              02912
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 02913
*                             DON'T BOTHER WAITING FOR REWIND            02914
* ------------------------------------------------------------------- *  02915
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           02916
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        02917
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02918
         BNE   OUTERR5        NO                                         02919
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02920
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 02921
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        02922
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02923
         BNE   OUTERR6        NO                                         02924
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02925
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 02926
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        02927
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02928
         BNE   OUTERR7        NO                                         02929
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02930
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 02931
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        02932
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02933
         BNE   OUTERR8        NO                                         02934
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02935
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 02936
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        02937
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02938
         BNE   OUTERR9        NO                                         02939
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02940
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 02941
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        02942
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02943
         BNE   OUTERR10       NO                                         02944
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02945
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 02946
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        02947
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02948
         BNE   OUTERR11       NO                                         02949
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02950
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 02951
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        02952
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02953
         BNE   OUTERR12       NO                                         02954
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02955
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 02956
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        02957
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02958
         BNE   OUTERR13       NO                                         02959
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02960
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 02961
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       02962
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02963
         BNE   OUTERR14       NO                                         02964
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02965
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 02966
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       02967
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02968
         BNE   OUTERR15       NO                                         02969
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02970
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 02971
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       02972
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02973
         BNE   OUTERR16       NO                                         02974
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02975
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 02976
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       02977
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02978
         BNE   OUTERR17       NO                                         02979
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02980
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 02981
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       02982
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02983
         BNE   OUTERR18       NO                                         02984
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02985
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 02986
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       02987
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02988
         BNE   OUTERR19       NO                                         02989
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02990
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 02991
*                             THEN IT MUST BE OUTPUT 16                  02992
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02993
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 02994
         SPACE 3                                                         02995
*                                                                        02996
*  END OF INPUT -- FINISH UP                                             02997
*                                                                        02998
ENDINPUT DS    0H                                                        02999
         SPACE 3                                                         03000
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03001
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03002
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03003
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03004
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03005
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03006
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03007
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03008
         BO    ENDIN1         YES - CONTINUE                             03009
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03010
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03011
         BO    ENDIN2         YES - CONTINUE                             03012
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03013
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03014
         BO    ENDIN3         YES - CONTINUE                             03015
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03016
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03017
         BO    ENDIN4         YES - CONTINUE                             03018
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03019
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03020
         BO    ENDIN5         YES - CONTINUE                             03021
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03022
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03023
         BO    ENDIN6         YES - CONTINUE                             03024
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03025
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03026
         BO    ENDIN7         YES - CONTINUE                             03027
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03028
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03029
         BO    ENDIN8         YES - CONTINUE                             03030
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03031
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03032
         BO    ENDIN9         YES - CONTINUE                             03033
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03034
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03035
         BO    ENDIN10        YES - CONTINUE                             03036
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03037
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03038
         BO    ENDIN11        YES - CONTINUE                             03039
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03040
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03041
         BO    ENDIN12        YES - CONTINUE                             03042
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03043
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03044
         BO    ENDIN13        YES - CONTINUE                             03045
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   03046
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        03047
         BO    ENDIN14        YES - CONTINUE                             03048
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   03049
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        03050
         BO    ENDIN15        YES - CONTINUE                             03051
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   03052
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        03053
         BO    ENDIN16        YES - CONTINUE                             03054
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  03055
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   03056
         SPACE 3                                                         03057
*                                                                        03058
*  CLOSE ALL FILES                                                       03059
*                                                                        03060
CLOSMALL DS    0H                                                        03061
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    03062
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              03063
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         03064
         BZ    ENDINTOT          NO - SKIP ROUTINE                       03065
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               03066
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03067
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03068
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03069
         CVD   R5,DWORD          LOW ORDER WORD                          03070
         AP    QWORD,DWORD       AND ADD IT IN                           03071
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03072
         PUT   SYSPRINT,TOTBLINE                                         03073
         MVI   LINE,C' '                                                 03074
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03075
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     03076
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03077
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03078
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03079
         CVD   R5,DWORD          LOW ORDER WORD                          03080
         AP    QWORD,DWORD       AND ADD IT IN                           03081
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03082
         PUT   SYSPRINT,TOTLLINE                                         03083
         MVI   LINE,C' '                                                 03084
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03085
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03086
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03087
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03088
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03089
         CVD   R5,DWORD          LOW ORDER WORD                          03090
         AP    QWORD,DWORD       AND ADD IT IN                           03091
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03092
         PUT   SYSPRINT,TOTWLINE                                         03093
         MVI   LINE,C' '                                                 03094
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03095
ENDINTOT DS    0H                                                        03096
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03097
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03098
         TM    LBLFLAG,X'08'  HAVE WE COPIED AN INITTED TAPE?            03099
         BZ    NOINITT3       NOPE. DON'T REPORT IT EITHER.              03100
         MVI   LINE-1,C' '                                               03101
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03102
         MVC   INITSER(6),INVOLUME  MOVE IN VOLSER FROM VOL1             03103
         MVC   LINE(133),INITMSG MSG-WE'RE DOING INITTED TAPE            03104
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03105
NOINITT3 DS    0H                                                        03106
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03107
         TM    PARMFLG3,X'01'   INIT ONLY?                               03108
         BO    NOCLOSIN                                                  03109
         CLOSE (IN)                                                      03110
NOCLOSIN DS    0H                                                        03111
         CLOSE (SYSPRINT)                                                03112
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03113
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03114
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03115
         CLOSE (LABLDUMP)                                                03116
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03117
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03118
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03119
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03120
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03121
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03122
         CLOSE (LABADDIN)                                                03123
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03124
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03125
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03126
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03127
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03128
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03129
         BZ    CLOSE1         NO                                         03130
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03131
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03132
         BZ    CLOSE2         NO                                         03133
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03134
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03135
         BZ    CLOSE3         NO                                         03136
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03137
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03138
         BZ    CLOSE4         NO                                         03139
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03140
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03141
         BZ    CLOSE5         NO                                         03142
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03143
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03144
         BZ    CLOSE6         NO                                         03145
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03146
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03147
         BZ    CLOSE7         NO                                         03148
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03149
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03150
         BZ    CLOSE8         NO                                         03151
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03152
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03153
         BZ    CLOSE9         NO                                         03154
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03155
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03156
         BZ    CLOSE10        NO                                         03157
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03158
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03159
         BZ    CLOSE11        NO                                         03160
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03161
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03162
         BZ    CLOSE12        NO                                         03163
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03164
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03165
         BZ    CLOSE13        NO                                         03166
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03167
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03168
         BZ    CLOSE14        NO                                         03169
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03170
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03171
         BZ    CLOSE15        NO                                         03172
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03173
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03174
         BZ    THEEND         NO                                         03175
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03176
         SPACE 3                                                         03177
*                                                                        03178
*  Test for ABEND 069 first.  Did we come from an Input Error?           03179
*                                                                        03180
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03181
         BZ    THEEND            No.  End normally.                      03182
         ABEND 69                QUIT                                    03183
*                                                                        03184
*  THE END                                                               03185
*                                                                        03186
THEEND   DS    0H                                                        03187
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03188
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03189
         MVC   WTOCBT+16(41),FILEDONE                                    03190
WTOCBT   WTO   'CBT990                                              '    03191
THEENDS  DS    0H                                                        03192
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03193
         BO    THEEND16         Yes, issue RC = 16                       03194
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03195
         BO    THEEND8          Yes, issue RC = 8                        03196
         B     THEEND0          Otherwise, issue RC = 0                  03197
THEEND16 DS    0H                                                        03198
         L     R13,4(,R13)                                               03199
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03200
         B     THEEND2                                                   03201
THEEND8  DS    0H                                                        03202
         L     R13,4(,R13)                                               03203
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03204
         B     THEEND2                                                   03205
THEEND0  DS    0H                                                        03206
         L     R13,4(,R13)                                               03207
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03208
THEEND2  DS    0H                                                        03209
         LM    R14,R12,12(R13)                                           03210
         BR    R14                                                       03211
         EJECT                                                           03212
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03213
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03214
*    BAL REGISTER IS R4.                                                 03215
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03216
HEX      DS    0H                                                        03217
         MVC   1(1,R15),0(R1)        Move byte                           03218
         UNPK  0(3,R15),1(2,R15)     Unpack                              03219
         TR    0(2,R15),HEXTAB-240                                       03220
         LA    R15,2(,R15)           Increment output pointer            03221
         LA    R1,1(,R1)             Increment input pointer             03222
         BCT   R0,HEX                Decrement length, then loop         03223
         MVI   0(R15),C' '           Blank the trailing byte             03224
         BR    R4                    Return to caller                    03225
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03226
         SPACE                                                           03227
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03228
*    BAL REGISTER IS R7.                                      SBG 04/00  03229
* --------------------------------------------------------- * SBG 04/00  03230
LABELCHK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS   SBG 04/00  03231
*                         AND SET LABEL FLAGS, ACCORDINGLY,   SBG 04/00  03232
*                         IN THE LBLFLAG BYTE.                SBG 04/00  03233
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  03234
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  03235
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  03236
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  03237
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  03238
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  03239
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  03240
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  03241
* --------------------------------------------------------- * SBG 04/00  03242
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            03243
* -                                                       - *            03244
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            03245
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            03246
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            03247
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            03248
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            03249
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            03250
* --------------------------------------------------------- *            03251
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG AT START      03252
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?          SBG 04/00  03253
         BE    CVOL1                PROCESS THE VOL1          SBG 04/00  03254
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?          SBG 04/00  03255
         BE    CHDR1                PROCESS HDR1              SBG 04/00  03256
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?             SBG 04/00  03257
         BE    CHDR2                PROCESS HDR2              SBG 04/00  03258
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?            SBG 04/00  03259
         BE    CEOF1                PROCESS EOF1              SBG 04/00  03260
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?            SBG 04/00  03261
         BE    CEOF2                PROCESS EOF2              SBG 04/00  03262
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?            SBG 04/00  03263
         BE    CEOV1                PROCESS EOV1              SBG 04/00  03264
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?            SBG 04/00  03265
         BE    CEOV2                PROCESS EOV2              SBG 04/00  03266
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL? SBG 04/00  03267
         BE    CUHL                 PROCESS UHL               SBG 04/00  03268
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?    04/00  03269
         BE    CUTL                 PROCESS UTL               SBG 04/00  03270
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL    SBG 04/00  03271
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------  SBG 05/00  03272
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03273
         BO    CVOL1NPR              YES. JUST TURN ON ISLABEL FLAG      03274
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          03275
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03276
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    03277
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      03278
CLRIDRCV DS    0H                                                        03279
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          03280
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE SBG 03/00  03281
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE  SBG 03/00  03282
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03283
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                03284
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    03285
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     03286
         MVC   LINE(133),NOLABSL   DISPLAY NO SL ON SL MSG               03287
         PUT   SYSPRINT,LINE        WRITE MSG                            03288
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  03289
         CLOSE (LABADDIN)                                                03290
CVOL1OUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            03291
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          03292
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03293
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03294
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03295
         BZ    CVOL1ND              NO. SKIP PUTTING OUT      SBG 09/00  03296
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03297
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03298
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03299
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03300
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03301
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.            SBG 03/00  03302
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?         SBG 05/00  03303
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND  SBG 05/00  03304
         MVI   LINE-1,C' '                                    SBG 03/00  03305
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03306
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 04/00  03307
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL     SBG 03/00  03308
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 04/00  03309
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION     SBG 04/00  03310
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 04/00  03311
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 03/00  03312
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03313
         B     LABCHEND                                       SBG 04/00  03314
CHDR1    DS    0H                                             SBG 04/00  03315
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03316
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      03317
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS         SBG 07/00  03318
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.            SBG 03/00  03319
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03320
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03321
         BZ    CHDR1ND              NO. SKIP PUTTING OUT      SBG 09/00  03322
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03323
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03324
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03325
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03326
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03327
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?   SBG 03/00  03328
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET  SBG 03/00  03329
* ---------------- LABEL DUMPING CODE --------------------- *            03330
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03331
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      03332
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03333
         MVC   LLINE(80),LABELITI   MOVE IN ENDOFHDRINIT                 03334
         PUT   LABLDUMP,LLINE       WRITE OUT ENDOFLABELHEADERINIT       03335
CHDR1NDM DS    0H                                                        03336
* ---------------- LABEL DUMPING CODE --------------------- *            03337
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE   SBG 03/00  03338
         NOP   CHDR1Z         DON'T PRINT LABEL INFO          SBG 05/00  03339
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?             SBG 05/00  03340
         BZ    CHDR1Z         NO. DON'T PRINT.                SBG 05/00  03341
         ST    R3,SAVE3REG                                               03342
         LA    R3,INAREA                                                 03343
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03344
         BAL   R7,PRTXXX1     PRINT LABEL INFO                SBG 05/00  03345
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03346
         L     R3,SAVE3REG                                               03347
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03348
         B     LABCHEND                                       SBG 04/00  03349
CHDR2    DS    0H                                             SBG 04/00  03350
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03351
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      03352
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          03353
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03354
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    03355
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03356
         BNE   CLRIDRH2                                                  03357
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03358
CLRIDRH2 DS    0H                                                        03359
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          03360
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2 SBG 07/00  03361
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.            SBG 03/00  03362
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03363
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03364
         BZ    CHDR2ND              NO. SKIP PUTTING OUT      SBG 09/00  03365
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03366
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03367
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03368
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           03369
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03370
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03371
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?           SBG 05/00  03372
         BZ    CHDR2Z           NO.                           SBG 05/00  03373
         ST    R3,SAVE3REG                                               03374
         LA    R3,INAREA                                                 03375
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03376
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03377
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03378
         L     R3,SAVE3REG                                               03379
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03380
         B     LABCHEND                                       SBG 04/00  03381
CEOF1    DS    0H                                             SBG 04/00  03382
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03383
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      03384
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1      SBG 04/00  03385
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.            SBG 03/00  03386
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03387
BCTCEOF1 DS    0H                                                        03388
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03389
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  03390
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03391
         STM   R2,R3,SAVE2TO3                                            03392
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03393
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03394
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03395
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03396
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03397
         LM    R2,R3,SAVE2TO3                                            03398
BCTCEOFX DS    0H                                                        03399
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03400
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03401
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03402
         BZ    CEOF1ND              NO. SKIP PUTTING OUT      SBG 09/00  03403
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03404
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03405
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03406
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03407
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03408
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?           SBG 05/00  03409
         BZ    CEOF1Z           NO.                           SBG 05/00  03410
         ST    R3,SAVE3REG                                               03411
         LA    R3,INAREA                                                 03412
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03413
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03414
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03415
         L     R3,SAVE3REG                                               03416
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03417
         B     LABCHEND                                       SBG 04/00  03418
CEOF2    DS    0H                                             SBG 04/00  03419
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03420
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      03421
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03422
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03423
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    03424
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03425
         BNE   CLRIDRF2                                                  03426
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03427
CLRIDRF2 DS    0H                                                        03428
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03429
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2      SBG 04/00  03430
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.            SBG 03/00  03431
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03432
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03433
         BZ    CEOF2ND              NO. SKIP PUTTING OUT      SBG 09/00  03434
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03435
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03436
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03437
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03438
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03439
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03440
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?           SBG 05/00  03441
         BZ    CEOF2Z           NO.                           SBG 05/00  03442
         ST    R3,SAVE3REG                                               03443
         LA    R3,INAREA                                                 03444
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03445
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03446
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03447
         L     R3,SAVE3REG                                               03448
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03449
         B     LABCHEND                                       SBG 04/00  03450
CEOV1    DS    0H                                             SBG 04/00  03451
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03452
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      03453
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1      SBG 04/00  03454
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03455
         BZ    CEOVN1         NO, PROCESS ORDINARILY          SBG 06/00  03456
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN         SBG 03/00  03457
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            03458
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03459
         MVI   LINE-1,C' '                                    SBG 03/00  03460
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03461
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE             SBG 06/00  03462
         PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.    SBG 06/00  03463
         B     CEOVY1                                         SBG 06/00  03464
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.            SBG 03/00  03465
CEOVY1   DS    0H                                             SBG 09/00  03466
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03467
BCTCEOV1 DS    0H                                                        03468
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03469
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  03470
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03471
         STM   R2,R3,SAVE2TO3                                            03472
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03473
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03474
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03475
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03476
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03477
         LM    R2,R3,SAVE2TO3                                            03478
BCTCEOVX DS    0H                                                        03479
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03480
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03481
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03482
         BZ    CEOV1ND              NO. SKIP PUTTING OUT      SBG 09/00  03483
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03484
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03485
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03486
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03487
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03488
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?           SBG 05/00  03489
         BZ    CEOV1Z           NO.                           SBG 05/00  03490
         ST    R3,SAVE3REG                                               03491
         LA    R3,INAREA                                                 03492
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03493
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03494
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03495
         L     R3,SAVE3REG                                               03496
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03497
         B     LABCHEND                                       SBG 04/00  03498
CEOV2    DS    0H                                             SBG 04/00  03499
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03500
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      03501
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03502
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03503
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    03504
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03505
         BNE   CLRIDRV2                                                  03506
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03507
CLRIDRV2 DS    0H                                                        03508
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03509
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2      SBG 04/00  03510
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03511
         BZ    CEOVN2         NO, PROCESS ORDINARILY          SBG 06/00  03512
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN         SBG 03/00  03513
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            03514
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03515
         B     CEOVY2                                         SBG 06/00  03516
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.            SBG 03/00  03517
CEOVY2   DS    0H                                             SBG 09/00  03518
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03519
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03520
         BZ    CEOV2ND              NO. SKIP PUTTING OUT      SBG 09/00  03521
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03522
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03523
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03524
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   03525
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        03526
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           03527
         B     CEOV2ND              AND GET OUT                          03528
CEOV2F   DS    0H                                                        03529
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03530
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03531
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03532
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?           SBG 05/00  03533
         BZ    CEOV2Z           NO.                           SBG 05/00  03534
         ST    R3,SAVE3REG                                               03535
         LA    R3,INAREA                                                 03536
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03537
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03538
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03539
         L     R3,SAVE3REG                                               03540
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03541
         B     LABCHEND                                       SBG 04/00  03542
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            03543
CUHL     DS    0H             HANDLE USER HEADER LABELS                  03544
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03545
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      03546
         ST    R3,SAVE3REG                                               03547
         LA    R3,INAREA                                                 03548
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03549
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03550
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03551
         L     R3,SAVE3REG                                               03552
* ---------------- LABEL DUMPING CODE --------------------- *            03553
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03554
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 03555
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03556
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03557
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03558
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            03559
* ---------------- LABEL DUMPING CODE --------------------- *            03560
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03561
         B     LABCHEND                                                  03562
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 03563
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03564
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      03565
         ST    R3,SAVE3REG                                               03566
         LA    R3,INAREA                                                 03567
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03568
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03569
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03570
         L     R3,SAVE3REG                                               03571
* ---------------- LABEL DUMPING CODE --------------------- *            03572
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03573
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 03574
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03575
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03576
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03577
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            03578
* ---------------- LABEL DUMPING CODE --------------------- *            03579
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03580
         B     LABCHEND                                                  03581
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            03582
NOTLABEL NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG    SBG 04/00  03583
LABCHEND BR    R7                                             SBG 04/00  03584
* --------------------------------------------------------- * SBG 05/00  03585
*    BAL REGISTER IS R7.                                      SBG 05/00  03586
* --------------------------------------------------------- * SBG 05/00  03587
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03588
*                         ALTERED.                                       03589
         MVI   LINE-1,C' '                                               03590
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03591
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03592
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03593
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03594
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03595
* ----                                                                   03596
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03597
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03598
         MVC   VOLALT+35(6),VOLSTG   MOVE NEW VOLSER VALUE TO MSG        03599
INDVVOLS DS    0H                                                        03600
* ----                                                                   03601
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03602
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03603
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03604
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03605
         BR    R7                    RETURN TO CALLER                    03606
* --------------------------------------------------------- * SBG 04/00  03607
*    BAL REGISTER IS R7.                                      SBG 04/00  03608
* --------------------------------------------------------- * SBG 04/00  03609
PRTXXX1  DS    0H                                             SBG 05/00  03610
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03611
         MVI   LINE-1,C' '                                    SBG 05/00  03612
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03613
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03614
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03615
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03616
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03617
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03618
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03619
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03620
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03621
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03622
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03623
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03624
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03625
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03626
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03627
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03628
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03629
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03630
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03631
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03632
PRTXXX1R BR    R7                                             SBG 05/00  03633
* --------------------------------------------------------- * SBG 04/00  03634
*    BAL REGISTER IS R7.                                      SBG 04/00  03635
* --------------------------------------------------------- * SBG 04/00  03636
PRTXXX2  DS    0H                                             SBG 05/00  03637
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03638
         MVI   LINE-1,C' '                                    SBG 05/00  03639
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03640
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03641
         MVC   XXX2RFM(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03642
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03643
         MVC   XXX2BKL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03644
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH             SBG 05/00  03645
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03646
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03647
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03648
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03649
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03650
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03651
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03652
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03653
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03654
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03655
         B     PRX2MOV                                        SBG 04/00  03656
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03657
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03658
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03659
PRTXXX2R BR    R7                                             SBG 05/00  03660
* --------------------------------------------------------- * SBG 04/00  03661
*    BAL REGISTER IS R7.                                      SBG 04/00  03662
* --------------------------------------------------------- * SBG 04/00  03663
PRTUSER  DS    0H                                             SBG 05/00  03664
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03665
         MVI   LINE-1,C' '                                    SBG 05/00  03666
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03667
         MVI   USERLBL-1,C' '                                            03668
         MVC   USERLBL(133),USERLBL-1                                    03669
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03670
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03671
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03672
PRTUSERR BR    R7                                                        03673
* --------------------------------------------------------- *            03674
*    BAL REGISTER IS R7.                                                 03675
* --------------------------------------------------------- *            03676
PRTBLCNT DS    0H                                                        03677
         MVI   LINE-1,C' '                                               03678
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03679
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03680
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03681
PRTBLCNE BR    R7                                                        03682
* --------------------------------------------------------- *            03683
*    BAL REGISTER IS R7.                                                 03684
* --------------------------------------------------------- *            03685
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03686
         ST    R7,SAVE7REG                                               03687
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03688
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03689
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03690
BACKEXT1 L     R7,SAVE7REG                                               03691
BACKEXTE BR    R7                                                        03692
* --------------------------------------------------------- *            03693
*    BAL REGISTER IS R7.                                                 03694
* --------------------------------------------------------- *            03695
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03696
         ST    R7,SAVE7REG                                               03697
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03698
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03699
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03700
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03701
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03702
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03703
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03704
CLEARSV1 L     R7,SAVE7REG                                               03705
CLEARSVE BR    R7                                                        03706
* --------------------------------------------------------- *            03707
*    BAL REGISTER IS R7.                                                 03708
* --------------------------------------------------------- *            03709
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03710
         ST    R7,SAVE7REG                                               03711
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03712
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03713
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03714
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03715
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03716
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03717
         BZ    FIXALL3                                                   03718
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03719
         BZ    FIXLAST2                                                  03720
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03721
         BZ    FIXLAST1                                                  03722
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03723
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03724
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03725
         L     R7,SAVE7REG                                               03726
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03727
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03728
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03729
         L     R7,SAVE7REG                                               03730
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03731
FIXLAST1 DS    0H               REPLACE EOF2                             03732
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03733
         L     R7,SAVE7REG                                               03734
         B     ADDEOF2          CREATE THE EOF2                          03735
FIXEXTL1 DS    0H                                                        03736
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03737
         L     R7,SAVE7REG                                               03738
FIXEXTLE BR    R7                                                        03739
* --------------------------------------------------------- *            03740
*    BAL REGISTER IS R7.                                                 03741
* --------------------------------------------------------- *            03742
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03743
*                             IOS USES DURING EXCP PROCESSING.           03744
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03745
* ------------------------------------------------------------------- *  03746
         MVC   OUTIOB(4),IOB01                                           03747
         MVC   OUTCSW(8),FUL2ZERO                                        03748
         MVC   OUTDCBPT(4),FUL2ZERO                                      03749
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03750
         MVC   OUTDCBPT+8(4),IOB02                                       03751
CLEARIOE BR    R7                                                        03752
* --------------------------------------------------------- *            03753
*    BAL REGISTER IS R7.                                                 03754
* --------------------------------------------------------- *            03755
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03756
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03757
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03758
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03759
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03760
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03761
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03762
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03763
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03764
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03765
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03766
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03767
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03768
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03769
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03770
         MVC   INAREA+41(10),TAPEOWN     MOVE TAPE OWNER INFO IF ANY     03771
         MVC   LINE(133),LINE-1                                          03772
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03773
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03774
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03775
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03776
         MVC   LINE(133),OWNRMSG                                         03777
         PUT   SYSPRINT,LINE                                             03778
CHNOTOWN DS    0H                                                        03779
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03780
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03781
CHEXTLAB DS    0H                                                        03782
         TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03783
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03784
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03785
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03786
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03787
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03788
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03789
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03790
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03791
         BZ    CHNOZAPV            NO. BYPASS.                           03792
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03793
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03794
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03795
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03796
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03797
         MVC   EXTLBLIN+41(10),TAPEOWN    CHANGE TAPE OWNER TOO          03798
         MVC   LINE(133),LINE-1                                          03799
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03800
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03801
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03802
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03803
         MVC   LINE(133),OWNRMSG                                         03804
         PUT   SYSPRINT,LINE                                             03805
CHNOZAPV DS    0H                                                        03806
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03807
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03808
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03809
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03810
         BO    CHGPRINT            YES, PRINT.                           03811
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03812
         BO    CHGPRINT            YES, PRINT                            03813
         B     CHGWRIT                                                   03814
CHGPRINT DS    0H                                                        03815
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03816
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03817
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03818
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03819
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03820
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03821
         ST    R7,SAVE7RG1                                               03822
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03823
         L     R7,SAVE7RG1                                               03824
CHGWRIT  DS    0H                                             SBG 05/00  03825
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03826
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03827
         SPACE 3                                                         03828
* --------------------------------------------------------- *            03829
*    BAL REGISTER IS R7.                                                 03830
* --------------------------------------------------------- *            03831
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03832
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03833
* --------------------------------------------------------- *            03834
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03835
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03836
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03837
         AR    R5,R2               ADD TO BYTE COUNT                     03838
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03839
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03840
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03841
ADDCNOOV DS    0H                                                        03842
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03843
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03844
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03845
* --------------------------------------------------------- *            03846
*    BAL REGISTER IS R7.                                                 03847
* --------------------------------------------------------- *            03848
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03849
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03850
* --------------------------------------------------------- *            03851
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03852
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03853
         BE    MOVEHI09                                                  03854
         MVC   0(4,R3),0(R2)                                             03855
         B     MOVEHIEN                                                  03856
         LA    R2,1(,R2)                                                 03857
         LA    R3,1(,R3)                                                 03858
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03859
         BE    MOVEHI08                                                  03860
         MVC   0(3,R3),0(R2)                                             03861
         B     MOVEHIEN                                                  03862
         LA    R2,1(,R2)                                                 03863
         LA    R3,1(,R3)                                                 03864
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03865
         BE    MOVEHI07                                                  03866
         MVC   0(2,R3),0(R2)                                             03867
         B     MOVEHIEN                                                  03868
         LA    R2,1(,R2)                                                 03869
         LA    R3,1(,R3)                                                 03870
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03871
         BE    MOVEHIEN                                                  03872
         MVC   0(1,R3),0(R2)                                             03873
MOVEHIEN BR    R7                                                        03874
* --------------------------------------------------------- *            03875
*    BAL REGISTER IS R7.                                                 03876
* --------------------------------------------------------- *            03877
****                                                                     03878
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03879
****                                                                     03880
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03881
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03882
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03883
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03884
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03885
****                                                                     03886
* --------------------------------------------------------- *            03887
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03888
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03889
         EXCP  INIOB          READ                                       03890
         WAIT  ECB=INECB      WAIT FOR READ                              03891
         TM    INCSW+4,X'01'  WAS TM READ?                               03892
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03893
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03894
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03895
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03896
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03897
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03898
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03899
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03900
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03901
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03902
         NI    ISLBLFLG,FF-X'01'     TURN OFF "ISLABEL" FLAG             03903
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03904
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03905
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03906
         BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03907
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03908
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03909
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03910
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03911
*                             BUT IF IT IS A DATA FILE,                  03912
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03913
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03914
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03915
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03916
         EXCP  INIOB          DO THIS EXCP                               03917
         WAIT  ECB=INECB      WAIT FOR READ                              03918
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03919
         BNE   LBDQINER       NO -- ERROR                                03920
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03921
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03922
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             03923
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     03924
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         03925
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03926
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      03927
         EXCP  INIOB          DO THIS EXCP                               03928
         WAIT  ECB=INECB      WAIT FOR READ                              03929
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03930
         BNE   LBDQINER       NO -- ERROR                                03931
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03932
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03933
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          03934
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03935
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     03936
         EXCP  INIOB          DO THIS EXCP                               03937
         WAIT  ECB=INECB      WAIT FOR READ                              03938
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03939
         BNE   LBDQINER       NO -- ERROR                                03940
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03941
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03942
LBDQREND BR    R7                                                        03943
* --------------------------------------------------------- *            03944
*    BAL REGISTER IS R7.                                                 03945
* --------------------------------------------------------- *            03946
****                                                                     03947
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        03948
****                                                                     03949
* --------------------------------------------------------- *            03950
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       03951
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 03952
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 03953
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     03954
         ST    R5,R5HXPRT        Save register.                          03955
         L     R5,SAVTRTCS       Point to translation table CSECT.       03956
         USING TRTCSECT,R5                                               03957
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               03958
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            03959
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        03960
         B     HEXPRNXX          Bypass Hex Print from external labels   03961
*                                                                        03962
HEXPRNEX DS    0H                Hex Print from External Label Input     03963
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 03964
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 03965
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      03966
         ST    R5,R5HXPRT        Save register.                          03967
         L     R5,SAVTRTCS       Point to translation table CSECT.       03968
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               03969
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            03970
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        03971
         L     R2,=F'80'         We know to print exactly 80 bytes.      03972
         B     MOVESIZ1          Now go print them.                      03973
*                                                                        03974
HEXPRNXX DS    0H                                                        03975
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      03976
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           03977
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           03978
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   03979
MOVESIZ1 DS    0H                                                        03980
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                03981
         BCTR  R2,0                ONE LESS FOR EXECUTE                  03982
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03983
         EX    R2,MOVRULER         PUT IN HEX RULER                      03984
         PUT   SYSPRINT,LINE                                             03985
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03986
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   03987
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     03988
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03989
         B     HEXEN001            and continue to print.                03990
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              03991
HEXEN001 EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      03992
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03993
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        03994
         PUT   SYSPRINT,LINE                                             03995
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   03996
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     03997
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03998
         B     HEXEN002            and continue to print.                03999
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04000
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04001
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04002
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04003
         PUT   SYSPRINT,LINE                                             04004
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04005
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04006
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04007
         B     HEXEN003            and continue to print.                04008
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04009
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04010
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04011
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04012
         PUT   SYSPRINT,LINE                                             04013
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04014
         B     HEXPREND                                                  04015
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04016
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04017
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04018
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04019
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04020
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04021
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04022
HEXPREND DS    0H                                                        04023
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04024
NOHEXPRO DS    0H                                                        04025
         L     R5,R5HXPRT                                                04026
         DROP  R5                                                        04027
         BR    R7             RETURN TO CALLER                           04028
* --------------------------------------------------------- *            04029
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  04030
         EJECT                                                           04031
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04032
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04033
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04034
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04035
FUL2ZERO DC    2F'0'                                                     04036
IOB01    DC    X'02000000'                                               04037
IOB02    DC    X'00010000'                                               04038
PL4NO3   DC    PL4'3'                                                    04039
BLOKCNTP DC    F'0'                                                      04040
FILECNTP DC    F'1'                                                      04041
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04042
TOTBYH   DC    F'0'                                                      04043
TOTBYL   DC    F'0'                                                      04044
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04045
PRVBYH   DC    F'0'                                                      04046
PRVBYL   DC    F'0'                                                      04047
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04048
DBINFH   DC    F'0'                                                      04049
DBINFL   DC    F'0'                                                      04050
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04051
DBINH    DC    F'0'                                                      04052
DBINL    DC    F'0'                                                      04053
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04054
LABINH   DC    F'0'                                                      04055
LABINL   DC    F'0'                                                      04056
WORKA    DC    D'0'                                                      04057
WORKL    DC    D'0'                                                      04058
WORKP    DC    D'0'                                                      04059
SAV01MLT DC    D'0'                                                      04060
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04061
HEXSAVE  DS    3F                    Register save for HEX macro         04062
BLOKCNT  DC    F'0'                                                      04063
FILECNT  DC    F'1'                                                      04064
LABELCNT DC    F'0'                                                      04065
SAVUNIT  DC    CL4' '                                                    04066
         DC    CL1' '         Need this to absorb blank from HEX macro   04067
SAVDDN   DC    CL5' '                                                    04068
SAVVOLSR DC    CL6' '                                                    04069
SAVBYTES DC    X'0000'                                                   04070
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04071
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04072
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04073
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04074
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04075
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04076
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04077
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04078
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04079
*              X'01'          TAPE IS SL                                 04080
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04081
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04082
*              X'01'          Hex printing from EXTLBLIN.                04083
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04084
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04085
*                             INPUT TAPE. X'01' IS OFF.                  04086
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04087
*                             EXTERNAL FILE                              04088
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04089
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04090
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04091
*                             THIS MEANS EOF OF THE LABADDIN FILE        04092
*              X'10'          FINISHED FIXING LABELS                     04093
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04094
*              X'00'          DATA IS NOT A LABEL                        04095
*              X'01'          DATA IS A LABEL                            04096
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04097
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04098
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04099
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04100
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04101
*              X'01'          LABLDUMP DD IS OPEN                        04102
*              X'02'          SYSIN    DD IS OPEN                        04103
*              X'04'          LABADDIN DD IS OPEN                        04104
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04105
*              X'01'          ERROR WAS PRESENT                          04106
OUTBYT   DS    0F                                                        04107
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04108
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04109
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04110
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04111
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04112
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04113
INVOLUME DC    CL6'      '                                    SBG 03/00  04114
         DC    C'      '                                                 04115
         DC    C'0'                                                      04116
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04117
         DC    C'0'                                                      04118
BLKCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04119
         DC    C'      '                                                 04120
DWORD    DC    D'0'                                                      04121
QWORD    DS    PL16                                                      04122
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04123
         CNOP  0,8                                                       04124
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04125
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04126
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'FFFF'              SBG 03/00  04127
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04128
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE 2 FILES   04129
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE ONE FILE  04130
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04131
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04132
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04133
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04134
         DC    X'3F',AL3(INAREA),X'6000',X'FFFF'     FWD SPACE FILE      04135
         DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACK OVER T.M.      04136
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04137
INECB    DC    F'0'                                                      04138
INIOB    DC    X'02000000'                                               04139
         DC    A(INECB)                                                  04140
INCSW    DC    2F'0'                                                     04141
INCCWPT  DC    A(INCCW)                                                  04142
         DC    A(IN)                                                     04143
         DC    F'0'                                                      04144
         DC    X'00010000'                                               04145
OUTECB   DC    F'0'                                                      04146
OUTIOB   DC    X'02000000'                                               04147
         DC    A(OUTECB)                                                 04148
OUTCSW   DC    2F'0'                                                     04149
OUTCCWPT DC    A(OUTCCW)                                                 04150
OUTDCBPT DC    A(OUT1)                                                   04151
         DC    F'0'                                                      04152
         DC    X'00010000'                                               04153
REWECB   DC    F'0'                                                      04154
REWIOB   DC    X'02000000'                                               04155
         DC    A(REWECB)                                                 04156
REWCSW   DC    2F'0'                                                     04157
REWCCWPT DC    A(REWCCW)                                                 04158
REWDCBPT DC    A(OUT1)                                                   04159
         DC    F'0'                                                      04160
         DC    X'00010000'                                               04161
         SPACE 3                                                         04162
DDOCHG   DC    C'     '                                                  04163
DDOUT1   DC    C'OUT1 '                                                  04164
DDOUT2   DC    C'OUT2 '                                                  04165
DDOUT3   DC    C'OUT3 '                                                  04166
DDOUT4   DC    C'OUT4 '                                                  04167
DDOUT5   DC    C'OUT5 '                                                  04168
DDOUT6   DC    C'OUT6 '                                                  04169
DDOUT7   DC    C'OUT7 '                                                  04170
DDOUT8   DC    C'OUT8 '                                                  04171
DDOUT9   DC    C'OUT9 '                                                  04172
DDOUT10  DC    C'OUT10'                                                  04173
DDOUT11  DC    C'OUT11'                                                  04174
DDOUT12  DC    C'OUT12'                                                  04175
DDOUT13  DC    C'OUT13'                                                  04176
DDOUT14  DC    C'OUT14'                                                  04177
DDOUT15  DC    C'OUT15'                                                  04178
DDOUT16  DC    C'OUT16'                                                  04179
FLAGLIT  DC    C' - FLAGS - '                                            04180
* --------------------------                                             04181
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04182
*              X'01'          WE ARE IN A HDR GROUP                      04183
*              X'02'          WE ARE IN A EOF GROUP                      04184
*              X'04'          WE ARE IN A EOV GROUP                      04185
* --------------------------                                             04186
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04187
FLAG1    DC    X'00'                                                     04188
OP1      EQU   X'80'                                                     04189
OP2      EQU   X'40'                                                     04190
OP3      EQU   X'20'                                                     04191
OP4      EQU   X'10'                                                     04192
OP5      EQU   X'08'                                                     04193
OP6      EQU   X'04'                                                     04194
OP7      EQU   X'02'                                                     04195
OP8      EQU   X'01'                                                     04196
FLAG2    DC    X'00'                                                     04197
OP9      EQU   X'80'                                                     04198
OP10     EQU   X'40'                                                     04199
OP11     EQU   X'20'                                                     04200
OP12     EQU   X'10'                                                     04201
OP13     EQU   X'08'                                                     04202
OP14     EQU   X'04'                                                     04203
OP15     EQU   X'02'                                                     04204
OP16     EQU   X'01'                                                     04205
FLAG2A   DC    X'00'                                          SBG 03/00  04206
ERR      EQU   X'02'                                                     04207
EOV      EQU   X'01'                                                     04208
FF       EQU   X'FF'                                                     04209
FLAG3    DC    X'00'                                                     04210
FLAG4    DC    X'00'                                                     04211
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04212
L80FLAG  DC    X'00'                                          SBG 03/00  04213
*              X'01'    LAST DATA WAS 80 BYTE RECORD          SBG 03/00  04214
* ---------- *                                                           04215
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04216
*              x'01'    Yes.                                             04217
* ---------- *                                                           04218
LBLFLAG  DC    X'00'    FLAG WHEN TAPE LABELS ARE BEING READ IN          04219
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  04220
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  04221
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  04222
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  04223
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  04224
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  04225
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  04226
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  04227
* ---------- *                                                           04228
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04229
*              X'01'    HDR1 HAS BEEN READ IN                            04230
*              X'02'    HDR2 HAS BEEN READ IN                            04231
*              X'04'    VOL1 HAS BEEN READ IN                            04232
*              X'08'    UHL  HAS BEEN READ IN                            04233
*              X'10'    EOF1 HAS BEEN READ IN                            04234
*              X'20'    EOF2 HAS BEEN READ IN                            04235
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04236
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04237
* ---------- *                                                           04238
STRIPFLG DC    X'00'                                                     04239
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04240
DATFLAG  DC    X'00'                                          SBG 03/00  04241
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04242
* --------------------------------------------------------- * SBG 04/00  04243
VOLDD    DC    C'     '                                                  04244
STOR7REG DS    F                                                         04245
TOTB7REG DS    F                                                         04246
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04247
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04248
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04249
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04250
         SPACE 3                                                         04251
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04252
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04253
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04254
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04255
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04256
VOL1LABL DS    0CL80                                                     04257
VOL1LIT  DC    CL4'VOL1'                                                 04258
VOL1SERL DC    CL6' '                                                    04259
VOL1FIL1 DC    CL31' '                                                   04260
VOL1ONER DC    CL10' '                                                   04261
VOL1FIL2 DC    CL29' '                                                   04262
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04263
HDR1INIT DS    0CL80                                                     04264
HDR1ILIT DC    CL4'HDR1'                                                 04265
HDR1IFIL DC    76C'0'                                                    04266
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04267
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04268
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04269
         DC    CL78' '                                                   04270
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04271
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04272
         DC    CL78' '                                                   04273
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04274
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04275
         DC    CL78' '                                                   04276
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04277
         DC    C'R TAPE COPY OPERATION '                                 04278
         DC    CL58' '                                                   04279
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04280
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04281
         DC    C'A PARM OF INITVOLS.'                                    04282
         DC    CL8' '                                                    04283
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04284
         DC    C'                             MEMBER=         VOLUME= '  04285
         DC    C'                          '                             04286
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04287
         DC    C'                             MEMBER=         VOLUME= '  04288
         DC    C'                          '                             04289
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04290
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04291
         DC    C' MULTIPLE OF 80           '                             04292
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04293
         DC    C' IS TREATED AS NL.                                   '  04294
         DC    CL27' '                                                   04295
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04296
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04297
         DC    CL27' '                                                   04298
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04299
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04300
         DC    CL27' '                                                   04301
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04302
         DC    CL6'&HEXDFLM'                                             04303
         DC    C' RECORDS WILL'                                          04304
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04305
         DC    C'SYSIN.'                                                 04306
         DC    CL17' '                                                   04307
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04308
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04309
         DC    C'UT TAPES.                 '                             04310
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04311
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04312
         DC    C' MULTIPLE OF 80           '                             04313
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04314
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04315
         DC    C'IMAGES.                   '                             04316
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04317
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04318
         DC    C'                           '                            04319
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04320
         DC    C'ing a Tape Mark right now.                           '  04321
         DC    C'                          '                             04322
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04323
         DC    C'.  Divide by 3 for the SL file number ***            '  04324
         DC    C'                          '                             04325
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04326
         DC    C'.  Multiply by 3 for the NL file number ***          '  04327
         DC    C'                          '                             04328
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04329
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04330
         DC    C't code PARM=SLLIM.        '                             04331
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04332
         DC    C'TERMINATED '                                            04333
         DC    76C'*'                                                    04334
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04335
         DC    82C'*'                                                    04336
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04337
         DC    C' FOR DDNAME '                                           04338
VOLDDN   DC    C'     '                                                  04339
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04340
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04341
OWNRTID  DC    C'          '                                             04342
OWNRLIT1 DC    C' FOR DDNAME '                                           04343
OWNRDDO  DC    C'     '                                                  04344
OWNRFIL2 DC    68C' '                                                    04345
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04346
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04347
         DC    103C' '                                        SBG 03/00  04348
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04349
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04350
         DC    69C' '                                         SBG 06/00  04351
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04352
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04353
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04354
INITSER  DC    C'      '                                      SBG 03/00  04355
INITBLNK DC    76C' '                                         SBG 03/00  04356
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  04357
VOL1SER  DC    C'      '                                      SBG 03/00  04358
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  04359
VOL1OWNR DC    C'          '                                  SBG 04/00  04360
VOL1BLNK DC    63C' '                                         SBG 03/00  04361
         DC    C' '                                                      04362
USERLBL  DC    81C' '                                         SBG 03/00  04363
         DC    52C' '                                                    04364
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  04365
XXX1VOL  DC    C'      '                                      SBG 05/00  04366
XXX1DSNL DC    C' DSN='                                       SBG 05/00  04367
XXX1DSN  DC    C'                 '                           SBG 05/00  04368
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  04369
XXX1DSQ  DC    C'    '                                        SBG 05/00  04370
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  04371
XXX1VSQ  DC    C'    '                                        SBG 05/00  04372
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  04373
XXX1BLCH DC    C'    '                                        SBG 05/00  04374
XXX1BLC  DC    C'      '                                      SBG 05/00  04375
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  04376
XXX1CRD  DC    C'      '                                      SBG 05/00  04377
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  04378
XXX1EXD  DC    C'      '                                      SBG 05/00  04379
XXX1BLNK DC    30C' '                                         SBG 03/00  04380
XXX2LBL  DC    C' XXX2 LABEL: RECFM= '                        SBG 05/00  04381
XXX2RFM  DC    C' '                                           SBG 05/00  04382
XXX2BKLL DC    C'   BLOCK LENGTH: '                           SBG 05/00  04383
XXX2BKL  DC    C'     '                                       SBG 05/00  04384
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  04385
XXX2RCL  DC    C'     '                                       SBG 05/00  04386
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  04387
XXX2TDN  DC    C' '                                           SBG 05/00  04388
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  04389
XXX2JST  DC    C'                 '                           SBG 05/00  04390
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  04391
XXX2IDR  DC    C'   '                                         SBG 05/00  04392
XXX2BLNK DC    8C' '                                          SBG 03/00  04393
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04394
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04395
OUTCFCNT DC    C'XXXXXXXXXX'                                             04396
         DC    C'  Bytes:'                                               04397
OUTCBCNT DC    CL26' '                                                   04398
         DC    C' '                                                      04399
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04400
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04401
         DC    40C'*'                                                    04402
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04403
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04404
         DC    40C'*'                                                    04405
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04406
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04407
         DC    40C'*'                                                    04408
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04409
FILEPBYT DS    0CL44                                                     04410
FILEDFL1 DC    C' '                                                      04411
FILECONT DC    C'          '                                             04412
FILEDFL2 DC    C' '                                                      04413
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04414
         DC    C' BYTES'                                                 04415
FILETBYT DS    0CL44                                                     04416
FILEDFL3 DC    C'    '                                                   04417
FILECUMT DC    C'          '                                             04418
FILEDFL4 DC    C' '                                                      04419
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04420
         DC    8C' '                                                     04421
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04422
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04423
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04424
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04425
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04426
               LSER: XXXXXX '                                 SBG 06/00  04427
         DC    66C' '                                         SBG 06/00  04428
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04429
               ERIAL XXXXXX '                                 SBG 06/00  04430
         DC    66C' '                                         SBG 06/00  04431
         DC    C' '                                                      04432
HEXPRTWK DC    CL133' '                                                  04433
         DC    C' '                                                      04434
LINE     DC    CL133' '                                                  04435
         DC    C' '                                                      04436
SAVELINE DC    CL133' '                                                  04437
LINE44   DC    CL44' '                                                   04438
RULERHEX DS    0CL132                                                    04439
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04440
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04441
         DC    C'----1----+----2----+----3----+----4'                    04442
REPLY    DC    C'      '                                                 04443
COPIED   DC    C'COPIED '                                     SBG 03/00  04444
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04445
FULLWORK DS    0F                                             SBG 03/00  04446
         DC    H'0'                                           SBG 03/00  04447
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04448
         DC    2F'0'               FILLER                     SBG 05/00  04449
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04450
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04451
* --------------------------------------------------------- * SBG 05/00  04452
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04453
PARMFLG1 DC    X'00'                                                     04454
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04455
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04456
PARMFLG2 DC    X'00'                                                     04457
PARMFLG3 DC    X'00'                                                     04458
PARMFLG4 DC    X'00'                                                     04459
PARMFLG5 DC    X'00'                                                     04460
PARMFLG6 DC    X'00'                                                     04461
PARMFLG7 DC    X'00'                                                     04462
PARMFLG8 DC    X'00'                                                     04463
PARMFLG9 DC    X'00'                                                     04464
PARMFLGA DC    X'00'                                                     04465
PARMFLLN EQU   *-PARMFLGS                                                04466
* --------------------------------------------------------- * SBG 05/00  04467
         DS    0F                                                        04468
STRTVALU DS    0CL(ENDVALUE)                                             04469
         DC    A(ENDVALUE)                                               04470
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04471
*                                  Upon entry to PARMCHEK, contains      04472
*                                  the PARM address from COPYMODS,       04473
*                                  which gets overlaid.                  04474
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04475
*                                  Upon entry to PARMCHEK, contains      04476
*                                  the PARM address from COPYMODS,       04477
*                                  which gets overlaid.                  04478
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04479
*                                  Upon entry to PARMCHEK, contains      04480
*                                  the PARM length from COPYMODS,        04481
*                                  which gets overlaid.                  04482
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04483
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04484
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04485
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04486
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04487
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04488
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04489
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04490
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04491
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04492
         DC    CL7' '              FILLER                                04493
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04494
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04495
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04496
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04497
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04498
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04499
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04500
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04501
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04502
TAPEOWN  DC    CL10' '                                                   04503
OVERFLAG DC    X'00'                                                     04504
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04505
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04506
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04507
LIMCHAR  DC    CL10' '                                                   04508
LABCHAR  DC    CL10' '                                                   04509
PRTCHAR  DC    CL10' '                                                   04510
ENDVALUE EQU   (*-PARMSLEN)+4                                            04511
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04512
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04513
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04514
* --------------------------------------------------------- *            04515
*              FORMAT OF PARM TABLE                                      04516
*              ONE ENTRY IS 20 BYTES                                     04517
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04518
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04519
*                               X'00' SAYS TURN FLAG ON                  04520
*                               X'10' SET ENTRY AS A DEFAULT             04521
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04522
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04523
*                                WHICH ALLOWS FOR 80 PARMS               04524
*                                THAT DON'T HAVE TO BE                   04525
*                                SEPARATED BY A COMMA.                   04526
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04527
* --------------------------------------------------------- *            04528
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04529
* --------------------------------------------------------- *            04530
         SPACE 3                                                         04531
         LTORG                                                           04532
         SPACE 3                                                         04533
         DS    0D                                             SBG 09/00  04534
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04535
LBNJFCB  DC    44F'0'                                                    04536
         DS    0D                                             SBG 09/00  04537
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04538
LBLJFCB  DC    44F'0'                                                    04539
         DS    0D                                             SBG 05/00  04540
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04541
OUTJFCB  DC    44F'0'                                                    04542
         DS    0D                                             SBG 06/00  04543
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04544
INJFCB   DC    44F'0'                                         SBG 06/00  04545
         SPACE 3                                                         04546
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04547
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04548
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04549
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04550
VOLCHG   DC    C'      '                                                 04551
VOLSTG   DC    C'      '    CARD VOLUME NAME - TO OVERLAY OTHERS         04552
VOLALL   DS    0CL96         16 X 6                                      04553
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04554
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04555
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04556
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04557
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04558
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04559
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04560
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04561
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04562
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04563
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04564
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04565
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04566
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04567
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04568
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04569
* --------------------------------------------------------- * SBG 05/00  04570
         SPACE 3                                                         04571
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04572
               EXLST=INEXLST                                             04573
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04574
               EXLST=OUTEXLST                                            04575
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04576
               EXLST=OUTEXLST                                            04577
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04578
               EXLST=OUTEXLST                                            04579
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04580
               EXLST=OUTEXLST                                            04581
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04582
               EXLST=OUTEXLST                                            04583
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04584
               EXLST=OUTEXLST                                            04585
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04586
               EXLST=OUTEXLST                                            04587
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04588
               EXLST=OUTEXLST                                            04589
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04590
               EXLST=OUTEXLST                                            04591
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04592
               EXLST=OUTEXLST                                            04593
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04594
               EXLST=OUTEXLST                                            04595
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04596
               EXLST=OUTEXLST                                            04597
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04598
               EXLST=OUTEXLST                                            04599
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04600
               EXLST=OUTEXLST                                            04601
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04602
               EXLST=OUTEXLST                                            04603
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04604
               EXLST=OUTEXLST                                            04605
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04606
               BLKSIZE=133                                               04607
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04608
               EXLST=LBLEXLST                                            04609
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04610
               EXLST=LBNEXLST,EODAD=LBLINEND                             04611
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04612
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04613
SAVE2TO3 DC    2F'0'                                                     04614
SAVE3REG DC    F'0'                                                      04615
SAVE7BA1 DC    F'0'                                                      04616
SAVE7REG DC    F'0'                                                      04617
SAVE7BAL DC    F'0'                                                      04618
SAVE7RG1 DC    F'0'                                                      04619
SAVE7RG2 DC    F'0'                                                      04620
SAVE7RG3 DC    F'0'                                                      04621
SAVE7RG4 DC    F'0'                                                      04622
R5HXPRT  DC    F'0'                                                      04623
R7HXPRT  DC    F'0'                                                      04624
SAVTRTCS DC    F'0'                                                      04625
ENTRYPT  DC    F'0'                                                      04626
PARMSAVE DC    F'0'                                                      04627
PARMADDR DC    F'0'                                                      04628
USERSAVE DC    F'0'                                                      04629
         DC    CL4' '                                                    04630
HDR1SAV  DC    CL80' '                                                   04631
HDR2SAV  DC    CL80' '                                                   04632
UHL1SAV  DC    CL80' '                                                   04633
UHL2SAV  DC    CL80' '                                                   04634
UHL3SAV  DC    CL80' '                                                   04635
UHL4SAV  DC    CL80' '                                                   04636
UHL5SAV  DC    CL80' '                                                   04637
UHL6SAV  DC    CL80' '                                                   04638
UHL7SAV  DC    CL80' '                                                   04639
UHL8SAV  DC    CL80' '                                                   04640
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04641
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04642
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04643
TRTCSECT CSECT                                                           04644
TRTBL0   DS    0D                                                        04645
         DC    XL16'40404040404040404040404040404040'                    04646
         DC    XL16'40404040404040404040404040404040'                    04647
         DC    XL16'40404040404040404040404040404040'                    04648
         DC    XL16'40404040404040404040404040404040'                    04649
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04650
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04651
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04652
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04653
         DC    XL16'40818283848586878889404040404040'                    04654
         DC    XL16'40919293949596979899404040404040'                    04655
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04656
         DC    XL16'40404040404040404040404040404040'                    04657
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04658
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04659
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04660
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04661
TRTBL1   DS    0D                                                        04662
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04663
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04664
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04665
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04666
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04667
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04668
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04669
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04670
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04671
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04672
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04673
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04674
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04675
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04676
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04677
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04678
TRTBL2   DS    0D                                                        04679
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04680
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04681
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04682
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04683
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04684
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04685
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04686
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04687
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04688
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04689
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04690
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04691
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04692
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04693
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04694
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04695
         EJECT                                                           04696
JFCBLK   DSECT                                                           04697
         IEFJFCBN LIST=YES                                               04698
COPYMODS CSECT                                                           04699
INAREA   DS    CL65535                                        SBG 03/00  04700
#PAN$AUD CSECT                                                           04701
$PAN#AUD DC    CL30'LEVEL 066 COPYMODS  08/21/03 '                       04702
         END                                                             04703
*          DATA SET COPYMOPT   AT LEVEL 066 AS OF 08/21/03               04704
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04705
**************************************************************           04706
**************************************************************           04707
**                                                          **           04708
**                                                          **           04709
**  MODULE: COPYMOPT                                        **           04710
**                                                          **           04711
**                                                          **           04712
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04713
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04714
**            PROGRAM.                                      **           04715
**                                                          **           04716
**                                                          **           04717
**************************************************************           04718
**************************************************************           04719
         EJECT                                                           04720
         YREGS                                                           04721
COPYMOPT CSECT                                                           04722
         USING *,R15                                          SBG 03/00  04723
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04724
         B     EYECATCH                                       SBG 03/00  04725
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04726
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04727
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04728
SAVEAREA DC    18F'0'                                                    04729
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04730
         SAVE  (14,12)                                                   04731
         LR    R5,R1          SAVE PASSED QUANTITY                       04732
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04733
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04734
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04735
         LR    R13,R1               NEW SAVE AREA ADDRESS                04736
         DROP  R15                                                       04737
* -----                       SET UP TWO BASE REGISTERS                  04738
         USING COPYMOPT,R12,R11                                          04739
         LR    R12,R15                                                   04740
         LA    R11,4095(,R12)                                            04741
         LA    R11,1(,R11)                                               04742
         LR    R1,R5          RESTORE PARM POINTER                       04743
OPTMOVE  DS    0H                                                        04744
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           04745
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04746
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04747
         OPEN  (SYSPRINT,OUTPUT)                                         04748
         MVC   LINE(133),LINE-1       CLEAR LINE                         04749
         MVC   LINE(133),DISPLINH                                        04750
         PUT   SYSPRINT,LINE                                             04751
         MVC   LINE(133),LINE-1       CLEAR LINE                         04752
         MVC   LINE(133),DISPLINO                                        04753
         PUT   SYSPRINT,LINE                                             04754
         MVC   LINE(133),LINE-1       CLEAR LINE                         04755
         PUT   SYSPRINT,LINE                                             04756
         BAL   R7,FILLOPTS                                               04757
         MVC   LINE(133),LINE-1       CLEAR LINE                         04758
         MVC   LINE(133),DISPOP02                                        04759
         PUT   SYSPRINT,LINE                                             04760
         MVC   LINE(133),LINE-1       CLEAR LINE                         04761
         MVC   LINE(133),DISPOP01                                        04762
         PUT   SYSPRINT,LINE                                             04763
         MVC   LINE(133),LINE-1       CLEAR LINE                         04764
         MVC   LINE(133),DISPOP03                                        04765
         PUT   SYSPRINT,LINE                                             04766
         MVC   LINE(133),LINE-1       CLEAR LINE                         04767
         PUT   SYSPRINT,LINE                                             04768
         CLOSE (SYSPRINT)                                                04769
* ----------------------------------------------------------------- *    04770
THEEND   EQU   *                                                         04771
THEEND1  DS    0H                                                        04772
         L     R13,4(,R13)                                               04773
         RETURN (14,12),RC=0                                             04774
         EJECT                                                           04775
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04776
* ----------------------------------------------------------------- *    04777
*    BAL REGISTER IS R7.                                            *    04778
* ------------------------------------------------------------------*    04779
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04780
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04781
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04782
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04783
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04784
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04785
         BE    FILOPEND                                                  04786
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            04787
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                04788
         BZ    FILLZER                                                   04789
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    04790
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04791
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04792
         BCT   R4,FILLOOP             LOOP BACK                          04793
         B     FILNEXTB                                                  04794
FILLZER  DS    0H                                                        04795
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04796
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04797
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04798
         BCT   R4,FILLOOP             LOOP BACK                          04799
FILNEXTB DS    0H                                                        04800
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04801
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04802
         PUT   SYSPRINT,LINE                                             04803
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04804
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04805
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04806
FILOPEND BR    R7                                                        04807
* ----------------------------------------------------------------- *    04808
* ----------  CONSTANTS  ------------------------------------------ *    04809
         LTORG                                                           04810
         DS    0F                                                        04811
PARMTBIN DC    X'00000000000000000000'                                   04812
PARMWORK DC    X'00000000000000000000'                                   04813
PARMZERO DC    X'00000000000000000000'                                   04814
OPTABLE  DS    0D                                                        04815
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       04816
OPTENTLN EQU   *-OPTABLE                                                 04817
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       04818
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       04819
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       04820
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       04821
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       04822
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       04823
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       04824
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       04825
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       04826
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       04827
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       04828
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       04829
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       04830
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       04831
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       04832
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       04833
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       04834
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       04835
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       04836
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       04837
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       04838
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       04839
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       04840
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       04841
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       04842
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       04843
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       04844
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       04845
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       04846
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       04847
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       04848
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       04849
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       04850
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       04851
         DC    X'00000000800000000000',C'          ',C'          '       04852
         DC    X'00000000010000000000',C'          ',C'          '       04853
         DC    X'00000000020000000000',C'          ',C'          '       04854
         DC    X'00000000040000000000',C'          ',C'          '       04855
         DC    X'00000000080000000000',C'          ',C'          '       04856
         DC    X'00000000001000000000',C'          ',C'          '       04857
         DC    X'00000000002000000000',C'          ',C'          '       04858
         DC    X'00000000004000000000',C'          ',C'          '       04859
         DC    X'00000000008000000000',C'          ',C'          '       04860
         DC    X'00000000000100000000',C'          ',C'          '       04861
         DC    X'00000000000200000000',C'          ',C'          '       04862
         DC    X'00000000000400000000',C'          ',C'          '       04863
         DC    X'00000000000800000000',C'          ',C'          '       04864
         DC    X'00000000000010000000',C'          ',C'          '       04865
         DC    X'00000000000020000000',C'          ',C'          '       04866
         DC    X'00000000000040000000',C'          ',C'          '       04867
         DC    X'00000000000080000000',C'          ',C'          '       04868
         DC    X'00000000000001000000',C'          ',C'          '       04869
         DC    X'00000000000002000000',C'          ',C'          '       04870
         DC    X'00000000000004000000',C'          ',C'          '       04871
         DC    X'00000000000008000000',C'          ',C'          '       04872
         DC    X'00000000000000100000',C'          ',C'          '       04873
         DC    X'00000000000000200000',C'          ',C'          '       04874
         DC    X'00000000000000400000',C'          ',C'          '       04875
         DC    X'00000000000000800000',C'          ',C'          '       04876
         DC    X'00000000000000010000',C'          ',C'          '       04877
         DC    X'00000000000000020000',C'          ',C'          '       04878
         DC    X'00000000000000040000',C'          ',C'          '       04879
         DC    X'00000000000000080000',C'          ',C'          '       04880
         DC    X'00000000000000001000',C'          ',C'          '       04881
         DC    X'00000000000000002000',C'          ',C'          '       04882
         DC    X'00000000000000004000',C'          ',C'          '       04883
         DC    X'00000000000000008000',C'          ',C'          '       04884
         DC    X'00000000000000000100',C'          ',C'          '       04885
         DC    X'00000000000000000200',C'          ',C'          '       04886
         DC    X'00000000000000000400',C'          ',C'          '       04887
         DC    X'00000000000000000800',C'          ',C'          '       04888
         DC    X'00000000000000000010',C'          ',C'          '       04889
         DC    X'00000000000000000020',C'          ',C'          '       04890
         DC    X'00000000000000000040',C'          ',C'          '       04891
         DC    X'00000000000000000080',C'          ',C'          '       04892
         DC    X'00000000000000000001',C'          ',C'          '       04893
         DC    X'00000000000000000002',C'          ',C'          '       04894
         DC    X'00000000000000000004',C'          ',C'          '       04895
         DC    X'00000000000000000008',C'          ',C'          '       04896
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   04897
*  -----                                                                 04898
DISPAREA DS    0D                                                        04899
DISPLINH DS    0CL133                                                    04900
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  04901
         DC    C'LEVEL 066 - OPTIONS DISPLAY                          '  04902
         DC    27C' '                                                    04903
DISPLINO DS    0CL133                                                    04904
         DC    C'-    OPTIONS IN EFFECT:                              '  04905
         DC    C'                                                     '  04906
         DC    27C' '                                                    04907
DISPOP01 DS    0CL133                                                    04908
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  04909
         DC    C'LIMIT=   SYSIN CARD                                  '  04910
         DC    27C' '                                                    04911
DISPOP02 DS    0CL133                                                    04912
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  04913
         DC    C'LIMIT=   SYSIN CARD                                  '  04914
         DC    27C' '                                                    04915
DISPOP03 DS    0CL133                                                    04916
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  04917
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  04918
         DC    27C' '                                                    04919
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04920
               BLKSIZE=133                                               04921
         DC    C' '                                                      04922
LINE     DS    CL133                                                     04923
DISPLIN1 DS    0CL133                                                    04924
         DC    C'0    '                                                  04925
DISPL1A  DC    8CL12' '                                                  04926
         DC    32C' '                                                    04927
DISPLIN2 DS    0CL133                                                    04928
         DC    C'     '                                                  04929
DISPL2A  DC    8CL12' '                                                  04930
         DC    32C' '                                                    04931
DISPLIN3 DS    0CL133                                                    04932
         DC    C'     '                                                  04933
DISPL3A  DC    8CL12' '                                                  04934
         DC    32C' '                                                    04935
DISPLIN4 DS    0CL133                                                    04936
         DC    C'     '                                                  04937
DISPL4A  DC    8CL12' '                                                  04938
         DC    32C' '                                                    04939
DISPLIN5 DS    0CL133                                                    04940
         DC    C'     '                                                  04941
DISPL5A  DC    8CL12' '                                                  04942
         DC    32C' '                                                    04943
DISPLIN6 DS    0CL133                                                    04944
         DC    C'     '                                                  04945
DISPL6A  DC    8CL12' '                                                  04946
         DC    32C' '                                                    04947
DISPLIN7 DS    0CL133                                                    04948
         DC    C'     '                                                  04949
DISPL7A  DC    8CL12' '                                                  04950
         DC    32C' '                                                    04951
DISPLIN8 DS    0CL133                                                    04952
         DC    C'     '                                                  04953
DISPL8A  DC    8CL12' '                                                  04954
         DC    32C' '                                                    04955
DISPLIN9 DS    0CL133                                                    04956
         DC    C'     '                                                  04957
DISPL9A  DC    8CL12' '                                                  04958
         DC    32C' '                                                    04959
DISPLINA DS    0CL133                                                    04960
         DC    C'     '                                                  04961
DISPLAA  DC    8CL12' '                                                  04962
         DC    32C' '                                                    04963
         SPACE 3                                                         04964
         EJECT                                                           04965
@PAN$AUD CSECT                                                           04966
$PAN#AUD DC    CL30'LEVEL 066 COPYMOPT  08/21/03 '                       04967
         END                                                             04968
*          PARM CHECKER        AT LEVEL 1.5 AS OF 08/21/03               04969
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       04970
**************************************************************           04971
**************************************************************           04972
**                                                          **           04973
**                                                          **           04974
**  MODULE:   PARMCHEK - Set option bits, based on          **           04975
**                       keywords coded in PARM and/or      **           04976
**                       SYSIN.                             **           04977
**                                                          **           04978
**  AUTHOR:   Sam Golob                                     **           04979
**                                                          **           04980
**  PURPOSE:  This program converts keywords in a PARM      **           04981
**            field or in SYSIN, into bit settings that     **           04982
**            a program can use, to control options in      **           04983
**            its execution.                                **           04984
**                                                          **           04985
**            This program can be run as a subroutine       **           04986
**            which is called, to set up to 10 bytes of     **           04987
**            bits, up to 80 bits in all, based on the      **           04988
**            settings of keywords in a table.              **           04989
**                                                          **           04990
**            This routine makes it easy to put a lot of    **           04991
**            options into a program.  If you want to       **           04992
**            add options, or use other words in PARM or    **           04993
**            SYSIN to call the same options, all you       **           04994
**            have to do, is to change or add entries in    **           04995
**            a table.  There is no extra coding to be      **           04996
**            done.                                         **           04997
**                                                          **           04998
**            Keywords in the PARM or SYSIN areas do not    **           04999
**            have to be delimited by commas or spaces or   **           05000
**            anything else.  Although for clarity, I'd     **           05001
**            certainly recommend that you put commas or    **           05002
**            spaces between the PARM field keywords.       **           05003
**            Therefore, I'd also advise that when you      **           05004
**            design keywords to put into the table to      **           05005
**            designate options, that you make them         **           05006
**            significantly different from each other.      **           05007
**            There is a length field in the table,         **           05008
**            however, which gives you some more control    **           05009
**            in this area.                                 **           05010
**                                                          **           05011
**            From a calling program, it would be possible  **           05012
**            to call PARMCHEK twice, against two different **           05013
**            tables, to set 20 bytes of options, instead   **           05014
**            of 10 bytes of options, and so forth...       **           05015
**                                                          **           05016
**            This gives you the opportunity of having      **           05017
**            a tremendous number of options, set by        **           05018
**            keywords, in your program, without using      **           05019
**            up valuable "base register space" for such    **           05020
**            coding.                                       **           05021
**                                                          **           05022
**                                                          **           05023
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05024
**            from a table, based on assembled defaults.    **           05025
**            These default settings are then overridden    **           05026
**            from a scan of words in the PARM field of     **           05027
**            the EXEC card.                                **           05028
**                                                          **           05029
**            If a SYSIN DD card is present, its cards      **           05030
**            are scanned against the table entries, to     **           05031
**            further override the bit settings which       **           05032
**            have already been done by the defaults and    **           05033
**            the PARM field.                               **           05034
**                                                          **           05035
**            The main purpose of this routine is to set    **           05036
**            bits from words.  However, if you need some   **           05037
**            keywords with values, such as (for example)   **           05038
**            FILELIMIT=69  in your program, you may use    **           05039
**            the "user code" section of this program       **           05040
**            to code that stuff in, so that these special  **           05041
**            keywords can be coded in SYSIN.               **           05042
**                                                          **           05043
**            Two sample keywords expecting number values:  **           05044
**            FILELIMIT=nnn  or                             **           05045
**            LABELIMIT=mmm                                 **           05046
**            have been coded here, just to illustrate      **           05047
**            how the user coding might work.               **           05048
**                                                          **           05049
**            Search order is:  Defaults, then PARM in      **           05050
**            the EXEC card, then SYSIN.                    **           05051
**                                                          **           05052
**            As coded here, the FILELIMIT= and             **           05053
**            LABELIMIT= keywords in SYSIN have to be in    **           05054
**            column 1 of the SYSIN cards, and if these     **           05055
**            "special keywords" are present in a card,     **           05056
**            the rest of that card is not scanned for      **           05057
**            the table keywords.                           **           05058
**                                                          **           05059
**            As coded here, the PARMTABL is a separate     **           05060
**            CSECT, addressable by V-CONs from the         **           05061
**            PARMCHEK CSECT.                               **           05062
**                                                          **           05063
**            It would probably be best to invoke the       **           05064
**            PARMCHEK program as a separate CSECT which    **           05065
**            is linkedited with the calling program,       **           05066
**            but it may be LOADed and BALR 14,15 'ed to,   **           05067
**            and run as a separate program.  (See the      **           05068
**            PARMDRVR program that is included in this     **           05069
**            package, as a sample.)                        **           05070
**                                                          **           05071
**    Input:  A fullword containing the address of the      **           05072
**            saved Register 1 from the calling program,    **           05073
**            which points to its parms.                    **           05074
**                                                          **           05075
**            A table containing parms, which is coded      **           05076
**            according to the following rules, and which   **           05077
**            has entries of 20 bytes apiece.               **           05078
**                                                          **           05079
**      FORMAT OF THE PARM TABLE                            **           05080
**                                                          **           05081
**        ONE ENTRY IS 20 BYTES                             **           05082
**                                                          **           05083
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           05084
**                         (This is the word which          **           05085
**                          controls the bit settings.)     **           05086
**                         (up to and including 8 bytes)    **           05087
**                                                          **           05088
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           05089
**                         X'00' says turn bit flag(s) ON   **           05090
**                         X'10' set entry as a DEFAULT     **           05091
**                                                          **           05092
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           05093
**                         (This is the word searched on,   **           05094
**                          in the EXEC PARM and SYSIN      **           05095
**                          areas.)                         **           05096
**                                                          **           05097
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           05098
**                          this keyword.                   **           05099
**                                                          **           05100
**                         These are the bits which the     **           05101
**                          keyword will flip on (or off).  **           05102
**                                                          **           05103
**                         You may control multiple bits    **           05104
**                          using one keyword.  All bits    **           05105
**                          controlled by this keyword      **           05106
**                          are coded in this entry field.  **           05107
**                                                          **           05108
**          The table is ended by an entry of X'FF's.       **           05109
**                                                          **           05110
**                                                          **           05111
**    Output:  R1 points to a 10-byte area containing the   **           05112
**             80 switch settings.                          **           05113
**                                                          **           05114
**             Sample code to use PARMCHEK output:          **           05115
**                                                          **           05116
**                      ST    R1,PARMADDR                   **           05117
**                      USING PARMFLGS,R1                   **           05118
**             *                                            **           05119
**             PARMFLGS DSECT                               **           05120
**             PARMFLG1 DS    X                             **           05121
**             PARMFLG2 DS    X                             **           05122
**             PARMFLG3 DS    X                             **           05123
**             PARMFLG4 DS    X                             **           05124
**             PARMFLG5 DS    X                             **           05125
**             PARMFLG6 DS    X                             **           05126
**             PARMFLG7 DS    X                             **           05127
**             PARMFLG8 DS    X                             **           05128
**             PARMFLG9 DS    X                             **           05129
**             PARMFLGA DS    X                             **           05130
**                                                          **           05131
**               then ....                                  **           05132
**                                                          **           05133
**                      TM    PARMFLG2,X'04'                **           05134
**                      BZ    some location                 **           05135
**                        ....                              **           05136
**                                                          **           05137
**             R2 points to the address of a data area      **           05138
**             containing values generated by this          **           05139
**             program.  It's address is at label STRTVALU  **           05140
**             and its length is in the first fullword      **           05141
**             at STRTVALU.                                 **           05142
**                                                          **           05143
**             R2 is accessed in a similar manner to R1.    **           05144
**             See the PARMDRVR program for an example      **           05145
**             illustrating one way in which PARMCHEK       **           05146
**             may be called.                               **           05147
**                                                          **           05148
**                                                          **           05149
**************************************************************           05150
         EJECT                                                           05151
**************************************************************           05152
**                                                          **           05153
**  CHANGE LOG:                                             **           05154
**                                                          **           05155
**    Version 1.1 - Separate Parm Table into different      **           05156
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05157
**                                                          **           05158
**    Version 1.2 - Uppercase keyword before comparing      **           05159
**       against the table entries.  This assumes you       **           05160
**       will code your table with all uppercase keyword    **           05161
**       entries.                                           **           05162
**                                                          **           05163
**    Version 1.3 - Option for requiring commas or spaces   **           05164
**       as delimiters between parms.  Comment out one      **           05165
**       instruction to require delimiters.                 **           05166
**                                                          **           05167
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05168
**                                                          **           05169
**    Version 1.5 - Fitted to COPYMODS Level 066.           **           05170
**                  Ten parm bits instead of five.          **           05171
**                                                          **           05172
**************************************************************           05173
**************************************************************           05174
         EJECT                                                           05175
**************************************************************           05176
*  ---------------------------------------------------------------  *    05177
*    This macro is used to display hex values in a printed report.       05178
*  ---------------------------------------------------------------  *    05179
         MACRO                                                           05180
&NAME    HEX   &TO,&LEN,&FROM                                            05181
&NAME    DS    0H                                                        05182
         ST    R4,SAV4HEX                                                05183
         STM   15,1,HEXSAVE                                              05184
         LA    1,&FROM                                                   05185
         LA    0,&LEN                                                    05186
         LA    15,&TO                                                    05187
         BAL   4,HEX                                                     05188
         L     R4,SAV4HEX                                                05189
         LM    15,1,HEXSAVE                                              05190
         MEND                                                            05191
         SPACE                                                           05192
**************************************************************           05193
         GBLC  &LLEV                                                     05194
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05195
         GBLA  &HEXDFLA                                                  05196
&LLEV    SETC  '1.5 '                                                    05197
         YREGS                                                           05198
* ------------------------------------------------------------------ *   05199
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05200
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05201
* ------------------------------------------------------------------ *   05202
         ENTRY CARDREAD                                                  05203
         ENTRY PARMCHEK                                                  05204
&HEXDFLA SETA  4                                                         05205
&HEXDFLC SETC  '&HEXDFLA'                                                05206
PARMCHEK CSECT                                                           05207
         USING *,R15                                                     05208
         B     EYECATCH                                                  05209
         DC    C'HEX DUMP '                                              05210
HEXDFLCC DC    C'&HEXDFLC'                                               05211
         DC    C' RECORDS '                                              05212
HEXDFLL  EQU   L'HEXDFLCC                                                05213
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05214
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05215
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05216
         DC    C' - '                                                    05217
         DC    C'PARM INPUT IN SYSIN '                                   05218
         DC    C' - '                                                    05219
         DC    C'LEVEL '                                                 05220
SYSLEV   DC    C'&LLEV'                                                  05221
         DC    C' - '                                                    05222
SYSDAT   DC    C'&SYSDATE'                                               05223
         DC    C'  ',C'&SYSTIME ',C'--- '                                05224
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05225
SAVEAREA DC    18F'0'                                                    05226
EYECATCH DS    0D             ENSURE ALIGNMENT                           05227
         SAVE  (14,12)                                                   05228
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05229
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05230
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05231
         LR    R13,R1               NEW SAVE AREA ADDRESS                05232
         DROP  R15                                                       05233
* -----                       SET UP BASE REGISTERS                      05234
         USING PARMCHEK,R12,R11,R10                                      05235
         LR    R12,R15                                                   05236
         LA    R11,4095(,R12)                                            05237
         LA    R11,1(,R11)                                               05238
         LA    R10,4095(,R11)                                            05239
         LA    R10,1(,R10)                                               05240
*                                                                        05241
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05242
*                                                                        05243
         LR    R6,R2          SAVE USER AREA POINTER                     05244
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05245
         LR    R1,R6          RESTORE PARM POINTER                       05246
         ST    R1,PARMSAVE                                               05247
* ----------------------------------------------------------------- *    05248
TIOTSCAN DS    0H             Determine the presence of Optional         05249
*                             DDNAMES:  SYSIN AND PARMREPT.              05250
* ----->                      OPEN them if there is JCL for them.        05251
* ----------------------------------------------------------------- *    05252
         L     R5,16          R5=CVT                                     05253
         L     R5,0(,R5)      R5=TCB WORDS                               05254
         L     R5,4(,R5)      R5=MY TCB                                  05255
         L     R5,12(,R5)     R5=TIOT                                    05256
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05257
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05258
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05259
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05260
         BNE   TIOTSYSN       NO                                         05261
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05262
         B     TIOTNEXT       CONTINUE                                   05263
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05264
         BNE   TIOTNEXT                                                  05265
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05266
         B     TIOTNEXT                                                  05267
TIOTNEXT SR    R3,R3                                                     05268
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05269
         AR    R5,R3          R5=NEXT DD ENTRY                           05270
         B     TIOTLOOP       GO CHECK IT                                05271
TIOTSEND DS    0H                                                        05272
***********************************************************************  05273
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05274
***********************************************************************  05275
         STM   R14,R2,SAVE1402                                           05276
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05277
         OI    DATE+4,X'0F'                                              05278
         UNPK  DATED,DATE                                                05279
         OI    TIME+3,X'0F'                                              05280
         UNPK  TIMED,TIME                                                05281
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05282
         MVC   HEADDATE(2),DATED                                         05283
         MVI   HEADDATE+2,C'/'                                           05284
         MVC   HEADDATE+3(2),DATED+2                                     05285
         MVI   HEADDATE+5,C'/'                                           05286
         MVC   HEADDATE+6(4),DATED+4                                     05287
         MVC   HEADDATE+12(2),TIMED                                      05288
         MVI   HEADDATE+14,C':'                                          05289
         MVC   HEADDATE+15(2),TIMED+2                                    05290
         MVI   HEADDATE+17,C':'                                          05291
         MVC   HEADDATE+18(2),TIMED+4                                    05292
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05293
         LM    R14,R2,SAVE1402                                           05294
***********************************************************************  05295
         MVC   LEVDATE(8),SYSDAT                                         05296
***********************************************************************  05297
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05298
* ----------------------------------------------------------------- *    05299
INITCONS DS    0H                                                        05300
         ZAP   TOTMLCNT,=P'0'                                            05301
* ----------------------------------------------------------------- *    05302
CHEKPRNT DS    0H                                                        05303
         TM    FLAGSYST,X'01'                                            05304
         BZ    CHEKPREN                                                  05305
         OPEN  (PARMREPT,OUTPUT)                                         05306
         OI    OPENDFLG,X'01'                                            05307
         MVC   PRTLINE,PRTLINE-1                                         05308
         MVC   PRTLINE,MESSAGE1                                          05309
         PUT   PARMREPT,MESSAGE1                                         05310
         MVC   PRTLINE,PRTLINE-1                                         05311
         PUT   PARMREPT,PRTLINE                                          05312
CHEKPREN DS    0H                                                        05313
* ----------------------------------------------------------------- *    05314
* --------------------------------------------------------- *            05315
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05316
*                         PRESENCE OR ABSENCE.                           05317
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05318
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05319
         L     R1,0(,R1)      Get PARM field                             05320
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05321
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05322
         MVC   SAVMSLEN,PARMSLEN                                         05323
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05324
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05325
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05326
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05327
* -----------------------------------------------------------            05328
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05329
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05330
* -----------------------------------------------------------            05331
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05332
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05333
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05334
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05335
         BO    PARMDSET       YES, GO SET IT.                            05336
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05337
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05338
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05339
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05340
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05341
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05342
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05343
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05344
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05345
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05346
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05347
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05348
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05349
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05350
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05351
* ----------------------------------------------------------------- *    05352
SCANPARM DS    0H                                                        05353
         ST    R7,SAVE7BA0                                               05354
         ZAP   PARMLCNT,=P'0'                                            05355
         ZAP   PARMHITS,=P'0'                                            05356
         MVC   PARMSLEN,SAVMSLEN                                         05357
         BAL   R7,PARMLOOP      Now check the PARM field                 05358
         MVC   SAVPHITS,PARMHITS                                         05359
         MVC   SAVCHRCT,PRMCHRCT                                         05360
         MVC   SAVELCNT,PARMLCNT                                         05361
         AP    TOTMHITS,PARMHITS                                         05362
         AP    TOTMLCNT,PARMLCNT                                         05363
         L     R7,SAVE7BA0                                               05364
* ----------------------------------------------------------------- *    05365
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05366
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05367
         OPEN  (SYSIN,INPUT)                                             05368
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05369
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05370
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05371
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05372
NOSYSIN  DS    0H                                                        05373
         B     CARDREND                                                  05374
OPNSYSNE DS    0H                                                        05375
* ----------------------------------------------------------------- *    05376
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05377
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05378
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05379
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05380
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05381
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05382
*              Insert User Code Here for Keywords                        05383
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05384
         GET   SYSIN,CARDIN                                              05385
*                                                                        05386
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05387
* -- >>              <--    before you start the table scan       -->    05388
*                                                                        05389
         CLC   =C'OUTVOLALL=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05390
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05391
         CLC   =C'TAPEOWNER=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05392
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05393
         CLC   =C'FILELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05394
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05395
         CLC   =C'LABELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05396
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05397
         CLC   =C'PRINTRCDS=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05398
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05399
         CLC   =C'/*',CARDIN                                             05400
         BE    SYSINEND                                                  05401
*                                                                        05402
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05403
* ----         Resume Checking SYSIN in PARM Table                       05404
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05405
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05406
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05407
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05408
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05409
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05410
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05411
         L     R1,TOTCHRCT                                               05412
         A     R1,PRMCHRCT                                               05413
         ST    R1,TOTCHRCT                                               05414
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05415
         ZAP   PARMHITS,=P'0'                                            05416
         ZAP   PARMLCNT,=P'0'                                            05417
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05418
         AP    TOTMHITS,PARMHITS                                         05419
         AP    TOTMLCNT,PARMLCNT                                         05420
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05421
         B     CARDREAD        GET ANOTHER CARD                          05422
* ----                                                                   05423
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05424
*              Handle User Code Here for Keywords                        05425
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05426
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05427
         BE    CARDREAD                 YES. IGNORE CARD                 05428
         MVC   VOLSTG1(6),CARDIN+10                                      05429
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05430
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05431
         B     CARDREAD          GET ANOTHER CARD                        05432
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05433
         BE    CARDREAD                 YES. IGNORE CARD                 05434
         MVC   TAPEOWN(10),CARDIN+10                                     05435
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05436
         B     CARDREAD                                                  05437
FILELGET DS    0H                                                        05438
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05439
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05440
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05441
         BL    CARDREAD          YES. IGNORE.                            05442
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05443
         BH    CARDREAD          YES. IGNORE.                            05444
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05445
         LA    R15,CARDIN+10     STARTING ADDRESS                        05446
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05447
FILELNUM DS    0H                                                        05448
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05449
         C     R15,=A(CARDIN+71) END OF CARD?                            05450
         BH    FILELGNM          YES, GET NUMBER                         05451
         CLI   0(R15),C' '       BLANK HERE?                             05452
         BE    FILELGNM          YES, GET NUMBER                         05453
         B     FILELNUM          NO. STEP UP ONE PLACE                   05454
FILELGNM DS    0H                                                        05455
         SR    R15,R1            HOW BIG IS THE NUMBER                   05456
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05457
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05458
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05459
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05460
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05461
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05462
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05463
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05464
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05465
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05466
FILELCLG DS    0H                                                        05467
         B     CARDREAD                                                  05468
LABELGET DS    0H                                                        05469
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05470
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05471
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05472
         BL    CARDREAD          YES. IGNORE.                            05473
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05474
         BH    CARDREAD          YES. IGNORE.                            05475
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05476
         LA    R15,CARDIN+10     STARTING ADDRESS                        05477
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05478
LABELNUM DS    0H                                                        05479
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05480
         C     R15,=A(CARDIN+71) END OF CARD?                            05481
         BH    LABELGNM          YES, GET NUMBER                         05482
         CLI   0(R15),C' '       BLANK HERE?                             05483
         BE    LABELGNM          YES, GET NUMBER                         05484
         B     LABELNUM          NO. STEP UP ONE PLACE                   05485
LABELGNM DS    0H                                                        05486
         SR    R15,R1            HOW BIG IS THE NUMBER                   05487
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05488
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05489
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05490
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05491
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05492
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05493
LABELCLG DS    0H                                                        05494
         B     CARDREAD                                                  05495
PRINTGET DS    0H                                                        05496
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05497
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05498
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05499
         BL    CARDREAD          YES. IGNORE.                            05500
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05501
         BH    CARDREAD          YES. IGNORE.                            05502
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05503
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05504
         LA    R15,CARDIN+10     STARTING ADDRESS                        05505
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05506
PRINTNUM DS    0H                                                        05507
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05508
         C     R15,=A(CARDIN+71) END OF CARD?                            05509
         BH    PRINTGNM          YES, GET NUMBER                         05510
         CLI   0(R15),C' '       BLANK HERE?                             05511
         BE    PRINTGNM          YES, GET NUMBER                         05512
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05513
PRINTGNM DS    0H                                                        05514
         SR    R15,R1            HOW BIG IS THE NUMBER                   05515
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05516
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05517
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05518
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05519
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05520
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05521
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05522
PRINTCLG DS    0H                                                        05523
         B     CARDREAD                                                  05524
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05525
*              End of User Code Here for Keywords                        05526
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05527
CHECKEND DS    0H                                                        05528
* -----------------------------------------------------------            05529
SYSINEND DS    0H                                                        05530
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05531
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05532
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05533
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05534
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05535
         L     R1,TOTCHRCT                                               05536
         A     R1,PRMCHRCT         Final totals for last card            05537
         ST    R1,TOTCHRCT                                               05538
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05539
         CLOSE (SYSIN)                                                   05540
         B     CARDREND                                                  05541
CARNOSYS DS    0H                                                        05542
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05543
CARDREND DS    0H                                                        05544
         BAL   R7,SUMMREPT                                               05545
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05546
         BZ    PARMRPEN         NO.  GET OUT.                            05547
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05548
         CLOSE (PARMREPT)                                                05549
PARMRPEN DS    0H                                                        05550
THEEND   DS    0H                                                        05551
         L     R13,4(,R13)                                               05552
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05553
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05554
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05555
         LM    R14,R12,12(R13)                                           05556
         BR    R14                                                       05557
* -----------------------------------------------------------            05558
*        S U B R O U T I N E S                                           05559
* -----------------------------------------------------------            05560
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05561
* -----------------------------------------------------------            05562
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05563
         BNL   PARMFIN        YES - GET OUT                              05564
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05565
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05566
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05567
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05568
*        ------------------------------------------------------------    05569
*--->                    code to require a delimiter (space, etc)        05570
*                        to enable, comment out the next instruction     05571
*        ------------------------------------------------------------    05572
         B     PRMNODLM         comment this line to require delimiter   05573
         TM    PRMFDFLG,X'01'                                            05574
         BO    PRMNFND                                                   05575
PRMNODLM DS    0H                                                        05576
*--->                                                                    05577
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05578
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05579
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05580
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05581
*                                                                        05582
*   If you want to require parm comparisons as case sensitive,           05583
*    then comment out the following instruction....                      05584
*                                                                        05585
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05586
*                                                                        05587
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05588
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05589
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05590
         B     BOPPTBL        INNER LOOP                                 05591
*                                                                        05592
PRMNFND  DS    0H                                                        05593
*--->                 below - Parm Found flagging to require delimiter   05594
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05595
         BE    PRMFDOFF                                                  05596
         CLI   0(R4),C','                                                05597
         BE    PRMFDOFF                                                  05598
         B     PRMFDEND                                                  05599
PRMFDOFF DS    0H                                                        05600
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05601
PRMFDEND DS    0H                                                        05602
*--->                 above - Parm Found flagging to require delimiter   05603
*                                                                        05604
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05605
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05606
*                                                                        05607
         B     PARMLOOP       TRY AGAIN                                  05608
*                                                                        05609
PRMFOUND DS    0H                                                        05610
*                                                                        05611
*--->                 below - Parm Found flagging to require delimiter   05612
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05613
*--->                 above - Parm Found flagging to require delimiter   05614
PRMNOSEP DS    0H                                                        05615
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05616
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05617
         TM    1(R2),X'01'         PARM ON OR OFF?                       05618
         BO    PARMOFF             OFF                                   05619
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05620
         B     PARMGO                        AND GO ON                   05621
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05622
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05623
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05624
PARMGO   DS    0H                                                        05625
         XR    R5,R5          Clear Work Reg befor IC                    05626
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05627
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05628
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05629
         B     PARMLOOP       LOOK FOR MORE PARMS                        05630
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05631
*                             COUNT FOR DEBUGGING                        05632
PRMCHEND DS    0H                                                        05633
         BR    R7                                                        05634
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05635
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05636
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05637
* --------------------------------------------------------- *            05638
SUMMREPT DS    0H                  Print details of PARMREPT             05639
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05640
         BZ    SUMMREND            No. Bypass this routine.              05641
         MVC   PRTLINE,PRTLINE-1                                         05642
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05643
         HEX   PRTLINE+27,1,PARMFLG1                                     05644
         HEX   PRTLINE+30,1,PARMFLG2                                     05645
         HEX   PRTLINE+33,1,PARMFLG3                                     05646
         HEX   PRTLINE+36,1,PARMFLG4                                     05647
         HEX   PRTLINE+39,1,PARMFLG5                                     05648
         HEX   PRTLINE+42,1,PARMFLG6                                     05649
         HEX   PRTLINE+45,1,PARMFLG7                                     05650
         HEX   PRTLINE+48,1,PARMFLG8                                     05651
         HEX   PRTLINE+51,1,PARMFLG9                                     05652
         HEX   PRTLINE+54,1,PARMFLGA                                     05653
         PUT   PARMREPT,PRTLINE                                          05654
         MVC   PRTLINE,PRTLINE-1                                         05655
         PUT   PARMREPT,PRTLINE                                          05656
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05657
         MVC   PRTLINE+4(12),=C'User Area : '                            05658
         HEX   PRTLINE+16,48,STRTVALU                                    05659
         PUT   PARMREPT,PRTLINE                                          05660
         MVC   PRTLINE,PRTLINE-1                                         05661
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05662
         HEX   PRTLINE+16,48,STRTVALU+48                                 05663
         PUT   PARMREPT,PRTLINE                                          05664
         MVC   PRTLINE,PRTLINE-1                                         05665
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05666
         HEX   PRTLINE+16,48,STRTVALU+96                                 05667
         PUT   PARMREPT,PRTLINE                                          05668
         MVC   PRTLINE,PRTLINE-1                                         05669
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05670
         HEX   PRTLINE+16,20,STRTVALU+144                                05671
         PUT   PARMREPT,PRTLINE                                          05672
         MVC   PRTLINE,PRTLINE-1                                         05673
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05674
         HEX   PRTLINE+30,4,STRTVALU                                     05675
         MVC   PRTLINE+42(6),=C'Hex   '                                  05676
         PUT   PARMREPT,PRTLINE                                          05677
         MVC   PRTLINE,PRTLINE-1                                         05678
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05679
         HEX   PRTLINE+30,4,PARMSLEN                                     05680
         MVC   PRTLINE+42(6),=C'Hex   '                                  05681
         PUT   PARMREPT,PRTLINE                                          05682
         MVC   PRTLINE,PRTLINE-1                                         05683
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05684
         HEX   PRTLINE+30,4,SAVMSLEN                                     05685
         MVC   PRTLINE+42(6),=C'Hex   '                                  05686
         PUT   PARMREPT,PRTLINE                                          05687
         MVC   PRTLINE,PRTLINE-1                                         05688
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05689
         HEX   PRTLINE+30,4,PARMSTRT                                     05690
         MVC   PRTLINE+42(6),=C'Hex   '                                  05691
         PUT   PARMREPT,PRTLINE                                          05692
         MVC   PRTLINE,PRTLINE-1                                         05693
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05694
         HEX   PRTLINE+30,4,PRMCHRCT                                     05695
         MVC   PRTLINE+42(6),=C'Hex   '                                  05696
         PUT   PARMREPT,PRTLINE                                          05697
         MVC   PRTLINE,PRTLINE-1                                         05698
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05699
         HEX   PRTLINE+30,4,SAVCHRCT                                     05700
         MVC   PRTLINE+42(6),=C'Hex   '                                  05701
         PUT   PARMREPT,PRTLINE                                          05702
         MVC   PRTLINE,PRTLINE-1                                         05703
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05704
         HEX   PRTLINE+30,4,TOTCHRCT                                     05705
         MVC   PRTLINE+42(6),=C'Hex   '                                  05706
         PUT   PARMREPT,PRTLINE                                          05707
         MVC   PRTLINE,PRTLINE-1                                         05708
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05709
         HEX   PRTLINE+30,4,SAVPHITS                                     05710
         MVC   PRTLINE+42(6),=C'Packed'                                  05711
         PUT   PARMREPT,PRTLINE                                          05712
         MVC   PRTLINE,PRTLINE-1                                         05713
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05714
         HEX   PRTLINE+30,4,PARMHITS                                     05715
         MVC   PRTLINE+42(6),=C'Packed'                                  05716
         PUT   PARMREPT,PRTLINE                                          05717
         MVC   PRTLINE,PRTLINE-1                                         05718
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05719
         HEX   PRTLINE+30,4,TOTMHITS                                     05720
         MVC   PRTLINE+42(6),=C'Packed'                                  05721
         PUT   PARMREPT,PRTLINE                                          05722
         MVC   PRTLINE,PRTLINE-1                                         05723
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05724
         HEX   PRTLINE+30,4,SAVELCNT                                     05725
         MVC   PRTLINE+42(6),=C'Packed'                                  05726
         PUT   PARMREPT,PRTLINE                                          05727
         MVC   PRTLINE,PRTLINE-1                                         05728
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05729
         HEX   PRTLINE+30,4,PARMLCNT                                     05730
         MVC   PRTLINE+42(6),=C'Packed'                                  05731
         PUT   PARMREPT,PRTLINE                                          05732
         MVC   PRTLINE,PRTLINE-1                                         05733
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05734
         HEX   PRTLINE+30,4,TOTMLCNT                                     05735
         MVC   PRTLINE+42(6),=C'Packed'                                  05736
         PUT   PARMREPT,PRTLINE                                          05737
         MVC   PRTLINE,PRTLINE-1                                         05738
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05739
         HEX   PRTLINE+30,20,PARMTENT                                    05740
         PUT   PARMREPT,PRTLINE                                          05741
SUMMREND DS    0H                                                        05742
         BR    R7                                                        05743
* --------------------------------------------------------- *            05744
* --------------------------------------------------------- *            05745
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05746
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05747
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05748
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05749
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05750
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05751
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05752
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05753
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05754
         EJECT                                                           05755
* --------------------------------------------------------- *            05756
WORKA    DC    D'0'                                                      05757
WORKL    DC    D'0'                                                      05758
WORKP    DC    D'0'                                                      05759
PL4NO3   DC    PL4'3'                                                    05760
FF       EQU   X'FF'                                                     05761
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05762
         DC    C' IS TREATED AS NL.                                   '  05763
         DC    CL27' '                                                   05764
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05765
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05766
         DC    CL27' '                                                   05767
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05768
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05769
         DC    CL27' '                                                   05770
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05771
         DC    CL6'&HEXDFLM'                                             05772
         DC    C' RECORDS WILL'                                          05773
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05774
         DC    C'SYSIN.'                                                 05775
         DC    CL17' '                                                   05776
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05777
* --------------------------------------------------------- *            05778
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05779
PARMFLG1 DC    X'00'                                                     05780
PARMFLG2 DC    X'00'                                                     05781
PARMFLG3 DC    X'00'                                                     05782
PARMFLG4 DC    X'00'                                                     05783
PARMFLG5 DC    X'00'                                                     05784
PARMFLG6 DC    X'00'                                                     05785
PARMFLG7 DC    X'00'                                                     05786
PARMFLG8 DC    X'00'                                                     05787
PARMFLG9 DC    X'00'                                                     05788
PARMFLGA DC    X'00'                                                     05789
* --------------------------------------------------------- *            05790
         DS    0F                                                        05791
STRTVALU DS    0CL(ENDVALUE)                                             05792
         DC    A(ENDVALUE)                                               05793
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05794
*                                  Upon entry, this field contains       05795
*                                  the PARM address from COPYMODS,       05796
*                                  which gets overlaid by PARMCHEK.      05797
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05798
*                                  Upon entry, this field contains       05799
*                                  the PARM address from COPYMODS,       05800
*                                  which gets overlaid by PARMCHEK.      05801
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05802
*                                  Upon entry, this field contains       05803
*                                  the PARM length from COPYMODS,        05804
*                                  which gets overlaid by PARMCHEK.      05805
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05806
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05807
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05808
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05809
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05810
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05811
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05812
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05813
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05814
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05815
         DC    CL7' '              FILLER                                05816
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05817
*  -----    User Stuff                                                   05818
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05819
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05820
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05821
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05822
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05823
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05824
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05825
TAPEOWN  DC    CL10' '                                                   05826
OVERFLAG DC    X'00'                                                     05827
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05828
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05829
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05830
LIMCHAR  DC    CL10' '                                                   05831
LABCHAR  DC    CL10' '                                                   05832
PRTCHAR  DC    CL10' '                                                   05833
ENDVALUE EQU   (*-PARMSLEN)+4                                            05834
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05835
* --------------------------------------------------------- *            05836
*              FORMAT OF PARM TABLE                                      05837
*              ONE ENTRY IS 20 BYTES                                     05838
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05839
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05840
*                               X'00' SAYS TURN FLAG ON                  05841
*                               X'10' SET ENTRY AS A DEFAULT             05842
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05843
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05844
*                                WHICH ALLOWS FOR 80 PARMS               05845
*                                THAT DON'T HAVE TO BE                   05846
*                                SEPARATED BY A COMMA.                   05847
PBYTES   EQU   10               Number of bytes of parm switches         05848
PTELEN   EQU   20               Length of each table entry               05849
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  05850
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   05851
* --------------------------------------------------------- *            05852
PARMTABL CSECT                                                           05853
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           05854
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           05855
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           05856
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           05857
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           05858
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           05859
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           05860
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           05861
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           05862
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           05863
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           05864
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           05865
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           05866
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           05867
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           05868
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           05869
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           05870
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           05871
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           05872
         DC    X'04',X'00',C'EOV2    ',X'80000000000000000000'           05873
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           05874
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           05875
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           05876
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           05877
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           05878
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           05879
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           05880
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           05881
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           05882
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           05883
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           05884
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           05885
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           05886
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           05887
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           05888
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           05889
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           05890
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           05891
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           05892
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           05893
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           05894
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           05895
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           05896
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           05897
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           05898
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           05899
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           05900
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           05901
         DC    X'08',X'00',C'NOOUTVOL',X'00400000000000000000'           05902
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           05903
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           05904
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           05905
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           05906
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           05907
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           05908
         DC    X'08',X'00',C'CORRBLKS',X'00002000000000000000'           05909
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           05910
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           05911
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           05912
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           05913
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           05914
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           05915
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           05916
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           05917
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           05918
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           05919
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           05920
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           05921
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           05922
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           05923
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           05924
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           05925
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           05926
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           05927
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           05928
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           05929
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           05930
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           05931
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           05932
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           05933
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           05934
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           05935
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           05936
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           05937
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           05938
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           05939
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           05940
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           05941
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           05942
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           05943
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           05944
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           05945
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           05946
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           05947
         DC    X'FFFFFFFFFFFFFFFF'                                       05948
* --------------------------------------------------------- *            05949
PARMCHEK CSECT                                                           05950
         SPACE 3                                                         05951
         LTORG                                                           05952
         SPACE 3                                                         05953
         DS    0D                                                        05954
* --------------------------------------------------------- *            05955
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 05956
               COPYMODS LVL-066'                                         05957
* --------------------------------------------------------- *            05958
         SPACE 3                                                         05959
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 05960
               EODAD=SYSINEND                                            05961
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     05962
* --------------------------------------------------------- *            05963
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05964
HEX      DS    0H                                                        05965
         MVC   1(1,R15),0(R1)        Move byte                           05966
         UNPK  0(3,R15),1(2,R15)     Unpack                              05967
         TR    0(2,R15),HEXTAB-240                                       05968
         LA    R15,2(,R15)           Increment output pointer            05969
         LA    R1,1(,R1)             Increment input pointer             05970
         BCT   R0,HEX                Decrement length, then loop         05971
         MVI   0(R15),C' '           Blank the trailing byte             05972
         BR    R4                    Return to caller                    05973
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05974
         SPACE                                                           05975
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05976
HEXSAVE  DS    3F                    Register save for HEX macro         05977
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05978
* --------------------------------------------------------- *            05979
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             05980
*              X'01'          PARMREPT DD IS PRESENT                     05981
*              X'02'          SYSIN    DD IS PRESENT                     05982
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                05983
*              X'01'          PARMREPT DD IS OPEN                        05984
*              X'02'          SYSIN    DD IS OPEN                        05985
* --------------------------------------------------------- *            05986
         SPACE 3                                                         05987
PARMSAVE DC    F'0'                                                      05988
SAV4HEX  DC    F'0'                                                      05989
SAVE2TO3 DC    2F'0'                                                     05990
SAVE3REG DC    F'0'                                                      05991
SAVE7BA0 DC    F'0'                                                      05992
SAVE7BA1 DC    F'0'                                                      05993
PARMWORK DC    CL8' '                                                    05994
UPCASEOR DC    CL8' '                                                    05995
         DC    CL4' '                                                    05996
*    ------------------------ >   Constants for Date and Time - below    05997
SAVE1402 DS    6F                 Extra fullword for safety              05998
TIMED    DS    CL7                                                       05999
DATED    DS    CL9                                                       06000
DATETIME DS    4F                                                        06001
         ORG   DATETIME                                                  06002
TIME     DS    CL4                                                       06003
         DS    CL4                                                       06004
DATE     DS    CL5                                                       06005
         DS    CL3                                                       06006
HEADDLIT DS    0CL31              Literal for headings - date and time   06007
         DC    CL6'Today:'                                               06008
         DC    CL2' '                                                    06009
HEADDATE DC    CL23' '                                                   06010
LEVELLIT DS    0CL21              Level number display for headings      06011
         DC    CL6'Level '                                               06012
LEVELL   DC    CL4'&LLEV'                                                06013
         DC    CL2' ('                                                   06014
LEVDATE  DC    CL8' '             Assembly date for this program         06015
         DC    CL1')'                                                    06016
*    ------------------------ >   Constants for Date and Time - above    06017
*    --------------- >            Output line buffers - below            06018
PRMFDFLG DC    X'00'              Parm Found Flag                        06019
*              X'01'              Parm has been found in this record     06020
         DC    CL3' '                                                    06021
         DC    C' '                                                      06022
LINE     DC    CL133' '                                                  06023
         DC    C' '                                                      06024
CNTLINE  DC    CL133' '                                                  06025
         DC    C' '                                                      06026
OUTLINE  DC    CL133' '                                                  06027
         DC    C' '                                                      06028
PRTLINE  DC    CL133' '                                                  06029
         DC    CL80' '            Padding                                06030
*    --------------- >            Output line buffers - above            06031
*                                                                        06032
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  06033
         END                                                             06034
