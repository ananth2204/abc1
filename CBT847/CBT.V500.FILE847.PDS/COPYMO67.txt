*          DATA SET CBT990     AT LEVEL 067 AS OF 09/21/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **           00031
**     in combination with each other, as long as they      **           00032
**     don't contradict each other.  In certain cases, the  **           00033
**     use of one option will cause the automatic turn-off  **           00034
**     of one or more other options that contradict with    **           00035
**     it.  This "adjustment" is done by the COPYMODS       **           00036
**     program just after it receives the options settings  **           00037
**     back from the PARMCHEK program.  For example, if     **           00038
**     both LABLDUMP and LABADDIN (which contradict each    **           00039
**     other) are set, COPYMODS will make a judgment that   **           00040
**     LABADDIN takes precedence, so it will turn off both  **           00041
**     the LABLDUMP and READ (read only) options.  On the   **           00042
**     other hand, the STRIP and LABLDUMP options do not    **           00043
**     contradict each other.  So in that case, when STRIP  **           00044
**     and LABLDUMP are both set, COPYMODS will dump all    **           00045
**     the labels from the input tape to the LABLDUMP file, **           00046
**     while at the same time, it will strip them from the  **           00047
**     tape copies.  To get the exact effect you want from  **           00048
**     a COPYMODS run, just be very careful to code the     **           00049
**     correct combination of options.  Look at the OPTIONS **           00050
**     report before you mount the tapes.  (The OPTIONS     **           00051
**     report in //SYSPRINT will be complete before the     **           00052
**     tapes are mounted.)                                  **           00053
**                                                          **           00054
**     Up to 132 bytes of the beginning n records of each   **           00055
**     tape file can be dumped in Hex, similarly to the     **           00056
**     way TAPESCAN does it (HEXPRT option).                **           00057
**                                                          **           00058
**     See the "New Features" section below for some more   **           00059
**     details.  See the #MANUAL member of the install pds  **           00060
**     (CBT Tape File 229) for even more details.           **           00061
**                                                          **           00062
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S     **           00063
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00064
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00065
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00066
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00067
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00068
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00069
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00070
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00071
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00072
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00073
**    PARTICULAR OUTPUT TAPE.                               **           00074
**                                                          **           00075
**  COPYMODS has some optional DD's which will be used      **           00076
**    if they are present.  These following DD's are used   **           00077
**    by the PARMCHEK program, when COPYMODS is executed.   **           00078
**                                                          **           00079
**  //SYSIN    - Extra space to enter PARM keywords.        **           00080
**               Also, the only place to enter the          **           00081
**               "quantity" keywords, which start in        **           00082
**               column 1 of a SYSIN card.                  **           00083
**                                                          **           00084
**         OUTVOLALL=volser      (up to 6 characters)       **           00085
**         TAPEOWNER=owner name  (up to 10 characters)      **           00086
**         FILELIMIT=nnn         (numeric)                  **           00087
**         LABELIMIT=nnn         (numeric)                  **           00088
**         PRINTRCDS=nnn         (numeric)                  **           00089
**                                                          **           00090
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00091
**               program.  LRECL=133,RECFM=FBA.             **           00092
**                                                          **           00093
**    In addition, the COPYMODS program itself has some     **           00094
**    extra DD's, which are required if the appropriate     **           00095
**    options are set:                                      **           00096
**                                                          **           00097
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00098
**               receive the images of all tape labels      **           00099
**               read, together with some control cards     **           00100
**               that COPYMODS generates.  This DD name     **           00101
**               is necessary if the LABLDUMP option is     **           00102
**               in effect.                                 **           00103
**                                                          **           00104
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00105
**               contains the set of labels to be spliced   **           00106
**               into an NL tape to create an SL tape.      **           00107
**               This DD name is necessary if the LABADDIN  **           00108
**               option of COPYMODS is in effect.  Usually  **           00109
**               the LABADDIN file is a previous result of  **           00110
**               a LABLDUMP operation, or it is an altered  **           00111
**               or edited version of a previously created  **           00112
**               LABLDUMP file.                             **           00113
**                                                          **           00114
**  This program has to be assembled with PARM=BATCH in     **           00115
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00116
**    program has to be included in the assembly, because   **           00117
**    PARMCHEK has to be fitted to the current level of     **           00118
**    the COPYMODS program.                                 **           00119
**                                                          **           00120
**************************************************************           00121
**                                                          **           00122
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00123
**                                                          **           00124
**  //IN       -  Points to the Input Tape.  Only not       **           00125
**                required in a tape init operation, if     **           00126
**                the INITVOLS option is in effect.         **           00127
**                Otherwise, //IN is always required.       **           00128
**                                                          **           00129
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00130
**  //OUT16       These are for the output tapes.  These    **           00131
**                are not required if the READ (readonly)   **           00132
**                option is in effect.  Any one of these    **           00133
**                16 possible DD names may be coded, even   **           00134
**                if some numbers have been skipped.  For   **           00135
**                instance, if you have one output tape,    **           00136
**                it may be defined by //OUT13.  It is      **           00137
**                not necessary to code //OUT1.             **           00138
**                                                          **           00139
**  //SYSPRINT  - The output dataset to contain all the     **           00140
**                COPYMODS operation information that was   **           00141
**                called for by the various options set,    **           00142
**                including the OPTIONS display itself.     **           00143
**                This dataset should be LRECL=133,         **           00144
**                RECFM=FBA.                                **           00145
**                                                          **           00146
**************************************************************           00147
**                                                          **           00148
**  PROGRAM STRUCTURE:                                      **           00149
**                                                          **           00150
**  This program is no longer a single CSECT as it was in   **           00151
**    the old days.  There are now the following CSECTs,    **           00152
**    which should all be assembled together:               **           00153
**                                                          **           00154
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00155
**                                                          **           00156
**   COPYMODS - The main processing module, which contains  **           00157
**              most of the tape copy/reading processing.   **           00158
**                                                          **           00159
**   TRTCSECT - The translate tables for Hex printing of    **           00160
**              tape records.                               **           00161
**                                                          **           00162
**   COPYMOPT - The separate routine which reads the PARM   **           00163
**              bits that have been set, and which prints   **           00164
**              a report in SYSPRINT showing the options    **           00165
**              that are in effect.                         **           00166
**                                                          **           00167
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00168
**              done here.  PARM bits are passed back to    **           00169
**              COPYMODS in R1, the User Area is passed     **           00170
**              back to COPYMODS in R2.                     **           00171
**                                                          **           00172
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00173
**              program, this table contains all the option **           00174
**              bit meanings and their default settings.    **           00175
**                                                          **           00176
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00177
**  but they must be coordinated, and at the same level, so **           00178
**  to be safe, they should always be assembled together.   **           00179
**                                                          **           00180
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00181
**                                                          **           00182
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00183
**  ------- ------- -- ------- -----                        **           00184
**                                                          **           00185
**  COPYMODS is the first program to get control.  The      **           00186
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00187
**  and the entry locations are stored in fullwords for     **           00188
**  later use.                                              **           00189
**                                                          **           00190
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00191
**  if that ddname is present.  If //PARMREPT is present,   **           00192
**  it is also used by the PARMCHEK program.                **           00193
**                                                          **           00194
**  After PARMCHEK has returned all parm bit settings to    **           00195
**  COPYMODS and all user-quantities, the settings are      **           00196
**  examined by COPYMODS and inconsistent settings are      **           00197
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00198
**  has to be turned off, because only one of these can be  **           00199
**  done in one run.  These inconsistencies are all fixed,  **           00200
**  and then COPYMODS processing starts.                    **           00201
**                                                          **           00202
**  COPYMOPT is called to display all the options that have **           00203
**  been set, if the OPTION parm has been set.  This is     **           00204
**  done to //SYSPRINT.  If any adjustments of options have **           00205
**  been made, you can see the final result in the SYSPRINT **           00206
**  report that has been produced by COPYMOPT.              **           00207
**                                                          **           00208
**  A significant note is, that the PARMREPT contains the   **           00209
**  options as they have been set by the PARMCHEK program,  **           00210
**  with no alteration.  The COPYMOPT call, which produces  **           00211
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00212
**  adjustments for inconsistent parm settings has been     **           00213
**  made by COPYMODS, so you can see the effect of those    **           00214
**  adjustments by comparing these two reports against      **           00215
**  each other.                                             **           00216
**                                                          **           00217
**  After that, COPYMODS does its things, depending on the  **           00218
**  options that have been set.  Most of the processing is  **           00219
**  done in the COPYMODS csect, except for the HEXPRT       **           00220
**  option, where the translation tables are in the         **           00221
**  TRTCSECT csect.                                         **           00222
**                                                          **           00223
**************************************************************           00224
**                                                          **           00225
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00226
**                                                          **           00227
**                                                          **           00228
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00229
**                                                          **           00230
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00231
**                                                          **           00232
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00233
**       BE CORRECTLY COPIED.                               **           00234
**                                                          **           00235
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00236
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00237
**       FOUND ON THE INPUT TAPE.                           **           00238
**                                                          **           00239
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00240
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00241
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00242
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00243
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00244
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00245
**       MAIN SOURCE CODE.                                  **           00246
**                                                          **           00247
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00248
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00249
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00250
**       INVOKE THIS ACTION.                                **           00251
**                                                          **           00252
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00253
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00254
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00255
**                                                          **           00256
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00257
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00258
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00259
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00260
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00261
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00262
**                                                          **           00263
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00264
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00265
**                                                          **           00266
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00267
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00268
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00269
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00270
**       SERVICE.                                           **           00271
**                                                          **           00272
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00273
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00274
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00275
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00276
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00277
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00278
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00279
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00280
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00281
**                                                          **           00282
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00283
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00284
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00285
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00286
**                                                          **           00287
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00288
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00289
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00290
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00291
**                                                          **           00292
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00293
**       TAPEOWNER=xxxxxxxxxx                               **           00294
**       FILELIMIT=nnnn                                     **           00295
**       LABELIMIT=nnnn                                     **           00296
**       PRINTRCDS=nnnn                                     **           00297
**         or                                               **           00298
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00299
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00300
**                                                          **           00301
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00302
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00303
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00304
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00305
**                                                          **           00306
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00307
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00308
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00309
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00310
**       IN THE EXTERNAL LABEL DATASET.                     **           00311
**                                                          **           00312
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00313
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00314
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00315
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00316
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00317
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00318
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00319
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00320
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00321
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00322
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00323
**                                                          **           00324
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00325
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00326
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00327
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00328
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00329
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00330
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00331
**       DATA FILE HAS BEEN WRITTEN.                        **           00332
**                                                          **           00333
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00334
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00335
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00336
**       EXTERNAL LABEL DATASET.                            **           00337
**                                                          **           00338
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00339
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00340
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00341
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00342
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00343
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00344
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00345
**       THE HDR2.                                          **           00346
**                                                          **           00347
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00348
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00349
**                                                          **           00350
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00351
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00352
**       IN A SYSIN CARD.                                   **           00353
**                                                          **           00354
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00355
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00356
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00357
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00358
**       INTERPRETED AS NL.                                 **           00359
**                                                          **           00360
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00361
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00362
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00363
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00364
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00365
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00366
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00367
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00368
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00369
**       BYTE TOTALS COMING FROM DATA FILES.                **           00370
**                                                          **           00371
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00372
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00373
**       TO PRINT THEM.)                                    **           00374
**                                                          **           00375
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00376
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00377
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00378
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00379
**                                                          **           00380
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00381
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00382
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00383
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00384
**       DATA BLOCKS ON THE TAPE.                           **           00385
**                                                          **           00386
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00387
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00388
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00389
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00390
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00391
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00392
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00393
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00394
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00395
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00396
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00397
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00398
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00399
**       INPUT TAPE.                                        **           00400
**                                                          **           00401
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00402
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00403
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00404
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00405
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00406
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00407
**                                                          **           00408
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00409
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00410
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00411
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00412
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00413
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00414
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00415
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00416
**                                                          **           00417
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00418
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00419
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00420
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00421
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00422
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00423
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00424
**                                                          **           00425
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00426
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00427
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00428
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00429
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00430
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00431
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00432
**                                                          **           00433
**************************************************************           00434
         EJECT                                                           00435
**************************************************************           00436
**  CHANGE LOG:                                             **           00437
**                                                          **           00438
** LEVEL 003                                                **           00439
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00440
**                                                          **           00441
** LEVEL 004                                                **           00442
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00443
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00444
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00445
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00446
**             COPYING FILES.                     SBG 03/00 **           00447
**                                                          **           00448
** LEVEL 005                                                **           00449
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00450
**             R12,R11.                           SBG 03/00 **           00451
**                                                          **           00452
** LEVEL 006                                                **           00453
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00454
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00455
**             OUT16.                             SBG 03/00 **           00456
**                                                          **           00457
** LEVEL 007 AND 008                                        **           00458
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00459
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00460
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00461
**                                                          **           00462
** LEVEL 009                                                **           00463
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00464
**                                                          **           00465
** LEVEL 010                                                **           00466
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00467
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00468
**                                                          **           00469
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00470
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00471
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00472
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00473
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00474
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00475
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00476
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00477
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00478
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00479
**                                                          **           00480
** LEVEL 011                                                **           00481
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00482
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00483
**             ONE TAPEMARK.                      SBG 03/00 **           00484
**                                                SBG 03/00 **           00485
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00486
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00487
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00488
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00489
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00490
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00491
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00492
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00493
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00494
**                                                          **           00495
** LEVEL 012                                                **           00496
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00497
**             HAVING ONLY ONE TAPE MARK AFTER              **           00498
**             THEM.                                        **           00499
**                                                          **           00500
** LEVEL 013                                                **           00501
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00502
**             LABEL TYPES, AND THE SETTING OF              **           00503
**             FLAGS TO INDICATE EACH TYPE.                 **           00504
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00505
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00506
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00507
**             EASY PRINTING OF LABEL CONTENTS,             **           00508
**             BUT NO EXTRA PRINTING IS DONE AT             **           00509
**             THIS LEVEL.                                  **           00510
**                                                          **           00511
** LEVEL 014                                                **           00512
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00513
**             PARM SCANNER THAT IS EASY TO                 **           00514
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00515
**             FOR THE PARMS.  ADDED SUPPORT,               **           00516
**             VIA THE LBLINFO PARM, TO PRINT               **           00517
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00518
**             EOV2 LABEL INFORMATION, IF IT IS             **           00519
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00520
**             IF THE INPUT TAPE IS SL.                     **           00521
**                                                          **           00522
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00523
**             SEE LABEL PARMTABL.                          **           00524
**                                                          **           00525
** LEVEL 015                                                **           00526
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00527
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00528
**             THE ABILITY TO TURN IT ON. INCREASED         **           00529
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00530
**             BYTE.                                        **           00531
**                                                          **           00532
** LEVEL 016                                                **           00533
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00534
**             TO SET ANY PARM SETTING AS A                 **           00535
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00536
**             ENTRY THAT IS LATER IN THE TABLE,            **           00537
**             WILL OVERRIDE A SETTING FOR A                **           00538
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00539
**             TABLE.  SETTING A PARM EXPLICITLY            **           00540
**             IN THE JCL, WILL OVERRIDE ANY                **           00541
**             DEFAULT SETTING FOR THAT PARM.               **           00542
**                                                          **           00543
** LEVEL 017                                                **           00544
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00545
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00546
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00547
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00548
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00549
**             OF THIS IS CODED IN PARMTABL AND             **           00550
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00551
**             PRTXXX2.                                     **           00552
**                                                          **           00553
** LEVEL 018                                                **           00554
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00555
**             VOLSER OF THE COPIED TAPES, TO               **           00556
**             MATCH THE VOLSER INDICATED IN THE            **           00557
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00558
**             THE CHGVOL PARM KEYWORD.  THIS               **           00559
**             ACTION ONLY OCCURS IF THE INPUT              **           00560
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00561
**             DETECTED.  THE COPIED VOL1 LABEL             **           00562
**             IS ALTERED BEFORE THE WRITE.                 **           00563
**                                                          **           00564
** LEVEL 019                                                **           00565
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00566
**             AND EOV2 LABELS THAT ARE IN THE              **           00567
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00568
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00569
**             CAN HAPPEN WHEN YOU COPY FILES               **           00570
**             WITH THE COPYFILE PROGRAM, FROM              **           00571
**             THE END OF ONE TAPE, TO THE                  **           00572
**             BEGINNING OR THE MIDDLE OF                   **           00573
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00574
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00575
**             COPIES THE EOV LABELS AS IS.  THIS           **           00576
**             NEW OPTION IS CALLED EOVCHG OR               **           00577
**             EOV2EOF; THE EOV LABELS ARE                  **           00578
**             CHANGED (IN THE COPIED TAPES) TO             **           00579
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00580
**             REPORTS THIS FACT.                           **           00581
**                                                          **           00582
** LEVEL 020                                                **           00583
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00584
**             TO ALLOW A RUN OF COPYMODS THAT              **           00585
**             JUST READS THE INPUT TAPE, AND DOES          **           00586
**             NOT MAKE COPIES.                             **           00587
**                                                          **           00588
** LEVEL 021                                                **           00589
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00590
**             IEHINITTED TAPES.                            **           00591
**                                                          **           00592
** LEVEL 022                                                **           00593
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00594
**             LABELS FROM A TAPE, TO AN FB-80              **           00595
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00596
**                                                          **           00597
** LEVEL 023                                      SBG 09/00 **           00598
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00599
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00600
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00601
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00602
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00603
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00604
**             TO CODE                                      **           00605
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00606
**             OF THE SYSIN CARD FILE.  IF THERE            **           00607
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00608
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00609
**             AS CODING CHGVOL.                            **           00610
**                                                          **           00611
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00612
**             DUMPED LABELS HAVE CONTROL CARDS             **           00613
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00614
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00615
**             CONTROL CARDS.                               **           00616
**                                                          **           00617
** LEVEL 024                                      SBG 09/00 **           00618
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00619
**             OUTPUT COPIES FROM NL INPUT AND A            **           00620
**             SET OF LABELS CREATED BY LABLDUMP.           **           00621
**             CHANGED THE DCB NAMES AND DD CARDS           **           00622
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00623
**             RESTORE.                                     **           00624
**                                                          **           00625
**             CHANGED PROGRAM INITIALIZATION TO            **           00626
**             A STANDARD FORM.  GOT RID OF PRIME           **           00627
**             AND TERME MACROS.  HAVE 5 BASE               **           00628
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00629
**                                                          **           00630
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00631
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00632
**             LABELS ON AN SL TAPE, AND WON'T              **           00633
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00634
**             TAPE IS SL, ACCIDENTALLY.                    **           00635
**                                                          **           00636
** LEVEL 025                                      SBG 09/00 **           00637
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00638
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00639
**                                                          **           00640
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00641
**             BE USED.                                     **           00642
**                                                          **           00643
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00644
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00645
**                TAPEOWNER=xxxxxxxxxx                      **           00646
**                FILELIMIT=nnnn                            **           00647
**                LABELIMIT=nnnn                            **           00648
**                PRINTRCDS=nnnn                            **           00649
**                  or                                      **           00650
**                OUTVOLALL=volser ,                        **           00651
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00652
**             AND ANY PARM THAT IS CODED IN THE            **           00653
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00654
**             AND IT WILL OVERRIDE THE PARM IN             **           00655
**             THE EXEC CARD (SINCE SYSIN IS                **           00656
**             SCANNED LATER IN THE PROCESSING).            **           00657
**                                                          **           00658
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00659
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00660
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00661
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00662
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00663
**                                                          **           00664
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00665
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00666
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00667
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00668
**             WHEN COPYING AN INPUT TAPE.                  **           00669
**                                                          **           00670
** LEVEL 026                                      SBG 09/00 **           00671
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00672
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00673
**                                                          **           00674
** LEVEL 027                                      SBG 09/00 **           00675
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00676
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00677
**                                                          **           00678
** LEVEL 028                                      SBG 09/00 **           00679
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00680
**             STANDARD USER LABEL SUPPORT.                 **           00681
**                                                          **           00682
** LEVEL 029                                      SBG 09/00 **           00683
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00684
**             STANDARD USER LABELS.                        **           00685
**                                                          **           00686
** LEVEL 030                                      SBG 09/00 **           00687
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00688
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00689
**             OUTPUT TAPES, DURING THE COPY.               **           00690
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00691
**                                                          **           00692
**             FIXED THE EYECATCHERS A BIT.                 **           00693
**                                                          **           00694
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00695
**                                                          **           00696
** LEVEL 031                                      SBG 09/00 **           00697
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00698
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00699
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00700
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00701
**                                                          **           00702
** LEVEL 032                                      SBG 10/00 **           00703
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00704
**             LABADDIN PROCESSING WHEN THERE ARE           **           00705
**             MORE LABELS IN THE EXTERNAL LABEL            **           00706
**             DATASET, THAN THERE ARE NL FILES             **           00707
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00708
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00709
**             SAYS TO STOP AT THE END OF NL FILES          **           00710
**             AND NOT WRITE NULL SL FILES TO               **           00711
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00712
**             LABELS.                                      **           00713
**                                                          **           00714
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00715
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00716
**             AND THEN BACKING OVER IT AND CLOSING.        **           00717
**                                                          **           00718
** LEVEL 033                                      SBG 10/00 **           00719
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00720
**             PROCESSING WHEN THE LAST LABEL SET           **           00721
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00722
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00723
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00724
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00725
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00726
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00727
**             AND THE DATA AND A TAPEMARK), AND IT         **           00728
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00729
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00730
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00731
**             FROM THE EXISTING HDR2 AND EOF IS            **           00732
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00733
**             THE END.                                     **           00734
**                                                          **           00735
** LEVEL 034                                      SBG 10/00 **           00736
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00737
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00738
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00739
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00740
**             THE REWIND, AND LEAVES THE WRITTEN           **           00741
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00742
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00743
**             NOT ERASED.                                  **           00744
**                                                          **           00745
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00746
**             CONDITION IS FLAGGED WITH A PROPER           **           00747
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00748
**             FOR THAT DRIVE IS BYPASSED.                  **           00749
**                                                          **           00750
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00751
**             FIRST VERSION OF THIS PROGRAM.               **           00752
**                                                          **           00753
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00754
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00755
**             THESE ARE THE OPENDFLG SETTINGS.             **           00756
**                                                          **           00757
** LEVEL 035                                      SBG 10/00 **           00758
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00759
**             TAPES, BY NOT REUSING THE WRITE              **           00760
**             IOB WITHOUT REFRESHING THE PARTS             **           00761
**             THAT ARE USED BY IOS.  THIS IS THE           **           00762
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00763
**                                                          **           00764
**             LABLDUMP OF AN IEHINITTED TAPE               **           00765
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00766
**             CARD, IN ANTICIPATION OF CREATING            **           00767
**             A TAPE INITIALIZATION ROUTINE FROM           **           00768
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00769
**             NEXT LEVEL, IS BETTER.)                      **           00770
**                                                          **           00771
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00772
**                                                          **           00773
** LEVEL 036                                      SBG 10/00 **           00774
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00775
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00776
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00777
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00778
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00779
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00780
**                                                          **           00781
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00782
**             USE A PARM OF INITVOLS.                      **           00783
**                                                          **           00784
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00785
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00786
**                                                          **           00787
**             CONSOLIDATED CHGVOL CODE INTO A              **           00788
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00789
**                                                          **           00790
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00791
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00792
**             STEPPING ON EACH OTHER.                      **           00793
**                                                          **           00794
** LEVEL 037                                      SBG 10/00 **           00795
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00796
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00797
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00798
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00799
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00800
**             VALUE IS USED.                               **           00801
**                                                          **           00802
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00803
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00804
**             VALUE, IF THERE IS ONE.                      **           00805
**                                                          **           00806
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00807
**             SETS THE PARM VALUE OF LIMFILE OR            **           00808
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00809
**             THE PROGRAM ACTION.                          **           00810
**                                                          **           00811
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00812
**             PROGRAM COUNTS BYTES READ FROM THE           **           00813
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00814
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00815
**             THIS ACTION.                                 **           00816
**                                                          **           00817
** LEVEL 038                                      SBG 11/00 **           00818
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00819
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00820
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00821
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00822
**             FILES.                                       **           00823
**                                                          **           00824
** LEVEL 039                                      SBG 11/00 **           00825
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00826
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00827
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00828
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00829
**                                                          **           00830
** LEVEL 040                                      SBG 11/00 **           00831
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00832
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00833
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00834
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00835
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00836
**             COUNT, SO A USER WILL BE ABLE TO             **           00837
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00838
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00839
**                                                          **           00840
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00841
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00842
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00843
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00844
**             WHAT TO DO.                                  **           00845
**                                                          **           00846
** LEVEL 041                                      SBG 11/00 **           00847
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00848
**             OF LABEL SETS IN THE LABADDIN FILE           **           00849
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00850
**             IF THE LABADDIN FILE CONTAINS MANY           **           00851
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00852
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00853
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00854
**                                                          **           00855
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00856
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00857
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00858
**             FILE TO END AFTER NNN OF THEM.               **           00859
**                                                          **           00860
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00861
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00862
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00863
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00864
**             WHEN EOV LABELS ARE PRESENT.                 **           00865
**                                                          **           00866
** LEVEL 042                                      SBG 11/00 **           00867
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00868
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00869
**             REGISTER.                                    **           00870
**                                                          **           00871
** LEVEL 043                                      SBG 11/00 **           00872
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00873
**             "OPTION" PARAMETER.  CALL IS TO A            **           00874
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00875
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00876
**             ASSEMBLED AND LINKEDITED WITH                **           00877
**             THE COPYMODS PROGRAM.                        **           00878
**                                                          **           00879
**             CHANGED THE WORDING OF SOME OF THE           **           00880
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00881
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00882
**                                                          **           00883
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00884
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00885
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00886
**             LABADDIN WAS IN EFFECT.                      **           00887
**                                                          **           00888
** LEVEL 044                                      SBG 12/00 **           00889
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00890
**                                                          **           00891
** LEVEL 045                                      SBG 12/00 **           00892
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00893
**             COMPLETION OF THE COPY. SUPPWTO.             **           00894
**                                                          **           00895
** LEVEL 046                                      SBG 12/00 **           00896
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00897
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00898
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00899
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00900
**             COUNT CORRECTION.                            **           00901
**                                                          **           00902
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00903
**                                                          **           00904
** LEVEL 047                                      SBG 12/00 **           00905
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00906
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00907
**             NUMBERS OF DATA RECORDS.  IF THE             **           00908
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00909
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00910
**                                                          **           00911
** LEVEL 048                                      SBG 05/02 **           00912
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00913
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00914
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00915
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00916
**                                                          **           00917
** LEVEL 049                                      SBG 05/02 **           00918
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00919
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00920
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00921
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00922
**                                                          **           00923
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00924
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00925
**             EACH LABEL.  IT DOES NOT MATTER              **           00926
**             WHERE THE LABELS ARE, IN THE INPUT           **           00927
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00928
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00929
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00930
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00931
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00932
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00933
**                                                          **           00934
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00935
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00936
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00937
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00938
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00939
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00940
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00941
**             WE CAN NOW FORCE THE nnn TO BE               **           00942
**             INTERPRETED AS NL USING THE NLLIM            **           00943
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00944
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00945
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00946
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00947
**             OTHER KEYWORD IS ALSO CODED.                 **           00948
**                                                          **           00949
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00950
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00951
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00952
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00953
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00954
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00955
**             DURING THE WRITE OF THE TAPE MARK.           **           00956
**                                                          **           00957
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00958
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00959
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00960
**             BEFORE ISSUING ABEND 069.                    **           00961
**                                                          **           00962
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00963
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00964
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00965
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00966
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00967
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00968
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00969
**             SYSPRINT DATASET.                            **           00970
**                                                          **           00971
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00972
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00973
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00974
**                                                          **           00975
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00976
**             OF THE MAIN CSECT.                           **           00977
**                                                          **           00978
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00979
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00980
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00981
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00982
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00983
**             PARM SCAN IN DETAIL.                         **           00984
**                                                          **           00985
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00986
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00987
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00988
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00989
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           00990
**                                                          **           00991
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           00992
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           00993
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           00994
**             PROGRAM AND NOT BY COPYMODS.                 **           00995
**                                                          **           00996
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           00997
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           00998
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           00999
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01000
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01001
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01002
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01003
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01004
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01005
**             PROGRAM.                                     **           01006
**                                                          **           01007
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01008
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01009
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01010
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01011
**             USER FIELD AREA.                             **           01012
**                                                          **           01013
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01014
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01015
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01016
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01017
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01018
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01019
**                                                          **           01020
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01021
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01022
**             POSSIBLE.                                    **           01023
**                                                          **           01024
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01025
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01026
**             IN ERROR.                                    **           01027
**                                                          **           01028
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01029
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01030
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01031
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01032
**                                                          **           01033
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01034
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01035
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01036
**                                                          **           01037
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01038
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01039
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01040
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01041
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01042
**             PROGRAM.                                     **           01043
**                                                          **           01044
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01045
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01046
**                                                          **           01047
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01048
**             TEN PARM BITS INSTEAD OF FIVE.               **           01049
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01050
**                                                          **           01051
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01052
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01053
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01054
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01055
**                                                          **           01056
** LEVEL 064 - Return Code adjustments.                     **           01057
**                                                          **           01058
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01059
**             processing.                                  **           01060
**             HEXPRT now works for INITVOLS.               **           01061
**             HEXPRT now prints the external labels in a   **           01062
**             LABADDIN operation.                          **           01063
**             TAPEOWNER= is now honored for an INITVOLS    **           01064
**             operation (this fixes a bug).                **           01065
**             Number for FILELIMIT=nnn is now filled in,   **           01066
**             in the message, when the EBCDIC value        **           01067
**             exists.                                      **           01068
**             Fix another bug--Tape Owner not altered--    **           01069
**             now use the value of tape owner passed from  **           01070
**             the PARMCHEK program.                        **           01071
**                                                          **           01072
** LEVEL 066 - Cosmetic changes.                            **           01073
**             Save original PARM pointer in COPYMODS       **           01074
**             csect itself.  (It got lost after PARMCHEK   **           01075
**             call.)                                       **           01076
**                                                          **           01077
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01078
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01079
**             INASC3 or INASC4 keywords.  You can control  **           01080
**             if the HEXPRT is interpreted in EBCDIC or    **           01081
**             ASCII using the ASCII or the EBCDIC          **           01082
**             keywords.  For an ASCII tape init, ASCII     **           01083
**             print interpretation is turned on by         **           01084
**             default.  If you are initting an ASCII       **           01085
**             tape using the INASCII keyword, a Level 3    **           01086
**             ASCII tape will be created.                  **           01087
**                                                          **           01088
**             ASCII Level 4 is only supported in MVS at    **           01089
**             the OS/390 2.4 level and higher.             **           01090
**                                                          **           01091
**************************************************************           01092
**************************************************************           01093
         MACRO                                                           01094
&NAME    HEX   &TO,&LEN,&FROM                                            01095
&NAME    DS    0H                                                        01096
         ST    R4,SAV4HEX                                                01097
         STM   15,1,HEXSAVE                                              01098
         LA    1,&FROM                                                   01099
         LA    0,&LEN                                                    01100
         LA    15,&TO                                                    01101
         BAL   4,HEX                                                     01102
         L     R4,SAV4HEX                                                01103
         LM    15,1,HEXSAVE                                              01104
         MEND                                                            01105
         EJECT                                                           01106
         YREGS                                                           01107
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01108
         GBLA  &HEXDFLA                                                  01109
* ------------------------------------------------------------------ *   01110
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01111
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01112
* ------------------------------------------------------------------ *   01113
&HEXDFLA SETA  4                                                         01114
&HEXDFLC SETC  '&HEXDFLA'                                                01115
COPYMODS CSECT                                                           01116
         USING *,R15                                          SBG 03/00  01117
         B     EYECATCH                                       SBG 03/00  01118
         DC    C'HEX DUMP '                                              01119
HEXDFLCC DC    C'&HEXDFLC'                                               01120
         DC    C' RECORDS '                                              01121
HEXDFLL  EQU   L'HEXDFLCC                                                01122
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01123
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01124
         DC    C'COPYMODS Level 067 '                         SBG 03/00  01125
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01126
         DC    C'SYSIN IN PARMCHEK PGM'                                  01127
SAVEAREA DC    18F'0'                                                    01128
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01129
         SAVE  (14,12)                                                   01130
         LR    R5,R1          SAVE PARM POINTER                          01131
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01132
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01133
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01134
         LR    R13,R1               NEW SAVE AREA ADDRESS                01135
         DROP  R15                                                       01136
* -----                       SET UP SIX BASE REGISTERS                  01137
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01138
         LR    R12,R15                                                   01139
         LA    R11,4095(,R12)                                            01140
         LA    R11,1(,R11)                                               01141
         LA    R10,4095(,R11)                                            01142
         LA    R10,1(,R10)                                               01143
         LA    R9,4095(,R10)                                             01144
         LA    R9,1(,R9)                                                 01145
         LA    R8,4095(,R9)                                              01146
         LA    R8,1(,R8)                                                 01147
         LA    R6,4095(,R8)                                              01148
         LA    R6,1(,R6)                                                 01149
         LR    R1,R5          RESTORE PARM POINTER                       01150
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01151
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01152
         ST    R1,PARMSAVE    And store the PARM pointer into this       01153
*                             program too, so it doesn't get lost.       01154
         L     R1,0(,R1)                                                 01155
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01156
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01157
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01158
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01159
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01160
* ----------------------------------------------------------------- *    01161
*                                                                   *    01162
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01163
*                                                                   *    01164
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01165
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01166
*              FIELDS.                                              *    01167
*                                                                   *    01168
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01169
*              FILLED IN.                                           *    01170
*                                                                   *    01171
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01172
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01173
*              THE PARM SCAN.                                       *    01174
*                                                                   *    01175
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01176
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01177
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01178
*                                                                   *    01179
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01180
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01181
*                                                                   *    01182
* ------------------------------------------------------------------*    01183
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01184
* ------------------------------------------------------------------*    01185
         L     R0,=V(PARMCHEK)                                           01186
         ST    R0,ENTRYPT                                                01187
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01188
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01189
         BALR  R14,R15                 DO CALL                           01190
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01191
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01192
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01193
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01194
* ----------------------------------------------------------------- *    01195
* ----------------------------------------------------------------- *    01196
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01197
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01198
* ----------------------------------------------------------------- *    01199
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01200
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01201
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01202
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01203
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01204
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01205
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01206
SKIPLTMS DS    0H                                             SBG 06/00  01207
* ------- >> ------- >>                                                  01208
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01209
         BZ    NOASCII4            NO. DON'T ADJUST.                     01210
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01211
NOASCII4 DS    0H                                                        01212
* ------- >> ------- >>                                                  01213
* ----- * ----- * ------                                                 01214
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01215
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01216
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01217
NONOEXNL DS    0H                                                        01218
* ----- * ----- * ------                                                 01219
* ----- * ----- * ------ *------                                         01220
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01221
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01222
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01223
NOCUMSEP DS    0H                                                        01224
* ----- * ----- * ------ *------                                         01225
* ----- * -----                                                          01226
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01227
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01228
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01229
NOCUMTOT DS    0H                                                        01230
* ----- * -----                                                          01231
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01232
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01233
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01234
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01235
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01236
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01237
*                                      BECAUSE WE'RE COPYING TO SL.      01238
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01239
CANLBDMP DS    0H                                                        01240
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01241
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01242
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01243
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01244
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01245
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01246
NOLBDQUI DS    0H                                                        01247
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01248
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01249
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01250
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01251
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01252
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01253
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01254
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01255
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01256
NOSTRADJ DS    0H                  END of the STRIP adjustments          01257
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01258
* ----------------------------------------------------------------- *    01259
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01260
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01261
* ----------------------------------------------------------------- *    01262
* --                                                             -- *    01263
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01264
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01265
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01266
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01267
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01268
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01269
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01270
         BALR  R14,R15           CALL SUBPROGRAM                         01271
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01272
NOOPTRPT DS    0H                                                        01273
*  -------------------------------------------------------------- *      01274
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01275
         RDJFCB IN                                                       01276
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01277
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01278
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01279
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01280
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01281
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01282
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01283
         SPACE 3                                                         01284
OPENSYSP DS    0H                                                        01285
*                                                                        01286
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01287
*                                                                        01288
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01289
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01290
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01291
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01292
         L     R2,16          R2=CVT                                     01293
         L     R2,0(,R2)      R2=TCB WORDS                               01294
         L     R2,4(,R2)      R2=MY TCB                                  01295
         L     R2,12(,R2)     R2=TIOT                                    01296
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01297
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01298
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01299
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01300
         BNE   TIOT1          NO                                         01301
         OI    FLAG1,OP1      SHOW IT                                    01302
         STM   R14,R3,SAV14T03                                    TEST   01303
         RDJFCB OUT1                                                     01304
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01305
         MVC   VOLDD,DDOUT1                                              01306
         LM    R14,R3,SAV14T03                                    TEST   01307
         B     TIOTNEXT       CONTINUE                                   01308
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01309
         BNE   TIOT2          NO                                         01310
         OI    FLAG1,OP2      SHOW IT                                    01311
         STM   R14,R3,SAV14T03                                    TEST   01312
         RDJFCB OUT2                                                     01313
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01314
         MVC   VOLDD,DDOUT2                                              01315
         LM    R14,R3,SAV14T03                                    TEST   01316
         B     TIOTNEXT       CONTINUE                                   01317
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01318
         BNE   TIOT3          NO                                         01319
         OI    FLAG1,OP3      SHOW IT                                    01320
         STM   R14,R3,SAV14T03                                    TEST   01321
         RDJFCB OUT3                                                     01322
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01323
         MVC   VOLDD,DDOUT3                                              01324
         LM    R14,R3,SAV14T03                                    TEST   01325
         B     TIOTNEXT       CONTINUE                                   01326
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01327
         BNE   TIOT4          NO                                         01328
         OI    FLAG1,OP4      SHOW IT                                    01329
         STM   R14,R3,SAV14T03                                    TEST   01330
         RDJFCB OUT4                                                     01331
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01332
         MVC   VOLDD,DDOUT4                                              01333
         LM    R14,R3,SAV14T03                                    TEST   01334
         B     TIOTNEXT       CONTINUE                                   01335
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01336
         BNE   TIOT5          NO                                         01337
         OI    FLAG1,OP5      SHOW IT                                    01338
         STM   R14,R3,SAV14T03                                    TEST   01339
         RDJFCB OUT5                                                     01340
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01341
         MVC   VOLDD,DDOUT5                                              01342
         LM    R14,R3,SAV14T03                                    TEST   01343
         B     TIOTNEXT       CONTINUE                                   01344
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01345
         BNE   TIOT6          NO                                         01346
         OI    FLAG1,OP6      SHOW IT                                    01347
         STM   R14,R3,SAV14T03                                    TEST   01348
         RDJFCB OUT6                                                     01349
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01350
         MVC   VOLDD,DDOUT6                                              01351
         LM    R14,R3,SAV14T03                                    TEST   01352
         B     TIOTNEXT       CONTINUE                                   01353
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01354
         BNE   TIOT7          NO                                         01355
         OI    FLAG1,OP7      SHOW IT                                    01356
         STM   R14,R3,SAV14T03                                    TEST   01357
         RDJFCB OUT7                                                     01358
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01359
         MVC   VOLDD,DDOUT7                                              01360
         LM    R14,R3,SAV14T03                                    TEST   01361
         B     TIOTNEXT       CONTINUE                                   01362
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01363
         BNE   TIOT8          NO                                         01364
         OI    FLAG1,OP8      SHOW IT                                    01365
         STM   R14,R3,SAV14T03                                    TEST   01366
         RDJFCB OUT8                                                     01367
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01368
         MVC   VOLDD,DDOUT8                                              01369
         LM    R14,R3,SAV14T03                                    TEST   01370
         B     TIOTNEXT       CONTINUE                                   01371
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01372
         BNE   TIOT9          NO                                         01373
         OI    FLAG2,OP9      SHOW IT                                    01374
         STM   R14,R3,SAV14T03                                    TEST   01375
         RDJFCB OUT9                                                     01376
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01377
         MVC   VOLDD,DDOUT9                                              01378
         LM    R14,R3,SAV14T03                                    TEST   01379
         B     TIOTNEXT       CONTINUE                                   01380
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01381
         BNE   TIOT10         NO                                         01382
         OI    FLAG2,OP10     SHOW IT                                    01383
         STM   R14,R3,SAV14T03                                    TEST   01384
         RDJFCB OUT10                                                    01385
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01386
         MVC   VOLDD,DDOUT10                                             01387
         LM    R14,R3,SAV14T03                                    TEST   01388
         B     TIOTNEXT       CONTINUE                                   01389
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01390
         BNE   TIOT11         NO                                         01391
         OI    FLAG2,OP11     SHOW IT                                    01392
         STM   R14,R3,SAV14T03                                    TEST   01393
         RDJFCB OUT11                                                    01394
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01395
         MVC   VOLDD,DDOUT11                                             01396
         LM    R14,R3,SAV14T03                                    TEST   01397
         B     TIOTNEXT       CONTINUE                                   01398
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01399
         BNE   TIOT12         NO                                         01400
         OI    FLAG2,OP12     SHOW IT                                    01401
         STM   R14,R3,SAV14T03                                    TEST   01402
         RDJFCB OUT12                                                    01403
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01404
         MVC   VOLDD,DDOUT12                                             01405
         LM    R14,R3,SAV14T03                                    TEST   01406
         B     TIOTNEXT       CONTINUE                                   01407
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01408
         BNE   TIOT13         NO                                         01409
         OI    FLAG2,OP13     SHOW IT                                    01410
         STM   R14,R3,SAV14T03                                    TEST   01411
         RDJFCB OUT13                                                    01412
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01413
         MVC   VOLDD,DDOUT13                                             01414
         LM    R14,R3,SAV14T03                                    TEST   01415
         B     TIOTNEXT       CONTINUE                                   01416
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01417
         BNE   TIOT14         NO                                         01418
         OI    FLAG2,OP14     SHOW IT                                    01419
         STM   R14,R3,SAV14T03                                    TEST   01420
         RDJFCB OUT14                                                    01421
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01422
         MVC   VOLDD,DDOUT14                                             01423
         LM    R14,R3,SAV14T03                                    TEST   01424
         B     TIOTNEXT       CONTINUE                                   01425
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01426
         BNE   TIOT15         NO                                         01427
         OI    FLAG2,OP15     SHOW IT                                    01428
         STM   R14,R3,SAV14T03                                    TEST   01429
         RDJFCB OUT15                                                    01430
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01431
         MVC   VOLDD,DDOUT15                                             01432
         LM    R14,R3,SAV14T03                                    TEST   01433
         B     TIOTNEXT       CONTINUE                                   01434
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01435
         BNE   TIOTNEXT       NO                                         01436
         OI    FLAG2,OP16     SHOW IT                                    01437
         STM   R14,R3,SAV14T03                                    TEST   01438
         RDJFCB OUT16                                                    01439
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01440
         MVC   VOLDD,DDOUT16                                             01441
         LM    R14,R3,SAV14T03                                    TEST   01442
         B     TIOTNEXT       CONTINUE                                   01443
TIOTNEXT SR    R3,R3                                                     01444
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01445
         AR    R2,R3          R2=NEXT DD ENTRY                           01446
         B     TIOTLOOP       GO CHECK IT                                01447
*  ---------------------------------------------------------  SBG 09/00  01448
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01449
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01450
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01451
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01452
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01453
         MVC   VOLALL,VOLSTG     PROPAGATE VOLSER TO ALL OUTPUTS         01454
NOVOLOV  DS    0H                                                        01455
*  ---------------------------------------------------------  SBG 09/00  01456
         SPACE 3                                                         01457
*  -----------------------------------------------------------------  *  01458
*                                                                        01459
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01460
*                                                                        01461
*  -----------------------------------------------------------------  *  01462
OPENS    DS    0H               START OPENING FILES                      01463
         OPEN  (SYSPRINT,OUTPUT)                                         01464
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01465
         BO    OPENMOVE                                                  01466
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01467
         BO    OPENMOVE                                                  01468
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01469
         BO    OPENMOVE                                                  01470
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01471
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01472
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01473
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01474
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01475
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01476
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01477
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01478
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01479
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01480
         PUT   SYSPRINT,LINE                                             01481
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01482
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01483
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01484
         OPEN  (LABADDIN,INPUT)                                          01485
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01486
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01487
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01488
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01489
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01490
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01491
         PUT   SYSPRINT,LINE                                             01492
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01493
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01494
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01495
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01496
         CLOSE (SYSPRINT)                                                01497
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01498
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01499
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01500
         CLOSE (LABLDUMP)                                                01501
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01502
         BZ    REALYEND         NO.  GET OUT.                            01503
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01504
         CLOSE (LABADDIN)                                                01505
REALYEND B     THEEND                                                    01506
         EJECT                                                           01507
OPENIN   OPEN  (IN,INPUT)                                                01508
         TM    IN+48,X'10'                                               01509
         BO    INISOPEN                                                  01510
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01511
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01512
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01513
*                                   BYPASS MESSAGE.                      01514
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01515
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01516
*                                   BYPASS MESSAGE.                      01517
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01518
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01519
*                                   BYPASS MESSAGE.                      01520
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01521
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01522
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01523
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01524
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01525
INISOPEN DS    0H                                                        01526
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01527
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01528
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01529
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01530
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01531
* ----                                                                   01532
OPENINCK DS    0H                                                        01533
         LA    R2,IN              POINT TO IN DCB                        01534
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01535
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01536
         EXCP  REWIOB                                                    01537
         WAIT  ECB=REWECB                                                01538
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01539
         EXCP  INIOB                                                     01540
         WAIT  ECB=INECB                                                 01541
         CLC   INAREA(4),=C'VOL1' IS THE TAPE IBM SL ?                   01542
         BNE   RESETIN            NO. JUST REWIND TO REPOSITION.         01543
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01544
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01545
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01546
****** ------ BELOW ------ SL FILE NUMBERS.                              01547
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01548
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01549
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01550
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01551
**** ----- >>>>>   Force file limiting by SL   - - -  below              01552
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01553
         BZ    NOSLFLIM              Not set, bypass code for it         01554
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01555
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01556
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01557
         MVC   LINE(133),LINE-1      Clear message line                  01558
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01559
         PUT   SYSPRINT,LINE         Write msg                           01560
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01561
         BNO   SLLIMRES              No. only SLLIM. So go on.           01562
         MVC   LINE(133),LINE-1      Clear message line                  01563
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01564
         PUT   SYSPRINT,LINE         Write msg                           01565
SLLIMRES DS    0H                                                        01566
         B     RESETIN                                                   01567
NOSLFLIM DS    0H                                                        01568
**** ----- >>>>>   Force file limiting by SL   - - -  above              01569
**** ----- >>>>>   Force file limiting by NL   - - -  below              01570
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01571
         BZ    NONLFLIM              Not set, bypass code for it         01572
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01573
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01574
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01575
         MVC   LINE(133),LINE-1      Clear message line                  01576
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01577
         PUT   SYSPRINT,LINE         Write msg                           01578
         B     RESETIN                                                   01579
NONLFLIM DS    0H                                                        01580
**** ----- >>>>>   Force file limiting by NL   - - -  above              01581
* -- > Strip test                                                        01582
         TM    PARMFLG4,X'02'        Are we stripping labels?            01583
         BZ    OPENINXW              No. Bypass this section.            01584
         TM    PARMFLG3,X'02'        Are we limiting files also?         01585
         BO    OPENINXW              Yes. Use SL number.                 01586
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01587
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01588
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01589
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01590
OPENINXW DS    0H                                                        01591
* -- > Strip test                                                        01592
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01593
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01594
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01595
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01596
OPENINXX DS    0H                                                        01597
****** ------ ABOVE ------ SL FILE NUMBERS.                              01598
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01599
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01600
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01601
         PUT   SYSPRINT,LINE      WRITE MSG                              01602
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01603
         BZ    RESETEND         NO.  GET OUT.                            01604
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01605
         CLOSE (LABADDIN)                                                01606
RESETEND CLOSE (IN)                                                      01607
         B     THEEND                                                    01608
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01609
RESETIN  DS    0H                                                        01610
         MVC   REWECB,=F'0'                                              01611
         EXCP  REWIOB                                                    01612
         WAIT  ECB=REWECB                                                01613
NOINITOP DS    0H                                                        01614
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01615
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01616
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01617
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01618
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01619
         BNZ   NOLBLDD                  IF NOT, FLAG                     01620
         ST    R7,SAVE7REG              SAVE R7                          01621
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01622
         USING JFCBLK,R7                MAP THE AREA                     01623
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01624
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01625
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01626
         MVC   LINE(133),LINE-1                                          01627
         MVC   LINE(133),LDMPOUTM                                        01628
         PUT   SYSPRINT,LINE                                             01629
         DROP  R7                                                        01630
         L     R7,SAVE7REG              RESTORE R7                       01631
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01632
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01633
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01634
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01635
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01636
         BNZ   NOLABIN                  IF NOT, FLAG                     01637
         ST    R7,SAVE7REG              SAVE R7                          01638
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01639
         USING JFCBLK,R7                MAP THE AREA                     01640
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01641
         MVC   LDMPINMS+89(8),JFCBELNM                                   01642
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01643
         MVC   LINE(133),LINE-1                                          01644
         MVC   LINE(133),LDMPINMS                                        01645
         PUT   SYSPRINT,LINE                                             01646
         DROP  R7                                                        01647
         L     R7,SAVE7REG              RESTORE R7                       01648
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01649
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01650
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01651
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01652
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01653
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01654
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01655
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01656
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01657
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01658
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01659
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01660
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01661
         PUT   SYSPRINT,LINE                                             01662
NOLIMFMR DS    0H                                                        01663
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01664
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01665
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01666
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01667
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01668
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01669
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01670
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01671
         B     N1LIMPRT             AND PRINT IT                         01672
N1LIMDEF DS    0H                                                        01673
         MVC   LIMPMSG+11(10),PRTCHAR                                    01674
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01675
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01676
N1LIMHEX DS    0H                                                        01677
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01678
         B     READIN                                         SBG 06/00  01679
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01680
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01681
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01682
*  ---------------------------------------------------------  SBG 03/00  01683
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01684
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01685
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01686
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01687
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01688
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01689
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01690
         B     NOLIMPRT             AND PRINT IT                         01691
NOLIMDEF DS    0H                                                        01692
         MVC   LIMPMSG+11(10),PRTCHAR                                    01693
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01694
NOLIMPRT PUT   SYSPRINT,LINE                                             01695
NOLIMHEX DS    0H                                                        01696
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01697
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01698
         BO    INITEBCD                                                  01699
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 01700
         BO    INITAS3                                                   01701
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 01702
         BO    INITAS4                                                   01703
         B     OPENOINT                                                  01704
INITEBCD MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01705
         B     NOCORPRT                                                  01706
INITAS3  MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          01707
         MVC   INITCOPD,INITCREA                                         01708
         B     NOCORPRT                                                  01709
INITAS4  MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          01710
         MVC   INITCOPD,INITCREA                                         01711
         B     NOCORPRT                                                  01712
OPENOINT DS    0H                                                        01713
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01714
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01715
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01716
         ST    R7,SAVE7REG                                               01717
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01718
         L     R7,SAVE7REG                                               01719
NOCORPRT DS    0H                                                        01720
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01721
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01722
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01723
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01724
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01725
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01726
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01727
         PUT   SYSPRINT,LINE                                             01728
NOLIMFMS DS    0H                                                        01729
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01730
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01731
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01732
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01733
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01734
         MVC   LIMLMSG+11(10),LABCHAR                                    01735
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01736
         PUT   SYSPRINT,LINE                                             01737
NOLIMLMR DS    0H                                                        01738
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01739
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01740
         TM    PARMFLG4,X'02'     Are labels being stripped?             01741
         BZ    NOSTRMSG                                                  01742
         MVC   LINE(133),LINE-1   Clear message line                     01743
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01744
         PUT   SYSPRINT,LINE                                             01745
NOSTRMSG DS    0H                                                        01746
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01747
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01748
         BZ    OPEN1          NO                                         01749
         OPEN  (OUT1,OUTPUT)                                             01750
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01751
         BZ    OPEN2          NO                                         01752
         OPEN  (OUT2,OUTPUT)                                             01753
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01754
         BZ    OPEN3          NO                                         01755
         OPEN  (OUT3,OUTPUT)                                             01756
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01757
         BZ    OPEN4          NO                                         01758
         OPEN  (OUT4,OUTPUT)                                             01759
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01760
         BZ    OPEN5          NO                                         01761
         OPEN  (OUT5,OUTPUT)                                             01762
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01763
         BZ    OPEN6          NO                                         01764
         OPEN  (OUT6,OUTPUT)                                             01765
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01766
         BZ    OPEN7          NO                                         01767
         OPEN  (OUT7,OUTPUT)                                             01768
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01769
         BZ    OPEN8          NO                                         01770
         OPEN  (OUT8,OUTPUT)                                             01771
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01772
         BZ    OPEN9          NO                                         01773
         OPEN  (OUT9,OUTPUT)                                             01774
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01775
         BZ    OPEN10         NO                                         01776
         OPEN  (OUT10,OUTPUT)                                            01777
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01778
         BZ    OPEN11         NO                                         01779
         OPEN  (OUT11,OUTPUT)                                            01780
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01781
         BZ    OPEN12         NO                                         01782
         OPEN  (OUT12,OUTPUT)                                            01783
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01784
         BZ    OPEN13         NO                                         01785
         OPEN  (OUT13,OUTPUT)                                            01786
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01787
         BZ    OPEN14         NO                                         01788
         OPEN  (OUT14,OUTPUT)                                            01789
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01790
         BZ    OPEN15         NO                                         01791
         OPEN  (OUT15,OUTPUT)                                            01792
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01793
         BZ    READIN         NO                                         01794
         OPEN  (OUT16,OUTPUT)                                            01795
         EJECT                                                           01796
* --------------------------------------------------------- *            01797
*                                                           *            01798
*  READ INPUT                                               *            01799
*                                                           *            01800
* --------------------------------------------------------- *            01801
*                                                           *            01802
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01803
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01804
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01805
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01806
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01807
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01808
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01809
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01810
*                                                           *            01811
* --------------------------------------------------------- *            01812
READIN   DS    0H                                                        01813
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01814
         BO    TLITWRIT                                                  01815
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           01816
         BO    TLITASCI                                                  01817
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           01818
         BO    TLITASCI                                                  01819
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01820
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01821
         MVI   INECB,X'00'    INITIALIZE ECB                             01822
* ------------------------------------------------------------------ *   01823
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01824
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01825
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01826
* ------------------------------------------------------------------ *   01827
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01828
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01829
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01830
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01831
NONLSL0  DS    0H                                                        01832
* ----------------------------------------------------------- SBG 09/00  01833
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01834
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01835
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01836
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01837
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01838
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01839
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01840
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01841
INOLIMIT DS    0H                                                        01842
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01843
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01844
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01845
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01846
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01847
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01848
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01849
         L     R7,SAVE7RG3        RESTORE R7                             01850
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01851
NOLBDADJ DS    0H                                                        01852
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01853
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01854
*                                                                        01855
*       Since there is a possibility that the WRITE will                 01856
*       not work for one of the output ddnames, we have                  01857
*       to save the total bytes successfully moved to the                01858
*       currently open output tapes.  Also file count for                01859
*       this tape, and block count for this file.                        01860
*                                                                        01861
         MVC   PRVBY,TOTBY        Total bytes before this READ           01862
         MVC   FILECNTP,FILECNT   Total file count before this READ      01863
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01864
*                                                                        01865
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01866
         EXCP  INIOB          READ                                       01867
         WAIT  ECB=INECB      WAIT FOR READ                              01868
         TM    INCSW+4,X'01'  WAS TM READ?                               01869
         BO    READIN1        YES                                        01870
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01871
         BNE   INERR          NO -- ERROR                                01872
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01873
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01874
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01875
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01876
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01877
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01878
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01879
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01880
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01881
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01882
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01883
         ST    R7,TOTB7REG        Save BAL Register                      01884
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01885
         LA    R3,TOTBY           POINT REGISTER TO LABEL COUNTER        01886
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01887
         L     R7,TOTB7REG        Restore BAL Register                   01888
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01889
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01890
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01891
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01892
         ST    R7,R7HXPRT        SAVE R7.                                01893
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01894
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01895
         BCTR  R1,0              LOWER BY ONE                            01896
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01897
         L     R7,R7HXPRT        RESTORE R7.                             01898
NPRTHEX  DS    0H                                                        01899
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01900
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG               01901
**** ----  BYTE COUNTS ---- BELOW                                        01902
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01903
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01904
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01905
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01906
INNOBYTE DS    0H                                                        01907
**** ----  BYTE COUNTS ---- ABOVE                                        01908
         NI    DATFLAG,FF-X'10'  SHOW REAL DATA HAS BEEN READ SBG 03/00  01909
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01910
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01911
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01912
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01913
         BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01914
*                             FORMATS, AND SET FLAGS          SBG 04/00  01915
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01916
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01917
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01918
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01919
         BZ    LBLNOCNT                                                  01920
         TM    ISLBLFLG,X'01'     WAS LAST INPUT RECORD A LABEL?         01921
         BZ    LBLNOCNT                                                  01922
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01923
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01924
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01925
LBLNOCNT DS    0H                                                        01926
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01927
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01928
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01929
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01931
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01932
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01933
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01934
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01935
*                                                             SBG 04/00  01936
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01937
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01938
         BZ    READGO1            NO. WE CAN GO ON.                      01939
         TM    ISLBLFLG,X'01'     DID WE JUST READ A LABEL?              01940
         BZ    READGO1            NO DON'T CHECK FOR SL                  01941
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01942
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01943
         PUT   SYSPRINT,LINE      WRITE MSG                              01944
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01945
         CLOSE (LABADDIN)                                                01946
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01947
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01948
         EJECT                                                           01949
*  ----------------------------------------------------------------  *   01950
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01951
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01952
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01953
*  ----------------------------------------------------------------  *   01954
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01955
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01956
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01957
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01958
         BZ    STILTAPE                                                  01959
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01960
         BZ    STILTAPE                                                  01961
         B     WRTTAPMK                                                  01962
STILTAPE DS    0H                                                        01963
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01964
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01965
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01966
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01967
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01968
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          01969
DOTHEGET DS    0H                                                        01970
*** ---                                                                  01971
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              01972
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   01973
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               01974
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 01975
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   01976
DOGETALW DS    0H                                                        01977
*** ---                                                                  01978
         GET   LABADDIN,EXTLBLIN                                         01979
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    01980
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     01981
*------------------------------------> Hex Print Limit - Below           01982
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     01983
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            01984
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      01985
         BNE   NOHXPREX                        No. Don't reset count.    01986
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           01987
NOHXPREX DS    0H                                                        01988
*------------------------------------> Hex Print Limit - Above           01989
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        01990
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        01991
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        01992
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           01993
* ---------------------------------  EOV2EOF  BELOW  ------------- *     01994
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     01995
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            01996
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          01997
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     01998
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               01999
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02000
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02001
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02002
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02003
NTRALEOV DS    0H                                                        02004
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02005
*                                                                        02006
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02007
*                                                                        02008
* ------     Hex Print records from External Labels    ----  below       02009
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02010
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02011
         ST    R7,R7HXPRT           SAVE R7.                             02012
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02013
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02014
         BCTR  R1,0                 LOWER BY ONE                         02015
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02016
         L     R7,R7HXPRT           RESTORE R7.                          02017
EXTNOPRT DS    0H                                                        02018
* ------     Hex Print records from External Labels    ----  above       02019
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02020
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02021
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02022
         B     GOTVOL01             PROCESS THE VOL1                     02023
NLABVOL1 DS    0H                                                        02024
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02025
         CLC   EXTLBLIN(4),=C'HDR1'                                      02026
         BNE   NLABHDR1                                                  02027
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02028
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02029
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02030
         B     ENDIBMSL                                                  02031
NLABHDR1 DS    0H                                                        02032
         CLC   EXTLBLIN(4),=C'HDR2'                                      02033
         BNE   NLABHDR2                                                  02034
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02035
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02036
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02037
         B     ENDIBMSL                                                  02038
NLABHDR2 DS    0H                                                        02039
***** ----- *****                                                        02040
         CLC   EXTLBLIN(4),=C'EOF1'                                      02041
         BNE   NLABEOF1                                                  02042
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02043
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02044
         B     ENDIBMSL                                                  02045
NLABEOF1 DS    0H                                                        02046
         CLC   EXTLBLIN(4),=C'EOF2'                                      02047
         BNE   NLABEOF2                                                  02048
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02049
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02050
         B     ENDIBMSL                                                  02051
NLABEOF2 DS    0H                                                        02052
***** ----- *****                                                        02053
         CLC   EXTLBLIN(4),=C'EOV1'                                      02054
         BNE   NLABEOV1                                                  02055
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02056
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02057
         B     ENDIBMSL                                                  02058
NLABEOV1 DS    0H                                                        02059
         CLC   EXTLBLIN(4),=C'EOV2'                                      02060
         BNE   NLABEOV2                                                  02061
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02062
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02063
         B     ENDIBMSL                                                  02064
NLABEOV2 DS    0H                                                        02065
ENDIBMSL DS    0H                                                        02066
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02067
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02068
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02069
* -------------- EOF2EOV BELOW ----------------- *                       02070
ISITEOV  DS    0H                                                        02071
         CLC   EXTLBLIN(3),=C'EOV'                                       02072
         BNE   NOEOF2V                                                   02073
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02074
         BZ    NOEOF2V                                                   02075
         MVC   EXTLBLIN(3),=C'EOF'                                       02076
NOEOF2V  DS    0H                                                        02077
* -------------- EOF2EOV ABOVE ----------------- *                       02078
* ----------                                                             02079
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02080
         BZ    BLNOCORR             NO. SKIP THIS.                       02081
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02082
         BE    CORBLKCT                                                  02083
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02084
         BE    CORBLKCT                                                  02085
BLNOCORR B     EOFOREOV                                                  02086
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02087
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02088
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02089
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02090
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02091
MAKEEOF2 DS    0H                                                        02092
         MVC   EXTLBLIN(80),HDR2SAV                                      02093
         MVC   EXTLBLIN(3),=C'EOF'                                       02094
NOMKEOF2 DS    0H                                                        02095
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02096
* ----------                                                             02097
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02098
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02099
**** ---- ****                                                           02100
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02101
         BNE   NOTLUHL                                                   02102
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02103
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02104
NOTLUHL  DS    0H                                                        02105
**** ---- ****                                                           02106
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02107
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02108
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02109
ENDHEADR DS    0H                                                        02110
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02111
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02112
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02113
*** -----                                                                02114
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02115
         BZ    NOEODFL1                                                  02116
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02117
         B     ENDTRAIL                                                  02118
NOEODFL1 DS    0H                                                        02119
*** -----                                                                02120
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02121
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02122
ENDTRAIL DS    0H                                                        02123
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02124
         A     R0,=F'1'         ADD 1 TO COUNT                           02125
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02126
*** ---                                                                  02127
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02128
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02129
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02130
         BL    ENDNOLIM             NOT YET. GET OUT.                    02131
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02132
ENDNOLIM DS    0H                                                        02133
*** ---                                                                  02134
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02135
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02136
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02137
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02138
         B     WRTTAPMK                                                  02139
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02140
CORBLKCT DS    0H                                                        02141
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02142
         BZ    NOCORBLK          NO. BYPASS.                             02143
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02144
         BZ    NOCORBLK          NO. BYPASS.                             02145
*** ---  FIXING LABELS  --- ***                                          02146
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02147
         BZ    NOFIXL1           NO. DON'T FIX.                          02148
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02149
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02150
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02151
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02152
NOFIXL1  DS    0H                                                        02153
*** ---  FIXING LABELS  --- ***                                          02154
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02155
         STM   R2,R3,SAVE2TO3                                            02156
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02157
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02158
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02159
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02160
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02161
         LM    R2,R3,SAVE2TO3                                            02162
NOCORBLK B     EOFOREOV                                                  02163
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02164
GOTVOL01 DS    0H                                                        02165
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02166
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02167
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02168
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02169
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02170
         MVC   VOLNEW(6),VOLSTG        OVERLAY NEW VOLSER FOR ALL OUTS   02171
NOOVLALL DS    0H                                                        02172
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02173
         B     WRTLABEL                                                  02174
WRTLABEL OI    WRLBLFLG,X'01'                                            02175
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02176
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02177
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02178
TRYPXXX0 DS    0H                                                        02179
         CLC   EXTLBLIN(4),=C'VOL1'                                      02180
         BNE   TRYPUSER                                                  02181
         MVI   LINE-1,C' '                                    SBG 09/00  02182
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 09/00  02183
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 09/00  02184
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL   SBG 09/00  02185
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 09/00  02186
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION   SBG 09/00  02187
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 09/00  02188
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 09/00  02189
         B     NOPRTEXT                                                  02190
TRYPUSER DS    0H                                                        02191
         CLC   EXTLBLIN(3),=C'UHL'     USER HEADER LABEL?                02192
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02193
         CLC   EXTLBLIN(3),=C'UTL'     USER TRAILER LABEL?               02194
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         02195
         B     TRYPXXX1                                                  02196
PUSERPR  ST    R3,SAVE3REG                                               02197
         LA    R3,EXTLBLIN                                               02198
         BAL   R7,PRTUSER     PRINT LABEL INFO                           02199
         L     R3,SAVE3REG                                               02200
         B     NOPRTEXT                                                  02201
TRYPXXX1 CLC   EXTLBLIN(4),=C'HDR1'                                      02202
         BE    PXXX1PR                                                   02203
         CLC   EXTLBLIN(4),=C'EOF1'                                      02204
         BE    PXXX1PR                                                   02205
         CLC   EXTLBLIN(4),=C'EOV1'                                      02206
         BE    PXXX1PR                                                   02207
         B     TRYPXXX2                                                  02208
PXXX1PR  ST    R3,SAVE3REG                                               02209
         LA    R3,EXTLBLIN                                               02210
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           02211
         L     R3,SAVE3REG                                               02212
         B     NOPRTEXT                                                  02213
TRYPXXX2 CLC   EXTLBLIN(4),=C'HDR2'                                      02214
         BE    PXXX2PR                                                   02215
         CLC   EXTLBLIN(4),=C'EOF2'                                      02216
         BE    PXXX2PR                                                   02217
         CLC   EXTLBLIN(4),=C'EOV2'                                      02218
         BE    PXXX2PR                                                   02219
         B     NOPRTEXT                                                  02220
PXXX2PR  ST    R3,SAVE3REG                                               02221
         LA    R3,EXTLBLIN                                               02222
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02223
         L     R3,SAVE3REG                                               02224
NOPRTEXT DS    0H             DON'T PRINT EXTERNAL LABEL ON REPORT       02225
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        02226
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02227
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02228
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02229
         B     WRITE1         WRITE LABEL RECORD                         02230
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02231
WRTTAPMK DS    0H                                                        02232
*** ----------------                                                     02233
         TM    INEODFLG,X'02'                                            02234
         BZ    NOEODNOW                                                  02235
         TM    WRLBLFLG,X'04'                                            02236
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02237
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02238
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02239
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02240
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02241
NOEODNOW DS    0H                                                        02242
*** ----------------                                                     02243
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02244
         B     WRITE1         WRITE TAPE MARK                            02245
* ------------------ SPECIAL ROUTINES ------------------------------- *  02246
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02247
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02248
         B     READIN             AND GO BACK WHERE YOU STARTED          02249
* ------------------ SPECIAL ROUTINES ------------------------------- *  02250
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02251
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02252
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02253
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02254
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02255
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02256
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02257
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02258
         B     CLOSMALL          FINISHED, GET OUT.                      02259
NOFIXLBL DS    0H                                                        02260
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02261
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02262
         B     READIN2        WRITE OUTPUTS AND FINISH                   02263
* ------------------------------------------------------------------- *  02264
*                                                                        02265
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02266
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02267
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02268
*      ALREADY.                                                          02269
*                                                                        02270
* ------------------ SPECIAL ROUTINES ------------------------------- *  02271
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02272
         EJECT                                                           02273
READGO1  DS    0H                                                        02274
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02275
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02276
         BZ    READNCNT                                                  02277
         TM    ISLBLFLG,X'01'  LAST READ A LABEL?                        02278
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02279
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02280
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02281
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02282
READNCNT DS    0H                                                        02283
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02284
**---->            LABEL STRIPPING CODE          BELOW                   02285
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02286
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02287
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02288
         BZ    RDNOSTRP           NO IT WASN'T                           02289
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02290
RDNOSTRP DS    0H                                                        02291
**---->            LABEL STRIPPING CODE          ABOVE                   02292
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02293
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02294
         ST    R7,STOR7REG                                               02295
         L     R7,BLOKCNT                                                02296
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02297
         ST    R7,BLOKCNT                                                02298
         L     R7,STOR7REG                                               02299
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02300
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02301
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02302
         OI    FLAG2A,EOV       YES. WRITE AND GET OUT OF PROGRAM.       02303
NOINITT1 DS    0H                                                        02304
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02305
         B     WRITE1         CONTINUE                                   02306
*                                                             SBG 04/00  02307
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02308
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02309
* ------------------------- ADD LABEL TO NL CODE ----------- *           02310
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02311
         BZ    NONLSL1          NO.  BYPASS.                             02312
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02313
*** ---                                                                  02314
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02315
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02316
*                               DO NOT COLLECT 200 DOLLARS.              02317
*** ---                                                                  02318
NONLSL1  DS    0H                                                        02319
* ------------------------- ADD LABEL TO NL CODE ----------- *           02320
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02321
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02322
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02323
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02324
         BO    WRCTLHDR         YES. PUT IT OUT.                         02325
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02326
         BO    WRCTLEOF         YES. PUT IT OUT.                         02327
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02328
         BO    WRCTLEOV         YES. PUT IT OUT.                         02329
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02330
WRCTLHDR DS    0H                                                        02331
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02332
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02333
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02334
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02335
WRCTLEOF DS    0H                                                        02336
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02337
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02338
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02339
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02340
WRCTLEOV DS    0H                                                        02341
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02342
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02343
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02344
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02345
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02346
NOCNTLWR DS    0H                                                        02347
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02348
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02349
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02350
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  02351
         BNE   RDNOSKIP                                       SBG 03/00  02352
         MVI   LINE-1,C' '                                    SBG 03/00  02353
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02354
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  02355
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02356
         B     READIN         DO ANOTHER READ                 SBG 03/00  02357
RDNOSKIP DS    0H                                             SBG 03/00  02358
         MVI   LINE-1,C' '                                    SBG 03/00  02359
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02360
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  02361
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02362
         B     MARKFILE                                       SBG 03/00  02363
READINGO DS    0H                                             SBG 04/00  02364
*------------------------------------> HEX PRINT LIMIT - BELOW           02365
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02366
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02367
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02368
NOHXPRST DS    0H                                                        02369
*------------------------------------> HEX PRINT LIMIT - ABOVE           02370
         ST    R7,STOR7REG                                               02371
         L     R7,FILECNT                                                02372
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02373
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02374
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              02375
         ST    R7,FILECNT                                                02376
         L     R7,BLOKCNT                                                02377
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02378
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02379
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             02380
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02381
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02382
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02383
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02384
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02385
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02386
         MVC   FILECONT,=C'CONTAINING'                                   02387
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02388
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02389
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02390
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02391
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02392
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02393
         AP    QWORD,DWORD        AND ADD IT IN                          02394
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  02395
** ----                                                                  02396
         LM    R4,R5,TOTBYTES                                            02397
         A     R5,DBINL            LOW ORDER COUNT                       02398
         BNO   MARKNOVR            B IF NO OVERFLOW                      02399
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02400
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02401
MARKNOVR DS    0H                                                        02402
         A     R4,DBINH            HIGH ORDER                            02403
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02404
** ----                                                                  02405
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02406
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02407
         LM    R4,R5,LABBYTES                                            02408
         A     R5,LABINL           LOW ORDER COUNT                       02409
         BNO   MARKNOVL            B IF NO OVERFLOW                      02410
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02411
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02412
MARKNOVL DS    0H                                                        02413
         A     R4,LABINH           HIGH ORDER                            02414
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02415
* - >                                                                    02416
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02417
         BZ    NOSEPLBL                                                  02418
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02419
         MVC   FILECUMT,=C'CUM LABEL:'                                   02420
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02421
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02422
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02423
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02424
         CVD   R5,DWORD          LOW ORDER WORD                          02425
         AP    QWORD,DWORD       AND ADD IT IN                           02426
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02427
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02428
NOSEPLBL DS    0H                                                        02429
* - >                                                                    02430
         B     MARKNOLB                                                  02431
MARKISNL DS    0H                                                        02432
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02433
         BO    MARKNOLB                                                  02434
         LM    R4,R5,FILBYTES                                            02435
         A     R5,DBINFL           LOW ORDER COUNT                       02436
         BNO   MARKNOVF            B IF NO OVERFLOW                      02437
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02438
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02439
MARKNOVF DS    0H                                                        02440
         A     R4,DBINFH           HIGH ORDER                            02441
         STM   R4,R5,FILBYTES                                            02442
* - >                                                                    02443
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02444
         BZ    NOSEPDAT                                                  02445
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02446
         MVC   FILECUMT,=C'CUM DATA :'                                   02447
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02448
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02449
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02450
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02451
         CVD   R5,DWORD          LOW ORDER WORD                          02452
         AP    QWORD,DWORD       AND ADD IT IN                           02453
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02454
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02455
NOSEPDAT DS    0H                                                        02456
* - >                                                                    02457
MARKNOLB DS    0H                                                        02458
** ----                                                                  02459
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02460
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02461
* - >                                                                    02462
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02463
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02464
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02465
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02466
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02467
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02468
         CVD   R5,DWORD          LOW ORDER WORD                          02469
         AP    QWORD,DWORD       AND ADD IT IN                           02470
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02471
* - >                                                                    02472
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02473
MARKNCNT DS    0H                                                        02474
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02475
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02476
MARKNCNE DS    0H                                                        02477
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02478
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02479
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02480
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02481
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02482
         MVC   FILECONT,=C'          '                                   02483
         MVC   FILECUMT,=C'          '                                   02484
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02485
         ST    R4,DBINH            ZERO BYTE COUNT                       02486
         ST    R4,DBINL            ZERO BYTE COUNT                       02487
         ST    R4,LABINH           ZERO BYTE COUNT                       02488
         ST    R4,LABINL           ZERO BYTE COUNT                       02489
         ST    R4,DBINFH           ZERO BYTE COUNT                       02490
         ST    R4,DBINFL           ZERO BYTE COUNT                       02491
MARKNTOT DS    0H                                                        02492
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02493
MARKFILE DS    0H                                                        02494
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02495
         ST    R7,BLOKCNT                                                02496
         L     R7,FILECNT                                                02497
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02498
         ST    R7,FILECNT                                                02499
         L     R7,STOR7REG                                               02500
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02501
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02502
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02503
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02504
         BZ    MARKFILA          NO - SKIP THIS CODE                     02505
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02506
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02507
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02508
MARKFILA DS    0H                                                        02509
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02510
         TM    PARMFLG4,X'02'   Stripping labels?                        02511
         BZ    MARKSTRX         no - bypass strip-related code           02512
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02513
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02514
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02515
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02516
MARKSTRX DS    0H                                                        02517
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02518
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02519
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02520
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02521
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02522
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02523
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02524
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02525
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02526
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02527
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02528
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02529
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02530
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02531
*                                                             SBG 04/00  02532
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02533
INEODATA DS    0H                                                        02534
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02535
*                                                                        02536
READIN2  DS    0H                                                        02537
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02538
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02539
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02540
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02541
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02542
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02543
         BZ    NOEXTMK           NO                                      02544
         B     WRTTAPMK                                                  02545
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02546
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02547
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02548
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02549
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02550
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02551
READ2STP DS    0H                                                        02552
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02553
READ2GO  DS    0H                                                        02554
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02555
         OI    FLAG2A,EOV     INDICATE EOV ON INPUT                      02556
* --- >>>  ------------------ below -------- Skip writing last T.M.      02557
* -------------------------------------------------------------- *       02558
*            When stripping labels, somehow an extra             *       02559
*            tape mark gets written.  This is a kludge           *       02560
*            to correct that.....                                *       02561
* -------------------------------------------------------------- *       02562
         TM    PARMFLG4,X'02'    Stripping Labels?                       02563
         BZ    READ2GNS          No. don't skip writing last t.m.        02564
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02565
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02566
*        PUT   SYSPRINT,LINE                                             02567
         B     WRITE17           Do not write the extra tape mark        02568
READ2GNS DS    0H                                                        02569
* --- >>>  ------------------ above -------- Skip writing last T.M.      02570
         B     WRITE1                                                    02571
         SPACE 3                                                         02572
* -------------------- Code for Initting Tapes ---------->>>>> below     02573
TLITWRIT DS    0H                                                        02574
         TM    PARMFLG3,X'01'                                            02575
         BZ    TLITWRIE                                                  02576
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02577
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02578
         BO    TLITREW2                YES. SET WRITE CCW BACK.          02579
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02580
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02581
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02582
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           02583
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02584
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02585
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02586
TLITSKP1 DS    0H                                                        02587
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02588
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02589
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02590
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02591
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02592
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02593
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02594
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       02595
* --> Hex printing - below                                               02596
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02597
         BZ    NPRHINT1                No. Bypass it.                    02598
         ST    R7,R7HXPRT              Save BAL register.                02599
         BAL   R7,HEXPRNEX             Hex print from external labels.   02600
         L     R7,R7HXPRT              Restore BAL register.             02601
NPRHINT1 DS    0H                                                        02602
* --> Hex printing - above                                               02603
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02604
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02605
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02606
TLITSKP2 DS    0H                                                        02607
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02608
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02609
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02610
* --> Hex printing - below                                               02611
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02612
         BZ    NPRHINT2                No. Bypass it.                    02613
         ST    R7,R7HXPRT              Save BAL register.                02614
         BAL   R7,HEXPRNEX             Hex print from external labels.   02615
         L     R7,R7HXPRT              Restore BAL register.             02616
NPRHINT2 DS    0H                                                        02617
* --> Hex printing - above                                               02618
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02619
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02620
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02621
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02622
TLITWRIE DS    0H                                                        02623
* -------------------- Code for Initting Tapes ---------->>>>> above     02624
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     02625
TLITASCI DS    0H               INIT ASCII TAPES.                        02626
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  02627
         BZ    TLITASCE         No. Bypass this code.                    02628
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02629
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02630
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          02631
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02632
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02633
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02634
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           02635
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02636
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02637
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02638
TLITSKA1 DS    0H                                                        02639
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02640
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        02641
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02642
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02643
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02644
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02645
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    02646
         MVC   EXTLBLIN+37(10),TAPEOWN   And the Tape Owner if any       02647
* --> Hex printing - below                                               02648
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02649
         BZ    NPRHINA1                No. Bypass it.                    02650
*           Temporary ASCII translation is done here.           *        02651
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02652
         ST    R5,R5HXPRT              Save register.                    02653
         L     R5,SAVTRTCS             Point to translation table CSECT  02654
         USING TRTCSECT,R5                                               02655
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02656
         ST    R7,R7HXPRT              Save BAL register.                02657
         BAL   R7,HEXPRNEX             Hex print from external labels.   02658
         L     R7,R7HXPRT              Restore BAL register.             02659
         L     R5,R5HXPRT              Restore R5                        02660
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02661
         DROP  R5                                                        02662
NPRHINA1 DS    0H                                                        02663
* --> Hex printing - above                                               02664
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02665
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02666
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02667
TLITSKA2 DS    0H                                                        02668
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02669
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02670
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    02671
* --------------------------------------------------------------*        02672
*           Note:  The real ASCII translation is                *        02673
*                  done in the CHANGVOL routine that            *        02674
*                  gets executed just before each               *        02675
*                  output write.  Please note that              *        02676
*                  INASC3 and INASC4 imply CHGVOL.              *        02677
* --------------------------------------------------------------*        02678
* --> Hex printing - below                                               02679
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02680
         BZ    NPRHINA2                No. Bypass it.                    02681
*           Temporary ASCII translation is done here.           *        02682
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02683
         ST    R5,R5HXPRT              Save register.                    02684
         L     R5,SAVTRTCS             Point to translation table CSECT  02685
         USING TRTCSECT,R5                                               02686
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02687
         ST    R7,R7HXPRT              Save BAL register.                02688
         BAL   R7,HEXPRNEX             Hex print from external labels.   02689
         L     R7,R7HXPRT              Restore BAL register.             02690
         L     R5,R5HXPRT              Restore R5                        02691
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02692
         DROP  R5                                                        02693
NPRHINA2 DS    0H                                                        02694
* --> Hex printing - above                                               02695
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02696
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02697
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02698
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02699
TLITASCE DS    0H                                                        02700
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     02701
*                                                                        02702
*  WRITE TO OUTPUT TAPES                                                 02703
*                                                                        02704
WRITE1   DS    0H                                             SBG 06/00  02705
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02706
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02707
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02708
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02709
WRNOTPMK DS    0H                                                        02710
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02711
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02712
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02713
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02714
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02715
         BZ    WRITE2         NO                                         02716
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02717
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02718
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02719
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02720
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02721
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02722
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02723
         EXCP  OUTIOB         WRITE IT                                   02724
         WAIT  ECB=OUTECB     WAIT FOR IT                                02725
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02726
         BNE   OUTERR         NO - ERROR                                 02727
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02728
         BZ    WRITE3         NO                                         02729
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02730
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02731
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02732
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02733
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02734
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02735
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02736
         EXCP  OUTIOB         WRITE IT                                   02737
         WAIT  ECB=OUTECB     WAIT FOR IT                                02738
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02739
         BNE   OUTERR         NO - ERROR                                 02740
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02741
         BZ    WRITE4         NO                                         02742
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02743
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02744
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02745
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02746
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02747
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02748
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02749
         EXCP  OUTIOB         WRITE IT                                   02750
         WAIT  ECB=OUTECB     WAIT FOR IT                                02751
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02752
         BNE   OUTERR         NO - ERROR                                 02753
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02754
         BZ    WRITE5         NO                                         02755
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02756
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02757
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02758
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02759
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02760
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02761
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02762
         EXCP  OUTIOB         WRITE IT                                   02763
         WAIT  ECB=OUTECB     WAIT FOR IT                                02764
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02765
         BNE   OUTERR         NO - ERROR                                 02766
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02767
         BZ    WRITE6         NO                                         02768
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02769
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02770
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02771
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02772
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02773
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02774
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02775
         EXCP  OUTIOB         WRITE IT                                   02776
         WAIT  ECB=OUTECB     WAIT FOR IT                                02777
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02778
         BNE   OUTERR         NO - ERROR                                 02779
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02780
         BZ    WRITE7         NO                                         02781
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02782
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02783
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02784
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02785
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02786
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02787
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02788
         EXCP  OUTIOB         WRITE IT                                   02789
         WAIT  ECB=OUTECB     WAIT FOR IT                                02790
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02791
         BNE   OUTERR         NO - ERROR                                 02792
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02793
         BZ    WRITE8         NO                                         02794
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02795
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02796
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02797
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02798
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02799
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02800
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02801
         EXCP  OUTIOB         WRITE IT                                   02802
         WAIT  ECB=OUTECB     WAIT FOR IT                                02803
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02804
         BNE   OUTERR         NO - ERROR                                 02805
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02806
         BZ    WRITE9         NO                                         02807
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02808
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02809
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02810
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02811
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02812
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02813
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02814
         EXCP  OUTIOB         WRITE IT                                   02815
         WAIT  ECB=OUTECB     WAIT FOR IT                                02816
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02817
         BNE   OUTERR         NO - ERROR                                 02818
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02819
         BZ    WRITE10        NO                                         02820
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02821
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02822
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02823
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02824
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02825
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02826
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02827
         EXCP  OUTIOB         WRITE IT                                   02828
         WAIT  ECB=OUTECB     WAIT FOR IT                                02829
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02830
         BNE   OUTERR         NO - ERROR                                 02831
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02832
         BZ    WRITE11        NO                                         02833
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02834
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02835
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02836
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02837
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02838
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02839
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02840
         EXCP  OUTIOB         WRITE IT                                   02841
         WAIT  ECB=OUTECB     WAIT FOR IT                                02842
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02843
         BNE   OUTERR         NO - ERROR                                 02844
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02845
         BZ    WRITE12        NO                                         02846
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02847
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02848
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02849
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02850
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02851
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02852
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02853
         EXCP  OUTIOB         WRITE IT                                   02854
         WAIT  ECB=OUTECB     WAIT FOR IT                                02855
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02856
         BNE   OUTERR         NO - ERROR                                 02857
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02858
         BZ    WRITE13        NO                                         02859
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02860
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02861
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02862
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02863
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02864
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02865
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02866
         EXCP  OUTIOB         WRITE IT                                   02867
         WAIT  ECB=OUTECB     WAIT FOR IT                                02868
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02869
         BNE   OUTERR         NO - ERROR                                 02870
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02871
         BZ    WRITE14        NO                                         02872
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02873
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02874
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02875
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02876
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02877
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02878
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02879
         EXCP  OUTIOB         WRITE IT                                   02880
         WAIT  ECB=OUTECB     WAIT FOR IT                                02881
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02882
         BNE   OUTERR         NO - ERROR                                 02883
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02884
         BZ    WRITE15        NO                                         02885
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02886
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02887
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02888
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02889
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02890
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02891
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02892
         EXCP  OUTIOB         WRITE IT                                   02893
         WAIT  ECB=OUTECB     WAIT FOR IT                                02894
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02895
         BNE   OUTERR         NO - ERROR                                 02896
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02897
         BZ    WRITE16        NO                                         02898
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02899
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02900
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02901
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02902
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02903
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02904
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02905
         EXCP  OUTIOB         WRITE IT                                   02906
         WAIT  ECB=OUTECB     WAIT FOR IT                                02907
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02908
         BNE   OUTERR         NO - ERROR                                 02909
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02910
         BZ    WRITE17        NO                                         02911
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02912
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02913
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02914
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02915
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02916
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02917
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02918
         EXCP  OUTIOB         WRITE IT                                   02919
         WAIT  ECB=OUTECB     WAIT FOR IT                                02920
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02921
         BNE   OUTERR         NO - ERROR                                 02922
WRITE17  DS    0H                                                        02923
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02924
         BNE   WR17NTPM       No. Don't correct bytes moved field        02925
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02926
WR17NTPM DS    0H                                                        02927
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02928
         BO    ENDINPUT       YES. CLOSE.                                02929
         TM    FLAG2A,EOV     END OF INPUT?                              02930
         BO    ENDINPUT       YES - QUIT                                 02931
         B     READIN         NO - LOOP                                  02932
         SPACE 3                                                         02933
*                                                                        02934
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02935
*                                                                        02936
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02937
         BZ    INERR1         NO - ASSUME DATA CHECK                     02938
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02939
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02940
         B     INERR2         CONTINUE                                   02941
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02942
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02943
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02944
         MVI   INECB,X'00'    RESET ECB                                  02945
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02946
               6,INECB,ROUTCDE=(3)                                       02947
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02948
*                             WHO CARES WHAT THE REPLY IS                02949
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02950
         B     CLOSMALL                                                  02951
*        ABEND 69             QUIT                                       02952
         SPACE 3                                                         02953
*                                                                        02954
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02955
*                                                                        02956
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02957
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      02958
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02959
         BO    OUTERUC        YES. HANDLE IT.                            02960
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02961
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02962
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02963
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02964
         B     OUTERR2            GO FILL IN REST OF THE INFO            02965
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02966
         B     OUTERR2        CONTINUE                                   02967
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02968
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             02969
         L     R5,16          R5=CVT                                     02970
         L     R5,0(,R5)      R5=TCB WORDS                               02971
         L     R5,4(,R5)      R5=MY TCB                                  02972
         L     R5,12(,R5)     R5=TIOT                                    02973
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              02974
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  02975
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             02976
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     02977
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           02978
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                02979
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     02980
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 02981
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          02982
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       02983
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 02984
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       02985
         MVC   SAVELINE(133),LINE                                        02986
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02987
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      02988
         MVC   LINE(133),LINE-1      CLEAR LINE                          02989
         MVC   LINE(133),OUTCOUNT    How much was copied?                02990
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   02991
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              02992
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        02993
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              02994
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        02995
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      02996
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02997
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02998
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 02999
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03000
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03001
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03002
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03003
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03004
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03005
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03006
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03007
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03008
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03009
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03010
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03011
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03012
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03013
         AP    QWORD,DWORD        AND ADD IT IN                          03014
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03015
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03016
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03017
* ---- >    WTO on a Unit Exception   < ---- Below                       03018
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03019
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03020
* ---- >    WTO on a Unit Exception   < ---- Above                       03021
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03022
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03023
*                               THIS IS A SEMI-NORMAL CONDITION          03024
*                               AND WHY INVOLVE THE OPERATOR?            03025
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03026
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03027
OUTERR4  DS    0H                                                        03028
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03029
         WTOR  '                                                       X 03030
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03031
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03032
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03033
         BNE   OUTERR3        NO - TRY AGAIN                             03034
* ------------------------------------------------------------------- *  03035
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03036
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03037
* ------------------------------------------------------------------- *  03038
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03039
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03040
*                             DON'T BOTHER WAITING FOR REWIND            03041
* ------------------------------------------------------------------- *  03042
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03043
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03044
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03045
         BNE   OUTERR5        NO                                         03046
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03047
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03048
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03049
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03050
         BNE   OUTERR6        NO                                         03051
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03052
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03053
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03054
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03055
         BNE   OUTERR7        NO                                         03056
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03057
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03058
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03059
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03060
         BNE   OUTERR8        NO                                         03061
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03062
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03063
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03064
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03065
         BNE   OUTERR9        NO                                         03066
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03067
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03068
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03069
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03070
         BNE   OUTERR10       NO                                         03071
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03072
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03073
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03074
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03075
         BNE   OUTERR11       NO                                         03076
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03077
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03078
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03079
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03080
         BNE   OUTERR12       NO                                         03081
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03082
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03083
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03084
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03085
         BNE   OUTERR13       NO                                         03086
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03087
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03088
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03089
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03090
         BNE   OUTERR14       NO                                         03091
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03092
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03093
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03094
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03095
         BNE   OUTERR15       NO                                         03096
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03097
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03098
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03099
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03100
         BNE   OUTERR16       NO                                         03101
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03102
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03103
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03104
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03105
         BNE   OUTERR17       NO                                         03106
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03107
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03108
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03109
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03110
         BNE   OUTERR18       NO                                         03111
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03112
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03113
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03114
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03115
         BNE   OUTERR19       NO                                         03116
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03117
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03118
*                             THEN IT MUST BE OUTPUT 16                  03119
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03120
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03121
         SPACE 3                                                         03122
*                                                                        03123
*  END OF INPUT -- FINISH UP                                             03124
*                                                                        03125
ENDINPUT DS    0H                                                        03126
         SPACE 3                                                         03127
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03128
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03129
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03130
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03131
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03132
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03133
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03134
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03135
         BO    ENDIN1         YES - CONTINUE                             03136
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03137
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03138
         BO    ENDIN2         YES - CONTINUE                             03139
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03140
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03141
         BO    ENDIN3         YES - CONTINUE                             03142
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03143
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03144
         BO    ENDIN4         YES - CONTINUE                             03145
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03146
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03147
         BO    ENDIN5         YES - CONTINUE                             03148
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03149
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03150
         BO    ENDIN6         YES - CONTINUE                             03151
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03152
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03153
         BO    ENDIN7         YES - CONTINUE                             03154
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03155
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03156
         BO    ENDIN8         YES - CONTINUE                             03157
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03158
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03159
         BO    ENDIN9         YES - CONTINUE                             03160
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03161
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03162
         BO    ENDIN10        YES - CONTINUE                             03163
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03164
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03165
         BO    ENDIN11        YES - CONTINUE                             03166
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03167
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03168
         BO    ENDIN12        YES - CONTINUE                             03169
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03170
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03171
         BO    ENDIN13        YES - CONTINUE                             03172
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   03173
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        03174
         BO    ENDIN14        YES - CONTINUE                             03175
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   03176
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        03177
         BO    ENDIN15        YES - CONTINUE                             03178
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   03179
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        03180
         BO    ENDIN16        YES - CONTINUE                             03181
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  03182
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   03183
         SPACE 3                                                         03184
*                                                                        03185
*  CLOSE ALL FILES                                                       03186
*                                                                        03187
CLOSMALL DS    0H                                                        03188
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    03189
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              03190
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         03191
         BZ    ENDINTOT          NO - SKIP ROUTINE                       03192
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               03193
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03194
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03195
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03196
         CVD   R5,DWORD          LOW ORDER WORD                          03197
         AP    QWORD,DWORD       AND ADD IT IN                           03198
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03199
         PUT   SYSPRINT,TOTBLINE                                         03200
         MVI   LINE,C' '                                                 03201
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03202
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     03203
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03204
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03205
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03206
         CVD   R5,DWORD          LOW ORDER WORD                          03207
         AP    QWORD,DWORD       AND ADD IT IN                           03208
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03209
         PUT   SYSPRINT,TOTLLINE                                         03210
         MVI   LINE,C' '                                                 03211
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03212
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03213
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03214
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03215
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03216
         CVD   R5,DWORD          LOW ORDER WORD                          03217
         AP    QWORD,DWORD       AND ADD IT IN                           03218
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03219
         PUT   SYSPRINT,TOTWLINE                                         03220
         MVI   LINE,C' '                                                 03221
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03222
ENDINTOT DS    0H                                                        03223
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03224
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03225
         TM    LBLFLAG,X'08'  HAVE WE COPIED AN INITTED TAPE?            03226
         BZ    NOINITT3       NOPE. DON'T REPORT IT EITHER.              03227
         MVI   LINE-1,C' '                                               03228
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03229
         MVC   INITSER(6),INVOLUME  MOVE IN VOLSER FROM VOL1             03230
         MVC   LINE(133),INITMSG MSG-WE'RE DOING INITTED TAPE            03231
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03232
NOINITT3 DS    0H                                                        03233
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03234
         TM    PARMFLG3,X'01'   INIT ONLY?                               03235
         BO    NOCLOSIN                                                  03236
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      03237
         BO    NOCLOSIN                                                  03238
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      03239
         BO    NOCLOSIN                                                  03240
         CLOSE (IN)                                                      03241
NOCLOSIN DS    0H                                                        03242
         CLOSE (SYSPRINT)                                                03243
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03244
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03245
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03246
         CLOSE (LABLDUMP)                                                03247
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03248
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03249
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03250
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03251
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03252
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03253
         CLOSE (LABADDIN)                                                03254
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03255
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03256
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03257
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03258
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03259
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03260
         BZ    CLOSE1         NO                                         03261
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03262
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03263
         BZ    CLOSE2         NO                                         03264
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03265
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03266
         BZ    CLOSE3         NO                                         03267
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03268
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03269
         BZ    CLOSE4         NO                                         03270
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03271
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03272
         BZ    CLOSE5         NO                                         03273
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03274
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03275
         BZ    CLOSE6         NO                                         03276
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03277
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03278
         BZ    CLOSE7         NO                                         03279
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03280
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03281
         BZ    CLOSE8         NO                                         03282
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03283
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03284
         BZ    CLOSE9         NO                                         03285
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03286
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03287
         BZ    CLOSE10        NO                                         03288
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03289
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03290
         BZ    CLOSE11        NO                                         03291
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03292
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03293
         BZ    CLOSE12        NO                                         03294
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03295
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03296
         BZ    CLOSE13        NO                                         03297
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03298
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03299
         BZ    CLOSE14        NO                                         03300
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03301
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03302
         BZ    CLOSE15        NO                                         03303
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03304
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03305
         BZ    THEEND         NO                                         03306
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03307
         SPACE 3                                                         03308
*                                                                        03309
*  Test for ABEND 069 first.  Did we come from an Input Error?           03310
*                                                                        03311
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03312
         BZ    THEEND            No.  End normally.                      03313
         ABEND 69                QUIT                                    03314
*                                                                        03315
*  THE END                                                               03316
*                                                                        03317
THEEND   DS    0H                                                        03318
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03319
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03320
         MVC   WTOCBT+16(41),FILEDONE                                    03321
WTOCBT   WTO   'CBT990                                              '    03322
THEENDS  DS    0H                                                        03323
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03324
         BO    THEEND16         Yes, issue RC = 16                       03325
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03326
         BO    THEEND8          Yes, issue RC = 8                        03327
         B     THEEND0          Otherwise, issue RC = 0                  03328
THEEND16 DS    0H                                                        03329
         L     R13,4(,R13)                                               03330
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03331
         B     THEEND2                                                   03332
THEEND8  DS    0H                                                        03333
         L     R13,4(,R13)                                               03334
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03335
         B     THEEND2                                                   03336
THEEND0  DS    0H                                                        03337
         L     R13,4(,R13)                                               03338
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03339
THEEND2  DS    0H                                                        03340
         LM    R14,R12,12(R13)                                           03341
         BR    R14                                                       03342
         EJECT                                                           03343
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03344
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03345
*    BAL REGISTER IS R4.                                                 03346
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03347
HEX      DS    0H                                                        03348
         MVC   1(1,R15),0(R1)        Move byte                           03349
         UNPK  0(3,R15),1(2,R15)     Unpack                              03350
         TR    0(2,R15),HEXTAB-240                                       03351
         LA    R15,2(,R15)           Increment output pointer            03352
         LA    R1,1(,R1)             Increment input pointer             03353
         BCT   R0,HEX                Decrement length, then loop         03354
         MVI   0(R15),C' '           Blank the trailing byte             03355
         BR    R4                    Return to caller                    03356
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03357
         SPACE                                                           03358
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03359
*    BAL REGISTER IS R7.                                      SBG 04/00  03360
* --------------------------------------------------------- * SBG 04/00  03361
LABELCHK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS   SBG 04/00  03362
*                         AND SET LABEL FLAGS, ACCORDINGLY,   SBG 04/00  03363
*                         IN THE LBLFLAG BYTE.                SBG 04/00  03364
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  03365
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  03366
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  03367
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  03368
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  03369
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  03370
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  03371
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  03372
* --------------------------------------------------------- * SBG 04/00  03373
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            03374
* -                                                       - *            03375
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            03376
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            03377
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            03378
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            03379
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            03380
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            03381
* --------------------------------------------------------- *            03382
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG AT START      03383
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?          SBG 04/00  03384
         BE    CVOL1                PROCESS THE VOL1          SBG 04/00  03385
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?          SBG 04/00  03386
         BE    CHDR1                PROCESS HDR1              SBG 04/00  03387
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?             SBG 04/00  03388
         BE    CHDR2                PROCESS HDR2              SBG 04/00  03389
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?            SBG 04/00  03390
         BE    CEOF1                PROCESS EOF1              SBG 04/00  03391
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?            SBG 04/00  03392
         BE    CEOF2                PROCESS EOF2              SBG 04/00  03393
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?            SBG 04/00  03394
         BE    CEOV1                PROCESS EOV1              SBG 04/00  03395
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?            SBG 04/00  03396
         BE    CEOV2                PROCESS EOV2              SBG 04/00  03397
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL? SBG 04/00  03398
         BE    CUHL                 PROCESS UHL               SBG 04/00  03399
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?    04/00  03400
         BE    CUTL                 PROCESS UTL               SBG 04/00  03401
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL    SBG 04/00  03402
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------  SBG 05/00  03403
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03404
         BO    CVOL1NPR              YES. JUST TURN ON ISLABEL FLAG      03405
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          03406
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03407
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    03408
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      03409
CLRIDRCV DS    0H                                                        03410
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          03411
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE SBG 03/00  03412
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE  SBG 03/00  03413
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03414
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                03415
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    03416
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     03417
         MVC   LINE(133),NOLABSL   DISPLAY NO SL ON SL MSG               03418
         PUT   SYSPRINT,LINE        WRITE MSG                            03419
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  03420
         CLOSE (LABADDIN)                                                03421
CVOL1OUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            03422
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          03423
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  03424
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03425
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03426
         BZ    CVOL1ND              NO. SKIP PUTTING OUT      SBG 09/00  03427
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03428
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03429
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03430
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03431
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03432
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.            SBG 03/00  03433
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?         SBG 05/00  03434
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND  SBG 05/00  03435
         MVI   LINE-1,C' '                                    SBG 03/00  03436
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03437
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 04/00  03438
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL     SBG 03/00  03439
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 04/00  03440
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION     SBG 04/00  03441
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 04/00  03442
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 03/00  03443
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03444
         B     LABCHEND                                       SBG 04/00  03445
CHDR1    DS    0H                                             SBG 04/00  03446
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03447
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      03448
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS         SBG 07/00  03449
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.            SBG 03/00  03450
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03451
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03452
         BZ    CHDR1ND              NO. SKIP PUTTING OUT      SBG 09/00  03453
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03454
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03455
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03456
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03457
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03458
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?   SBG 03/00  03459
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET  SBG 03/00  03460
* ---------------- LABEL DUMPING CODE --------------------- *            03461
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03462
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      03463
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03464
         MVC   LLINE(80),LABELITI   MOVE IN ENDOFHDRINIT                 03465
         PUT   LABLDUMP,LLINE       WRITE OUT ENDOFLABELHEADERINIT       03466
CHDR1NDM DS    0H                                                        03467
* ---------------- LABEL DUMPING CODE --------------------- *            03468
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE   SBG 03/00  03469
         NOP   CHDR1Z         DON'T PRINT LABEL INFO          SBG 05/00  03470
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?             SBG 05/00  03471
         BZ    CHDR1Z         NO. DON'T PRINT.                SBG 05/00  03472
         ST    R3,SAVE3REG                                               03473
         LA    R3,INAREA                                                 03474
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03475
         BAL   R7,PRTXXX1     PRINT LABEL INFO                SBG 05/00  03476
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03477
         L     R3,SAVE3REG                                               03478
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03479
         B     LABCHEND                                       SBG 04/00  03480
CHDR2    DS    0H                                             SBG 04/00  03481
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03482
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      03483
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          03484
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03485
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    03486
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03487
         BNE   CLRIDRH2                                                  03488
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03489
CLRIDRH2 DS    0H                                                        03490
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          03491
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2 SBG 07/00  03492
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.            SBG 03/00  03493
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03494
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03495
         BZ    CHDR2ND              NO. SKIP PUTTING OUT      SBG 09/00  03496
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03497
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03498
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03499
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           03500
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03501
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03502
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?           SBG 05/00  03503
         BZ    CHDR2Z           NO.                           SBG 05/00  03504
         ST    R3,SAVE3REG                                               03505
         LA    R3,INAREA                                                 03506
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03507
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03508
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03509
         L     R3,SAVE3REG                                               03510
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03511
         B     LABCHEND                                       SBG 04/00  03512
CEOF1    DS    0H                                             SBG 04/00  03513
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03514
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      03515
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1      SBG 04/00  03516
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.            SBG 03/00  03517
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03518
BCTCEOF1 DS    0H                                                        03519
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03520
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  03521
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03522
         STM   R2,R3,SAVE2TO3                                            03523
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03524
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03525
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03526
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03527
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03528
         LM    R2,R3,SAVE2TO3                                            03529
BCTCEOFX DS    0H                                                        03530
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03531
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03532
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03533
         BZ    CEOF1ND              NO. SKIP PUTTING OUT      SBG 09/00  03534
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03535
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03536
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03537
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03538
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03539
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?           SBG 05/00  03540
         BZ    CEOF1Z           NO.                           SBG 05/00  03541
         ST    R3,SAVE3REG                                               03542
         LA    R3,INAREA                                                 03543
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03544
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03545
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03546
         L     R3,SAVE3REG                                               03547
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03548
         B     LABCHEND                                       SBG 04/00  03549
CEOF2    DS    0H                                             SBG 04/00  03550
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03551
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      03552
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03553
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03554
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    03555
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03556
         BNE   CLRIDRF2                                                  03557
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03558
CLRIDRF2 DS    0H                                                        03559
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03560
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2      SBG 04/00  03561
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.            SBG 03/00  03562
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03563
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03564
         BZ    CEOF2ND              NO. SKIP PUTTING OUT      SBG 09/00  03565
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03566
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03567
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03568
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03569
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03570
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03571
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?           SBG 05/00  03572
         BZ    CEOF2Z           NO.                           SBG 05/00  03573
         ST    R3,SAVE3REG                                               03574
         LA    R3,INAREA                                                 03575
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03576
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03577
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03578
         L     R3,SAVE3REG                                               03579
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03580
         B     LABCHEND                                       SBG 04/00  03581
CEOV1    DS    0H                                             SBG 04/00  03582
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03583
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      03584
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1      SBG 04/00  03585
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03586
         BZ    CEOVN1         NO, PROCESS ORDINARILY          SBG 06/00  03587
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN         SBG 03/00  03588
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            03589
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03590
         MVI   LINE-1,C' '                                    SBG 03/00  03591
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  03592
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE             SBG 06/00  03593
         PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.    SBG 06/00  03594
         B     CEOVY1                                         SBG 06/00  03595
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.            SBG 03/00  03596
CEOVY1   DS    0H                                             SBG 09/00  03597
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03598
BCTCEOV1 DS    0H                                                        03599
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          03600
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  03601
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         03602
         STM   R2,R3,SAVE2TO3                                            03603
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     03604
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    03605
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 03606
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        03607
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              03608
         LM    R2,R3,SAVE2TO3                                            03609
BCTCEOVX DS    0H                                                        03610
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03611
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03612
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03613
         BZ    CEOV1ND              NO. SKIP PUTTING OUT      SBG 09/00  03614
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03615
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03616
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03617
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03618
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03619
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?           SBG 05/00  03620
         BZ    CEOV1Z           NO.                           SBG 05/00  03621
         ST    R3,SAVE3REG                                               03622
         LA    R3,INAREA                                                 03623
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03624
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03625
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03626
         L     R3,SAVE3REG                                               03627
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03628
         B     LABCHEND                                       SBG 04/00  03629
CEOV2    DS    0H                                             SBG 04/00  03630
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03631
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      03632
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03633
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03634
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    03635
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03636
         BNE   CLRIDRV2                                                  03637
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03638
CLRIDRV2 DS    0H                                                        03639
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03640
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2      SBG 04/00  03641
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03642
         BZ    CEOVN2         NO, PROCESS ORDINARILY          SBG 06/00  03643
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN         SBG 03/00  03644
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            03645
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03646
         B     CEOVY2                                         SBG 06/00  03647
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.            SBG 03/00  03648
CEOVY2   DS    0H                                             SBG 09/00  03649
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03650
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03651
         BZ    CEOV2ND              NO. SKIP PUTTING OUT      SBG 09/00  03652
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03653
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03654
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03655
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   03656
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        03657
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           03658
         B     CEOV2ND              AND GET OUT                          03659
CEOV2F   DS    0H                                                        03660
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03661
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03662
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03663
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?           SBG 05/00  03664
         BZ    CEOV2Z           NO.                           SBG 05/00  03665
         ST    R3,SAVE3REG                                               03666
         LA    R3,INAREA                                                 03667
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03668
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03669
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03670
         L     R3,SAVE3REG                                               03671
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03672
         B     LABCHEND                                       SBG 04/00  03673
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            03674
CUHL     DS    0H             HANDLE USER HEADER LABELS                  03675
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03676
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      03677
         ST    R3,SAVE3REG                                               03678
         LA    R3,INAREA                                                 03679
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03680
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03681
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03682
         L     R3,SAVE3REG                                               03683
* ---------------- LABEL DUMPING CODE --------------------- *            03684
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03685
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 03686
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03687
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03688
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03689
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            03690
* ---------------- LABEL DUMPING CODE --------------------- *            03691
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03692
         B     LABCHEND                                                  03693
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 03694
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03695
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      03696
         ST    R3,SAVE3REG                                               03697
         LA    R3,INAREA                                                 03698
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03699
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03700
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03701
         L     R3,SAVE3REG                                               03702
* ---------------- LABEL DUMPING CODE --------------------- *            03703
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03704
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 03705
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03706
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03707
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03708
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            03709
* ---------------- LABEL DUMPING CODE --------------------- *            03710
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03711
         B     LABCHEND                                                  03712
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            03713
NOTLABEL NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG    SBG 04/00  03714
LABCHEND BR    R7                                             SBG 04/00  03715
* --------------------------------------------------------- * SBG 05/00  03716
*    BAL REGISTER IS R7.                                      SBG 05/00  03717
* --------------------------------------------------------- * SBG 05/00  03718
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03719
*                         ALTERED.                                       03720
         MVI   LINE-1,C' '                                               03721
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03722
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03723
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03724
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03725
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03726
* ----                                                                   03727
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03728
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03729
         MVC   VOLALT+35(6),VOLSTG   MOVE NEW VOLSER VALUE TO MSG        03730
INDVVOLS DS    0H                                                        03731
* ----                                                                   03732
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03733
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03734
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03735
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03736
         BR    R7                    RETURN TO CALLER                    03737
* --------------------------------------------------------- * SBG 04/00  03738
*    BAL REGISTER IS R7.                                      SBG 04/00  03739
* --------------------------------------------------------- * SBG 04/00  03740
PRTXXX1  DS    0H                                             SBG 05/00  03741
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03742
         MVI   LINE-1,C' '                                    SBG 05/00  03743
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03744
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03745
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03746
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03747
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03748
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03749
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03750
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03751
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03752
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03753
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03754
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03755
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03756
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03757
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03758
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03759
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03760
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03761
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03762
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03763
PRTXXX1R BR    R7                                             SBG 05/00  03764
* --------------------------------------------------------- * SBG 04/00  03765
*    BAL REGISTER IS R7.                                      SBG 04/00  03766
* --------------------------------------------------------- * SBG 04/00  03767
PRTXXX2  DS    0H                                             SBG 05/00  03768
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03769
         MVI   LINE-1,C' '                                    SBG 05/00  03770
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03771
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03772
         MVC   XXX2RFM(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03773
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03774
         MVC   XXX2BKL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03775
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH             SBG 05/00  03776
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03777
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03778
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03779
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03780
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03781
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03782
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03783
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03784
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03785
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03786
         B     PRX2MOV                                        SBG 04/00  03787
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03788
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03789
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03790
PRTXXX2R BR    R7                                             SBG 05/00  03791
* --------------------------------------------------------- * SBG 04/00  03792
*    BAL REGISTER IS R7.                                      SBG 04/00  03793
* --------------------------------------------------------- * SBG 04/00  03794
PRTUSER  DS    0H                                             SBG 05/00  03795
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03796
         MVI   LINE-1,C' '                                    SBG 05/00  03797
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03798
         MVI   USERLBL-1,C' '                                            03799
         MVC   USERLBL(133),USERLBL-1                                    03800
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03801
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03802
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03803
PRTUSERR BR    R7                                                        03804
* --------------------------------------------------------- *            03805
*    BAL REGISTER IS R7.                                                 03806
* --------------------------------------------------------- *            03807
PRTBLCNT DS    0H                                                        03808
         MVI   LINE-1,C' '                                               03809
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03810
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03811
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03812
PRTBLCNE BR    R7                                                        03813
* --------------------------------------------------------- *            03814
*    BAL REGISTER IS R7.                                                 03815
* --------------------------------------------------------- *            03816
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03817
         ST    R7,SAVE7REG                                               03818
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03819
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03820
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03821
BACKEXT1 L     R7,SAVE7REG                                               03822
BACKEXTE BR    R7                                                        03823
* --------------------------------------------------------- *            03824
*    BAL REGISTER IS R7.                                                 03825
* --------------------------------------------------------- *            03826
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03827
         ST    R7,SAVE7REG                                               03828
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03829
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03830
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03831
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03832
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03833
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03834
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03835
CLEARSV1 L     R7,SAVE7REG                                               03836
CLEARSVE BR    R7                                                        03837
* --------------------------------------------------------- *            03838
*    BAL REGISTER IS R7.                                                 03839
* --------------------------------------------------------- *            03840
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03841
         ST    R7,SAVE7REG                                               03842
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03843
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03844
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03845
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03846
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03847
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03848
         BZ    FIXALL3                                                   03849
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03850
         BZ    FIXLAST2                                                  03851
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03852
         BZ    FIXLAST1                                                  03853
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03854
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03855
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03856
         L     R7,SAVE7REG                                               03857
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03858
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03859
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03860
         L     R7,SAVE7REG                                               03861
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03862
FIXLAST1 DS    0H               REPLACE EOF2                             03863
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03864
         L     R7,SAVE7REG                                               03865
         B     ADDEOF2          CREATE THE EOF2                          03866
FIXEXTL1 DS    0H                                                        03867
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03868
         L     R7,SAVE7REG                                               03869
FIXEXTLE BR    R7                                                        03870
* --------------------------------------------------------- *            03871
*    BAL REGISTER IS R7.                                                 03872
* --------------------------------------------------------- *            03873
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03874
*                             IOS USES DURING EXCP PROCESSING.           03875
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03876
* ------------------------------------------------------------------- *  03877
         MVC   OUTIOB(4),IOB01                                           03878
         MVC   OUTCSW(8),FUL2ZERO                                        03879
         MVC   OUTDCBPT(4),FUL2ZERO                                      03880
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03881
         MVC   OUTDCBPT+8(4),IOB02                                       03882
CLEARIOE BR    R7                                                        03883
* --------------------------------------------------------- *            03884
*    BAL REGISTER IS R7.                                                 03885
* --------------------------------------------------------- *            03886
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03887
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03888
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03889
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03890
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03891
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03892
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03893
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03894
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03895
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03896
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03897
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03898
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03899
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03900
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03901
         MVC   INAREA+41(10),TAPEOWN     MOVE TAPE OWNER INFO IF ANY     03902
         MVC   LINE(133),LINE-1                                          03903
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03904
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03905
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03906
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03907
         MVC   LINE(133),OWNRMSG                                         03908
         PUT   SYSPRINT,LINE                                             03909
CHNOTOWN DS    0H                                                        03910
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03911
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03912
CHEXTLAB DS    0H                                                        03913
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          03914
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            03915
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           03916
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03917
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03918
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03919
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03920
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03921
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03922
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03923
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03924
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03925
         BZ    CHNOZAPV            NO. BYPASS.                           03926
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03927
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03928
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03929
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03930
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03931
         MVC   EXTLBLIN+41(10),TAPEOWN    CHANGE TAPE OWNER TOO          03932
         MVC   LINE(133),LINE-1                                          03933
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03934
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03935
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03936
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03937
         MVC   LINE(133),OWNRMSG                                         03938
         PUT   SYSPRINT,LINE                                             03939
CHNOZAPV DS    0H                                                        03940
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03941
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03942
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03943
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03944
         BO    CHGPRINT            YES, PRINT.                           03945
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03946
         BO    CHGPRINT            YES, PRINT                            03947
         B     CHGWRIT                                                   03948
CHGPRINT DS    0H                                                        03949
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03950
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03951
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03952
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03953
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03954
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03955
         ST    R7,SAVE7RG1                                               03956
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03957
         L     R7,SAVE7RG1                                               03958
CHGWRIT  DS    0H                                             SBG 05/00  03959
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03960
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03961
         SPACE 3                                                         03962
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   03963
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03964
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        03965
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03966
CHASCLAB DS    0H                                                        03967
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03968
         BO    CHNOASCV            YES, SKIP SECOND WRITE                03969
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03970
         MVC   EXTLBLIN(4),AVOL1LIT                                      03971
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               03972
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          03973
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         03974
CHASCLX1 DS    0H                                                        03975
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   03976
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              03977
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    03978
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03979
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           03980
         MVC   EXTLBLIN+37(10),TAPEOWN    CHANGE TAPE OWNER TOO          03981
         MVC   LINE(133),LINE-1                                          03982
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03983
         MVC   OWNRTID(10),TAPEOWN       MOVE OWNER INFO INTO MSG        03984
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03985
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03986
         MVC   LINE(133),OWNRMSG                                         03987
         PUT   SYSPRINT,LINE                                             03988
CHNOASCV DS    0H                                                        03989
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03990
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03991
         BO    CHGWRASX            YES, SKIP SECOND WRITE                03992
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03993
         BO    CHGASPRT            YES, PRINT.                           03994
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03995
         BO    CHGASPRT            YES, PRINT                            03996
         B     CHGWRAS                                                   03997
CHGASPRT DS    0H                                                        03998
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03999
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04000
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04001
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04002
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04003
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04004
         ST    R7,SAVE7RG1                                               04005
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     04006
         L     R7,SAVE7RG1                                               04007
         B     CHGWRAS                                                   04008
CHGWRASX DS    0H                                                        04009
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       04010
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    04011
CHGWRAS  DS    0H                                                        04012
         ST    R5,R5HXPRT        Save register.                          04013
         L     R5,SAVTRTCS       Point to translation table CSECT.       04014
         USING TRTCSECT,R5                                               04015
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    04016
         DROP  R5                                                        04017
         L     R5,R5HXPRT        Restore register.                       04018
CHASCEND BR    R7                  END OF ROUTINE - RETURN               04019
         SPACE 3                                                         04020
* --------------------------------------------------------- *            04021
*    BAL REGISTER IS R7.                                                 04022
* --------------------------------------------------------- *            04023
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  04024
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          04025
* --------------------------------------------------------- *            04026
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             04027
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               04028
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               04029
         AR    R5,R2               ADD TO BYTE COUNT                     04030
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              04031
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           04032
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   04033
ADDCNOOV DS    0H                                                        04034
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        04035
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        04036
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               04037
* --------------------------------------------------------- *            04038
*    BAL REGISTER IS R7.                                                 04039
* --------------------------------------------------------- *            04040
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            04041
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              04042
* --------------------------------------------------------- *            04043
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          04044
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04045
         BE    MOVEHI09                                                  04046
         MVC   0(4,R3),0(R2)                                             04047
         B     MOVEHIEN                                                  04048
         LA    R2,1(,R2)                                                 04049
         LA    R3,1(,R3)                                                 04050
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04051
         BE    MOVEHI08                                                  04052
         MVC   0(3,R3),0(R2)                                             04053
         B     MOVEHIEN                                                  04054
         LA    R2,1(,R2)                                                 04055
         LA    R3,1(,R3)                                                 04056
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04057
         BE    MOVEHI07                                                  04058
         MVC   0(2,R3),0(R2)                                             04059
         B     MOVEHIEN                                                  04060
         LA    R2,1(,R2)                                                 04061
         LA    R3,1(,R3)                                                 04062
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04063
         BE    MOVEHIEN                                                  04064
         MVC   0(1,R3),0(R2)                                             04065
MOVEHIEN BR    R7                                                        04066
* --------------------------------------------------------- *            04067
*    BAL REGISTER IS R7.                                                 04068
* --------------------------------------------------------- *            04069
****                                                                     04070
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             04071
****                                                                     04072
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 04073
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    04074
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      04075
****                      THEN BACK SPACE FILE OVER TAPE MARK.           04076
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         04077
****                                                                     04078
* --------------------------------------------------------- *            04079
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     04080
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04081
         EXCP  INIOB          READ                                       04082
         WAIT  ECB=INECB      WAIT FOR READ                              04083
         TM    INCSW+4,X'01'  WAS TM READ?                               04084
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               04085
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                04086
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  04087
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04088
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         04089
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                04090
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04091
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 04092
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                04093
         SR    R2,R3                 R2=ACTUAL LENGTH READ               04094
         NI    ISLBLFLG,FF-X'01'     TURN OFF "ISLABEL" FLAG             04095
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           04096
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      04097
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          04098
         BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             04099
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       04100
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          04101
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         04102
*                             NORMALLY WITHOUT CHANGING ANYTHING.        04103
*                             BUT IF IT IS A DATA FILE,                  04104
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   04105
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          04106
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04107
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            04108
         EXCP  INIOB          DO THIS EXCP                               04109
         WAIT  ECB=INECB      WAIT FOR READ                              04110
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04111
         BNE   LBDQINER       NO -- ERROR                                04112
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04113
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04114
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             04115
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     04116
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         04117
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04118
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      04119
         EXCP  INIOB          DO THIS EXCP                               04120
         WAIT  ECB=INECB      WAIT FOR READ                              04121
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04122
         BNE   LBDQINER       NO -- ERROR                                04123
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04124
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04125
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          04126
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04127
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     04128
         EXCP  INIOB          DO THIS EXCP                               04129
         WAIT  ECB=INECB      WAIT FOR READ                              04130
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04131
         BNE   LBDQINER       NO -- ERROR                                04132
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04133
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04134
LBDQREND BR    R7                                                        04135
* --------------------------------------------------------- *            04136
*    BAL REGISTER IS R7.                                                 04137
* --------------------------------------------------------- *            04138
****                                                                     04139
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        04140
****                                                                     04141
* --------------------------------------------------------- *            04142
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       04143
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04144
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04145
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     04146
         ST    R5,R5HXPRT        Save register.                          04147
         L     R5,SAVTRTCS       Point to translation table CSECT.       04148
         USING TRTCSECT,R5                                               04149
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04150
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04151
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04152
         B     HEXPRNXX          Bypass Hex Print from external labels   04153
*                                                                        04154
HEXPRNEX DS    0H                Hex Print from External Label Input     04155
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04156
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04157
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      04158
         ST    R5,R5HXPRT        Save register.                          04159
         L     R5,SAVTRTCS       Point to translation table CSECT.       04160
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04161
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04162
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04163
         L     R2,=F'80'         We know to print exactly 80 bytes.      04164
         B     MOVESIZ1          Now go print them.                      04165
*                                                                        04166
HEXPRNXX DS    0H                                                        04167
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      04168
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           04169
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           04170
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   04171
MOVESIZ1 DS    0H                                                        04172
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04173
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04174
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04175
         EX    R2,MOVRULER         PUT IN HEX RULER                      04176
         PUT   SYSPRINT,LINE                                             04177
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04178
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04179
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     04180
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04181
         B     HEXEN000            and continue to print.                04182
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04183
HEXEN000 DS    0H                                                        04184
         TM    PARMFLG5,X'80'      Is ASCII on?                          04185
         BZ    HEXEN001            No. Use EBCDIC printables.            04186
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            04187
         B     HEXENSK1                                                  04188
HEXEN001 DS    0H                                                        04189
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04190
HEXENSK1 DS    0H                                                        04191
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04192
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04193
         PUT   SYSPRINT,LINE                                             04194
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04195
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     04196
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04197
         B     HEXEN002            and continue to print.                04198
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04199
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04200
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04201
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04202
         PUT   SYSPRINT,LINE                                             04203
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04204
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04205
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04206
         B     HEXEN003            and continue to print.                04207
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04208
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04209
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04210
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04211
         PUT   SYSPRINT,LINE                                             04212
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04213
         B     HEXPREND                                                  04214
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04215
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04216
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04217
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04218
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             04219
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04220
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04221
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04222
HEXPREND DS    0H                                                        04223
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04224
NOHEXPRO DS    0H                                                        04225
         L     R5,R5HXPRT                                                04226
         DROP  R5                                                        04227
         BR    R7             RETURN TO CALLER                           04228
* --------------------------------------------------------- *            04229
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  04230
         EJECT                                                           04231
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04232
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04233
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04234
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04235
FUL2ZERO DC    2F'0'                                                     04236
IOB01    DC    X'02000000'                                               04237
IOB02    DC    X'00010000'                                               04238
PL4NO3   DC    PL4'3'                                                    04239
BLOKCNTP DC    F'0'                                                      04240
FILECNTP DC    F'1'                                                      04241
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04242
TOTBYH   DC    F'0'                                                      04243
TOTBYL   DC    F'0'                                                      04244
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04245
PRVBYH   DC    F'0'                                                      04246
PRVBYL   DC    F'0'                                                      04247
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04248
DBINFH   DC    F'0'                                                      04249
DBINFL   DC    F'0'                                                      04250
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04251
DBINH    DC    F'0'                                                      04252
DBINL    DC    F'0'                                                      04253
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04254
LABINH   DC    F'0'                                                      04255
LABINL   DC    F'0'                                                      04256
WORKA    DC    D'0'                                                      04257
WORKL    DC    D'0'                                                      04258
WORKP    DC    D'0'                                                      04259
SAV01MLT DC    D'0'                                                      04260
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04261
HEXSAVE  DS    3F                    Register save for HEX macro         04262
BLOKCNT  DC    F'0'                                                      04263
FILECNT  DC    F'1'                                                      04264
LABELCNT DC    F'0'                                                      04265
SAVUNIT  DC    CL4' '                                                    04266
         DC    CL1' '         Need this to absorb blank from HEX macro   04267
SAVDDN   DC    CL5' '                                                    04268
SAVVOLSR DC    CL6' '                                                    04269
SAVBYTES DC    X'0000'                                                   04270
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04271
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04272
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04273
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04274
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04275
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04276
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04277
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04278
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04279
*              X'01'          TAPE IS SL                                 04280
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04281
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04282
*              X'01'          Hex printing from EXTLBLIN.                04283
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04284
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04285
*                             INPUT TAPE. X'01' IS OFF.                  04286
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04287
*                             EXTERNAL FILE                              04288
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04289
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04290
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04291
*                             THIS MEANS EOF OF THE LABADDIN FILE        04292
*              X'10'          FINISHED FIXING LABELS                     04293
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04294
*              X'00'          DATA IS NOT A LABEL                        04295
*              X'01'          DATA IS A LABEL                            04296
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04297
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04298
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04299
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04300
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04301
*              X'01'          LABLDUMP DD IS OPEN                        04302
*              X'02'          SYSIN    DD IS OPEN                        04303
*              X'04'          LABADDIN DD IS OPEN                        04304
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04305
*              X'01'          ERROR WAS PRESENT                          04306
OUTBYT   DS    0F                                                        04307
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04308
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04309
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04310
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04311
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04312
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04313
INVOLUME DC    CL6'      '                                    SBG 03/00  04314
         DC    C'      '                                                 04315
         DC    C'0'                                                      04316
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04317
         DC    C'0'                                                      04318
BLKCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04319
         DC    C'      '                                                 04320
DWORD    DC    D'0'                                                      04321
QWORD    DS    PL16                                                      04322
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04323
         CNOP  0,8                                                       04324
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04325
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  04326
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'              SBG 03/00  04327
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04328
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE 2 FILES   04329
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE ONE FILE  04330
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04331
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04332
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04333
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     04334
         DC    X'3F',AL3(INAREA),X'6000',X'FFFF'     FWD SPACE FILE      04335
         DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACK OVER T.M.      04336
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04337
INECB    DC    F'0'                                                      04338
INIOB    DC    X'02000000'                                               04339
         DC    A(INECB)                                                  04340
INCSW    DC    2F'0'                                                     04341
INCCWPT  DC    A(INCCW)                                                  04342
         DC    A(IN)                                                     04343
         DC    F'0'                                                      04344
         DC    X'00010000'                                               04345
OUTECB   DC    F'0'                                                      04346
OUTIOB   DC    X'02000000'                                               04347
         DC    A(OUTECB)                                                 04348
OUTCSW   DC    2F'0'                                                     04349
OUTCCWPT DC    A(OUTCCW)                                                 04350
OUTDCBPT DC    A(OUT1)                                                   04351
         DC    F'0'                                                      04352
         DC    X'00010000'                                               04353
REWECB   DC    F'0'                                                      04354
REWIOB   DC    X'02000000'                                               04355
         DC    A(REWECB)                                                 04356
REWCSW   DC    2F'0'                                                     04357
REWCCWPT DC    A(REWCCW)                                                 04358
REWDCBPT DC    A(OUT1)                                                   04359
         DC    F'0'                                                      04360
         DC    X'00010000'                                               04361
         SPACE 3                                                         04362
DDOCHG   DC    C'     '                                                  04363
DDOUT1   DC    C'OUT1 '                                                  04364
DDOUT2   DC    C'OUT2 '                                                  04365
DDOUT3   DC    C'OUT3 '                                                  04366
DDOUT4   DC    C'OUT4 '                                                  04367
DDOUT5   DC    C'OUT5 '                                                  04368
DDOUT6   DC    C'OUT6 '                                                  04369
DDOUT7   DC    C'OUT7 '                                                  04370
DDOUT8   DC    C'OUT8 '                                                  04371
DDOUT9   DC    C'OUT9 '                                                  04372
DDOUT10  DC    C'OUT10'                                                  04373
DDOUT11  DC    C'OUT11'                                                  04374
DDOUT12  DC    C'OUT12'                                                  04375
DDOUT13  DC    C'OUT13'                                                  04376
DDOUT14  DC    C'OUT14'                                                  04377
DDOUT15  DC    C'OUT15'                                                  04378
DDOUT16  DC    C'OUT16'                                                  04379
FLAGLIT  DC    C' - FLAGS - '                                            04380
* --------------------------                                             04381
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04382
*              X'01'          WE ARE IN A HDR GROUP                      04383
*              X'02'          WE ARE IN A EOF GROUP                      04384
*              X'04'          WE ARE IN A EOV GROUP                      04385
* --------------------------                                             04386
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04387
FLAG1    DC    X'00'                                                     04388
OP1      EQU   X'80'                                                     04389
OP2      EQU   X'40'                                                     04390
OP3      EQU   X'20'                                                     04391
OP4      EQU   X'10'                                                     04392
OP5      EQU   X'08'                                                     04393
OP6      EQU   X'04'                                                     04394
OP7      EQU   X'02'                                                     04395
OP8      EQU   X'01'                                                     04396
FLAG2    DC    X'00'                                                     04397
OP9      EQU   X'80'                                                     04398
OP10     EQU   X'40'                                                     04399
OP11     EQU   X'20'                                                     04400
OP12     EQU   X'10'                                                     04401
OP13     EQU   X'08'                                                     04402
OP14     EQU   X'04'                                                     04403
OP15     EQU   X'02'                                                     04404
OP16     EQU   X'01'                                                     04405
FLAG2A   DC    X'00'                                          SBG 03/00  04406
ERR      EQU   X'02'                                                     04407
EOV      EQU   X'01'                                                     04408
FF       EQU   X'FF'                                                     04409
FLAG3    DC    X'00'                                                     04410
FLAG4    DC    X'00'                                                     04411
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04412
L80FLAG  DC    X'00'                                          SBG 03/00  04413
*              X'01'    LAST DATA WAS 80 BYTE RECORD          SBG 03/00  04414
* ---------- *                                                           04415
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04416
*              x'01'    Yes.                                             04417
* ---------- *                                                           04418
LBLFLAG  DC    X'00'    FLAG WHEN TAPE LABELS ARE BEING READ IN          04419
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  04420
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  04421
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  04422
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  04423
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  04424
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  04425
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  04426
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  04427
* ---------- *                                                           04428
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04429
*              X'01'    HDR1 HAS BEEN READ IN                            04430
*              X'02'    HDR2 HAS BEEN READ IN                            04431
*              X'04'    VOL1 HAS BEEN READ IN                            04432
*              X'08'    UHL  HAS BEEN READ IN                            04433
*              X'10'    EOF1 HAS BEEN READ IN                            04434
*              X'20'    EOF2 HAS BEEN READ IN                            04435
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04436
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04437
* ---------- *                                                           04438
STRIPFLG DC    X'00'                                                     04439
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04440
DATFLAG  DC    X'00'                                          SBG 03/00  04441
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04442
* --------------------------------------------------------- * SBG 04/00  04443
VOLDD    DC    C'     '                                                  04444
STOR7REG DS    F                                                         04445
TOTB7REG DS    F                                                         04446
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04447
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04448
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04449
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04450
         SPACE 3                                                         04451
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04452
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04453
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04454
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04455
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04456
VOL1LABL DS    0CL80                                                     04457
VOL1LIT  DC    CL4'VOL1'                                                 04458
VOL1SERL DC    CL6' '                                                    04459
VOL1FIL1 DC    CL31' '                                                   04460
VOL1ONER DC    CL10' '                                                   04461
VOL1FIL2 DC    CL29' '                                                   04462
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04463
HDR1INIT DS    0CL80                                                     04464
HDR1ILIT DC    CL4'HDR1'                                                 04465
HDR1IFIL DC    76C'0'                                                    04466
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04467
AVOL1LAB DS    0CL80                                                     04468
AVOL1LIT DC    CL4'VOL1'                                                 04469
AVOL1SER DC    CL6' '                                                    04470
AVOL1ACC DC    CL1' '                                                    04471
AVOL1RS1 DC    CL13' '                                                   04472
AVOL1IMP DC    CL13' '                                                   04473
AVOL1OWN DC    CL14' '                                                   04474
AVOL1RS2 DC    CL28' '                                                   04475
AVOL1LVL DC    CL1'3'                                                    04476
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04477
AHDR1INI DS    0CL80                                                     04478
AHDR1LIT DC    CL4'HDR1'                                                 04479
AHDR1ID1 DC    23C'0'                                                    04480
AHDR1FSN DC    CL4'0001'                                                 04481
AHDR1FSQ DC    CL4'0001'                                                 04482
AHDR1GNM DC    CL4'0001'                                                 04483
AHDR1VNM DC    CL2'00'                                                   04484
AHDR1CRD DC    CL6' 00000'                                               04485
AHDR1EXD DC    CL6' 00000'                                               04486
AHDR1ACC DC    CL1' '                                                    04487
AHDR1BKC DC    CL6'000000'                                               04488
AHDR1OSC DC    CL20'IBMZLA '                                             04489
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04490
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04491
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04492
         DC    CL78' '                                                   04493
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04494
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04495
         DC    CL78' '                                                   04496
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04497
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04498
         DC    CL78' '                                                   04499
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04500
         DC    C'R TAPE COPY OPERATION '                                 04501
         DC    CL58' '                                                   04502
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04503
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04504
         DC    C'A PARM OF INITVOLS.'                                    04505
         DC    CL8' '                                                    04506
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04507
         DC    C'                             MEMBER=         VOLUME= '  04508
         DC    C'                          '                             04509
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04510
         DC    C'                             MEMBER=         VOLUME= '  04511
         DC    C'                          '                             04512
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04513
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04514
         DC    C' MULTIPLE OF 80           '                             04515
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04516
         DC    C' IS TREATED AS NL.                                   '  04517
         DC    CL27' '                                                   04518
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04519
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04520
         DC    CL27' '                                                   04521
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04522
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04523
         DC    CL27' '                                                   04524
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04525
         DC    CL6'&HEXDFLM'                                             04526
         DC    C' RECORDS WILL'                                          04527
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04528
         DC    C'SYSIN.'                                                 04529
         DC    CL17' '                                                   04530
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04531
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04532
         DC    C'UT TAPES.                 '                             04533
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04534
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04535
         DC    C' MULTIPLE OF 80           '                             04536
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04537
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04538
         DC    C'IMAGES.                   '                             04539
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04540
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04541
         DC    C'                           '                            04542
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04543
         DC    C'ing a Tape Mark right now.                           '  04544
         DC    C'                          '                             04545
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04546
         DC    C'.  Divide by 3 for the SL file number ***            '  04547
         DC    C'                          '                             04548
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04549
         DC    C'.  Multiply by 3 for the NL file number ***          '  04550
         DC    C'                          '                             04551
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04552
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04553
         DC    C't code PARM=SLLIM.        '                             04554
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04555
         DC    C'TERMINATED '                                            04556
         DC    76C'*'                                                    04557
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04558
         DC    82C'*'                                                    04559
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04560
         DC    C' FOR DDNAME '                                           04561
VOLDDN   DC    C'     '                                                  04562
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04563
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04564
OWNRTID  DC    C'          '                                             04565
OWNRLIT1 DC    C' FOR DDNAME '                                           04566
OWNRDDO  DC    C'     '                                                  04567
OWNRFIL2 DC    68C' '                                                    04568
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04569
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04570
         DC    103C' '                                        SBG 03/00  04571
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04572
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04573
         DC    69C' '                                         SBG 06/00  04574
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                04575
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                04576
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04577
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04578
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04579
INITSER  DC    C'      '                                      SBG 03/00  04580
INITBLNK DC    76C' '                                         SBG 03/00  04581
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  04582
VOL1SER  DC    C'      '                                      SBG 03/00  04583
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  04584
VOL1OWNR DC    C'          '                                  SBG 04/00  04585
VOL1BLNK DC    63C' '                                         SBG 03/00  04586
         DC    C' '                                                      04587
USERLBL  DC    81C' '                                         SBG 03/00  04588
         DC    52C' '                                                    04589
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  04590
XXX1VOL  DC    C'      '                                      SBG 05/00  04591
XXX1DSNL DC    C' DSN='                                       SBG 05/00  04592
XXX1DSN  DC    C'                 '                           SBG 05/00  04593
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  04594
XXX1DSQ  DC    C'    '                                        SBG 05/00  04595
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  04596
XXX1VSQ  DC    C'    '                                        SBG 05/00  04597
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  04598
XXX1BLCH DC    C'    '                                        SBG 05/00  04599
XXX1BLC  DC    C'      '                                      SBG 05/00  04600
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  04601
XXX1CRD  DC    C'      '                                      SBG 05/00  04602
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  04603
XXX1EXD  DC    C'      '                                      SBG 05/00  04604
XXX1BLNK DC    30C' '                                         SBG 03/00  04605
XXX2LBL  DC    C' XXX2 LABEL: RECFM= '                        SBG 05/00  04606
XXX2RFM  DC    C' '                                           SBG 05/00  04607
XXX2BKLL DC    C'   BLOCK LENGTH: '                           SBG 05/00  04608
XXX2BKL  DC    C'     '                                       SBG 05/00  04609
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  04610
XXX2RCL  DC    C'     '                                       SBG 05/00  04611
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  04612
XXX2TDN  DC    C' '                                           SBG 05/00  04613
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  04614
XXX2JST  DC    C'                 '                           SBG 05/00  04615
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  04616
XXX2IDR  DC    C'   '                                         SBG 05/00  04617
XXX2BLNK DC    8C' '                                          SBG 03/00  04618
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04619
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04620
OUTCFCNT DC    C'XXXXXXXXXX'                                             04621
         DC    C'  Bytes:'                                               04622
OUTCBCNT DC    CL26' '                                                   04623
         DC    C' '                                                      04624
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04625
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04626
         DC    40C'*'                                                    04627
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04628
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04629
         DC    40C'*'                                                    04630
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04631
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04632
         DC    40C'*'                                                    04633
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04634
FILEPBYT DS    0CL44                                                     04635
FILEDFL1 DC    C' '                                                      04636
FILECONT DC    C'          '                                             04637
FILEDFL2 DC    C' '                                                      04638
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04639
         DC    C' BYTES'                                                 04640
FILETBYT DS    0CL44                                                     04641
FILEDFL3 DC    C'    '                                                   04642
FILECUMT DC    C'          '                                             04643
FILEDFL4 DC    C' '                                                      04644
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04645
         DC    8C' '                                                     04646
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04647
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04648
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04649
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04650
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04651
               LSER: XXXXXX '                                 SBG 06/00  04652
         DC    66C' '                                         SBG 06/00  04653
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04654
               ERIAL XXXXXX '                                 SBG 06/00  04655
         DC    66C' '                                         SBG 06/00  04656
         DC    C' '                                                      04657
HEXPRTWK DC    CL133' '                                                  04658
         DC    C' '                                                      04659
LINE     DC    CL133' '                                                  04660
         DC    C' '                                                      04661
SAVELINE DC    CL133' '                                                  04662
LINE44   DC    CL44' '                                                   04663
RULERHEX DS    0CL132                                                    04664
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04665
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04666
         DC    C'----1----+----2----+----3----+----4'                    04667
REPLY    DC    C'      '                                                 04668
COPIED   DC    C'COPIED '                                     SBG 03/00  04669
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04670
FULLWORK DS    0F                                             SBG 03/00  04671
         DC    H'0'                                           SBG 03/00  04672
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04673
         DC    2F'0'               FILLER                     SBG 05/00  04674
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04675
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04676
* --------------------------------------------------------- * SBG 05/00  04677
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04678
PARMFLG1 DC    X'00'                                                     04679
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04680
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04681
PARMFLG2 DC    X'00'                                                     04682
PARMFLG3 DC    X'00'                                                     04683
PARMFLG4 DC    X'00'                                                     04684
PARMFLG5 DC    X'00'                                                     04685
PARMFLG6 DC    X'00'                                                     04686
PARMFLG7 DC    X'00'                                                     04687
PARMFLG8 DC    X'00'                                                     04688
PARMFLG9 DC    X'00'                                                     04689
PARMFLGA DC    X'00'                                                     04690
PARMFLLN EQU   *-PARMFLGS                                                04691
* --------------------------------------------------------- * SBG 05/00  04692
         DS    0F                                                        04693
STRTVALU DS    0CL(ENDVALUE)                                             04694
         DC    A(ENDVALUE)                                               04695
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04696
*                                  Upon entry to PARMCHEK, contains      04697
*                                  the PARM address from COPYMODS,       04698
*                                  which gets overlaid.                  04699
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04700
*                                  Upon entry to PARMCHEK, contains      04701
*                                  the PARM address from COPYMODS,       04702
*                                  which gets overlaid.                  04703
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04704
*                                  Upon entry to PARMCHEK, contains      04705
*                                  the PARM length from COPYMODS,        04706
*                                  which gets overlaid.                  04707
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04708
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04709
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04710
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04711
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04712
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04713
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04714
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04715
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04716
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04717
         DC    CL7' '              FILLER                                04718
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04719
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04720
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04721
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04722
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04723
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04724
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04725
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04726
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04727
TAPEOWN  DC    CL10' '                                                   04728
TAPEOEXT DC    CL4' '                                                    04729
OVERFLAG DC    X'00'                                                     04730
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04731
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04732
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04733
LIMCHAR  DC    CL10' '                                                   04734
LABCHAR  DC    CL10' '                                                   04735
PRTCHAR  DC    CL10' '                                                   04736
ENDVALUE EQU   (*-PARMSLEN)+4                                            04737
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04738
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04739
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04740
* --------------------------------------------------------- *            04741
*              FORMAT OF PARM TABLE                                      04742
*              ONE ENTRY IS 20 BYTES                                     04743
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04744
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04745
*                               X'00' SAYS TURN FLAG ON                  04746
*                               X'10' SET ENTRY AS A DEFAULT             04747
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04748
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04749
*                                WHICH ALLOWS FOR 80 PARMS               04750
*                                THAT DON'T HAVE TO BE                   04751
*                                SEPARATED BY A COMMA.                   04752
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04753
* --------------------------------------------------------- *            04754
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04755
* --------------------------------------------------------- *            04756
         SPACE 3                                                         04757
         LTORG                                                           04758
         SPACE 3                                                         04759
         DS    0D                                             SBG 09/00  04760
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04761
LBNJFCB  DC    44F'0'                                                    04762
         DS    0D                                             SBG 09/00  04763
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04764
LBLJFCB  DC    44F'0'                                                    04765
         DS    0D                                             SBG 05/00  04766
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04767
OUTJFCB  DC    44F'0'                                                    04768
         DS    0D                                             SBG 06/00  04769
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04770
INJFCB   DC    44F'0'                                         SBG 06/00  04771
         SPACE 3                                                         04772
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04773
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04774
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04775
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04776
VOLCHG   DC    C'      '                                                 04777
VOLSTG   DC    C'      '    CARD VOLUME NAME - TO OVERLAY OTHERS         04778
VOLALL   DS    0CL96         16 X 6                                      04779
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04780
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04781
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04782
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04783
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04784
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04785
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04786
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04787
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04788
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04789
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04790
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04791
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04792
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04793
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04794
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04795
* --------------------------------------------------------- * SBG 05/00  04796
         SPACE 3                                                         04797
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04798
               EXLST=INEXLST                                             04799
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04800
               EXLST=OUTEXLST                                            04801
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04802
               EXLST=OUTEXLST                                            04803
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04804
               EXLST=OUTEXLST                                            04805
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04806
               EXLST=OUTEXLST                                            04807
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04808
               EXLST=OUTEXLST                                            04809
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04810
               EXLST=OUTEXLST                                            04811
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04812
               EXLST=OUTEXLST                                            04813
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04814
               EXLST=OUTEXLST                                            04815
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04816
               EXLST=OUTEXLST                                            04817
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04818
               EXLST=OUTEXLST                                            04819
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04820
               EXLST=OUTEXLST                                            04821
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04822
               EXLST=OUTEXLST                                            04823
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04824
               EXLST=OUTEXLST                                            04825
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04826
               EXLST=OUTEXLST                                            04827
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04828
               EXLST=OUTEXLST                                            04829
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04830
               EXLST=OUTEXLST                                            04831
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04832
               BLKSIZE=133                                               04833
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04834
               EXLST=LBLEXLST                                            04835
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04836
               EXLST=LBNEXLST,EODAD=LBLINEND                             04837
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04838
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04839
SAVE2TO3 DC    2F'0'                                                     04840
SAVE3REG DC    F'0'                                                      04841
SAVE7BA1 DC    F'0'                                                      04842
SAVE7REG DC    F'0'                                                      04843
SAVE7BAL DC    F'0'                                                      04844
SAVE7RG1 DC    F'0'                                                      04845
SAVE7RG2 DC    F'0'                                                      04846
SAVE7RG3 DC    F'0'                                                      04847
SAVE7RG4 DC    F'0'                                                      04848
R5HXPRT  DC    F'0'                                                      04849
R7HXPRT  DC    F'0'                                                      04850
SAVTRTCS DC    F'0'                                                      04851
ENTRYPT  DC    F'0'                                                      04852
PARMSAVE DC    F'0'                                                      04853
PARMADDR DC    F'0'                                                      04854
USERSAVE DC    F'0'                                                      04855
         DC    CL4' '                                                    04856
HDR1SAV  DC    CL80' '                                                   04857
HDR2SAV  DC    CL80' '                                                   04858
UHL1SAV  DC    CL80' '                                                   04859
UHL2SAV  DC    CL80' '                                                   04860
UHL3SAV  DC    CL80' '                                                   04861
UHL4SAV  DC    CL80' '                                                   04862
UHL5SAV  DC    CL80' '                                                   04863
UHL6SAV  DC    CL80' '                                                   04864
UHL7SAV  DC    CL80' '                                                   04865
UHL8SAV  DC    CL80' '                                                   04866
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04867
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING TO ASCII             04868
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04869
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04870
TRTCSECT CSECT                                                           04871
TRTBL0   DS    0D                                                        04872
         DC    XL16'40404040404040404040404040404040'                    04873
         DC    XL16'40404040404040404040404040404040'                    04874
         DC    XL16'40404040404040404040404040404040'                    04875
         DC    XL16'40404040404040404040404040404040'                    04876
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04877
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04878
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04879
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04880
         DC    XL16'40818283848586878889404040404040'                    04881
         DC    XL16'40919293949596979899404040404040'                    04882
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04883
         DC    XL16'40404040404040404040404040404040'                    04884
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04885
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04886
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04887
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04888
TRTBL1   DS    0D                                                        04889
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04890
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04891
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04892
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04893
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04894
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04895
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04896
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04897
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04898
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04899
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04900
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04901
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04902
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04903
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04904
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04905
TRTBL2   DS    0D                                                        04906
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04907
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04908
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04909
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04910
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04911
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04912
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04913
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04914
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04915
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04916
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04917
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04918
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04919
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04920
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04921
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04922
TRTE2A   DS    0D                                                        04923
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04924
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04925
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    04926
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    04927
         DC    XL16'20414243444546474849A22E3C282B7C'                    04928
         DC    XL16'2651525354555657585921242A293B5E'                    04929
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    04930
         DC    XL16'707172737475767778603A2340273D22'                    04931
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    04932
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    04933
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    04934
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    04935
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    04936
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    04937
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    04938
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    04939
TRTA2E   DS    0D                                                        04940
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04941
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04942
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04943
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04944
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04945
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04946
         DC    XL16'79818283848586878889919293949596'                    04947
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    04948
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    04949
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    04950
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    04951
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    04952
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    04953
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    04954
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    04955
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    04956
TRTASPRT DS    0D                                                        04957
         DC    XL16'40404040404040404040404040404040'                    04958
         DC    XL16'40404040404040404040404040404040'                    04959
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04960
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04961
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04962
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04963
         DC    XL16'40818283848586878889919293949596'                    04964
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    04965
         DC    XL16'40404040404040404040404040404040'                    04966
         DC    XL16'40404040404040404040404040404040'                    04967
         DC    XL16'40404040404040404040404040404040'                    04968
         DC    XL16'40404040404040404040404040404040'                    04969
         DC    XL16'40404040404040404040404040404040'                    04970
         DC    XL16'40404040404040404040404040404040'                    04971
         DC    XL16'40404040404040404040404040404040'                    04972
         DC    XL16'40404040404040404040404040404040'                    04973
         EJECT                                                           04974
JFCBLK   DSECT                                                           04975
         IEFJFCBN LIST=YES                                               04976
COPYMODS CSECT                                                           04977
INAREA   DS    CL65535                                        SBG 03/00  04978
#PAN$AUD CSECT                                                           04979
$PAN#AUD DC    CL30'LEVEL 067 COPYMODS  09/21/03 '                       04980
         END                                                             04981
*          DATA SET COPYMOPT   AT LEVEL 067 AS OF 09/21/03               04982
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04983
**************************************************************           04984
**************************************************************           04985
**                                                          **           04986
**                                                          **           04987
**  MODULE: COPYMOPT                                        **           04988
**                                                          **           04989
**                                                          **           04990
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04991
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04992
**            PROGRAM.                                      **           04993
**                                                          **           04994
**                                                          **           04995
**************************************************************           04996
**************************************************************           04997
         EJECT                                                           04998
         YREGS                                                           04999
COPYMOPT CSECT                                                           05000
         USING *,R15                                          SBG 03/00  05001
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     05002
         B     EYECATCH                                       SBG 03/00  05003
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  05004
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   05005
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  05006
SAVEAREA DC    18F'0'                                                    05007
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  05008
         SAVE  (14,12)                                                   05009
         LR    R5,R1          SAVE PASSED QUANTITY                       05010
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05011
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05012
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05013
         LR    R13,R1               NEW SAVE AREA ADDRESS                05014
         DROP  R15                                                       05015
* -----                       SET UP TWO BASE REGISTERS                  05016
         USING COPYMOPT,R12,R11                                          05017
         LR    R12,R15                                                   05018
         LA    R11,4095(,R12)                                            05019
         LA    R11,1(,R11)                                               05020
         LR    R1,R5          RESTORE PARM POINTER                       05021
OPTMOVE  DS    0H                                                        05022
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           05023
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       05024
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       05025
         OPEN  (SYSPRINT,OUTPUT)                                         05026
         MVC   LINE(133),LINE-1       CLEAR LINE                         05027
         MVC   LINE(133),DISPLINH                                        05028
         PUT   SYSPRINT,LINE                                             05029
         MVC   LINE(133),LINE-1       CLEAR LINE                         05030
         MVC   LINE(133),DISPLINO                                        05031
         PUT   SYSPRINT,LINE                                             05032
         MVC   LINE(133),LINE-1       CLEAR LINE                         05033
         PUT   SYSPRINT,LINE                                             05034
         BAL   R7,FILLOPTS                                               05035
         MVC   LINE(133),LINE-1       CLEAR LINE                         05036
         MVC   LINE(133),DISPOP02                                        05037
         PUT   SYSPRINT,LINE                                             05038
         MVC   LINE(133),LINE-1       CLEAR LINE                         05039
         MVC   LINE(133),DISPOP01                                        05040
         PUT   SYSPRINT,LINE                                             05041
         MVC   LINE(133),LINE-1       CLEAR LINE                         05042
         MVC   LINE(133),DISPOP03                                        05043
         PUT   SYSPRINT,LINE                                             05044
         MVC   LINE(133),LINE-1       CLEAR LINE                         05045
         PUT   SYSPRINT,LINE                                             05046
         CLOSE (SYSPRINT)                                                05047
* ----------------------------------------------------------------- *    05048
THEEND   EQU   *                                                         05049
THEEND1  DS    0H                                                        05050
         L     R13,4(,R13)                                               05051
         RETURN (14,12),RC=0                                             05052
         EJECT                                                           05053
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    05054
* ----------------------------------------------------------------- *    05055
*    BAL REGISTER IS R7.                                            *    05056
* ------------------------------------------------------------------*    05057
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            05058
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        05059
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        05060
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     05061
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  05062
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        05063
         BE    FILOPEND                                                  05064
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            05065
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                05066
         BZ    FILLZER                                                   05067
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    05068
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05069
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05070
         BCT   R4,FILLOOP             LOOP BACK                          05071
         B     FILNEXTB                                                  05072
FILLZER  DS    0H                                                        05073
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   05074
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05075
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05076
         BCT   R4,FILLOOP             LOOP BACK                          05077
FILNEXTB DS    0H                                                        05078
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  05079
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      05080
         PUT   SYSPRINT,LINE                                             05081
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    05082
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     05083
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     05084
FILOPEND BR    R7                                                        05085
* ----------------------------------------------------------------- *    05086
* ----------  CONSTANTS  ------------------------------------------ *    05087
         LTORG                                                           05088
         DS    0F                                                        05089
PARMTBIN DC    X'00000000000000000000'                                   05090
PARMWORK DC    X'00000000000000000000'                                   05091
PARMZERO DC    X'00000000000000000000'                                   05092
OPTABLE  DS    0D                                                        05093
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       05094
OPTENTLN EQU   *-OPTABLE                                                 05095
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       05096
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       05097
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       05098
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       05099
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       05100
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       05101
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       05102
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       05103
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       05104
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       05105
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       05106
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       05107
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       05108
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       05109
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       05110
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       05111
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       05112
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       05113
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       05114
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       05115
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       05116
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       05117
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       05118
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       05119
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       05120
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       05121
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       05122
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       05123
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       05124
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       05125
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       05126
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       05127
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       05128
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       05129
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       05130
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       05131
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       05132
         DC    X'00000000040000000000',C'          ',C'          '       05133
         DC    X'00000000080000000000',C'          ',C'          '       05134
         DC    X'00000000001000000000',C'          ',C'          '       05135
         DC    X'00000000002000000000',C'          ',C'          '       05136
         DC    X'00000000004000000000',C'          ',C'          '       05137
         DC    X'00000000008000000000',C'          ',C'          '       05138
         DC    X'00000000000100000000',C'          ',C'          '       05139
         DC    X'00000000000200000000',C'          ',C'          '       05140
         DC    X'00000000000400000000',C'          ',C'          '       05141
         DC    X'00000000000800000000',C'          ',C'          '       05142
         DC    X'00000000000010000000',C'          ',C'          '       05143
         DC    X'00000000000020000000',C'          ',C'          '       05144
         DC    X'00000000000040000000',C'          ',C'          '       05145
         DC    X'00000000000080000000',C'          ',C'          '       05146
         DC    X'00000000000001000000',C'          ',C'          '       05147
         DC    X'00000000000002000000',C'          ',C'          '       05148
         DC    X'00000000000004000000',C'          ',C'          '       05149
         DC    X'00000000000008000000',C'          ',C'          '       05150
         DC    X'00000000000000100000',C'          ',C'          '       05151
         DC    X'00000000000000200000',C'          ',C'          '       05152
         DC    X'00000000000000400000',C'          ',C'          '       05153
         DC    X'00000000000000800000',C'          ',C'          '       05154
         DC    X'00000000000000010000',C'          ',C'          '       05155
         DC    X'00000000000000020000',C'          ',C'          '       05156
         DC    X'00000000000000040000',C'          ',C'          '       05157
         DC    X'00000000000000080000',C'          ',C'          '       05158
         DC    X'00000000000000001000',C'          ',C'          '       05159
         DC    X'00000000000000002000',C'          ',C'          '       05160
         DC    X'00000000000000004000',C'          ',C'          '       05161
         DC    X'00000000000000008000',C'          ',C'          '       05162
         DC    X'00000000000000000100',C'          ',C'          '       05163
         DC    X'00000000000000000200',C'          ',C'          '       05164
         DC    X'00000000000000000400',C'          ',C'          '       05165
         DC    X'00000000000000000800',C'          ',C'          '       05166
         DC    X'00000000000000000010',C'          ',C'          '       05167
         DC    X'00000000000000000020',C'          ',C'          '       05168
         DC    X'00000000000000000040',C'          ',C'          '       05169
         DC    X'00000000000000000080',C'          ',C'          '       05170
         DC    X'00000000000000000001',C'          ',C'          '       05171
         DC    X'00000000000000000002',C'          ',C'          '       05172
         DC    X'00000000000000000004',C'          ',C'          '       05173
         DC    X'00000000000000000008',C'          ',C'          '       05174
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   05175
*  -----                                                                 05176
DISPAREA DS    0D                                                        05177
DISPLINH DS    0CL133                                                    05178
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  05179
         DC    C'LEVEL 067 - OPTIONS DISPLAY                          '  05180
         DC    27C' '                                                    05181
DISPLINO DS    0CL133                                                    05182
         DC    C'-    OPTIONS IN EFFECT:                              '  05183
         DC    C'                                                     '  05184
         DC    27C' '                                                    05185
DISPOP01 DS    0CL133                                                    05186
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  05187
         DC    C'LIMIT=   SYSIN CARD                                  '  05188
         DC    27C' '                                                    05189
DISPOP02 DS    0CL133                                                    05190
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  05191
         DC    C'LIMIT=   SYSIN CARD                                  '  05192
         DC    27C' '                                                    05193
DISPOP03 DS    0CL133                                                    05194
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  05195
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  05196
         DC    27C' '                                                    05197
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05198
               BLKSIZE=133                                               05199
         DC    C' '                                                      05200
LINE     DS    CL133                                                     05201
DISPLIN1 DS    0CL133                                                    05202
         DC    C'0    '                                                  05203
DISPL1A  DC    8CL12' '                                                  05204
         DC    32C' '                                                    05205
DISPLIN2 DS    0CL133                                                    05206
         DC    C'     '                                                  05207
DISPL2A  DC    8CL12' '                                                  05208
         DC    32C' '                                                    05209
DISPLIN3 DS    0CL133                                                    05210
         DC    C'     '                                                  05211
DISPL3A  DC    8CL12' '                                                  05212
         DC    32C' '                                                    05213
DISPLIN4 DS    0CL133                                                    05214
         DC    C'     '                                                  05215
DISPL4A  DC    8CL12' '                                                  05216
         DC    32C' '                                                    05217
DISPLIN5 DS    0CL133                                                    05218
         DC    C'     '                                                  05219
DISPL5A  DC    8CL12' '                                                  05220
         DC    32C' '                                                    05221
DISPLIN6 DS    0CL133                                                    05222
         DC    C'     '                                                  05223
DISPL6A  DC    8CL12' '                                                  05224
         DC    32C' '                                                    05225
DISPLIN7 DS    0CL133                                                    05226
         DC    C'     '                                                  05227
DISPL7A  DC    8CL12' '                                                  05228
         DC    32C' '                                                    05229
DISPLIN8 DS    0CL133                                                    05230
         DC    C'     '                                                  05231
DISPL8A  DC    8CL12' '                                                  05232
         DC    32C' '                                                    05233
DISPLIN9 DS    0CL133                                                    05234
         DC    C'     '                                                  05235
DISPL9A  DC    8CL12' '                                                  05236
         DC    32C' '                                                    05237
DISPLINA DS    0CL133                                                    05238
         DC    C'     '                                                  05239
DISPLAA  DC    8CL12' '                                                  05240
         DC    32C' '                                                    05241
         SPACE 3                                                         05242
         EJECT                                                           05243
@PAN$AUD CSECT                                                           05244
$PAN#AUD DC    CL30'LEVEL 067 COPYMOPT  09/21/03 '                       05245
         END                                                             05246
*          PARM CHECKER        AT LEVEL 1.5 AS OF 09/21/03               05247
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       05248
**************************************************************           05249
**************************************************************           05250
**                                                          **           05251
**                                                          **           05252
**  MODULE:   PARMCHEK - Set option bits, based on          **           05253
**                       keywords coded in PARM and/or      **           05254
**                       SYSIN.                             **           05255
**                                                          **           05256
**  AUTHOR:   Sam Golob                                     **           05257
**                                                          **           05258
**  PURPOSE:  This program converts keywords in a PARM      **           05259
**            field or in SYSIN, into bit settings that     **           05260
**            a program can use, to control options in      **           05261
**            its execution.                                **           05262
**                                                          **           05263
**            This program can be run as a subroutine       **           05264
**            which is called, to set up to 10 bytes of     **           05265
**            bits, up to 80 bits in all, based on the      **           05266
**            settings of keywords in a table.              **           05267
**                                                          **           05268
**            This routine makes it easy to put a lot of    **           05269
**            options into a program.  If you want to       **           05270
**            add options, or use other words in PARM or    **           05271
**            SYSIN to call the same options, all you       **           05272
**            have to do, is to change or add entries in    **           05273
**            a table.  There is no extra coding to be      **           05274
**            done.                                         **           05275
**                                                          **           05276
**            Keywords in the PARM or SYSIN areas do not    **           05277
**            have to be delimited by commas or spaces or   **           05278
**            anything else.  Although for clarity, I'd     **           05279
**            certainly recommend that you put commas or    **           05280
**            spaces between the PARM field keywords.       **           05281
**            Therefore, I'd also advise that when you      **           05282
**            design keywords to put into the table to      **           05283
**            designate options, that you make them         **           05284
**            significantly different from each other.      **           05285
**            There is a length field in the table,         **           05286
**            however, which gives you some more control    **           05287
**            in this area.                                 **           05288
**                                                          **           05289
**            From a calling program, it would be possible  **           05290
**            to call PARMCHEK twice, against two different **           05291
**            tables, to set 20 bytes of options, instead   **           05292
**            of 10 bytes of options, and so forth...       **           05293
**                                                          **           05294
**            This gives you the opportunity of having      **           05295
**            a tremendous number of options, set by        **           05296
**            keywords, in your program, without using      **           05297
**            up valuable "base register space" for such    **           05298
**            coding.                                       **           05299
**                                                          **           05300
**                                                          **           05301
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05302
**            from a table, based on assembled defaults.    **           05303
**            These default settings are then overridden    **           05304
**            from a scan of words in the PARM field of     **           05305
**            the EXEC card.                                **           05306
**                                                          **           05307
**            If a SYSIN DD card is present, its cards      **           05308
**            are scanned against the table entries, to     **           05309
**            further override the bit settings which       **           05310
**            have already been done by the defaults and    **           05311
**            the PARM field.                               **           05312
**                                                          **           05313
**            The main purpose of this routine is to set    **           05314
**            bits from words.  However, if you need some   **           05315
**            keywords with values, such as (for example)   **           05316
**            FILELIMIT=69  in your program, you may use    **           05317
**            the "user code" section of this program       **           05318
**            to code that stuff in, so that these special  **           05319
**            keywords can be coded in SYSIN.               **           05320
**                                                          **           05321
**            Two sample keywords expecting number values:  **           05322
**            FILELIMIT=nnn  or                             **           05323
**            LABELIMIT=mmm                                 **           05324
**            have been coded here, just to illustrate      **           05325
**            how the user coding might work.               **           05326
**                                                          **           05327
**            Search order is:  Defaults, then PARM in      **           05328
**            the EXEC card, then SYSIN.                    **           05329
**                                                          **           05330
**            As coded here, the FILELIMIT= and             **           05331
**            LABELIMIT= keywords in SYSIN have to be in    **           05332
**            column 1 of the SYSIN cards, and if these     **           05333
**            "special keywords" are present in a card,     **           05334
**            the rest of that card is not scanned for      **           05335
**            the table keywords.                           **           05336
**                                                          **           05337
**            As coded here, the PARMTABL is a separate     **           05338
**            CSECT, addressable by V-CONs from the         **           05339
**            PARMCHEK CSECT.                               **           05340
**                                                          **           05341
**            It would probably be best to invoke the       **           05342
**            PARMCHEK program as a separate CSECT which    **           05343
**            is linkedited with the calling program,       **           05344
**            but it may be LOADed and BALR 14,15 'ed to,   **           05345
**            and run as a separate program.  (See the      **           05346
**            PARMDRVR program that is included in this     **           05347
**            package, as a sample.)                        **           05348
**                                                          **           05349
**    Input:  A fullword containing the address of the      **           05350
**            saved Register 1 from the calling program,    **           05351
**            which points to its parms.                    **           05352
**                                                          **           05353
**            A table containing parms, which is coded      **           05354
**            according to the following rules, and which   **           05355
**            has entries of 20 bytes apiece.               **           05356
**                                                          **           05357
**      FORMAT OF THE PARM TABLE                            **           05358
**                                                          **           05359
**        ONE ENTRY IS 20 BYTES                             **           05360
**                                                          **           05361
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           05362
**                         (This is the word which          **           05363
**                          controls the bit settings.)     **           05364
**                         (up to and including 8 bytes)    **           05365
**                                                          **           05366
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           05367
**                         X'00' says turn bit flag(s) ON   **           05368
**                         X'10' set entry as a DEFAULT     **           05369
**                                                          **           05370
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           05371
**                         (This is the word searched on,   **           05372
**                          in the EXEC PARM and SYSIN      **           05373
**                          areas.)                         **           05374
**                                                          **           05375
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           05376
**                          this keyword.                   **           05377
**                                                          **           05378
**                         These are the bits which the     **           05379
**                          keyword will flip on (or off).  **           05380
**                                                          **           05381
**                         You may control multiple bits    **           05382
**                          using one keyword.  All bits    **           05383
**                          controlled by this keyword      **           05384
**                          are coded in this entry field.  **           05385
**                                                          **           05386
**          The table is ended by an entry of X'FF's.       **           05387
**                                                          **           05388
**                                                          **           05389
**    Output:  R1 points to a 10-byte area containing the   **           05390
**             80 switch settings.                          **           05391
**                                                          **           05392
**             Sample code to use PARMCHEK output:          **           05393
**                                                          **           05394
**                      ST    R1,PARMADDR                   **           05395
**                      USING PARMFLGS,R1                   **           05396
**             *                                            **           05397
**             PARMFLGS DSECT                               **           05398
**             PARMFLG1 DS    X                             **           05399
**             PARMFLG2 DS    X                             **           05400
**             PARMFLG3 DS    X                             **           05401
**             PARMFLG4 DS    X                             **           05402
**             PARMFLG5 DS    X                             **           05403
**             PARMFLG6 DS    X                             **           05404
**             PARMFLG7 DS    X                             **           05405
**             PARMFLG8 DS    X                             **           05406
**             PARMFLG9 DS    X                             **           05407
**             PARMFLGA DS    X                             **           05408
**                                                          **           05409
**               then ....                                  **           05410
**                                                          **           05411
**                      TM    PARMFLG2,X'04'                **           05412
**                      BZ    some location                 **           05413
**                        ....                              **           05414
**                                                          **           05415
**             R2 points to the address of a data area      **           05416
**             containing values generated by this          **           05417
**             program.  It's address is at label STRTVALU  **           05418
**             and its length is in the first fullword      **           05419
**             at STRTVALU.                                 **           05420
**                                                          **           05421
**             R2 is accessed in a similar manner to R1.    **           05422
**             See the PARMDRVR program for an example      **           05423
**             illustrating one way in which PARMCHEK       **           05424
**             may be called.                               **           05425
**                                                          **           05426
**                                                          **           05427
**************************************************************           05428
         EJECT                                                           05429
**************************************************************           05430
**                                                          **           05431
**  CHANGE LOG:                                             **           05432
**                                                          **           05433
**    Version 1.1 - Separate Parm Table into different      **           05434
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05435
**                                                          **           05436
**    Version 1.2 - Uppercase keyword before comparing      **           05437
**       against the table entries.  This assumes you       **           05438
**       will code your table with all uppercase keyword    **           05439
**       entries.                                           **           05440
**                                                          **           05441
**    Version 1.3 - Option for requiring commas or spaces   **           05442
**       as delimiters between parms.  Comment out one      **           05443
**       instruction to require delimiters.                 **           05444
**                                                          **           05445
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05446
**                                                          **           05447
**    Version 1.5 - Fitted to COPYMODS Level 067.           **           05448
**                  Ten parm bits instead of five.          **           05449
**                                                          **           05450
**************************************************************           05451
**************************************************************           05452
         EJECT                                                           05453
**************************************************************           05454
*  ---------------------------------------------------------------  *    05455
*    This macro is used to display hex values in a printed report.       05456
*  ---------------------------------------------------------------  *    05457
         MACRO                                                           05458
&NAME    HEX   &TO,&LEN,&FROM                                            05459
&NAME    DS    0H                                                        05460
         ST    R4,SAV4HEX                                                05461
         STM   15,1,HEXSAVE                                              05462
         LA    1,&FROM                                                   05463
         LA    0,&LEN                                                    05464
         LA    15,&TO                                                    05465
         BAL   4,HEX                                                     05466
         L     R4,SAV4HEX                                                05467
         LM    15,1,HEXSAVE                                              05468
         MEND                                                            05469
         SPACE                                                           05470
**************************************************************           05471
         GBLC  &LLEV                                                     05472
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05473
         GBLA  &HEXDFLA                                                  05474
&LLEV    SETC  '1.5 '                                                    05475
         YREGS                                                           05476
* ------------------------------------------------------------------ *   05477
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05478
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05479
* ------------------------------------------------------------------ *   05480
         ENTRY CARDREAD                                                  05481
         ENTRY PARMCHEK                                                  05482
&HEXDFLA SETA  4                                                         05483
&HEXDFLC SETC  '&HEXDFLA'                                                05484
PARMCHEK CSECT                                                           05485
         USING *,R15                                                     05486
         B     EYECATCH                                                  05487
         DC    C'HEX DUMP '                                              05488
HEXDFLCC DC    C'&HEXDFLC'                                               05489
         DC    C' RECORDS '                                              05490
HEXDFLL  EQU   L'HEXDFLCC                                                05491
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05492
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05493
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05494
         DC    C' - '                                                    05495
         DC    C'PARM INPUT IN SYSIN '                                   05496
         DC    C' - '                                                    05497
         DC    C'LEVEL '                                                 05498
SYSLEV   DC    C'&LLEV'                                                  05499
         DC    C' - '                                                    05500
SYSDAT   DC    C'&SYSDATE'                                               05501
         DC    C'  ',C'&SYSTIME ',C'--- '                                05502
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05503
SAVEAREA DC    18F'0'                                                    05504
EYECATCH DS    0D             ENSURE ALIGNMENT                           05505
         SAVE  (14,12)                                                   05506
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05507
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05508
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05509
         LR    R13,R1               NEW SAVE AREA ADDRESS                05510
         DROP  R15                                                       05511
* -----                       SET UP BASE REGISTERS                      05512
         USING PARMCHEK,R12,R11,R10                                      05513
         LR    R12,R15                                                   05514
         LA    R11,4095(,R12)                                            05515
         LA    R11,1(,R11)                                               05516
         LA    R10,4095(,R11)                                            05517
         LA    R10,1(,R10)                                               05518
*                                                                        05519
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05520
*                                                                        05521
         LR    R6,R2          SAVE USER AREA POINTER                     05522
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05523
         LR    R1,R6          RESTORE PARM POINTER                       05524
         ST    R1,PARMSAVE                                               05525
* ----------------------------------------------------------------- *    05526
TIOTSCAN DS    0H             Determine the presence of Optional         05527
*                             DDNAMES:  SYSIN AND PARMREPT.              05528
* ----->                      OPEN them if there is JCL for them.        05529
* ----------------------------------------------------------------- *    05530
         L     R5,16          R5=CVT                                     05531
         L     R5,0(,R5)      R5=TCB WORDS                               05532
         L     R5,4(,R5)      R5=MY TCB                                  05533
         L     R5,12(,R5)     R5=TIOT                                    05534
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05535
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05536
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05537
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05538
         BNE   TIOTSYSN       NO                                         05539
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05540
         B     TIOTNEXT       CONTINUE                                   05541
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05542
         BNE   TIOTNEXT                                                  05543
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05544
         B     TIOTNEXT                                                  05545
TIOTNEXT SR    R3,R3                                                     05546
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05547
         AR    R5,R3          R5=NEXT DD ENTRY                           05548
         B     TIOTLOOP       GO CHECK IT                                05549
TIOTSEND DS    0H                                                        05550
***********************************************************************  05551
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05552
***********************************************************************  05553
         STM   R14,R2,SAVE1402                                           05554
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05555
         OI    DATE+4,X'0F'                                              05556
         UNPK  DATED,DATE                                                05557
         OI    TIME+3,X'0F'                                              05558
         UNPK  TIMED,TIME                                                05559
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05560
         MVC   HEADDATE(2),DATED                                         05561
         MVI   HEADDATE+2,C'/'                                           05562
         MVC   HEADDATE+3(2),DATED+2                                     05563
         MVI   HEADDATE+5,C'/'                                           05564
         MVC   HEADDATE+6(4),DATED+4                                     05565
         MVC   HEADDATE+12(2),TIMED                                      05566
         MVI   HEADDATE+14,C':'                                          05567
         MVC   HEADDATE+15(2),TIMED+2                                    05568
         MVI   HEADDATE+17,C':'                                          05569
         MVC   HEADDATE+18(2),TIMED+4                                    05570
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05571
         LM    R14,R2,SAVE1402                                           05572
***********************************************************************  05573
         MVC   LEVDATE(8),SYSDAT                                         05574
***********************************************************************  05575
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05576
* ----------------------------------------------------------------- *    05577
INITCONS DS    0H                                                        05578
         ZAP   TOTMLCNT,=P'0'                                            05579
* ----------------------------------------------------------------- *    05580
CHEKPRNT DS    0H                                                        05581
         TM    FLAGSYST,X'01'                                            05582
         BZ    CHEKPREN                                                  05583
         OPEN  (PARMREPT,OUTPUT)                                         05584
         OI    OPENDFLG,X'01'                                            05585
         MVC   PRTLINE,PRTLINE-1                                         05586
         MVC   PRTLINE,MESSAGE1                                          05587
         PUT   PARMREPT,MESSAGE1                                         05588
         MVC   PRTLINE,PRTLINE-1                                         05589
         PUT   PARMREPT,PRTLINE                                          05590
CHEKPREN DS    0H                                                        05591
* ----------------------------------------------------------------- *    05592
* --------------------------------------------------------- *            05593
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05594
*                         PRESENCE OR ABSENCE.                           05595
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05596
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05597
         L     R1,0(,R1)      Get PARM field                             05598
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05599
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05600
         MVC   SAVMSLEN,PARMSLEN                                         05601
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05602
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05603
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05604
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05605
* -----------------------------------------------------------            05606
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05607
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05608
* -----------------------------------------------------------            05609
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05610
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05611
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05612
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05613
         BO    PARMDSET       YES, GO SET IT.                            05614
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05615
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05616
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05617
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05618
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05619
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05620
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05621
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05622
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05623
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05624
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05625
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05626
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05627
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05628
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05629
* ----------------------------------------------------------------- *    05630
SCANPARM DS    0H                                                        05631
         ST    R7,SAVE7BA0                                               05632
         ZAP   PARMLCNT,=P'0'                                            05633
         ZAP   PARMHITS,=P'0'                                            05634
         MVC   PARMSLEN,SAVMSLEN                                         05635
         BAL   R7,PARMLOOP      Now check the PARM field                 05636
         MVC   SAVPHITS,PARMHITS                                         05637
         MVC   SAVCHRCT,PRMCHRCT                                         05638
         MVC   SAVELCNT,PARMLCNT                                         05639
         AP    TOTMHITS,PARMHITS                                         05640
         AP    TOTMLCNT,PARMLCNT                                         05641
         L     R7,SAVE7BA0                                               05642
* ----------------------------------------------------------------- *    05643
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05644
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05645
         OPEN  (SYSIN,INPUT)                                             05646
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05647
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05648
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05649
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05650
NOSYSIN  DS    0H                                                        05651
         B     CARDREND                                                  05652
OPNSYSNE DS    0H                                                        05653
* ----------------------------------------------------------------- *    05654
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05655
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05656
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05657
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05658
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05659
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05660
*              Insert User Code Here for Keywords                        05661
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05662
         GET   SYSIN,CARDIN                                              05663
*                                                                        05664
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05665
* -- >>              <--    before you start the table scan       -->    05666
*                                                                        05667
         CLC   =C'OUTVOLALL=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05668
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05669
         CLC   =C'TAPEOWNER=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05670
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05671
         CLC   =C'FILELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05672
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05673
         CLC   =C'LABELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05674
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05675
         CLC   =C'PRINTRCDS=',CARDIN    KEYWORD PRESENT IN THIS CARD?    05676
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05677
         CLC   =C'/*',CARDIN                                             05678
         BE    SYSINEND                                                  05679
*                                                                        05680
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05681
* ----         Resume Checking SYSIN in PARM Table                       05682
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05683
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05684
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05685
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05686
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05687
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05688
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05689
         L     R1,TOTCHRCT                                               05690
         A     R1,PRMCHRCT                                               05691
         ST    R1,TOTCHRCT                                               05692
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05693
         ZAP   PARMHITS,=P'0'                                            05694
         ZAP   PARMLCNT,=P'0'                                            05695
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05696
         AP    TOTMHITS,PARMHITS                                         05697
         AP    TOTMLCNT,PARMLCNT                                         05698
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05699
         B     CARDREAD        GET ANOTHER CARD                          05700
* ----                                                                   05701
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05702
*              Handle User Code Here for Keywords                        05703
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05704
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05705
         BE    CARDREAD                 YES. IGNORE CARD                 05706
         MVC   VOLSTG1(6),CARDIN+10                                      05707
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05708
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05709
         B     CARDREAD          GET ANOTHER CARD                        05710
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05711
         BE    CARDREAD                 YES. IGNORE CARD                 05712
         MVC   TAPEOWN(10),CARDIN+10                                     05713
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05714
         B     CARDREAD                                                  05715
FILELGET DS    0H                                                        05716
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05717
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05718
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05719
         BL    CARDREAD          YES. IGNORE.                            05720
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05721
         BH    CARDREAD          YES. IGNORE.                            05722
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05723
         LA    R15,CARDIN+10     STARTING ADDRESS                        05724
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05725
FILELNUM DS    0H                                                        05726
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05727
         C     R15,=A(CARDIN+71) END OF CARD?                            05728
         BH    FILELGNM          YES, GET NUMBER                         05729
         CLI   0(R15),C' '       BLANK HERE?                             05730
         BE    FILELGNM          YES, GET NUMBER                         05731
         B     FILELNUM          NO. STEP UP ONE PLACE                   05732
FILELGNM DS    0H                                                        05733
         SR    R15,R1            HOW BIG IS THE NUMBER                   05734
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05735
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05736
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05737
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05738
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05739
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05740
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05741
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05742
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05743
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05744
FILELCLG DS    0H                                                        05745
         B     CARDREAD                                                  05746
LABELGET DS    0H                                                        05747
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05748
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05749
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05750
         BL    CARDREAD          YES. IGNORE.                            05751
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05752
         BH    CARDREAD          YES. IGNORE.                            05753
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05754
         LA    R15,CARDIN+10     STARTING ADDRESS                        05755
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05756
LABELNUM DS    0H                                                        05757
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05758
         C     R15,=A(CARDIN+71) END OF CARD?                            05759
         BH    LABELGNM          YES, GET NUMBER                         05760
         CLI   0(R15),C' '       BLANK HERE?                             05761
         BE    LABELGNM          YES, GET NUMBER                         05762
         B     LABELNUM          NO. STEP UP ONE PLACE                   05763
LABELGNM DS    0H                                                        05764
         SR    R15,R1            HOW BIG IS THE NUMBER                   05765
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05766
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05767
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05768
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05769
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05770
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05771
LABELCLG DS    0H                                                        05772
         B     CARDREAD                                                  05773
PRINTGET DS    0H                                                        05774
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05775
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05776
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05777
         BL    CARDREAD          YES. IGNORE.                            05778
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05779
         BH    CARDREAD          YES. IGNORE.                            05780
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05781
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05782
         LA    R15,CARDIN+10     STARTING ADDRESS                        05783
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05784
PRINTNUM DS    0H                                                        05785
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05786
         C     R15,=A(CARDIN+71) END OF CARD?                            05787
         BH    PRINTGNM          YES, GET NUMBER                         05788
         CLI   0(R15),C' '       BLANK HERE?                             05789
         BE    PRINTGNM          YES, GET NUMBER                         05790
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05791
PRINTGNM DS    0H                                                        05792
         SR    R15,R1            HOW BIG IS THE NUMBER                   05793
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05794
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05795
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05796
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05797
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05798
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05799
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05800
PRINTCLG DS    0H                                                        05801
         B     CARDREAD                                                  05802
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05803
*              End of User Code Here for Keywords                        05804
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05805
CHECKEND DS    0H                                                        05806
* -----------------------------------------------------------            05807
SYSINEND DS    0H                                                        05808
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05809
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05810
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05811
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05812
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05813
         L     R1,TOTCHRCT                                               05814
         A     R1,PRMCHRCT         Final totals for last card            05815
         ST    R1,TOTCHRCT                                               05816
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05817
         CLOSE (SYSIN)                                                   05818
         B     CARDREND                                                  05819
CARNOSYS DS    0H                                                        05820
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05821
CARDREND DS    0H                                                        05822
         BAL   R7,SUMMREPT                                               05823
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05824
         BZ    PARMRPEN         NO.  GET OUT.                            05825
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05826
         CLOSE (PARMREPT)                                                05827
PARMRPEN DS    0H                                                        05828
THEEND   DS    0H                                                        05829
         L     R13,4(,R13)                                               05830
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05831
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05832
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05833
         LM    R14,R12,12(R13)                                           05834
         BR    R14                                                       05835
* -----------------------------------------------------------            05836
*        S U B R O U T I N E S                                           05837
* -----------------------------------------------------------            05838
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05839
* -----------------------------------------------------------            05840
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05841
         BNL   PARMFIN        YES - GET OUT                              05842
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05843
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05844
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05845
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05846
*        ------------------------------------------------------------    05847
*--->                    code to require a delimiter (space, etc)        05848
*                        to enable, comment out the next instruction     05849
*        ------------------------------------------------------------    05850
         B     PRMNODLM         comment this line to require delimiter   05851
         TM    PRMFDFLG,X'01'                                            05852
         BO    PRMNFND                                                   05853
PRMNODLM DS    0H                                                        05854
*--->                                                                    05855
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05856
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05857
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05858
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05859
*                                                                        05860
*   If you want to require parm comparisons as case sensitive,           05861
*    then comment out the following instruction....                      05862
*                                                                        05863
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05864
*                                                                        05865
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05866
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05867
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05868
         B     BOPPTBL        INNER LOOP                                 05869
*                                                                        05870
PRMNFND  DS    0H                                                        05871
*--->                 below - Parm Found flagging to require delimiter   05872
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05873
         BE    PRMFDOFF                                                  05874
         CLI   0(R4),C','                                                05875
         BE    PRMFDOFF                                                  05876
         B     PRMFDEND                                                  05877
PRMFDOFF DS    0H                                                        05878
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05879
PRMFDEND DS    0H                                                        05880
*--->                 above - Parm Found flagging to require delimiter   05881
*                                                                        05882
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05883
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05884
*                                                                        05885
         B     PARMLOOP       TRY AGAIN                                  05886
*                                                                        05887
PRMFOUND DS    0H                                                        05888
*                                                                        05889
*--->                 below - Parm Found flagging to require delimiter   05890
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05891
*--->                 above - Parm Found flagging to require delimiter   05892
PRMNOSEP DS    0H                                                        05893
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05894
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05895
         TM    1(R2),X'01'         PARM ON OR OFF?                       05896
         BO    PARMOFF             OFF                                   05897
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05898
         B     PARMGO                        AND GO ON                   05899
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05900
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05901
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05902
PARMGO   DS    0H                                                        05903
         XR    R5,R5          Clear Work Reg befor IC                    05904
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05905
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05906
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05907
         B     PARMLOOP       LOOK FOR MORE PARMS                        05908
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05909
*                             COUNT FOR DEBUGGING                        05910
PRMCHEND DS    0H                                                        05911
         BR    R7                                                        05912
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05913
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05914
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05915
* --------------------------------------------------------- *            05916
SUMMREPT DS    0H                  Print details of PARMREPT             05917
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05918
         BZ    SUMMREND            No. Bypass this routine.              05919
         MVC   PRTLINE,PRTLINE-1                                         05920
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05921
         HEX   PRTLINE+27,1,PARMFLG1                                     05922
         HEX   PRTLINE+30,1,PARMFLG2                                     05923
         HEX   PRTLINE+33,1,PARMFLG3                                     05924
         HEX   PRTLINE+36,1,PARMFLG4                                     05925
         HEX   PRTLINE+39,1,PARMFLG5                                     05926
         HEX   PRTLINE+42,1,PARMFLG6                                     05927
         HEX   PRTLINE+45,1,PARMFLG7                                     05928
         HEX   PRTLINE+48,1,PARMFLG8                                     05929
         HEX   PRTLINE+51,1,PARMFLG9                                     05930
         HEX   PRTLINE+54,1,PARMFLGA                                     05931
         PUT   PARMREPT,PRTLINE                                          05932
         MVC   PRTLINE,PRTLINE-1                                         05933
         PUT   PARMREPT,PRTLINE                                          05934
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05935
         MVC   PRTLINE+4(12),=C'User Area : '                            05936
         HEX   PRTLINE+16,48,STRTVALU                                    05937
         PUT   PARMREPT,PRTLINE                                          05938
         MVC   PRTLINE,PRTLINE-1                                         05939
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05940
         HEX   PRTLINE+16,48,STRTVALU+48                                 05941
         PUT   PARMREPT,PRTLINE                                          05942
         MVC   PRTLINE,PRTLINE-1                                         05943
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05944
         HEX   PRTLINE+16,48,STRTVALU+96                                 05945
         PUT   PARMREPT,PRTLINE                                          05946
         MVC   PRTLINE,PRTLINE-1                                         05947
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05948
         HEX   PRTLINE+16,20,STRTVALU+144                                05949
         PUT   PARMREPT,PRTLINE                                          05950
         MVC   PRTLINE,PRTLINE-1                                         05951
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05952
         HEX   PRTLINE+30,4,STRTVALU                                     05953
         MVC   PRTLINE+42(6),=C'Hex   '                                  05954
         PUT   PARMREPT,PRTLINE                                          05955
         MVC   PRTLINE,PRTLINE-1                                         05956
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05957
         HEX   PRTLINE+30,4,PARMSLEN                                     05958
         MVC   PRTLINE+42(6),=C'Hex   '                                  05959
         PUT   PARMREPT,PRTLINE                                          05960
         MVC   PRTLINE,PRTLINE-1                                         05961
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05962
         HEX   PRTLINE+30,4,SAVMSLEN                                     05963
         MVC   PRTLINE+42(6),=C'Hex   '                                  05964
         PUT   PARMREPT,PRTLINE                                          05965
         MVC   PRTLINE,PRTLINE-1                                         05966
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05967
         HEX   PRTLINE+30,4,PARMSTRT                                     05968
         MVC   PRTLINE+42(6),=C'Hex   '                                  05969
         PUT   PARMREPT,PRTLINE                                          05970
         MVC   PRTLINE,PRTLINE-1                                         05971
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05972
         HEX   PRTLINE+30,4,PRMCHRCT                                     05973
         MVC   PRTLINE+42(6),=C'Hex   '                                  05974
         PUT   PARMREPT,PRTLINE                                          05975
         MVC   PRTLINE,PRTLINE-1                                         05976
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05977
         HEX   PRTLINE+30,4,SAVCHRCT                                     05978
         MVC   PRTLINE+42(6),=C'Hex   '                                  05979
         PUT   PARMREPT,PRTLINE                                          05980
         MVC   PRTLINE,PRTLINE-1                                         05981
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05982
         HEX   PRTLINE+30,4,TOTCHRCT                                     05983
         MVC   PRTLINE+42(6),=C'Hex   '                                  05984
         PUT   PARMREPT,PRTLINE                                          05985
         MVC   PRTLINE,PRTLINE-1                                         05986
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05987
         HEX   PRTLINE+30,4,SAVPHITS                                     05988
         MVC   PRTLINE+42(6),=C'Packed'                                  05989
         PUT   PARMREPT,PRTLINE                                          05990
         MVC   PRTLINE,PRTLINE-1                                         05991
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05992
         HEX   PRTLINE+30,4,PARMHITS                                     05993
         MVC   PRTLINE+42(6),=C'Packed'                                  05994
         PUT   PARMREPT,PRTLINE                                          05995
         MVC   PRTLINE,PRTLINE-1                                         05996
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05997
         HEX   PRTLINE+30,4,TOTMHITS                                     05998
         MVC   PRTLINE+42(6),=C'Packed'                                  05999
         PUT   PARMREPT,PRTLINE                                          06000
         MVC   PRTLINE,PRTLINE-1                                         06001
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  06002
         HEX   PRTLINE+30,4,SAVELCNT                                     06003
         MVC   PRTLINE+42(6),=C'Packed'                                  06004
         PUT   PARMREPT,PRTLINE                                          06005
         MVC   PRTLINE,PRTLINE-1                                         06006
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  06007
         HEX   PRTLINE+30,4,PARMLCNT                                     06008
         MVC   PRTLINE+42(6),=C'Packed'                                  06009
         PUT   PARMREPT,PRTLINE                                          06010
         MVC   PRTLINE,PRTLINE-1                                         06011
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  06012
         HEX   PRTLINE+30,4,TOTMLCNT                                     06013
         MVC   PRTLINE+42(6),=C'Packed'                                  06014
         PUT   PARMREPT,PRTLINE                                          06015
         MVC   PRTLINE,PRTLINE-1                                         06016
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  06017
         HEX   PRTLINE+30,20,PARMTENT                                    06018
         PUT   PARMREPT,PRTLINE                                          06019
SUMMREND DS    0H                                                        06020
         BR    R7                                                        06021
* --------------------------------------------------------- *            06022
* --------------------------------------------------------- *            06023
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    06024
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    06025
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    06026
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    06027
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    06028
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    06029
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    06030
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    06031
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    06032
         EJECT                                                           06033
* --------------------------------------------------------- *            06034
WORKA    DC    D'0'                                                      06035
WORKL    DC    D'0'                                                      06036
WORKP    DC    D'0'                                                      06037
PL4NO3   DC    PL4'3'                                                    06038
FF       EQU   X'FF'                                                     06039
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06040
         DC    C' IS TREATED AS NL.                                   '  06041
         DC    CL27' '                                                   06042
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06043
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  06044
         DC    CL27' '                                                   06045
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  06046
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  06047
         DC    CL27' '                                                   06048
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 06049
         DC    CL6'&HEXDFLM'                                             06050
         DC    C' RECORDS WILL'                                          06051
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  06052
         DC    C'SYSIN.'                                                 06053
         DC    CL17' '                                                   06054
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     06055
* --------------------------------------------------------- *            06056
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                06057
PARMFLG1 DC    X'00'                                                     06058
PARMFLG2 DC    X'00'                                                     06059
PARMFLG3 DC    X'00'                                                     06060
PARMFLG4 DC    X'00'                                                     06061
PARMFLG5 DC    X'00'                                                     06062
PARMFLG6 DC    X'00'                                                     06063
PARMFLG7 DC    X'00'                                                     06064
PARMFLG8 DC    X'00'                                                     06065
PARMFLG9 DC    X'00'                                                     06066
PARMFLGA DC    X'00'                                                     06067
* --------------------------------------------------------- *            06068
         DS    0F                                                        06069
STRTVALU DS    0CL(ENDVALUE)                                             06070
         DC    A(ENDVALUE)                                               06071
PARMSLEN DC    F'0'                LENGTH OF PARMS                       06072
*                                  Upon entry, this field contains       06073
*                                  the PARM address from COPYMODS,       06074
*                                  which gets overlaid by PARMCHEK.      06075
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       06076
*                                  Upon entry, this field contains       06077
*                                  the PARM address from COPYMODS,       06078
*                                  which gets overlaid by PARMCHEK.      06079
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               06080
*                                  Upon entry, this field contains       06081
*                                  the PARM length from COPYMODS,        06082
*                                  which gets overlaid by PARMCHEK.      06083
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06084
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06085
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06086
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   06087
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06088
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06089
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06090
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06091
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06092
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 06093
         DC    CL7' '              FILLER                                06094
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            06095
*  -----    User Stuff                                                   06096
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          06097
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  06098
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      06099
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         06100
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         06101
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         06102
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       06103
TAPEOWN  DC    CL10' '                                                   06104
TAPEOEXT DC    CL4' '                                                    06105
OVERFLAG DC    X'00'                                                     06106
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               06107
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    06108
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         06109
LIMCHAR  DC    CL10' '                                                   06110
LABCHAR  DC    CL10' '                                                   06111
PRTCHAR  DC    CL10' '                                                   06112
ENDVALUE EQU   (*-PARMSLEN)+4                                            06113
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     06114
* --------------------------------------------------------- *            06115
*              FORMAT OF PARM TABLE                                      06116
*              ONE ENTRY IS 20 BYTES                                     06117
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               06118
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 06119
*                               X'00' SAYS TURN FLAG ON                  06120
*                               X'10' SET ENTRY AS A DEFAULT             06121
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               06122
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                06123
*                                WHICH ALLOWS FOR 80 PARMS               06124
*                                THAT DON'T HAVE TO BE                   06125
*                                SEPARATED BY A COMMA.                   06126
PBYTES   EQU   10               Number of bytes of parm switches         06127
PTELEN   EQU   20               Length of each table entry               06128
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  06129
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   06130
* --------------------------------------------------------- *            06131
PARMTABL CSECT                                                           06132
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           06133
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           06134
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           06135
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           06136
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           06137
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           06138
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           06139
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           06140
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           06141
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           06142
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           06143
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           06144
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           06145
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           06146
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           06147
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           06148
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           06149
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           06150
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           06151
         DC    X'04',X'00',C'EOV2    ',X'80000000000000000000'           06152
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           06153
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           06154
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           06155
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           06156
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           06157
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           06158
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           06159
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           06160
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           06161
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           06162
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           06163
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           06164
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           06165
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           06166
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           06167
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           06168
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           06169
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           06170
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           06171
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           06172
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           06173
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           06174
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           06175
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           06176
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           06177
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           06178
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           06179
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           06180
         DC    X'08',X'00',C'NOOUTVOL',X'00400000000000000000'           06181
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           06182
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           06183
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           06184
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           06185
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           06186
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           06187
         DC    X'08',X'00',C'CORRBLKS',X'00002000000000000000'           06188
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           06189
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           06190
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           06191
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           06192
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           06193
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           06194
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           06195
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           06196
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           06197
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           06198
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           06199
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           06200
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           06201
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           06202
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           06203
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           06204
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           06205
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           06206
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           06207
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           06208
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           06209
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           06210
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           06211
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           06212
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           06213
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           06214
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           06215
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           06216
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           06217
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           06218
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           06219
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           06220
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           06221
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           06222
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           06223
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           06224
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           06225
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           06226
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           06227
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           06228
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           06229
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           06230
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           06231
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           06232
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           06233
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           06234
         DC    X'FFFFFFFFFFFFFFFF'                                       06235
* --------------------------------------------------------- *            06236
PARMCHEK CSECT                                                           06237
         SPACE 3                                                         06238
         LTORG                                                           06239
         SPACE 3                                                         06240
         DS    0D                                                        06241
* --------------------------------------------------------- *            06242
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 06243
               COPYMODS LVL-067'                                         06244
* --------------------------------------------------------- *            06245
         SPACE 3                                                         06246
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 06247
               EODAD=SYSINEND                                            06248
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     06249
* --------------------------------------------------------- *            06250
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06251
HEX      DS    0H                                                        06252
         MVC   1(1,R15),0(R1)        Move byte                           06253
         UNPK  0(3,R15),1(2,R15)     Unpack                              06254
         TR    0(2,R15),HEXTAB-240                                       06255
         LA    R15,2(,R15)           Increment output pointer            06256
         LA    R1,1(,R1)             Increment input pointer             06257
         BCT   R0,HEX                Decrement length, then loop         06258
         MVI   0(R15),C' '           Blank the trailing byte             06259
         BR    R4                    Return to caller                    06260
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     06261
         SPACE                                                           06262
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06263
HEXSAVE  DS    3F                    Register save for HEX macro         06264
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06265
* --------------------------------------------------------- *            06266
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             06267
*              X'01'          PARMREPT DD IS PRESENT                     06268
*              X'02'          SYSIN    DD IS PRESENT                     06269
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06270
*              X'01'          PARMREPT DD IS OPEN                        06271
*              X'02'          SYSIN    DD IS OPEN                        06272
* --------------------------------------------------------- *            06273
         SPACE 3                                                         06274
PARMSAVE DC    F'0'                                                      06275
SAV4HEX  DC    F'0'                                                      06276
SAVE2TO3 DC    2F'0'                                                     06277
SAVE3REG DC    F'0'                                                      06278
SAVE7BA0 DC    F'0'                                                      06279
SAVE7BA1 DC    F'0'                                                      06280
PARMWORK DC    CL8' '                                                    06281
UPCASEOR DC    CL8' '                                                    06282
         DC    CL4' '                                                    06283
*    ------------------------ >   Constants for Date and Time - below    06284
SAVE1402 DS    6F                 Extra fullword for safety              06285
TIMED    DS    CL7                                                       06286
DATED    DS    CL9                                                       06287
DATETIME DS    4F                                                        06288
         ORG   DATETIME                                                  06289
TIME     DS    CL4                                                       06290
         DS    CL4                                                       06291
DATE     DS    CL5                                                       06292
         DS    CL3                                                       06293
HEADDLIT DS    0CL31              Literal for headings - date and time   06294
         DC    CL6'Today:'                                               06295
         DC    CL2' '                                                    06296
HEADDATE DC    CL23' '                                                   06297
LEVELLIT DS    0CL21              Level number display for headings      06298
         DC    CL6'Level '                                               06299
LEVELL   DC    CL4'&LLEV'                                                06300
         DC    CL2' ('                                                   06301
LEVDATE  DC    CL8' '             Assembly date for this program         06302
         DC    CL1')'                                                    06303
*    ------------------------ >   Constants for Date and Time - above    06304
*    --------------- >            Output line buffers - below            06305
PRMFDFLG DC    X'00'              Parm Found Flag                        06306
*              X'01'              Parm has been found in this record     06307
         DC    CL3' '                                                    06308
         DC    C' '                                                      06309
LINE     DC    CL133' '                                                  06310
         DC    C' '                                                      06311
CNTLINE  DC    CL133' '                                                  06312
         DC    C' '                                                      06313
OUTLINE  DC    CL133' '                                                  06314
         DC    C' '                                                      06315
PRTLINE  DC    CL133' '                                                  06316
         DC    CL80' '            Padding                                06317
*    --------------- >            Output line buffers - above            06318
*                                                                        06319
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  06320
         END                                                             06321
