*          DATA SET CBT990     AT LEVEL 085 AS OF 05/22/12              00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                00002
**************************************************************          00003
**************************************************************          00004
**                                                          **          00005
**                                                          **          00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **          00007
**                                                          **          00008
**           Extensively revised by Sam Golob.              **          00009
**                                                          **          00010
**      (See the documentation in the code, below.)         **          00011
**                                                          **          00012
**  ======================================================  **          00013
**                                                          **          00014
**  Important Note - ALL TAPE DD NAMES MUST HAVE LABEL=BLP  **          00015
**  --------- ----       ---- -- -----           ---------  **          00016
**                                                          **          00017
**      When you are running this program, the DD names     **          00018
**      in the JCL, for //IN and //OUTnn must specify       **          00019
**      LABEL=(1,BLP,EXPDT=98000).  It is essential to      **          00020
**      specify BLP in these DD names, so that all the      **          00021
**      tape labels are treated as plain data, and are      **          00022
**      ignored by the MVS system.  COPYMODS manipulates    **          00023
**      parts of the tape labels, and it copies many tape   **          00024
**      labels as though they were data, so it needs to     **          00025
**      keep its own control of the contents of all the     **          00026
**      tape labels, in all the tapes.                      **          00027
**                                                          **          00028
**      Example:  If you do not specify LABEL=(1,BLP) for   **          00029
**      an output tape, then the following error will       **          00030
**      occur.  The system will skip over the output        **          00031
**      tape's initial labels, and COPYMODS will start      **          00032
**      writing its output from a read point, starting      **          00033
**      past these labels.  So COPYMODS will write the      **          00034
**      input tape's volume label and headers AFTER the     **          00035
**      output tape's volume label and headers.  You will   **          00036
**      get both sets of VOL1 labels and header labels in   **          00037
**      the output tape, which is a serious error.          **          00038
**                                                          **          00039
**      Other errors will occur if LABEL=BLP is not         **          00040
**      specified for the input tape.                       **          00041
**                                                          **          00042
**      This program "officially" runs non-APF authorized.  **          00043
**      But BLP has to be YES for the jobclass under which  **          00044
**      the job is run.  It is possible to make a program   **          00045
**      "force BLP" from within, but that would require     **          00046
**      APF authorization.                                  **          00047
**                                                          **          00048
**  ** ================================================ **  **          00049
**  **  Defaults have purposely been left, so the       **  **          00050
**  **  output will resemble that of the original       **  **          00051
**  **  program version.  And all of your original JCL  **  **          00052
**  **  will still work.  However the list of "options  **  **          00053
**  **  in effect" will be printed in //SYSPRINT by     **  **          00054
**  **  default.  It will give you an idea about what   **  **          00055
**  **  kind of things are really possible to do,       **  **          00056
**  **  using this program.  IBM SL, and ASCII SL,      **  **          00057
**  **  are extensively supported.  So are 64K blocks.  **  **          00058
**  ** ================================================ **  **          00059
**  **  Options in COPYMODS may be coded in the PARM    **  **          00060
**  **  of the EXEC card or, more conveniently, in      **  **          00061
**  **  a separate //SYSIN DD card, which is automati-  **  **          00062
**  **  cally recognized if it is present in the JCL.   **  **          00063
**  ** ================================================ **  **          00064
**  **  Assembly time defaults can be changed by        **  **          00065
**  **  altering the (extremely flexible) PARMTABL.     **  **          00066
**  ** ================================================ **  **          00067
**                                                          **          00068
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **          00069
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **          00070
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **          00071
**                                                          **          00072
**     This has been revised, with the many new functions   **          00073
**     that have been added to COPYMODS.  Besides copying   **          00074
**     tapes, COPYMODS can read and measure tapes, as well  **          00075
**     as altering the copied tapes in many ways, such as   **          00076
**     stripping the labels or leading tape marks off.      **          00077
**     The VOLSER and OWNER can be altered in the copied    **          00078
**     tapes, and all labels can also be altered, through   **          00079
**     a process of dumping the labels to a FB-80 file      **          00080
**     (LABLDUMP option), editing the labels, stripping     **          00081
**     the labels in a copy operation (STRIP option), and   **          00082
**     splicing all the labels back in another copy         **          00083
**     operation (LABADDIN option).  COPYMODS can also      **          00084
**     INIT tapes, as many as 16 at a time.  No input tape  **          00085
**     is needed for an INIT operation (INITVOLS option).   **          00086
**                                                          **          00087
**     To see all the COPYMODS options, look at label       **          00088
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **          00089
**     parms for SYSIN, see the code a few lines after the  **          00090
**     label CARDREAD in the PARMCHEK CSECT.                **          00091
**                                                          **          00092
**     The different COPYMODS parms or options can be used  **          00093
**     in combination with each other, as long as they      **          00094
**     don't contradict each other.  In certain cases, the  **          00095
**     use of one option will cause the automatic turn-off  **          00096
**     of one or more other options that contradict with    **          00097
**     it.  This "adjustment" is done by the COPYMODS       **          00098
**     program just after it receives the options settings  **          00099
**     back from the PARMCHEK program.  For example, if     **          00100
**     both LABLDUMP and LABADDIN (which contradict each    **          00101
**     other) are set, COPYMODS will make a judgment that   **          00102
**     LABADDIN takes precedence, so it will turn off both  **          00103
**     the LABLDUMP and READ (read only) options.  On the   **          00104
**     other hand, the STRIP and LABLDUMP options do not    **          00105
**     contradict each other.  So in that case, when STRIP  **          00106
**     and LABLDUMP are both set, COPYMODS will dump all    **          00107
**     the labels from the input tape to the LABLDUMP file, **          00108
**     while at the same time, it will strip them from the  **          00109
**     tape copies.  To get the exact effect you want from  **          00110
**     a COPYMODS run, just be very careful to code the     **          00111
**     correct combination of options.  Look at the OPTIONS **          00112
**     report before you mount the tapes.  (The OPTIONS     **          00113
**     report in //SYSPRINT will be complete before the     **          00114
**     tapes are mounted.)  To see the exact effect of      **          00115
**     the COPYMODS option correction, code the CODEDPRM    **          00116
**     option to obtain a comparison report of the options  **          00117
**     before COPYMODS correction has been done.            **          00118
**                                                          **          00119
**     Up to 132 bytes of the beginning n records of each   **          00120
**     tape file can be dumped in Hex, similarly to the     **          00121
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **          00122
**     tion of the printables in this hex dump can be       **          00123
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **          00124
**     are COPYMODS PARM or SYSIN keywords also.            **          00125
**                                                          **          00126
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **          00127
**     has been added.  COPYMODS can init ASCII tapes       **          00128
**     with the INASC3 and INASC4 keywords.  Additionally,  **          00129
**     the other functions of COPYMODS such as LABLDUMP,    **          00130
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **          00131
**     option with the ASCII keyword allows you to print    **          00132
**     tape records in hex, with an ASCII interpretation    **          00133
**     of the printables.  EOV2EOF works for ASCII tapes.   **          00134
**                                                          **          00135
**     COPYMODS will automatically read past any number     **          00136
**     of leading tape marks on a tape, and will copy       **          00137
**     any real data that is after them.  The leading       **          00138
**     tape marks can be included in the copied tapes       **          00139
**     (option LTMCOPY - default) or they can be skipped    **          00140
**     from the copied tapes and left off, so the real      **          00141
**     data will be at the beginning of the copied tapes    **          00142
**     (option LTMSKIP).                                    **          00143
**                                                          **          00144
**     See the "New Features" section below for some more   **          00145
**     details.  See the #MANUAL member of the install pds  **          00146
**     (CBT Tape File 229) for even more details.           **          00147
**                                                          **          00148
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **          00149
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **          00150
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **          00151
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **          00152
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **          00153
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **          00154
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **          00155
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **          00156
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **          00157
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **          00158
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **          00159
**    PARTICULAR OUTPUT TAPE.                               **          00160
**                                                          **          00161
**    Any output DD names from //OUT1 thru //OUT16 may be   **          00162
**    coded in the execution JCL for COPYMODS, so that up   **          00163
**    to 16 output tapes may be created.  But, if none      **          00164
**    of these DD names is present, COPYMODS will force     **          00165
**    PARM=READ automatically, and it will issue a          **          00166
**    special message to //SYSPRINT saying that it did so.  **          00167
**                                                          **          00168
**  COPYMODS has some optional DD's which will be used      **          00169
**    if they are present.  These following DD's are used   **          00170
**    by the PARMCHEK program, when COPYMODS is executed.   **          00171
**                                                          **          00172
**  //SYSIN    - Extra space to enter PARM keywords.        **          00173
**               Also, the only place to enter the          **          00174
**               "quantity" keywords, which start in        **          00175
**               column 1 of a SYSIN card.                  **          00176
**                                                          **          00177
**         OUTVOLALL=volser      (up to 6 characters)       **          00178
**         TAPEOWNER=owner name  (up to 10 characters)      **          00179
**         FILELIMIT=nnn         (numeric)                  **          00180
**         LABELIMIT=nnn         (numeric)                  **          00181
**         PRINTRCDS=nnn         (numeric)                  **          00182
**                                                          **          00183
**  //PARMREPT - Diagnostic output from the PARMCHEK        **          00184
**               program.  LRECL=133,RECFM=FBA.             **          00185
**                                                          **          00186
**    In addition, the COPYMODS program itself has some     **          00187
**    extra DD's, which are required if the appropriate     **          00188
**    options are set:                                      **          00189
**                                                          **          00190
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **          00191
**               receive the images of all tape labels      **          00192
**               read, together with some control cards     **          00193
**               that COPYMODS generates.  This DD name     **          00194
**               is necessary if the LABLDUMP option is     **          00195
**               in effect.                                 **          00196
**                                                          **          00197
**  //LABADDIN - An FB-80 file, or member of a pds, which   **          00198
**               contains the set of labels to be spliced   **          00199
**               into an NL tape to create an SL tape.      **          00200
**               This DD name is necessary if the LABADDIN  **          00201
**               option of COPYMODS is in effect.  Usually  **          00202
**               the LABADDIN file is a previous result of  **          00203
**               a LABLDUMP operation, or it is an altered  **          00204
**               or edited version of a previously created  **          00205
**               LABLDUMP file.                             **          00206
**                                                          **          00207
**  This program has to be assembled with PARM=BATCH in     **          00208
**    the Assembler EXEC parms.  The entire PARMCHEK        **          00209
**    program has to be included in the assembly, because   **          00210
**    PARMCHEK has to be fitted to the current level of     **          00211
**    the COPYMODS program.                                 **          00212
**                                                          **          00213
**************************************************************          00214
**                                                          **          00215
**  REQUIRED DD NAMES (used by the COPYMODS program):       **          00216
**                                                          **          00217
**  //IN       -  Points to the Input Tape.  Only not       **          00218
**                required in a tape init operation, if     **          00219
**                the INITVOLS option is in effect.         **          00220
**                Otherwise, //IN is always required.       **          00221
**                                                          **          00222
**  //OUT1 thru - Any of these 16 DD names can be coded.    **          00223
**  //OUT16       These are for the output tapes.  These    **          00224
**                are not required if the READ (readonly)   **          00225
**                option is in effect.  Any one of these    **          00226
**                16 possible DD names may be coded, even   **          00227
**                if some numbers have been skipped.  For   **          00228
**                instance, if you have one output tape,    **          00229
**                it may be defined by //OUT13.  It is      **          00230
**                not necessary to code //OUT1.             **          00231
**                                                          **          00232
**  //SYSPRINT  - The output dataset to contain all the     **          00233
**                COPYMODS operation information that was   **          00234
**                called for by the various options set,    **          00235
**                including the OPTIONS display itself.     **          00236
**                This dataset should be LRECL=133,         **          00237
**                RECFM=FBA.                                **          00238
**                                                          **          00239
**************************************************************          00240
**                                                          **          00241
**  PROGRAM STRUCTURE:                                      **          00242
**                                                          **          00243
**  This program is no longer a single CSECT as it was in   **          00244
**    the old days.  There are now the following CSECTs,    **          00245
**    which should all be assembled together:               **          00246
**                                                          **          00247
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **          00248
**                                                          **          00249
**   COPYMODS - The main processing module, which contains  **          00250
**              most of the tape copy/reading processing.   **          00251
**                                                          **          00252
**   TRTCSECT - The translate tables for Hex printing of    **          00253
**              tape records, and for ASCII translation.    **          00254
**                                                          **          00255
**   COPYMOPT - The separate routine which reads the PARM   **          00256
**              bits that have been set, and which prints   **          00257
**              a report in SYSPRINT showing the options    **          00258
**              that are in effect.                         **          00259
**                                                          **          00260
**   PARMCHEK - All the PARM and SYSIN input processing is  **          00261
**              done here.  PARM bits are passed back to    **          00262
**              COPYMODS in R1, the User Area is passed     **          00263
**              back to COPYMODS in R2.                     **          00264
**                                                          **          00265
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **          00266
**              program, this table contains all the option **          00267
**              bit meanings and their default settings.    **          00268
**                                                          **          00269
**   LABELCHK - Now a separate CSECT to check whether a     **          00270
**              record read by COPYMODS is part of a set    **          00271
**              of label records or not.                    **          00272
**                                                          **          00273
**   PRINTLBL - A separate CSECT to interpret all tape      **          00274
**              label contents in a report line.            **          00275
**                                                          **          00276
**   MSGCSECT - Contains all the texts of the messages      **          00277
**              used by the COPYMODS CSECT.  Addressed      **          00278
**              by two new macros:  MVFMS which does        **          00279
**              operations on fields in the messages, and   **          00280
**              PTMS, which prints a message to SYSPRINT.   **          00281
**                                                          **          00282
**              Two new macros, ADRSMS and DROPMS, now can  **          00283
**              be used to address this area, and save      **          00284
**              a lot of addressability space, because      **          00285
**              normal assembler instructions can be used   **          00286
**              in between them, and the addressability     **          00287
**              will not be redundantly repeated.  The      **          00288
**              new PTMSN macro is PTMS without the         **          00289
**              addressability built in, to put in between  **          00290
**              ADRSMS and DROPMS.                          **          00291
**                                                          **          00292
**   FOOTAGE  - Code to calculate footage on a tape, as     **          00293
**              though the data were on a 6250 bpi reel.    **          00294
**              This code came from Florida Power Company   **          00295
**              SS0104 Tapemap program.  Used by the        **          00296
**              FOOTAGE keyword.                            **          00297
**                                                          **          00298
**   VOL1STOR - This CSECT contains storage for the images  **
**              of VOL1 labels for the 16 output tapes,     **
**              and the input tape.  It is used for the     **
**              KEEPVOL option, to allow COPYMODS to reuse  **
**              an existing VOL1 label on an output tape,   **
**              when the volser of the output tape is not   **
**              known in advance.  A particular use of the  **
**              KEEPVOL option would be if you are copying  **
**              a tape to SL scratch tapes with existing    **
**              volsers that are necessary to know about.   **
**              For example, perhaps the output tapes are   **
**              being managed by a Tape Management System.  **
**                                                          **
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **          00299
**  but they must be coordinated, and at the same level, so **          00300
**  to be safe, they should always be assembled together.   **          00301
**  The LABELCHK program has the same status.  It must be   **          00302
**  assembled together with the COPYMODS program.  Same     **          00303
**  with the PRINTLBL program and the FOOTAGE program.      **          00304
**                                                          **          00305
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **          00306
**                                                          **          00307
**  GENERAL OUTLINE OF PROGRAM CALLS                        **          00308
**  ------- ------- -- ------- -----                        **          00309
**                                                          **          00310
**  COPYMODS is the first program to get control.  The      **          00311
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **          00312
**  and the entry locations are stored in fullwords for     **          00313
**  later use.  Same for PRINTLBL and FOOTAGE entry points. **          00314
**  And also, the VOL1STOR entry point is saved.            **
**                                                          **          00315
**  PARMCHEK is immediately called, and it opens //SYSIN    **          00316
**  if that ddname is present.  If //PARMREPT is present,   **          00317
**  it is also used by the PARMCHEK program.                **          00318
**                                                          **          00319
**  After PARMCHEK has returned all parm bit settings to    **          00320
**  COPYMODS and all user-quantities, the settings are      **          00321
**  examined by COPYMODS and inconsistent settings are      **          00322
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **          00323
**  has to be turned off, because only one of these can be  **          00324
**  done in one run.  These inconsistencies are all fixed,  **          00325
**  and then COPYMODS processing starts.                    **          00326
**                                                          **          00327
**  (To examine the effect of the COPYMODS parm correction, **          00328
**  code the CODEDPRM option to obtain a "before and after" **          00329
**  option comparison report.)                              **          00330
**                                                          **          00331
**  COPYMOPT is called to display all the options that have **          00332
**  been set, if the OPTION parm has been set.  This is     **          00333
**  done to //SYSPRINT.  If any adjustments of options have **          00334
**  been made, you can see the final result in the SYSPRINT **          00335
**  report that has been produced by COPYMOPT.              **          00336
**                                                          **          00337
**  A PARM of CODEDPRM causes COPYMOPT to be called twice,  **          00338
**  once with the corrected parm bits, and the second time, **          00339
**  using the saved original parm bits, as returned by the  **          00340
**  PARMCHEK program.                                       **          00341
**                                                          **          00342
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **          00343
**  and opened again by COPYMODS.  This allows SYSPRINT     **          00344
**  to be viewed under SDSF before the tapes are mounted,   **          00345
**  so you can see the OPTIONS report(s) there.             **          00346
**                                                          **          00347
**  A significant note is, that the PARMREPT contains the   **          00348
**  options as they have been set by the PARMCHEK program,  **          00349
**  with no alteration.  The COPYMOPT call, which produces  **          00350
**  the OPTIONS display in //SYSPRINT, occurs after the     **          00351
**  adjustments for inconsistent parm settings has been     **          00352
**  made by COPYMODS.  If you want to see the effect of     **          00353
**  these adjustments, code the CODEDPRM keyword to obtain  **          00354
**  a comparison report showing the original options as     **          00355
**  originally coded.                                       **          00356
**                                                          **          00357
**  After that, COPYMODS does its things, depending on the  **          00358
**  options that have been set.  Most of the processing is  **          00359
**  done in the COPYMODS csect, except for the HEXPRT       **          00360
**  option, where the translation tables are in the         **          00361
**  TRTCSECT csect.                                         **          00362
**                                                          **          00363
**  The LABELCHK program is called whenever an 80-byte      **          00364
**  record is read, to see whether that record is part of   **          00365
**  a set of tape labels.                                   **          00366
**                                                          **          00367
**  Whenver a label is to be interpreted to SYSPRINT, the   **          00368
**  PRINTLBL program is called.                             **          00369
**                                                          **          00370
**  If the FOOTAGE keyword is used, the FOOTAGE program     **          00371
**  is called at approximately the end of each file read    **          00372
**  from the input tape.  FOOTAGE is driven by the contents **          00373
**  of fields in a workarea, which, in the COPYMODS CSECT,  **          00374
**  is at label LABELTYP.  Most of the fields in this       **          00375
**  workarea are fed from the end-of-file routine, after    **          00376
**  label MARKFILE, and from the EXCP READs, near label     **          00377
**  INFROMIN, and the BYTESCOP field of number of bytes     **          00378
**  moved by the latest EXCP READ.                          **          00379
**                                                          **          00380
**  The KEEPVOL keyword implies the use of the SHOOVL       **
**  (Show Output Volumes) keyword.  KEEPVOL allows the      **
**  recognition of some of the previous contents of each    **
**  output volume.  The reason for the KEEPVOL keyword is   **
**  to allow the use of SL scratch tapes that are managed   **
**  by a Tape Management System.  Their volsers are not     **
**  known in advance, but we want to keep them, in the      **
**  output tapes, after we have copied the contents of the  **
**  input tape.  If SHOOVL is coded, or is turned on by     **
**  KEEPVOL, COPYMODS tries to read 80 bytes from each open **
**  output tape, and saves them in a slot in the VOL1STOR   **
**  csect.  Then that open output tape is unconditionally   **
**  rewound.  The LABELCHK program is called for this data, **
**  to determine if it is a VOL1 label, and if it is either **
**  EBCDIC, or ASCII type 3 or type 4.  Depending on what   **
**  LABELCHK has discovered, flags are set for each output  **
**  tape, to show if it has an existing VOL1 label, and     **
**  what type it is.  SHOOVL alone will just display this   **
**  data on the SYSPRINT report.                            **
**                                                          **
**  When KEEPVOL is coded in addition to SHOOVL, COPYMODS   **
**  analyzes the (possible) VOL1 label of the input tape    **
**  too, and generates "typing" flags, as it did for the    **
**  open output tapes.  If the input tape is SL, and for    **
**  each output tape whose typing flags match those of the  **
**  input tape, COPYMODS uses the output tape's VOL1 label  **
**  in the copied tape instead of the input tape's VOL1     **
**  label.  All the other tapes get a "straight copy" as    **
**  before.                                                 **
**                                                          **
**  The TESTOVOL routine is associated with the SHOOVL      **
**  option.  Routines affected by KEEPVOL are:  CHANGVOL,   **
**  READKVOL, and GETVTABL.                                 **
**                                                          **
**************************************************************          00381
**                                                          **          00382
**  NEW FEATURES ADDED BY SAM GOLOB:                        **          00383
**                                                          **          00384
**  (Also please see the individual Level nnn changes, as   **          00385
**   listed in this code, below, for more information.)     **          00386
**                                                          **          00387
**   It is recommended that you view the PARMTABL entries   **          00388
**   and look at the supplied #MANUAL member in the         **          00389
**   distribution pds, CBT File 229, for even more info.    **          00390
**                                                          **          00391
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **          00392
**                                                          **          00393
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **          00394
**                                                          **          00395
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **          00396
**       BE CORRECTLY COPIED.                               **          00397
**                                                          **          00398
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **          00399
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **          00400
**       FOUND ON THE INPUT TAPE.                           **          00401
**                                                          **          00402
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **          00403
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **          00404
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **          00405
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **          00406
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **          00407
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **          00408
**       MAIN SOURCE CODE.                                  **          00409
**                                                          **          00410
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **          00411
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **          00412
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **          00413
**       INVOKE THIS ACTION.                                **          00414
**                                                          **          00415
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **          00416
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **          00417
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **          00418
**                                                          **          00419
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **          00420
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **          00421
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **          00422
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **          00423
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **          00424
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **          00425
**                                                          **          00426
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **          00427
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **          00428
**                                                          **          00429
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **          00430
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **          00431
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **          00432
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **          00433
**       SERVICE.                                           **          00434
**                                                          **          00435
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **          00436
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **          00437
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **          00438
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **          00439
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **          00440
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **          00441
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **          00442
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **          00443
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **          00444
**                                                          **          00445
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **          00446
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **          00447
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **          00448
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **          00449
**                                                          **          00450
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **          00451
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **          00452
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **          00453
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **          00454
**                                                          **          00455
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **          00456
**       TAPEOWNER=xxxxxxxxxx                               **          00457
**       FILELIMIT=nnnn                                     **          00458
**       LABELIMIT=nnnn                                     **          00459
**       PRINTRCDS=nnnn                                     **          00460
**         or                                               **          00461
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **          00462
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **          00463
**                                                          **          00464
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **          00465
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **          00466
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **          00467
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **          00468
**                                                          **          00469
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **          00470
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **          00471
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **          00472
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **          00473
**       IN THE EXTERNAL LABEL DATASET.                     **          00474
**                                                          **          00475
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **          00476
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **          00477
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **          00478
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **          00479
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **          00480
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **          00481
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **          00482
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **          00483
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **          00484
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **          00485
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **          00486
**                                                          **          00487
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **          00488
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **          00489
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **          00490
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **          00491
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **          00492
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **          00493
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **          00494
**       DATA FILE HAS BEEN WRITTEN.                        **          00495
**                                                          **          00496
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **          00497
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **          00498
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **          00499
**       EXTERNAL LABEL DATASET.                            **          00500
**                                                          **          00501
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **          00502
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **          00503
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **          00504
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **          00505
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **          00506
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **          00507
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **          00508
**       THE HDR2.                                          **          00509
**                                                          **          00510
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **          00511
**       INPUT TAPE.  USE A PARM OF INITVOLS.  ASCII TAPES  **          00512
**       ARE INITTED WITH A PARM OF EITHER INASC3 OR        **          00513
**       INASC4, FOR ASCII LEVEL 3 AND ASCII LEVEL 4        **          00514
**       RESPECTIVELY.  A PARM OF INASCII DEFAULTS TO       **          00515
**       ASCII LEVEL 3.                                     **          00516
**                                                          **          00517
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **          00518
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **          00519
**       IN A SYSIN CARD.  14 CHARACTER TAPE OWNERS ARE     **          00520
**       SUPPORTED FOR ASCII TAPES.  IBM SL TAPES HAVE      **          00521
**       10 CHARACTERS IN THE TAPE OWNER FIELD.             **          00522
**                                                          **          00523
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **          00524
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **          00525
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **          00526
**       IS INTERPRETED AS SL FILES, AND MULTIPLIED BY 3.   **          00527
**       IF NOT, THEN IT IS INTERPRETED AS NL.  SL          **          00528
**       INTERPRETATION OF FILE NUMBERS CAN BE FORCED,      **          00529
**       USING THE SLLIM PARM KEYWORD.  NL INTERPRETATION   **          00530
**       IS FORCED USING THE NLLIM PARM KEYWORD.            **          00531
**                                                          **          00532
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **          00533
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **          00534
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **          00535
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **          00536
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **          00537
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **          00538
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **          00539
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **          00540
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **          00541
**       BYTE TOTALS COMING FROM DATA FILES.                **          00542
**                                                          **          00543
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **          00544
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **          00545
**       TO PRINT THEM.)                                    **          00546
**                                                          **          00547
**       IF YOU ARE CONFUSED THAT THE OPTION REPORT DOES    **          00548
**       NOT SEEM TO REFLECT THE OPTION KEYWORDS YOU ARE    **          00549
**       CODING IN YOUR JCL, PLEASE BE AWARE THAT COPYMODS  **          00550
**       DOES SOME OPTION ADJUSTMENTS TO RESOLVE APPARENT   **          00551
**       INCONSISTENCIES WITH THE PARM SETTINGS.  TO GET    **          00552
**       A "BEFORE AND AFTER" REPORT FOR THIS ACTION, CODE  **          00553
**       THE "CODEDPRM" PARM KEYWORD.                       **          00554
**                                                          **          00555
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **          00556
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **          00557
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **          00558
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).  IF A TAPE      **          00559
**       FILE (EBCDIC SL TAPES ONLY) HAS MORE THAN 1        **          00560
**       MILLION BLOCKS IN IT, THEN THIS FIELD IS USED.     **          00561
**       OTHERWISE IT IS BLANKS.                            **          00562
**                                                          **          00563
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **          00564
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **          00565
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **          00566
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **          00567
**       DATA BLOCKS ON THE TAPE.                           **          00568
**                                                          **          00569
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **          00570
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **          00571
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **          00572
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **          00573
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **          00574
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **          00575
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **          00576
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **          00577
**       THESE WILL STILL BE CORRECTLY STRIPPED OFF.  IF    **          00578
**       FILE LIMITING IS IN EFFECT, THEN THE INPUT TAPE    **          00579
**       IS ASSUMED TO BE SL, AND THE NUMBER CODED IN THE   **          00580
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **          00581
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **          00582
**       INPUT TAPE.                                        **          00583
**                                                          **          00584
**       FOR PARM=STRIP OPERATIONS, COPYMODS USES THE       **          00585
**       LABELCHK ROUTINE TO DETERMINE IF A TAPE FILE IS    **          00586
**       REALLY A LABEL, SO IT WILL STRIP OFF A LABEL FILE  **          00587
**       WHEREVER IT OCCURS.  THIS IS NOT LIKE THE COPYSLNL **          00588
**       PROGRAM, WHICH ASSUMES THAT EACH DATA FILE IS      **          00589
**       SANDWICHED BETWEEN TWO LABEL FILES, AND WHICH      **          00590
**       DOES THE STRIPPING BY "COUNTING" AND NOT BY        **          00591
**       "FEELING".                                         **          00592
**                                                          **          00593
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **          00594
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **          00595
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **          00596
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **          00597
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **          00598
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **          00599
**                                                          **          00600
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **          00601
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **          00602
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **          00603
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **          00604
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **          00605
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **          00606
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **          00607
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **          00608
**                                                          **          00609
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **          00610
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **          00611
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **          00612
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **          00613
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **          00614
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **          00615
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **          00616
**                                                          **          00617
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **          00618
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **          00619
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **          00620
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **          00621
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **          00622
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **          00623
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **          00624
**                                                          **          00625
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **          00626
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **          00627
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **          00628
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **          00629
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **          00630
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **          00631
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **          00632
**                                                          **          00633
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **          00634
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **          00635
**       THESE INDICATORS (TURNED OFF) ARE:                 **          00636
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **          00637
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **          00638
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **          00639
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **          00640
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **          00641
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **          00642
**                                                          **          00643
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **          00644
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **          00645
**       COMPLETELY TURN THEM OFF AT THE TAPE LABEL LEVEL.  **          00646
**       THE NOSECOFF KEYWORD NULLIFIES THE EFFECT OF THE   **          00647
**       SECOFF KEYWORD.                                    **          00648
**                                                          **          00649
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **          00650
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **          00651
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **          00652
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **          00653
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **          00654
**       MORE EXTENSIVE "LTM SERVICE" HAS BEEN BUILT INTO   **          00655
**       THIS PROGRAM.                                      **          00656
**                                                          **          00657
**  31.  COPYMODS CAN DISPLAY 6250 BPI FOOTAGES FOR THE     **          00658
**       FILES ON THE TAPE, USING THE FOOTAGE KEYWORD.      **          00659
**       FOOTAGE CALCULATIONS FOR EACH FILE, AS WELL AS     **          00660
**       FOOTAGE FOR THE ENTIRE TAPE, UP TO THE CURRENT     **          00661
**       FILE, ARE DISPLAYED.                               **          00662
**                                                          **          00663
**  32.  COPYMODS WILL DISPLAY MINIMUM AND MAXIMUM BLOCK    **          00664
**       SIZES FOR EACH TAPE FILE READ, WHEN THE MINMAX     **          00665
**       OPTION IS CODED.                                   **          00666
**                                                          **          00667
**  33.  COPYMODS CAN OPTIONALLY SHOW THE SIZE OF EACH      **          00668
**       TAPE DATA BLOCK (TECHNICALLY CALLED A "RECORD")    **          00669
**       ON THE TAPE, USING THE RECSIZE OPTION.  AS CODED   **          00670
**       CURRENTLY, RECSIZE CAN PRODUCE A LOT OF SYSPRINT   **          00671
**       OUTPUT, SINCE IT PRODUCES ONE LINE PER TAPE DATA   **          00672
**       BLOCK.  THE RECSIZE OPTION DISPLAYS DETAILS,       **          00673
**       WHICH THE MINMAX OPTION SUMMARIZES.  IF RECSIZE    **          00674
**       IS CODED, THEN THE MINMAX OPTION IS FORCED ON.     **          00675
**                                                          **          00676
**  34.  THE KEEPVOL OPTION WILL ALLOW THE USE OF THE VOL1  **
**       LABEL FROM A TARGET TAPE, IF THE VOL1 OF THE       **
**       TARGET TAPE EXISTS, AND IF IT IS THE SAME TYPE     **
**       AS THE VOL1 OF THE COPIED TAPE.  THIS ALLOWS FOR   **
**       THE MOUNTING OF A SCRATCH TAPE, WHERE YOU DON'T    **
**       KNOW THE VOLSER OF THE TARGET TAPE AHEAD OF TIME.  **
**       THE KEEPVOL OPTION WILL ALLOW THE COPIED VOLUME    **
**       TO KEEP THE SAME VOLSER AS THE SCRATCH TAPE, SO    **
**       THAT A TAPE MANAGEMENT SYSTEM CAN KEEP TRACK OF    **
**       IT.  EACH TARGET TAPE WILL GET DIFFERENT ACTION    **
**       USING KEEPVOL, DEPENDING ON WHAT WAS ON IT BEFORE. **
**       IF THE VOL1 LABEL ON THE TARGET TAPE IS NOT THE    **
**       SAME TYPE AS THE SOURCE TAPE, OR IF THE TARGET     **
**       TAPE IS NON-LABELED, THEN A "STRAIGHT COPY" IS     **
**       DONE TO THAT PARTICULAR OUTPUT TAPE, AS BEFORE.    **
**                                                          **
**  35.  A COMBINATION OF THE OPTIONS "READ" AND "SHOOVL"   **
**       (SHOW OUTPUT VOLUMES) WILL DO A "DRY RUN" TO SHOW  **
**       YOU THE FUTURE RESULTS FROM A "KEEPVOL" RUN.       **
**       "READ" WILL READ THE INPUT TAPE IN ITS ENTIRETY,   **
**       AND "SHOOVL" WILL SHOW YOU THE FIRST 80 BYTES OF   **
**       EACH OF THE OUTPUT TAPES.  NO ACTUAL COPY OF THE   **
**       INPUT TAPE WILL BE DONE.  "KEEPVOL" IMPLIES        **
**       "SHOOVL", BUT A TAPE COPY WILL ACTUALLY BE DONE.   **
**                                                          **
**************************************************************          00677
         EJECT                                                          00678
**************************************************************          00679
**  CHANGE LOG:                                             **          00680
**                                                          **          00681
** LEVEL 003                                                **          00682
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS                * **          00683
**                                                          **          00684
** LEVEL 004                                                **          00685
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER           * **          00686
**             A HEADER LABEL.  THIS MEANS AN SL          * **          00687
**             FILE WITHOUT ANY DATA IN IT.  AND          * **          00688
**             IF THIS IS THE CASE, DON'T STOP            * **          00689
**             COPYING FILES.                             * **          00690
**                                                          **          00691
** LEVEL 005                                                **          00692
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE             * **          00693
**             R12,R11.                                   * **          00694
**                                                          **          00695
** LEVEL 006                                                **          00696
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP           * **          00697
**             TO 16 OUTPUT TAPES FROM OUT1 TO            * **          00698
**             OUT16.                                     * **          00699
**                                                          **          00700
** LEVEL 007 AND 008                                        **          00701
**  03/14/00 - CLEANED UP SPELLING ON ERROR               * **          00702
**             MESSAGES AND FIXED DOCUMENTATION.          * **          00703
**             ADDED EYECATCHERS COSMETICALLY.            * **          00704
**                                                          **          00705
** LEVEL 009                                                **          00706
**  03/21/00 - STOP AFTER INITTED MVS TAPE                * **          00707
**                                                          **          00708
** LEVEL 010                                                **          00709
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS          * **          00710
**             FOR BLOCK SIZES FROM 32K TO 64K.           * **          00711
**                                                          **          00712
**             I MADE AN ATTEMPT TO COPY DOS/VSE          * **          00713
**             TAPES THAT HAVE LEADING TAPE               * **          00714
**             MARKS.  THERE IS A CHOICE TO               * **          00715
**             EITHER COPY ALL THE LEADING                * **          00716
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO         * **          00717
**             DISCARD THEM ALL.  YOU USE A PARM          * **          00718
**             OF LTMSKIP TO DISCARD LEADING              * **          00719
**             TAPEMARKS, AND ANY OTHER PARM, OR          * **          00720
**             NO PARM, WILL CAUSE THE PROGRAM TO         * **          00721
**             COPY THEM TO THE OUTPUT TAPES.             * **          00722
**                                                          **          00723
** LEVEL 011                                                **          00724
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE          * **          00725
**             BY ENDING THE JOB NORMALLY AFTER           * **          00726
**             ONE TAPEMARK.                              * **          00727
**                                                        * **          00728
**             IF VOL1 LABEL IS DETECTED, THEN            * **          00729
**             PUT OUT A MESSAGE SAYING SO, AND           * **          00730
**             INDICATING THE VOLSER THAT WAS             * **          00731
**             FOUND.  THIS PROGRAM WAS WRITTEN           * **          00732
**             ORIGINALLY WITH THE INTENT OF              * **          00733
**             HANDLING NL TAPES, SO THAT THE             * **          00734
**             CONDITIONS WHICH RESULT FROM               * **          00735
**             HAVING SL TAPES, HAD TO BE                 * **          00736
**             ACCOUNTED FOR LATER.                       * **          00737
**                                                          **          00738
** LEVEL 012                                                **          00739
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2               * **          00740
**             HAVING ONLY ONE TAPE MARK AFTER              **          00741
**             THEM.                                        **          00742
**                                                          **          00743
** LEVEL 013                                                **          00744
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD            * **          00745
**             LABEL TYPES, AND THE SETTING OF              **          00746
**             FLAGS TO INDICATE EACH TYPE.                 **          00747
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **          00748
**             MOVE NON-LABEL-RELATED FLAGS OUT             **          00749
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **          00750
**             EASY PRINTING OF LABEL CONTENTS,             **          00751
**             BUT NO EXTRA PRINTING IS DONE AT             **          00752
**             THIS LEVEL.                                  **          00753
**                                                          **          00754
** LEVEL 014                                                **          00755
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN              * **          00756
**             PARM SCANNER THAT IS EASY TO                 **          00757
**             MODIFY, AND TO SUPPLY SYNONYMS               **          00758
**             FOR THE PARMS.  ADDED SUPPORT,               **          00759
**             VIA THE LBLINFO PARM, TO PRINT               **          00760
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **          00761
**             EOV2 LABEL INFORMATION, IF IT IS             **          00762
**             FOUND ON THE INPUT TAPE.  THAT IS,           **          00763
**             IF THE INPUT TAPE IS SL.                     **          00764
**                                                          **          00765
**             FOR A LIST OF PERMISSIBLE PARMS,             **          00766
**             SEE LABEL PARMTABL.                          **          00767
**                                                          **          00768
** LEVEL 015                                                **          00769
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY          * **          00770
**             TO TURN OFF A PARM FLAG AS WELL AS           **          00771
**             THE ABILITY TO TURN IT ON. INCREASED         **          00772
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **          00773
**             BYTE.                                        **          00774
**                                                          **          00775
** LEVEL 016                                                **          00776
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY          * **          00777
**             TO SET ANY PARM SETTING AS A                 **          00778
**             DEFAULT.  A SETTING FOR A DEFAULT            **          00779
**             ENTRY THAT IS LATER IN THE TABLE,            **          00780
**             WILL OVERRIDE A SETTING FOR A                **          00781
**             DEFAULT THAT WAS SET EARLIER IN THE          **          00782
**             TABLE.  SETTING A PARM EXPLICITLY            **          00783
**             IN THE JCL, WILL OVERRIDE ANY                **          00784
**             DEFAULT SETTING FOR THAT PARM.               **          00785
**                                                          **          00786
** LEVEL 017                                                **          00787
**  05/11/00 - USED THE PARM SCANNER TO MAKE A            * **          00788
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **          00789
**             KINDS OF TAPE LABELS.  IF YOU WANT           **          00790
**             ALL OF THEM, YOU JUST HAVE A PARM            **          00791
**             THAT THROWS ALL OF THE FLAGS.  ALL           **          00792
**             OF THIS IS CODED IN PARMTABL AND             **          00793
**             THE FLAGS ARE USED IN PRTXXX1 AND            **          00794
**             PRTXXX2.                                     **          00795
**                                                          **          00796
** LEVEL 018                                                **          00797
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE          * **          00798
**             VOLSER OF THE COPIED TAPES, TO               **          00799
**             MATCH THE VOLSER INDICATED IN THE            **          00800
**             OUTXX DD NAMES.  THIS IS DONE WITH           **          00801
**             THE CHGVOL PARM KEYWORD.  THIS               **          00802
**             ACTION ONLY OCCURS IF THE INPUT              **          00803
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **          00804
**             DETECTED.  THE COPIED VOL1 LABEL             **          00805
**             IS ALTERED BEFORE THE WRITE.                 **          00806
**                                                          **          00807
** LEVEL 019                                                **          00808
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1            * **          00809
**             AND EOV2 LABELS THAT ARE IN THE              **          00810
**             MIDDLE OF A TAPE.  OF COURSE THIS            **          00811
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **          00812
**             CAN HAPPEN WHEN YOU COPY FILES               **          00813
**             WITH THE COPYFILE PROGRAM, FROM              **          00814
**             THE END OF ONE TAPE, TO THE                  **          00815
**             BEGINNING OR THE MIDDLE OF                   **          00816
**             ANOTHER.  COPYFILE HAS NOT BEEN              **          00817
**             FIXED AS YET NOT TO DO THIS, BUT IT          **          00818
**             COPIES THE EOV LABELS AS IS.  THIS           **          00819
**             NEW OPTION IS CALLED EOVCHG OR               **          00820
**             EOV2EOF; THE EOV LABELS ARE                  **          00821
**             CHANGED (IN THE COPIED TAPES) TO             **          00822
**             EOF, AND A MESSAGE IS WRITTEN THAT           **          00823
**             REPORTS THIS FACT.                           **          00824
**                                                          **          00825
** LEVEL 020                                                **          00826
**  06/29/00 - ADDED THE PARM OF READ OR READONLY         * **          00827
**             TO ALLOW A RUN OF COPYMODS THAT              **          00828
**             JUST READS THE INPUT TAPE, AND DOES          **          00829
**             NOT MAKE COPIES.                             **          00830
**                                                          **          00831
** LEVEL 021                                                **          00832
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY             * **          00833
**             IEHINITTED TAPES.                            **          00834
**                                                          **          00835
** LEVEL 022                                                **          00836
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD         * **          00837
**             LABELS FROM A TAPE, TO AN FB-80              **          00838
**             OUTPUT FILE.  PARM IS LABLDUMP.              **          00839
**                                                          **          00840
** LEVEL 023                                              * **          00841
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **          00842
**             ONLY IMPLEMENTATION SO FAR IS TO             **          00843
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **          00844
**             SAME VALUE, BUT NOT NECESSARILY TO           **          00845
**             WHAT IS IN THE OUTX  DD CARD.  IN            **          00846
**             ORDER TO USE THE FACILITY, YOU HAVE          **          00847
**             TO CODE                                      **          00848
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **          00849
**             OF THE SYSIN CARD FILE.  IF THERE            **          00850
**             ARE NO VALID OUTVOLALL= CARDS IN             **          00851
**             SYSIN, THEN THE EFFECT IS THE SAME           **          00852
**             AS CODING CHGVOL.                            **          00853
**                                                          **          00854
**             FIXED LABEL DUMP OPTION SO THAT THE          **          00855
**             DUMPED LABELS HAVE CONTROL CARDS             **          00856
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **          00857
**             FUNCTION IN LEVEL 24 NEEDS THESE             **          00858
**             CONTROL CARDS.                               **          00859
**                                                          **          00860
** LEVEL 024                                              * **          00861
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **          00862
**             OUTPUT COPIES FROM NL INPUT AND A            **          00863
**             SET OF LABELS CREATED BY LABLDUMP.           **          00864
**             CHANGED THE DCB NAMES AND DD CARDS           **          00865
**             AND OPTION NAMES FOR LABEL DUMP AND          **          00866
**             RESTORE.                                     **          00867
**                                                          **          00868
**             CHANGED PROGRAM INITIALIZATION TO            **          00869
**             A STANDARD FORM.  GOT RID OF PRIME           **          00870
**             AND TERME MACROS.  HAVE 5 BASE               **          00871
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **          00872
**                                                          **          00873
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **          00874
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **          00875
**             LABELS ON AN SL TAPE, AND WON'T              **          00876
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **          00877
**             TAPE IS SL, ACCIDENTALLY.                    **          00878
**                                                          **          00879
** LEVEL 025                                              * **          00880
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **          00881
**             SYSIN AND SEARCH FOR ALL PARMS.              **          00882
**                                                          **          00883
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **          00884
**             BE USED.                                     **          00885
**                                                          **          00886
**             ANY CARD IN SYSIN WHICH IS NOT A             **          00887
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **          00888
**                TAPEOWNER=xxxxxxxxxx                      **          00889
**                FILELIMIT=nnnn                            **          00890
**                LABELIMIT=nnnn                            **          00891
**                PRINTRCDS=nnnn                            **          00892
**                  or                                      **          00893
**                OUTVOLALL=volser ,                        **          00894
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **          00895
**             AND ANY PARM THAT IS CODED IN THE            **          00896
**             PARM TABLE, CAN BE CODED IN SYSIN,           **          00897
**             AND IT WILL OVERRIDE THE PARM IN             **          00898
**             THE EXEC CARD (SINCE SYSIN IS                **          00899
**             SCANNED LATER IN THE PROCESSING).            **          00900
**                                                          **          00901
**             INCLUDED A BLOCK COUNT CORRECTION AS         **          00902
**             DEFAULT, WHEN WRITING STANDARD LABELS        **          00903
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **          00904
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **          00905
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **          00906
**                                                          **          00907
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **          00908
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **          00909
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **          00910
**             THE CONTENTS OF STANDARD LABELS FOUND        **          00911
**             WHEN COPYING AN INPUT TAPE.                  **          00912
**                                                          **          00913
** LEVEL 026                                              * **          00914
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **          00915
**             RESPECT CHGVOL AND OUTVOLALL= .              **          00916
**                                                          **          00917
** LEVEL 027                                              * **          00918
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **          00919
**             BE ABLE TO DO EOV2EOF PROCESSING             **          00920
**                                                          **          00921
** LEVEL 028                                              * **          00922
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **          00923
**             STANDARD USER LABEL SUPPORT.                 **          00924
**                                                          **          00925
** LEVEL 029                                              * **          00926
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **          00927
**             STANDARD USER LABELS.                        **          00928
**                                                          **          00929
** LEVEL 030                                              * **          00930
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **          00931
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **          00932
**             OUTPUT TAPES, DURING THE COPY.               **          00933
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **          00934
**                                                          **          00935
**             FIXED THE EYECATCHERS A BIT.                 **          00936
**                                                          **          00937
**             AGAIN FIXED COPY OF INITTED TAPES.           **          00938
**                                                          **          00939
** LEVEL 031                                              * **          00940
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **          00941
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **          00942
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **          00943
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **          00944
**                                                          **          00945
** LEVEL 032                                              * **          00946
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **          00947
**             LABADDIN PROCESSING WHEN THERE ARE           **          00948
**             MORE LABELS IN THE EXTERNAL LABEL            **          00949
**             DATASET, THAN THERE ARE NL FILES             **          00950
**             IN THE INPUT TAPE.  DEFAULT IS TO            **          00951
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **          00952
**             SAYS TO STOP AT THE END OF NL FILES          **          00953
**             AND NOT WRITE NULL SL FILES TO               **          00954
**             CORRESPOND TO THE EXTRA EXTERNAL             **          00955
**             LABELS.                                      **          00956
**                                                          **          00957
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **          00958
**             OF WRITING AN EXTRA HEADER LABEL SET,        **          00959
**             AND THEN BACKING OVER IT AND CLOSING.        **          00960
**                                                          **          00961
** LEVEL 033                                              * **          00962
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **          00963
**             PROCESSING WHEN THE LAST LABEL SET           **          00964
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **          00965
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **          00966
**             A HDR2 LABEL IN THE LAST LABEL SET,          **          00967
**             AND COPYMODS (WITH LBLFIX ON) WILL           **          00968
**             ACT AS IF AN ENDOFLABELHEADER CARD           **          00969
**             WERE THERE (SO IT WRITES A TAPEMARK          **          00970
**             AND THE DATA AND A TAPEMARK), AND IT         **          00971
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **          00972
**             PLUS THE MEASURED BLOCK COUNTS FROM          **          00973
**             THE DATA FILE.  AN EOF2 IS COPIED            **          00974
**             FROM THE EXISTING HDR2 AND EOF IS            **          00975
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **          00976
**             THE END.                                     **          00977
**                                                          **          00978
** LEVEL 034                                              * **          00979
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **          00980
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **          00981
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **          00982
**             THE CLOSE.  THIS LETS THE CLOSE DO           **          00983
**             THE REWIND, AND LEAVES THE WRITTEN           **          00984
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **          00985
**             THAT WAS INCOMPLETELY WRITTEN IS             **          00986
**             NOT ERASED.                                  **          00987
**                                                          **          00988
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **          00989
**             CONDITION IS FLAGGED WITH A PROPER           **          00990
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **          00991
**             FOR THAT DRIVE IS BYPASSED.                  **          00992
**                                                          **          00993
**             THIS PROBLEM HAS EXISTED SINCE THE           **          00994
**             FIRST VERSION OF THIS PROGRAM.               **          00995
**                                                          **          00996
**             CAREFUL TO FLAG ALL THE EXTRA DD             **          00997
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **          00998
**             THESE ARE THE OPENDFLG SETTINGS.             **          00999
**                                                          **          01000
** LEVEL 035                                              * **          01001
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **          01002
**             TAPES, BY NOT REUSING THE WRITE              **          01003
**             IOB WITHOUT REFRESHING THE PARTS             **          01004
**             THAT ARE USED BY IOS.  THIS IS THE           **          01005
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **          01006
**                                                          **          01007
**             LABLDUMP OF AN IEHINITTED TAPE               **          01008
**             PRODUCES AN ENDOFLABELHEADERINIT             **          01009
**             CARD, IN ANTICIPATION OF CREATING            **          01010
**             A TAPE INITIALIZATION ROUTINE FROM           **          01011
**             EXTERNAL LABELS.  (INITVOLS IN THE           **          01012
**             NEXT LEVEL, IS BETTER.)                      **          01013
**                                                          **          01014
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **          01015
**                                                          **          01016
** LEVEL 036                                              * **          01017
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **          01018
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **          01019
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **          01020
**             ALSO CHANGE TAPE OWNER INFORMATION           **          01021
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **          01022
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **          01023
**                                                          **          01024
**             TO INIT TAPES WITH NO INPUT TAPE,            **          01025
**             USE A PARM OF INITVOLS.                      **          01026
**                                                          **          01027
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **          01028
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **          01029
**                                                          **          01030
**             CONSOLIDATED CHGVOL CODE INTO A              **          01031
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **          01032
**                                                          **          01033
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **          01034
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **          01035
**             STEPPING ON EACH OTHER.                      **          01036
**                                                          **          01037
** LEVEL 037                                              * **          01038
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **          01039
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **          01040
**             NL TAPES ON THE INPUT TAPE.  IF THE          **          01041
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **          01042
**             IS MULTIPLIED BY 3, AND THE BIGGER           **          01043
**             VALUE IS USED.                               **          01044
**                                                          **          01045
**             COPYMODS WILL ONLY COPY INPUT TAPE           **          01046
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **          01047
**             VALUE, IF THERE IS ONE.                      **          01048
**                                                          **          01049
**             INTERNALLY, THE FILELIMIT= KEYWORD           **          01050
**             SETS THE PARM VALUE OF LIMFILE OR            **          01051
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **          01052
**             THE PROGRAM ACTION.                          **          01053
**                                                          **          01054
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **          01055
**             PROGRAM COUNTS BYTES READ FROM THE           **          01056
**             INPUT TAPE FILES, AND TOTALS THEM AT         **          01057
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **          01058
**             THIS ACTION.                                 **          01059
**                                                          **          01060
** LEVEL 038                                              * **          01061
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **          01062
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **          01063
**             RUNNING BYTE TOTALS AS WELL AS THE           **          01064
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **          01065
**             FILES.                                       **          01066
**                                                          **          01067
** LEVEL 039                                              * **          01068
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **          01069
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **          01070
**             THEREFORE WE HAVE PARMFLG1 THRU              **          01071
**             PARMFLG5 TO USE AS OPTION BYTES.             **          01072
**                                                          **          01073
** LEVEL 040                                              * **          01074
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **          01075
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **          01076
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **          01077
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **          01078
**             AND I WANT TO BE ABLE TO MATCH THEIR         **          01079
**             COUNT, SO A USER WILL BE ABLE TO             **          01080
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **          01081
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **          01082
**                                                          **          01083
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **          01084
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **          01085
**             NOT INITTING TAPES, YOU DON'T GET AN         **          01086
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **          01087
**             WHAT TO DO.                                  **          01088
**                                                          **          01089
** LEVEL 041                                              * **          01090
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **          01091
**             OF LABEL SETS IN THE LABADDIN FILE           **          01092
**             THAT COPYMODS WILL PROCESS.  EVEN            **          01093
**             IF THE LABADDIN FILE CONTAINS MANY           **          01094
**             LABEL SETS, THE NUMBER PROCESSED WILL        **          01095
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **          01096
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **          01097
**                                                          **          01098
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **          01099
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **          01100
**             THE LABADDIN FILE, AND CONSIDERS THE         **          01101
**             FILE TO END AFTER NNN OF THEM.               **          01102
**                                                          **          01103
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **          01104
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **          01105
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **          01106
**             THIS CHOPS PROCESSING OFF TOO SOON           **          01107
**             WHEN EOV LABELS ARE PRESENT.                 **          01108
**                                                          **          01109
** LEVEL 042                                              * **          01110
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **          01111
**             BAL R7, AND USED R6 AS SIXTH BASE            **          01112
**             REGISTER.                                    **          01113
**                                                          **          01114
** LEVEL 043                                              * **          01115
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **          01116
**             "OPTION" PARAMETER.  CALL IS TO A            **          01117
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **          01118
**             PROGRAM COPYMOPT SHOULD BE BATCH             **          01119
**             ASSEMBLED AND LINKEDITED WITH                **          01120
**             THE COPYMODS PROGRAM.                        **          01121
**                                                          **          01122
**             CHANGED THE WORDING OF SOME OF THE           **          01123
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **          01124
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **          01125
**                                                          **          01126
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **          01127
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **          01128
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **          01129
**             LABADDIN WAS IN EFFECT.                      **          01130
**                                                          **          01131
** LEVEL 044                                              * **          01132
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **          01133
**                                                          **          01134
** LEVEL 045                                              * **          01135
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **          01136
**             COMPLETION OF THE COPY. SUPPWTO.             **          01137
**                                                          **          01138
** LEVEL 046                                              * **          01139
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **          01140
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **          01141
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **          01142
**             TO HI ORDER FIELD WHEN DOING BLOCK           **          01143
**             COUNT CORRECTION.                            **          01144
**                                                          **          01145
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **          01146
**                                                          **          01147
** LEVEL 047                                              * **          01148
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **          01149
**             DUMP OF TAPES WHICH CONTAIN LARGE            **          01150
**             NUMBERS OF DATA RECORDS.  IF THE             **          01151
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **          01152
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **          01153
**                                                          **          01154
** LEVEL 048                                              * **          01155
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **          01156
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **          01157
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **          01158
**             IS THERE IN THE JCL, THEN OPEN IT.           **          01159
**                                                          **          01160
** LEVEL 049                                              * **          01161
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **          01162
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **          01163
**             BYTE COUNTS AND DATA BYTE COUNTS,            **          01164
**             INSTEAD OF TOTAL BYTE COUNTS.                **          01165
**                                                          **          01166
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE           * **          01167
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **          01168
**             EACH LABEL.  IT DOES NOT MATTER              **          01169
**             WHERE THE LABELS ARE, IN THE INPUT           **          01170
**             TAPE--THEY WILL BE STRIPPED OFF THE          **          01171
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **          01172
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **          01173
**             NUMBER IS MULTIPLIED BY 3, AND THE           **          01174
**             COPYING IS CUT OFF AFTER 3*nnn,              **          01175
**             TREATED AS BLP, ON THE INPUT TAPE.           **          01176
**                                                          **          01177
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **          01178
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **          01179
**             COPYMODS TRIES TO DETECT WHETHER THE         **          01180
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **          01181
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **          01182
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **          01183
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **          01184
**             WE CAN NOW FORCE THE nnn TO BE               **          01185
**             INTERPRETED AS NL USING THE NLLIM            **          01186
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **          01187
**             INTERPRETED AS 3*nnn USING THE SLLIM         **          01188
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **          01189
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **          01190
**             OTHER KEYWORD IS ALSO CODED.                 **          01191
**                                                          **          01192
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **          01193
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **          01194
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **          01195
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **          01196
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **          01197
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **          01198
**             DURING THE WRITE OF THE TAPE MARK.           **          01199
**                                                          **          01200
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **          01201
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **          01202
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **          01203
**             BEFORE ISSUING ABEND 069.                    **          01204
**                                                          **          01205
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **          01206
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **          01207
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **          01208
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **          01209
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **          01210
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **          01211
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **          01212
**             SYSPRINT DATASET.                            **          01213
**                                                          **          01214
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **          01215
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **          01216
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **          01217
**                                                          **          01218
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **          01219
**             OF THE MAIN CSECT.                           **          01220
**                                                          **          01221
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **          01222
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **          01223
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **          01224
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **          01225
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **          01226
**             PARM SCAN IN DETAIL.                         **          01227
**                                                          **          01228
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **          01229
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **          01230
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **          01231
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **          01232
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **          01233
**                                                          **          01234
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **          01235
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **          01236
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **          01237
**             PROGRAM AND NOT BY COPYMODS.                 **          01238
**                                                          **          01239
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **          01240
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **          01241
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **          01242
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **          01243
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **          01244
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **          01245
**             COPIES THIS DATA INTO THE CORRESPONDING      **          01246
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **          01247
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **          01248
**             PROGRAM.                                     **          01249
**                                                          **          01250
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **          01251
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **          01252
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **          01253
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **          01254
**             USER FIELD AREA.                             **          01255
**                                                          **          01256
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **          01257
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **          01258
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **          01259
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **          01260
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **          01261
**             TAPES--TO FIGURE OUT HOW SHORT....           **          01262
**                                                          **          01263
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **          01264
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **          01265
**             POSSIBLE.                                    **          01266
**                                                          **          01267
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **          01268
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **          01269
**             IN ERROR.                                    **          01270
**                                                          **          01271
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **          01272
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **          01273
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **          01274
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **          01275
**                                                          **          01276
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **          01277
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **          01278
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **          01279
**                                                          **          01280
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **          01281
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **          01282
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **          01283
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **          01284
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **          01285
**             PROGRAM.                                     **          01286
**                                                          **          01287
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **          01288
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **          01289
**                                                          **          01290
** LEVEL 062 - FIX DOC A BIT MORE.                          **          01291
**             TEN PARM BITS INSTEAD OF FIVE.               **          01292
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **          01293
**                                                          **          01294
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **          01295
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **          01296
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **          01297
**             OCCURRED, WITHOUT ISSUING A WTOR.            **          01298
**                                                          **          01299
** LEVEL 064 - Return Code adjustments.                     **          01300
**                                                          **          01301
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **          01302
**             processing.                                  **          01303
**             HEXPRT now works for INITVOLS.               **          01304
**             HEXPRT now prints the external labels in a   **          01305
**             LABADDIN operation.                          **          01306
**             TAPEOWNER= is now honored for an INITVOLS    **          01307
**             operation (this fixes a bug).                **          01308
**             Number for FILELIMIT=nnn is now filled in,   **          01309
**             in the message, when the EBCDIC value        **          01310
**             exists.                                      **          01311
**             Fix another bug--Tape Owner not altered--    **          01312
**             now use the value of tape owner passed from  **          01313
**             the PARMCHEK program.                        **          01314
**                                                          **          01315
** LEVEL 066 - Cosmetic changes.                            **          01316
**             Save original PARM pointer in COPYMODS       **          01317
**             csect itself.  (It got lost after PARMCHEK   **          01318
**             call.)                                       **          01319
**                                                          **          01320
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **          01321
**             (ISO/ANSI) Level 3 or Level 4, with the      **          01322
**             INASC3 or INASC4 keywords.  You can control  **          01323
**             if the HEXPRT is interpreted in EBCDIC or    **          01324
**             ASCII using the ASCII or the EBCDIC          **          01325
**             keywords.  For an ASCII tape init, ASCII     **          01326
**             print interpretation is turned on by         **          01327
**             default.  If you are initting an ASCII       **          01328
**             tape using the INASCII keyword, a Level 3    **          01329
**             ASCII tape will be created.                  **          01330
**                                                          **          01331
**             ASCII Level 4 is only supported in MVS at    **          01332
**             the OS/390 2.4 level and higher.             **          01333
**                                                          **          01334
** LEVEL 068 - Split off label checking routine into a      **          01335
**             separate program, LABELCHK, which is         **          01336
**             assembled with COPYMODS together.            **          01337
**                                                          **          01338
** LEVEL 069 - More ASCII label detection support.          **          01339
**             LABLDUMP now works for ASCII tapes.  The     **          01340
**             control cards in the LABLDUMP DD name have   **          01341
**             been translated into ASCII, the same as the  **          01342
**             labels and the data.  PARM=STRIP now works   **          01343
**             for ASCII tapes.                             **          01344
**                                                          **          01345
**             Fixed a bug where OUTVOLALL didn't work      **          01346
**             for volumes other than VOLUME1.              **          01347
**                                                          **          01348
** LEVEL 070 - More ASCII label detection support.          **          01349
**             LABADDIN works for ASCII tapes now.          **          01350
**             BLKCNT option fixed to convert corrected     **          01351
**             block counts to ASCII when necessary.        **          01352
**             EOVTOEOF now works for ASCII and IBM tapes,  **          01353
**             because a call to LABELCHK now returns the   **          01354
**             altered copy of INAREA to the main program.  **          01355
**             A parm of EOV2 now requires a space after    **          01356
**             it, so as not to interfere with EOV2EOF.     **          01357
**                                                          **          01358
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **          01359
**                                                          **          01360
**             LBI support for XXX2 print of label          **          01361
**             contents.  Big blocksizes are printed        **          01362
**             in the XXX2 print message if they exist      **          01363
**             in the labels.  This is for IBM labels.      **          01364
**                                                          **          01365
**             Support 14-character tape owner for          **          01366
**             ANSI/ISO (ASCII) tapes.                      **          01367
**                                                          **          01368
**             Other cosmetic changes and many bug fixes.   **          01369
**                                                          **          01370
** LEVEL 072 - Separate all label print operations into a   **          01371
**             call to a separate CSECT called PRINTLBL.    **          01372
**             Now there is a unified label print routine   **          01373
**             for both EXTLBLIN and INAREA label input.    **          01374
**                                                          **          01375
** LEVEL 073 - Separate messages into their own CSECT.      **          01376
**             Address with PTMS macro, and special setup.  **          01377
**             Assembler instructions which access fields   **          01378
**             in the MSGCSECT CSECT are created with the   **          01379
**             new MVFMS macro.                             **          01380
**                                                          **          01381
** LEVEL 074 - Fix LTM service and reporting.               **          01382
**                                                          **          01383
** LEVEL 075 - Implement SECOFF (security indicators in     **          01384
**             labels turned off in the copied tapes).      **          01385
**             Involves VOL1 (byte 11) for ASCII tapes.     **          01386
**             XXX1 (byte 54) which is turned to C'0' for   **          01387
**             EBCDIC (IBM) tapes, and which is turned to   **          01388
**             ASCII space (X'20') for ASCII tapes.         **          01389
**                                                          **          01390
** LEVEL 076 - Implement FOOTAGE keyword to measure each    **          01391
**             tape file approximately, giving a 6250 bpi   **          01392
**             footage calculation.  This code originally   **          01393
**             came from the SS0104 tape mapping program    **          01394
**             from the Florida Power Corporation.          **          01395
**             Cumulative footages for the entire tape up   **          01396
**             to the current file, are also displayed.     **          01397
**                                                          **          01398
**             Introduced the FOOTDIAG keyword, to print    **          01399
**             diagnostics in the footage calculation.      **          01400
**             Most of the FOOTAGE workarea fields are      **          01401
**             displayed.                                   **          01402
**                                                          **          01403
** LEVEL 077 - Save addressability space by replacing       **          01404
**             multiple MVFMS invocations with ADRSMS and   **          01405
**             DROPMS macros, to get addressability to      **          01406
**             MSGCSECT, and keep it for a while.  Also     **          01407
**             further reduced the program size by making   **          01408
**             a PTMSN macro that doesn't re-do the         **          01409
**             addressability that PTMS does.  This is for  **          01410
**             putting in between a ADRSMS and a DROPMS.    **          01411
**                                                          **          01412
** LEVEL 078   Add CODEDPRM option to report PARM options   **          01413
**             before they were adjusted by COPYMODS.       **          01414
**                                                          **          01415
**             There was no way to turn off the INITVOLS    **          01416
**             option with a parm.  So I coded the NOINITVO **          01417
**             option, to turn off the INITVOLS option      **          01418
**             bit.  So tape init will only be in effect    **          01419
**             if INITVOLS is explicitly coded.  Report     **          01420
**             NOINITVO in the options report, if this      **          01421
**             option is set off.  Remember that coding     **          01422
**             the INITVOLS keyword also turns on the       **          01423
**             CHGVOL option, so that the JCL volser gets   **          01424
**             propagated into the newly initiated tape.    **          01425
**             Coding NOINITVO only turns off the INITVOLS  **          01426
**             parm bit, and not the CHGVOL bit, as this    **          01427
**             should be the proper way to do it.           **          01428
**                                                          **          01429
**             If no //OUTn DD cards are coded in the JCL,  **          01430
**             COPYMODS would have run through the WRITEs   **          01431
**             without writing, and it would look like a    **          01432
**             normal run.  The logical fix would be to     **          01433
**             force READONLY on, and say in a message      **          01434
**             that you have done so. (That's what I did.)  **          01435
**                                                          **          01436
** LEVEL 079   Added MINMAX option to report largest and    **          01437
**             smallest block sizes for each file read.     **          01438
**                                                          **          01439
** LEVEL 080   Added RECSIZE option to report individual    **          01440
**             size of tape blocks, one at a time.  This    **          01441
**             option produces one record in SYSPRINT for   **          01442
**             each tape data block because it is reporting **          01443
**             that block's size.  So this option should    **          01444
**             not be a default since it makes a lot of     **          01445
**             output.  Shows details of the MINMAX         **          01446
**             display, so RECSIZE implies MINMAX.  If      **          01447
**             RECSIZE is coded, MINMAX is switched on.     **          01448
**                                                          **          01449
**             Got rid of "SBG MM/YY" type comments.        **          01450
**                                                          **          01451
** LEVEL 081   Fix problem in PARM=STRIP code where a       **          01452
**             label image in the middle of tape data was   **          01453
**             stripped off.                                **          01454
**                                                          **          01455
** LEVEL 082   Fix problem in PARM=STRIP code where an      **          01456
**             80-byte tape block would cause no tape mark  **          01457
**             to be written at the end of the current      **          01458
**             file.  Made STRIP diagnostics a separate     **          01459
**             parm called DGSTRI and NODGSTRI.             **          01460
**                                                          **          01461
** LEVEL 083   Fix carriage control column for STRIP        **          01462
**             diagnostic messages.  Option DGSTRI.         **          01463
**                                                          **          01464
** LEVEL 084   Added option SHOOVL, which displays          **          01465
**             the first 80 bytes of the first block of     **          01466
**             each output tape, to determine if it is      **          01467
**             a VOL1 label, and what kind of VOL1 label.   **          01468
**             Added option KEEPVOL, KEEPVL.  This option   **
**             looks at the VOL1 label of the output tape,  **
**             and keeps it in the copied tape, if the      **
**             input tape VOL1 label is compatible with it. **
**             The principal reason for having this, is if  **
**             a scratch tape is the copied tape, you do    **
**             not necessarily know its volser in advance.  **
**                                                          **          01470
** LEVEL 085   Size constraint relief.  Already ran out of  **          01470
**             6 base registers.  GETMAIN a workarea and    **          01470
**             put extra stuff there, addressable with R13. **          01470
**                                                          **          01470
**             Allow READ and SHOOVL at the same time,      **          01470
**             so that you can do a "dry run" without tape  **          01470
**             copying.  Now you can see what is on the     **          01470
**             output tapes you have mounted, without       **          01470
**             overlaying them as soon as you saw what      **          01470
**             used to be there.                            **          01470
**                                                          **          01470
**************************************************************          01471
**************************************************************          01472
         MACRO                                                          01473
.* ----------------------------------------------------------------- *  01474
.*  Establish addressability to fields in MSGCSECT.                  *  01475
.* ----------------------------------------------------------------- *  01476
&NAME    ADRSMS                                                         01477
*                                         Operate with a message field  01478
         STM   R4,R5,SAV45MSG             Store work registers          01479
         USING MSGCSECT,R5,R4             Address MSGCSECT              01480
         L     R5,=V(MSGCSECT)            Load CSECT entry              01481
         LA    R4,4095(,R5)               Second base                   01482
         LA    R4,1(,R4)                    completed                   01483
         MEND                                                           01484
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01485
         MACRO                                                          01486
.* ----------------------------------------------------------------- *  01487
.*  DROP addressability to fields in MSGCSECT.                       *  01488
.* ----------------------------------------------------------------- *  01489
&NAME    DROPMS                                                         01490
         LM    R4,R5,SAV45MSG             Restore work registers        01491
         DROP  R5,R4                      And tell that they're gone    01492
         MEND                                                           01493
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01494
         MACRO                                                          01495
.* ----------------------------------------------------------------- *  01496
.*  Print a message to SYSPRINT from a 133-character message line    *  01497
.*  that is in the MSGCSECT CSECT.  Addressability established.      *  01498
.* ----------------------------------------------------------------- *  01499
&NAME    PTMSN &MSGLINE                                                 01500
*                                 Print a message line to SYSPRINT      01501
*                                 with MSGCSECT addressability there    01502
         MVI   LINE-1,X'40'               Move in blank                 01503
         MVC   LINE(133),LINE-1           And blank line                01504
         MVC   LINE(133),&MSGLINE         Move message to line & print  01505
         PUT   SYSPRINT,LINE                                            01506
         MEND                                                           01507
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01508
         MACRO                                                          01495
.* ----------------------------------------------------------------- *  01496
.*  Print a message to SYSPRINT from any length message line that    *  01497
.*  is in the MSGCSECT CSECT, provided that addressability has been  *  01498
.*  previously established, using the ADRSMS and DROPMS macros.      *  01498
.* ----------------------------------------------------------------- *  01499
&NAME    PTMSL &MSGLINE,&CC=                                            01500
*                                 Print a message line to SYSPRINT      01501
*                                 with MSGCSECT addressability there    01502
         MVI   LINE-1,X'40'               Move in blank                 01503
         MVC   LINE(133),LINE-1           And blank line                01504
         MVC   LINE(L'&MSGLINE),&MSGLINE  Move message to line & print  01505
         AIF   ('&CC' EQ '0').PTMSL0      Skip 1 line
         AIF   ('&CC' EQ '-').PTMSLD      Skip 2 lines
         AIF   ('&CC' EQ '1').PTMSL1      Skip to top of page
         AGO   .PTMSLE
.PTMSL0  MVI   LINE,C'0'                  Move cc 0 to LINE
         AGO   .PTMSLE
.PTMSLD  MVI   LINE,C'-'                  Move cc - to LINE
         AGO   .PTMSLE
.PTMSL1  MVI   LINE,C'1'                  Move cc 1 to LINE
.PTMSLE  ANOP
         PUT   SYSPRINT,LINE                                            01506
         MEND                                                           01507
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01508
         MACRO                                                          01509
.* ----------------------------------------------------------------- *  01510
.*  Print a message to SYSPRINT from a 133-character message line    *  01511
.*  that is in the MSGCSECT CSECT.                                   *  01512
.* ----------------------------------------------------------------- *  01513
&NAME    PTMS  &MSGLINE                                                 01514
*                                   Print a message line to SYSPRINT    01515
         STM   R4,R5,SAV45MSG             Store work registers          01516
         USING MSGCSECT,R5,R4             Address MSGCSECT              01517
         L     R5,=V(MSGCSECT)            Load CSECT entry              01518
         LA    R4,4095(,R5)               Second base                   01519
         LA    R4,1(,R4)                    completed                   01520
         MVI   LINE-1,X'40'               Move in blank                 01521
         MVC   LINE(133),LINE-1           And blank line                01522
         MVC   LINE(133),&MSGLINE         Move message to line & print  01523
         PUT   SYSPRINT,LINE                                            01524
         LM    R4,R5,SAV45MSG             Restore work registers        01525
         DROP  R5,R4                      And tell that they're gone    01526
         MEND                                                           01527
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01528
         MACRO                                                          01529
.* ----------------------------------------------------------------- *  01530
.*  Perform an instruction with one or more operands from MSGCSECT.  *  01531
.* ----------------------------------------------------------------- *  01532
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC                                   01533
*                                         Operate with a message field  01534
         STM   R4,R5,SAV45MSG             Store work registers          01535
         USING MSGCSECT,R5,R4             Address MSGCSECT              01536
         L     R5,=V(MSGCSECT)            Load CSECT entry              01537
         LA    R4,4095(,R5)               Second base                   01538
         LA    R4,1(,R4)                    completed                   01539
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field    01540
         LM    R4,R5,SAV45MSG             Restore work registers        01541
         DROP  R5,R4                      And tell that they're gone    01542
         MEND                                                           01543
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01544
         MACRO                                                          01545
&NAME    HEX   &TO,&LEN,&FROM                                           01546
&NAME    DS    0H                                                       01547
         ST    R4,SAV4HEX                                               01548
         STM   R15,R1,HEXSAVE                                           01549
         LA    R1,&FROM                                                 01550
         LA    R0,&LEN                                                  01551
         LA    R15,&TO                                                  01552
         BAL   R4,HEX                                                   01553
         L     R4,SAV4HEX                                               01554
         LM    R15,R1,HEXSAVE                                           01555
         MEND                                                           01556
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *  01557
         EJECT                                                          01558
         YREGS                                                          01559
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                               01560
         GBLA  &HEXDFLA                                                 01561
* ------------------------------------------------------------------ *  01562
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *  01563
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *  01564
* ------------------------------------------------------------------ *  01565
&HEXDFLA SETA  4                                                        01566
&HEXDFLC SETC  '&HEXDFLA'                                               01567
COPYMODS CSECT                                                          01568
         USING *,R15                                                  * 01569
         B     EYECATCH                                               * 01570
         DC    C'HEX DUMP '                                             01571
HEXDFLCC DC    C'&HEXDFLC'                                              01572
         DC    C' RECORDS '                                             01573
HEXDFLL  EQU   L'HEXDFLCC                                               01574
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                01575
         DC    C'--- '            MAKE EYECATCHER VISIBLE             * 01576
         DC    C'COPYMODS Level 085 '                                 * 01577
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 * 01578
         DC    C'SYSIN IN PARMCHEK PGM'                                 01579
EYECATCH DS    0D             ENSURE ALIGNMENT                        * 01581
         SAVE  (14,12)                                                  01582
         LR    R5,R1          SAVE PARM POINTER                         01583
* -----                       SET UP SIX BASE REGISTERS                 01589
         LR    R12,R15                                                  01591
         DROP  R15                                                      01588
         LA    R11,4095(,R12)                                           01592
         LA    R11,1(,R11)                                              01593
         LA    R10,4095(,R11)                                           01594
         LA    R10,1(,R10)                                              01595
         LA    R9,4095(,R10)                                            01596
         LA    R9,1(,R9)                                                01597
         LA    R8,4095(,R9)                                             01598
         LA    R8,1(,R8)                                                01599
         LA    R6,4095(,R8)                                             01600
         LA    R6,1(,R6)                                                01601
         USING COPYMODS,R12,R11,R10,R9,R8,R6                            01590
         GETMAIN R,LV=WORKLENG,SP=0
         LR    R3,R1
         ST    R13,4(,R3)          SAVE THE CALLER'S R13
         ST    R3,8(,R13)
         LR    R13,R3
         USING WORKAREA,R13
         LR    R1,R5          RESTORE PARM POINTER                      01602
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN        01603
*                             BE PASSED TO THE PARMCHEK PROGRAM.        01604
         ST    R1,PARMSAVE    And store the PARM pointer into this      01605
*                             program too, so it doesn't get lost.      01606
         L     R1,0(,R1)                                                01607
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                     01608
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                 01609
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE         01610
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER   01611
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.        01612
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm 01613
         ST    R0,LABCHENT           Save entry point for calling later 01614
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm 01615
         ST    R0,PRTLBENT           Save entry point for calling later 01616
         L     R0,=V(FOOTAGE)        Entry point of called FOOTAGE pgm  01617
         ST    R0,FOOTGENT           Save entry point for calling later 01618
         L     R0,=V(VOL1STOR)       Entry point for VOL1 storage table
         ST    R0,VOL1SENT           Save entry point for calling later
CONSINIT DS    0H
         MVI   FLAGCODE,X'00'
         MVI   VOLALL-1,X'40'
         MVC   VOLALL,VOLALL-1
         MVI   LINE-1,X'40'
         MVC   LINE,LINE-1
         MVI   LLINE-1,X'40'
         MVC   LLINE,LLINE-1
         MVI   SAVELINE-1,X'40'
         MVC   SAVELINE,SAVELINE-1
         MVI   INVOLFLG,X'00'        ONLY USED BY KEEPVOL.
         MVI   READKFLG,X'00'        ONLY USED BY KEEPVOL.
*   Initialization for 6250 footage calculations ---- below             01619
         MVI   LABELTYP,C'N'         Assume NL for footage calculations 01620
         MVI   DENSITY,C'4'          Assume 6250 density for footage    01621
         MVC   FILENO,=H'1'          Start with first file              01622
         XC    BLKSZE,BLKSZE         Zero                               01623
         XC    NUMBLKS,NUMBLKS         These                            01624
         XC    USERLBLS,USERLBLS         Fields                         01625
         XC    CUMTOTAL,CUMTOTAL           Initially                    01626
         XC    BLKSZWRK,BLKSZWRK                                        01627
         MVC   FILEFT,=C'        '                                      01628
         MVC   REELFT,=C'        '                                      01629
*   Initialization for 6250 footage calculations ---- above             01630
* --- >   Initialize max and min blocksize calculation  < --- * below   01631
         MVC   MAXBLK,=F'0'                 Start small                 01632
         MVC   MINBLK,=F'268435455'         Start big                   01633
* --- >   Initialize max and min blocksize calculation  < --- * above   01634
* ----------------------------------------------------------------- *   01635
*                                                                   *   01636
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *   01637
*                                                                   *   01638
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *   01639
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *   01640
*              FIELDS.                                              *   01641
*                                                                   *   01642
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *   01643
*              FILLED IN.                                           *   01644
*                                                                   *   01645
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *   01646
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *   01647
*              THE PARM SCAN.                                       *   01648
*                                                                   *   01649
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *   01650
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *   01651
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *   01652
*                                                                   *   01653
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *   01654
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *   01655
*                                                                   *   01656
* ------------------------------------------------------------------*   01657
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *   01658
* ------------------------------------------------------------------*   01659
         L     R0,=V(PARMCHEK)                                          01660
         ST    R0,ENTRYPT                                               01661
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM     01662
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.       01663
         BALR  R14,R15                 DO CALL                          01664
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS    01665
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA    01666
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS     01667
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK    01668
* -- >  After PARMS gotten...........                                   01669
         MVC   PARMCOPY(PARMFLLN),0(R1)   Preserve unchanged parms.     01670
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name   01671
         TM    PARMFLG5,X'04'                                           01672
         BO    LTMNUMB0                                                 01673
         MVC   LTMCNTR(4),=F'0'           Init LTM count fullword       01674
         B     LTMNUMB1                                                 01675
LTMNUMB0 DS    0H                                                       01676
         MVC   LTMCNTR(4),LTMNUMB         Init LTM count fullword       01677
LTMNUMB1 DS    0H                                                       01678
         ZAP   LTMCOUNT,=P'0'             Init LTM ascending counter    01679
         MVC   LTMBINAD,=F'0'             Init LTM binary counter       01680
* ----------------------------------------------------------------- *   01681
* ----------------------------------------------------------------- *   01682
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *   01683
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *   01684
* ----------------------------------------------------------------- *   01685
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON        01686
SKIPLTMS DS    0H                                                     * 01687
* ------- >> ------- >>                                                 01688
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?               01689
         BZ    NOASCII4            NO. DON'T ADJUST.                    01690
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.          01691
NOASCII4 DS    0H                                                       01692
* ------- >> ------- >>                                                 01693
* ----- * ----- * ------                                                01694
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?               01695
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                   01696
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                   01697
NONOEXNL DS    0H                                                       01698
* ----- * ----- * ------                                                01699
* ----- * ----- * ------ *------                                        01700
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                           01701
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                   01702
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON             01703
NOCUMSEP DS    0H                                                       01704
* ----- * ----- * ------ *------                                        01705
* ----- * -----                                                         01706
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                       01707
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                   01708
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON       01709
NOCUMTOT DS    0H                                                       01710
* ----- * -----                                                         01711
         TM    PARMFLG6,X'80'   Do we want an options comparison?       01712
         BZ    NOCODDPR         No. Don't force OPTIONS on.             01713
         OI    PARMFLG4,X'20'   Make sure OPTIONS is also on.           01714
NOCODDPR DS    0H                                                       01715
* ----- * -----                                                         01716
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR             01717
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *     01718
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?          01719
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.          01720
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP           01721
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO      01722
*                                      BECAUSE WE'RE COPYING TO SL.     01723
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS            01724
CANLBDMP DS    0H                                                       01725
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *   01726
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                         01727
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS            01728
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                  01729
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                   01730
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF               01731
NOLBDQUI DS    0H                                                       01732
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *   01733
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *    01734
         TM    PARMFLG4,X'02'      IS STRIP ON?                         01735
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS        01736
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF               01737
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF               01738
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF               01739
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                           01740
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                          01741
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                       01742
         NI    PARMFLG6,FF-X'08'   KEEPVOL HAS TO BE OFF
         NI    PARMFLG7,FF-X'10'   SHOOVL  HAS TO BE OFF
NOSTRADJ DS    0H                  END of the STRIP adjustments         01743
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *    01744
         TM    PARMFLG2,X'08'      IS THIS RUN READ-ONLY?               01745
         BZ    SKIXLTMS            NO. DON'T CHANGE INDICATOR           01746
         MVFMS LTMRPTI,READDD      INDICATE LTM'S HAVE BEEN READ        01747
SKIXLTMS DS    0H                                                       01748
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   below                01749
*  Explanation:  If you're already displaying the size of each tape     01750
*                block, you might as well summarize the largest and     01751
*                smallest block size found in that file.                01752
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01753
         TM    PARMFLG6,X'02'      Displaying individual block sizes?   01754
         BZ    NOMMXADJ            NO. Skip this code.                  01755
         OI    PARMFLG6,X'01'      YES. Summarize largest and smallest  01756
NOMMXADJ DS    0H                                                       01757
** - * - * - >>>>   RECSIZE  implies  MINMAX   -   above                01758
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01753
** - * - * - >>>>   KEEPVOL  implies  SHOOVL   -   below                01758
** - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *  01753
* Explanation:  KEEPVOL tells COPYMODS to reuse an eligible output   *
*               volume's VOL1 label in the copied volume, instead    *
*               of overlaying it with the input volume's VOL1 label. *
*               So you have to look at all the output tapes, to see  *
*               if they have VOL1 labels that are appropriate to     *
*               keep.  Also you have to look at the input tape's     *
*               VOL1 label, if it exists, and compare it with each   *
*               output tape's VOL1 label, if IT exists. Then decide. *
** - - - - - - -- - - - - - - - - - - - - - - - - - - - - - - - - -  *  01753
         TM    PARMFLG6,X'08'      Keeping the output volume's VOL1?
         BZ    NOSHVADJ            NO. Don't adjust necessary options.
         OI    PARMFLG7,X'10'      YES. Have to look at Output VOL1's.
         OI    PARMFLG2,X'01'      CHGVOL has to be ON
         NI    PARMFLG2,FF-X'80'   LABADDIN has to be OFF               01737
NOSHVADJ DS    0H
** - * - * - >>>>   KEEPVOL  implies  SHOOVL   -   above                01758
* ----------------------------------------------------------------- *   01759
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *   01760
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *   01761
* ----------------------------------------------------------------- *   01762
* --                                                             -- *   01763
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?            01764
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM       01765
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                   01766
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED         01767
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM              01768
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                01769
         BZ    NOOPTRP1          NO. DON'T CALL IT                      01770
         BALR  R14,R15           CALL SUBPROGRAM                        01771
         TM    PARMFLG6,X'80'    IS CODEDPRM CODED?                     01772
         BZ    NOOPTRP2          NO. DON'T PRINT CODED OPTIONS.         01773
NOOPTRP1 DS    0H                                                       01774
         LA    R1,PARMCOPY       POINT TO QUANTITY TO BE PASSED         01775
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM              01776
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                01777
         BZ    NOOPTRP2          NO. DON'T CALL IT                      01778
         BALR  R14,R15           CALL SUBPROGRAM                        01779
NOOPTRP2 DS    0H                                                       01780
         LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                01781
NOOPTRPT DS    0H                                                       01782
*  -------------------------------------------------------------- *     01783
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL          * 01784
         RDJFCB IN                                                      01785
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL       01786
         ADRSMS                                                         01787
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG         * 01788
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG         * 01789
         DROPMS                                                         01790
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST  01791
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA                     * 01792
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                01793
         MVC   FILNOSAW,=C'00001'  One more than FILNOSAV, for blk size 01794
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET           01795
         SPACE 3                                                        01796
OPENSYSP DS    0H                                                       01797
* ----------------------------------------------------------------- *
*                                                                   *   01798
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                          *   01799
*                                                                   *   01800
* --- READ ONLY CODE ------------------------ below --------------- *   01801
         TM    PARMFLG7,X'10'     Is SHOOVL on for output volumes?  *
         BO    TIOTSHOV           Yes. Don't skip output TIOT's.    *
         TM    PARMFLG2,X'08'     Is this run read-only?            *   01802
         BO    OPENS          Yes--skip the TIOT loop for OUT DD's. *   01803
TIOTSHOV DS    0H                                                   *
* --- READ ONLY CODE ------------------------ above --------------- *   01804
         L     R2,16          R2=CVT                                    01805
         L     R2,0(,R2)      R2=TCB WORDS                              01806
         L     R2,4(,R2)      R2=MY TCB                                 01807
         L     R2,12(,R2)     R2=TIOT                                   01808
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                         01809
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                            01810
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES       01811
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                   01812
         BNE   TIOT1          NO                                        01813
         OI    FLAG1,OP1      SHOW IT                                   01814
         STM   R14,R3,SAV14T03                                    TEST  01815
         RDJFCB OUT1                                                    01816
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL             01817
         MVC   VOLDD,DDOUT1                                             01818
         LM    R14,R3,SAV14T03                                    TEST  01819
         B     TIOTNEXT       CONTINUE                                  01820
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                   01821
         BNE   TIOT2          NO                                        01822
         OI    FLAG1,OP2      SHOW IT                                   01823
         STM   R14,R3,SAV14T03                                    TEST  01824
         RDJFCB OUT2                                                    01825
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL             01826
         MVC   VOLDD,DDOUT2                                             01827
         LM    R14,R3,SAV14T03                                    TEST  01828
         B     TIOTNEXT       CONTINUE                                  01829
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                   01830
         BNE   TIOT3          NO                                        01831
         OI    FLAG1,OP3      SHOW IT                                   01832
         STM   R14,R3,SAV14T03                                    TEST  01833
         RDJFCB OUT3                                                    01834
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL             01835
         MVC   VOLDD,DDOUT3                                             01836
         LM    R14,R3,SAV14T03                                    TEST  01837
         B     TIOTNEXT       CONTINUE                                  01838
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                   01839
         BNE   TIOT4          NO                                        01840
         OI    FLAG1,OP4      SHOW IT                                   01841
         STM   R14,R3,SAV14T03                                    TEST  01842
         RDJFCB OUT4                                                    01843
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL             01844
         MVC   VOLDD,DDOUT4                                             01845
         LM    R14,R3,SAV14T03                                    TEST  01846
         B     TIOTNEXT       CONTINUE                                  01847
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                   01848
         BNE   TIOT5          NO                                        01849
         OI    FLAG1,OP5      SHOW IT                                   01850
         STM   R14,R3,SAV14T03                                    TEST  01851
         RDJFCB OUT5                                                    01852
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL             01853
         MVC   VOLDD,DDOUT5                                             01854
         LM    R14,R3,SAV14T03                                    TEST  01855
         B     TIOTNEXT       CONTINUE                                  01856
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                   01857
         BNE   TIOT6          NO                                        01858
         OI    FLAG1,OP6      SHOW IT                                   01859
         STM   R14,R3,SAV14T03                                    TEST  01860
         RDJFCB OUT6                                                    01861
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL             01862
         MVC   VOLDD,DDOUT6                                             01863
         LM    R14,R3,SAV14T03                                    TEST  01864
         B     TIOTNEXT       CONTINUE                                  01865
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                   01866
         BNE   TIOT7          NO                                        01867
         OI    FLAG1,OP7      SHOW IT                                   01868
         STM   R14,R3,SAV14T03                                    TEST  01869
         RDJFCB OUT7                                                    01870
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL             01871
         MVC   VOLDD,DDOUT7                                             01872
         LM    R14,R3,SAV14T03                                    TEST  01873
         B     TIOTNEXT       CONTINUE                                  01874
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                   01875
         BNE   TIOT8          NO                                        01876
         OI    FLAG1,OP8      SHOW IT                                   01877
         STM   R14,R3,SAV14T03                                    TEST  01878
         RDJFCB OUT8                                                    01879
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL             01880
         MVC   VOLDD,DDOUT8                                             01881
         LM    R14,R3,SAV14T03                                    TEST  01882
         B     TIOTNEXT       CONTINUE                                  01883
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                   01884
         BNE   TIOT9          NO                                        01885
         OI    FLAG2,OP9      SHOW IT                                   01886
         STM   R14,R3,SAV14T03                                    TEST  01887
         RDJFCB OUT9                                                    01888
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL             01889
         MVC   VOLDD,DDOUT9                                             01890
         LM    R14,R3,SAV14T03                                    TEST  01891
         B     TIOTNEXT       CONTINUE                                  01892
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                 01893
         BNE   TIOT10         NO                                        01894
         OI    FLAG2,OP10     SHOW IT                                   01895
         STM   R14,R3,SAV14T03                                    TEST  01896
         RDJFCB OUT10                                                   01897
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL            01898
         MVC   VOLDD,DDOUT10                                            01899
         LM    R14,R3,SAV14T03                                    TEST  01900
         B     TIOTNEXT       CONTINUE                                  01901
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                 01902
         BNE   TIOT11         NO                                        01903
         OI    FLAG2,OP11     SHOW IT                                   01904
         STM   R14,R3,SAV14T03                                    TEST  01905
         RDJFCB OUT11                                                   01906
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL            01907
         MVC   VOLDD,DDOUT11                                            01908
         LM    R14,R3,SAV14T03                                    TEST  01909
         B     TIOTNEXT       CONTINUE                                  01910
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                 01911
         BNE   TIOT12         NO                                        01912
         OI    FLAG2,OP12     SHOW IT                                   01913
         STM   R14,R3,SAV14T03                                    TEST  01914
         RDJFCB OUT12                                                   01915
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL            01916
         MVC   VOLDD,DDOUT12                                            01917
         LM    R14,R3,SAV14T03                                    TEST  01918
         B     TIOTNEXT       CONTINUE                                  01919
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                 01920
         BNE   TIOT13         NO                                        01921
         OI    FLAG2,OP13     SHOW IT                                   01922
         STM   R14,R3,SAV14T03                                    TEST  01923
         RDJFCB OUT13                                                   01924
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL            01925
         MVC   VOLDD,DDOUT13                                            01926
         LM    R14,R3,SAV14T03                                    TEST  01927
         B     TIOTNEXT       CONTINUE                                  01928
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                 01929
         BNE   TIOT14         NO                                        01930
         OI    FLAG2,OP14     SHOW IT                                   01931
         STM   R14,R3,SAV14T03                                    TEST  01932
         RDJFCB OUT14                                                   01933
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL            01934
         MVC   VOLDD,DDOUT14                                            01935
         LM    R14,R3,SAV14T03                                    TEST  01936
         B     TIOTNEXT       CONTINUE                                  01937
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                 01938
         BNE   TIOT15         NO                                        01939
         OI    FLAG2,OP15     SHOW IT                                   01940
         STM   R14,R3,SAV14T03                                    TEST  01941
         RDJFCB OUT15                                                   01942
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL            01943
         MVC   VOLDD,DDOUT15                                            01944
         LM    R14,R3,SAV14T03                                    TEST  01945
         B     TIOTNEXT       CONTINUE                                  01946
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                 01947
         BNE   TIOTNEXT       NO                                        01948
         OI    FLAG2,OP16     SHOW IT                                   01949
         STM   R14,R3,SAV14T03                                    TEST  01950
         RDJFCB OUT16                                                   01951
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL            01952
         MVC   VOLDD,DDOUT16                                            01953
         LM    R14,R3,SAV14T03                                    TEST  01954
         B     TIOTNEXT       CONTINUE                                  01955
TIOTNEXT SR    R3,R3                                                    01956
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                     01957
         AR    R2,R3          R2=NEXT DD ENTRY                          01958
         B     TIOTLOOP       GO CHECK IT                               01959
*  ---------------------------------------------------------          * 01960
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*   01961
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                       01962
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.     01963
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?          01964
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                   01965
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER           01966
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                              01967
NOVOLOV  DS    0H                                                       01968
         CLC   FLAG1(2),=X'0000' No output files open?                  01969
         BNE   OPENS                                                    01970
         OI    PARMFLG2,X'08'    Force READONLY                         01971
         OI    NOUTSFLG,X'01'    Show we were here                      01972
         B     OPENS             Go OPEN files.                         01973
*  ---------------------------------------------------------          * 01974
         SPACE 3                                                        01975
*  -----------------------------------------------------------------  * 01976
*                                                                       01977
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY          01978
*                                                                       01979
*  -----------------------------------------------------------------  * 01980
OPENS    DS    0H               START OPENING FILES                     01981
         OPEN  (SYSPRINT,OUTPUT)                                        01982
*-- + -- + -- >>    below       READONLY forced because no OUTnn DD     01983
         TM    NOUTSFLG,X'01'                                           01984
         BZ    HASOUTPT                                                 01985
         ADRSMS                                                         01986
         PTMSN FORCREAD                                                 01987
         DROPMS                                                         01988
HASOUTPT DS    0H                                                       01989
*-- + -- + -- >>    above       READONLY forced because no OUTnn DD     01990
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                       01991
         BO    OPENMOVE                                                 01992
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                      01993
         BO    OPENMOVE                                                 01994
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                      01995
         BO    OPENMOVE                                                 01996
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.    01997
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    * 01998
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00 01999
         OPEN  (LABLDUMP,OUTPUT)                                      * 02000
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                  02001
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.        02002
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.           02003
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME             02004
NOLBLDD  DS    0H                                                       02005
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE            02006
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.          02007
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                  02008
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD       02009
         OPEN  (LABADDIN,INPUT)                                         02010
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                     02011
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE              02012
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.           02013
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.           02014
NOLABIN  DS    0H                                                       02015
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE            02016
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.          02017
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END               02018
         BZ    OPENIN             NOTHING WRONG.  GO ON.                02019
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?    02020
         CLOSE (SYSPRINT)                                               02021
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                  02022
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.             02023
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                   02024
         CLOSE (LABLDUMP)                                               02025
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                  02026
         BZ    REALYEND           NO. GET OUT.                          02027
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   02028
         CLOSE (LABADDIN)                                               02029
REALYEND B     THEEND                                                   02030
         EJECT                                                          02031
OPENIN   OPEN  (IN,INPUT)                                               02032
         TM    IN+48,X'10'                                              02033
         BO    INISOPEN                                                 02034
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *        02035
         TM    PARMFLG3,X'01'       INITTING TAPES?                     02036
         BO    INISOPEN             OK. //IN DD is not needed.          02037
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?               02038
         BO    INISOPEN             OK. //IN DD is not needed.          02039
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?               02040
         BO    INISOPEN             OK. //IN DD is not needed.          02041
** --- >>>   //IN DD is really needed, but is not OPEN.                 02042
         PTMS  INNOTOPN             Print message that //IN not open.   02043
         B     ENDEM                Go to CLOSE files, and get out.     02044
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *        02045
INISOPEN DS    0H                                                       02046
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?             02047
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO             02048
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *  02049
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?               02050
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN         02051
* ----                                                                  02052
OPENINCK DS    0H                                                       02053
         OI    DATFLAG,X'20'      Initialize "no data read yet" flag.   02054
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02055
         MVC   LTMBINAD,=F'0'                                           02056
         LA    R2,IN              POINT TO IN DCB                       02057
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                 02058
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                  02059
         EXCP  REWIOB                                                   02060
         WAIT  ECB=REWECB                                               02061
OPINREAD DS    0H                                                       02062
         TM    DATFLAG,X'20'      Still no legitimate data read?        02063
         BZ    OPINCHEK           Legitimate data. Look for VOL1.       02064
         MVC   INECB,=F'0'        Initialize IN's ECB                   02065
         EXCP  INIOB                                                    02066
         WAIT  ECB=INECB                                                02067
* ->->->       Break in to bypass LTMs    ->->->   below                02068
         TM    INCSW+4,X'01'      Was a tape mark read?                 02069
         BZ    OPINCHEK           No. This is legitimate data.          02070
         AP    LTMCOUNT,=P'1'     Add 1 to Tape Mark count.             02071
         L     R0,LTMBINAD                                              02072
         A     R0,=F'1'                                                 02073
         ST    R0,LTMBINAD                                              02074
         ADRSMS                                                         02075
         MVC   LTMRPTI,PASSED     Report tape mark was passed.          02076
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern            02077
         ED    LTMRNUM(11),LTMCOUNT+1           Put count in message    02078
         PTMSN LTMRPT             Report leading TM passed.             02079
         DROPMS                                                         02080
         B     OPINREAD           Do another read until real data found 02081
* ->->->       Break in to bypass LTMs    ->->->   above                02082
OPINCHEK DS    0H                                                       02083
         NI    DATFLAG,FF-X'20'   Show legitimate data read now.        02084
         OI    DATFLAG,X'40'      Show we came thru here.               02085
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                  02086
         BE    OPENINSL                 Yes, turn on SL flag.           02087
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                    02088
         BE    OPENINSL                 Yes, turn on SL flag.           02089
         B     RESETIN            No. Just rewind to reposition.        02090
OPENINSL DS    0H                                                       02091
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL             02092
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?             02093
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN   02094
****** ------ BELOW ------ SL FILE NUMBERS.                             02095
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?          02096
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                02097
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?     02098
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG     02099
**** ----- >>>>>   Force file limiting by SL   - - -  below             02100
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim  02101
         BZ    NOSLFLIM              Not set, bypass code for it        02102
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number         02103
         L     R0,LTGFILE                                               02104
         A     R0,LTMBINAD                                              02105
         ST    R0,LTGFILE                                               02106
         ADRSMS                                                         02107
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02108
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning    02109
         PTMSN FORCESLM              Say you'll force limiting by SL    02110
         DROPMS                                                         02111
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?    02112
         BNO   SLLIMRES              No. only SLLIM. So go on.          02113
         PTMS  TWOFORCE              Say you'll force limiting by SL    02114
SLLIMRES DS    0H                                                       02115
         B     RESETIN                                                  02116
NOSLFLIM DS    0H                                                       02117
**** ----- >>>>>   Force file limiting by SL   - - -  above             02118
**** ----- >>>>>   Force file limiting by NL   - - -  below             02119
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim  02120
         BZ    NONLFLIM              Not set, bypass code for it        02121
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number         02122
         L     R0,LTGFILE                                               02123
         A     R0,LTMBINAD                                              02124
         ST    R0,LTGFILE                                               02125
         ADRSMS                                                         02126
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02127
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning    02128
         PTMSN FORCENLM              Say you'll force limiting by NL    02129
         DROPMS                                                         02130
         B     RESETIN                                                  02131
NONLFLIM DS    0H                                                       02132
**** ----- >>>>>   Force file limiting by NL   - - -  above             02133
* -- > Strip test                                                       02134
         TM    PARMFLG4,X'02'        Are we stripping labels?           02135
         BZ    OPENINXW              No. Bypass this section.           02136
         TM    PARMFLG3,X'02'        Are we limiting files also?        02137
         BO    OPENINXW              Yes. Use SL number.                02138
* --- >>   Diagnostics for stripping   << --- *   below                 02139
         TM    PARMFLG6,X'04'                                           02140
         BZ    DGSTRI0B                                                 02141
         MVI   LINE-1,X'40'                                             02142
         MVC   LINE,LINE-1                                              02143
         MVC   LINE(11),=C' STRIPFLG: '                                 02144
         HEX   LINE+11,1,STRIPFLG                                       02145
         MVI   LINE+15,C'B'                                             02146
         MVC   LINE+20(10),=C'ISLBLFLG: '                               02147
         HEX   LINE+30,1,ISLBLFLG                                       02148
         MVC   LINE+40(10),=C'LBLFLAG:  '                               02149
         HEX   LINE+50,1,LBLFLAG                                        02150
         PUT   SYSPRINT,LINE                                            02151
DGSTRI0B DS    0H                                                       02152
* --- >>   Diagnostics for stripping   << --- *   above                 02153
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.  02154
         L     R0,LTGFILE                                               02155
         A     R0,LTMBINAD                                              02156
         ST    R0,LTGFILE                                               02157
         ADRSMS                                                         02158
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02159
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL      02160
         DROPMS                                                         02161
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG   02162
OPENINXW DS    0H                                                       02163
* -- > Strip test                                                       02164
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL   02165
         L     R0,LTGFILE                                               02166
         A     R0,LTMBINAD                                              02167
         ST    R0,LTGFILE                                               02168
         ADRSMS                                                         02169
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02170
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE   02171
         DROPMS                                                         02172
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG   02173
OPENINXX DS    0H                                                       02174
****** ------ ABOVE ------ SL FILE NUMBERS.                             02175
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.    02176
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG               02177
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                  02178
         BZ    RESETEND           NO. GET OUT.                          02179
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   02180
         CLOSE (LABADDIN)                                               02181
RESETEND CLOSE (IN)                                                     02182
         B     THEEND                                                   02183
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.    02184
RESETIN  DS    0H                                                       02185
         TM    PARMFLG2,X'80'     Came here for LABADDIN?               02186
         BZ    RESETSLD           No. Do complete rewind.               02187
         MVC   LTMCNTR(4),LTMBINAD                                      02188
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02189
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.   02190
         OI    RESLTMWF,X'01'                                           02191
         LA    R2,IN              POINT TO IN DCB                       02192
         ST    R2,BKBDCBPT        TELL IOB TO BACKSPACE ONLY ONE BLOCK  02193
         MVC   BK1BECB,=F'0'                                            02194
         EXCP  BK1BIOB                                                  02195
         WAIT  ECB=BK1BECB                                              02196
         B     NOLBLDMP                                                 02197
RESETSLD DS    0H                                                       02198
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.    02199
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.   02200
         MVC   REWECB,=F'0'                                             02201
         EXCP  REWIOB                                                   02202
         WAIT  ECB=REWECB                                               02203
NOINITOP DS    0H                                                       02204
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *  02205
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.           02206
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.            02207
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA               02208
         LTR   R15,R15                  DDNAME SHOULD BE THERE          02209
         BNZ   NOLBLDD                  IF NOT, FLAG                    02210
         ST    R7,SAVE7REG              SAVE R7                         02211
         LA    R7,LBLJFCB               POINT TO JFCB AREA              02212
         USING JFCBLK,R7                MAP THE AREA                    02213
         ADRSMS                                                         02214
         MVC   LDMPOUTM+38(44),JFCBDSNM                                 02215
         MVC   LDMPOUTM+89(8),JFCBELNM                                  02216
         MVC   LDMPOUTM+105(6),JFCBVOLS                                 02217
         PTMSN LDMPOUTM                                                 02218
         DROPMS                                                         02219
         DROP  R7                                                       02220
         L     R7,SAVE7REG              RESTORE R7                      02221
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.                 * 02222
         TM    PARMFLG2,X'80'     TEST IF LABADDIN IS NEEDED.           02223
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.            02224
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA               02225
         LTR   R15,R15                  DDNAME SHOULD BE THERE          02226
         BNZ   NOLABIN                  IF NOT, FLAG                    02227
         ST    R7,SAVE7REG              SAVE R7                         02228
         LA    R7,LBNJFCB               POINT TO JFCB AREA              02229
         USING JFCBLK,R7                MAP THE AREA                    02230
         ADRSMS                                                         02231
         MVC   LDMPINMS+38(44),JFCBDSNM                                 02232
         MVC   LDMPINMS+89(8),JFCBELNM                                  02233
         MVC   LDMPINMS+105(6),JFCBVOLS                                 02234
         PTMSN LDMPINMS                                                 02235
         DROPMS                                                         02236
         DROP  R7                                                       02237
         L     R7,SAVE7REG              RESTORE R7                      02238
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.                 * 02239
* --- READ ONLY CODE ------------------ BELOW ---------------         * 02240
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 02241
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.            * 02242
*                         OTHERWISE PUT INITIAL READONLY MSG          * 02243
         PTMS  READOMSG              MOVE READ-ONLY MESSAGE             02244
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02245
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?           02246
         BZ    NOLIMFMR         NO, SKIP MESSAGE                        02247
         ADRSMS                                                         02248
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02249
         PTMSN LIMFMSG                  MOVE MESSAGE TEXT IN            02250
         DROPMS                                                         02251
NOLIMFMR DS    0H                                                       02252
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02253
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                 02254
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?         02255
         BZ    N1LIMHEX         NO, SKIP MESSAGE                        02256
         TM    PARMFLG7,X'10'   IS SHOOVL THERE, COMBINED WITH READ?
         BO    N1LIMHEX         YES. DON'T PRINT MESSAGE TWICE.
         MVC   LINE,LINE-1      CLEAR MSG LINE                          02257
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?            02258
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.          02259
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                02260
         B     N1LIMPRT             AND PRINT IT                        02261
N1LIMDEF DS    0H                                                       02262
         ADRSMS                                                         02263
         MVC   LIMPMSG+11(10),PRTCHAR                                   02264
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                02265
         DROPMS                                                         02266
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                        02267
N1LIMHEX DS    0H                                                       02268
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                 02269
         TM    PARMFLG7,X'10'   SHOOVL IN EFFECT?
         BO    OPENMOVE         YES. WE HAVE TO OPEN OUTPUT FILES.
         B     READIN                                                 * 02270
* --- READ ONLY CODE ------------------ ABOVE ---------------         * 02271
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE   02272
*                             THIS ALSO MOVES FLAG2 TO FLAG4          * 02273
*  ---------------------------------------------------------          * 02274
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                 02275
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?         02276
         BZ    NOLIMHEX         NO, SKIP MESSAGE                        02277
         MVC   LINE,LINE-1      CLEAR MSG LINE                          02278
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?            02279
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.          02280
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                02281
         B     NOLIMPRT             AND PRINT IT                        02282
NOLIMDEF DS    0H                                                       02283
         ADRSMS                                                         02284
         MVC   LIMPMSG+11(10),PRTCHAR                                   02285
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                02286
         DROPMS                                                         02287
NOLIMPRT PUT   SYSPRINT,LINE                                            02288
NOLIMHEX DS    0H                                                       02289
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                 02290
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                        02291
         BO    INITEBCD                                                 02292
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                02293
         BO    INITAS3                                                  02294
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                02295
         BO    INITAS4                                                  02296
         B     OPENOINT                                                 02297
INITEBCD DS    0H                                                       02298
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN         02299
         B     NOCORPRT                                                 02300
INITAS3  DS    0H                                                       02301
         ADRSMS                                                         02302
         MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN         02303
         MVC   INITCOPD,INITCREA                                        02304
         DROPMS                                                         02305
         B     NOCORPRT                                                 02306
INITAS4  DS    0H                                                       02307
         ADRSMS                                                         02308
         MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN         02309
         MVC   INITCOPD,INITCREA                                        02310
         DROPMS                                                         02311
         B     NOCORPRT                                                 02312
OPENOINT DS    0H                                                       02313
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *   02314
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT     02315
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE             02316
         ST    R7,SAVE7REG                                              02317
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE      02318
         L     R7,SAVE7REG                                              02319
NOCORPRT DS    0H                                                       02320
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *   02321
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02322
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?           02323
         BZ    NOLIMFMS         NO, SKIP MESSAGE                        02324
         ADRSMS                                                         02325
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.     02326
         PTMSN LIMFMSG          MOVE MESSAGE TEXT IN                    02327
         DROPMS                                                         02328
NOLIMFMS DS    0H                                                       02329
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02330
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02331
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?          02332
         BZ    NOLIMLMR         NO, SKIP MESSAGE                        02333
         ADRSMS                                                         02334
         MVC   LIMLMSG+11(10),LABCHAR                                   02335
         PTMSN LIMLMSG          MOVE MESSAGE TEXT IN                    02336
         DROPMS                                                         02337
NOLIMLMR DS    0H                                                       02338
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02339
         TM    PARMFLG5,X'04'       WRITE LTMS ENABLED?                 02340
         BZ    NOLTMSG0             NO. DON'T PRINT MESSAGE.            02341
         ADRSMS                                                         02342
         MVC   LTMWMSG+11(10),LTMCHAR                                   02343
         MVC   LINE(133),LTMWMSG    MOVE MESSAGE TEXT IN                02344
         DROPMS                                                         02345
         PUT   SYSPRINT,LINE        AND PRINT IT                        02346
NOLTMSG0 DS    0H                                                       02347
**** ---- >>> Message that labels are being stripped <<< ---- below *** 02348
         TM    PARMFLG4,X'02'     Are labels being stripped?            02349
         BZ    NOSTRMSG                                                 02350
         PTMS  STRPMSG            Show we're stripping labels           02351
NOSTRMSG DS    0H                                                       02352
**** ---- >>> Message that labels are being stripped <<< ---- above *** 02353
OPENSHOO DS    0H
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPENSHOE                   NO. DON'T PRINT SHOOVL HEADER
         ADRSMS
         PTMSL SHOOVLHU,CC=0
         PTMSL SHOOVLHD                   PRINT HEADER FOR SHOOVL
         PTMSL SHOOVLHU
         DROPMS
OPENSHOE DS    0H
OPEN0    DS    0H                                                       02354
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                         02355
         BZ    OPEN1          NO                                        02356
*        OPEN  (OUT1,OUTPUT)                                            02357
         L     R2,=A(OUT1)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN0EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT1                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT1       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB1,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB1-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN0EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                         02358
         BZ    OPEN2          NO                                        02359
*        OPEN  (OUT2,OUTPUT)                                            02360
         L     R2,=A(OUT2)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN1EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT2                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT2       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB2,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB2-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN1EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                         02361
         BZ    OPEN3          NO                                        02362
*        OPEN  (OUT3,OUTPUT)                                            02363
         L     R2,=A(OUT3)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN2EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT3                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT3       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB3,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB3-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN2EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                         02364
         BZ    OPEN4          NO                                        02365
*        OPEN  (OUT4,OUTPUT)                                            02366
         L     R2,=A(OUT4)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN3EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT4                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT4       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB4,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB4-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN3EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                         02367
         BZ    OPEN5          NO                                        02368
*        OPEN  (OUT5,OUTPUT)                                            02369
         L     R2,=A(OUT5)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN4EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT5                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT5       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB5,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB5-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN4EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                         02370
         BZ    OPEN6          NO                                        02371
*        OPEN  (OUT6,OUTPUT)                                            02372
         L     R2,=A(OUT6)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN5EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT6                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT6       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB6,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB6-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN5EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                         02373
         BZ    OPEN7          NO                                        02374
*        OPEN  (OUT7,OUTPUT)                                            02375
         L     R2,=A(OUT7)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN6EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT7                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT7       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB7,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB7-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN6EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                         02376
         BZ    OPEN8          NO                                        02377
         OPEN  (OUT8,OUTPUT)                                            02378
         L     R2,=A(OUT8)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN7EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT8                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT8       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB8,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB8-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN7EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                         02379
         BZ    OPEN9          NO                                        02380
*        OPEN  (OUT9,OUTPUT)                                            02381
         L     R2,=A(OUT9)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN8EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT9                    LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT9       MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB9,VOL1AREA           STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB9-1(1),VOL1FLAG      SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN8EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                        02382
         BZ    OPEN10         NO                                        02383
*        OPEN  (OUT10,OUTPUT)                                           02384
         L     R2,=A(OUT10)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN9EN                    NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT10                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT10      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB10,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB10-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN9EN  DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                        02385
         BZ    OPEN11         NO                                        02386
*        OPEN  (OUT11,OUTPUT)                                           02387
         L     R2,=A(OUT11)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN10EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT11                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT11      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB11,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB11-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN10EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                        02388
         BZ    OPEN12         NO                                        02389
*        OPEN  (OUT12,OUTPUT)                                           02390
         L     R2,=A(OUT12)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN11EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT12                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT12      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB12,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB12-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN11EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                        02391
         BZ    OPEN13         NO                                        02392
*        OPEN  (OUT13,OUTPUT)                                           02393
         L     R2,=A(OUT13)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN12EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT13                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT13      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB13,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB13-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN12EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                        02394
         BZ    OPEN14         NO                                        02395
*        OPEN  (OUT14,OUTPUT)                                           02396
         L     R2,=A(OUT14)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN13EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT14                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT14      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB14,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB14-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN13EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                        02397
         BZ    OPEN15         NO                                        02398
*        OPEN  (OUT15,OUTPUT)                                           02399
         L     R2,=A(OUT15)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN14EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT15                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT15      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB15,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB15-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN14EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                        02400
         BZ    READIN         NO                                        02401
*        OPEN  (OUT16,OUTPUT)                                           02402
         L     R2,=A(OUT16)
         BAL   R7,OPENOUT                 CONDITIONAL OPEN, DEPENDING.
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - below
         TM    PARMFLG7,X'10'             ARE WE SHOWING OUTPUT VOL1?
         BZ    OPEN15EN                   NO. SKIP ITS CODE.
         BAL   R7,CLVL1IOB                CLEAR IOB FOR NEXT USE
         ST    R2,SAVER2X1                ENSURE R2 AVAILABLE
         LA    R2,OUT16                   LOAD DCB ADDRESS IN IOB
         ST    R2,VOL1DCBP                PUT IT INTO THE IOB
         MVC   OVOLMSGH+1(5),DDOUT16      MOVE DD NAME LIT INTO MSG
         L     R2,SAVER2X1                RESTORE R2
         BAL   R7,TESTOVOL                GET FIRST 80 BYTES ON TAPE
         ST    R2,SAVER2X1                SAVE R2 AGAIN
         L     R2,VOL1SENT                LOAD VOL1 STORAGE AREA
         USING VOL1STOR,R2                TELL ASSEMBLER
         MVC   VOL1LB16,VOL1AREA          STORE IMAGE IN PROPER SLOT
         MVC   VOL1LB16-1(1),VOL1FLAG     SHOW IF ELIGIBLE VOL1 LABEL
         L     R2,SAVER2X1                RESTORE R2 AGAIN
         DROP  R2
OPEN15EN DS    0H                                                       02354
* ---- SHOOVL CODE - Dump OUTPUT tape VOL1 label - above
         EJECT                                                          02403
* --------------------------------------------------------- *           02404
*                                                           *           02405
*  READ INPUT                                               *           02406
*                                                           *           02407
* --------------------------------------------------------- *           02408
*                                                           *           02409
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *           02410
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *           02411
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *           02412
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *           02413
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *           02414
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *           02415
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *           02416
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*           02417
*                                                           *           02418
* --------------------------------------------------------- *           02419
READIN   DS    0H                                                       02420
*---------------------------- Write Leading Tapemarks ----- below -->   02421
         TM    PARMFLG1,X'20'       Is LTMSKIP on?                      02422
         BO    NOWRLTMS             Yes. Don't manufacture passed LTMs. 02423
         TM    RESLTMWF,X'01'       Come from RESETIN for LABADDIN?     02424
         BO    READWLTM             Yes. Manufacture LTMs if any.       02425
         TM    PARMFLG5,X'08'       Set to write leading tapemarks?     02426
         BZ    NOWRLTMS             No. Only regular processing.        02427
READWLTM DS    0H                                                       02428
         L     R1,LTMCNTR           Check descending LTM counter        02429
*                                   Previously initialized to LTMNUMB   02430
         C     R1,=F'0'             Is it zero now?                     02431
         BE    NOWRLTMS             Yes. No more writing LTMs.          02432
         AP    LTMCOUNT,=P'1'                                           02433
         L     R0,LTMBINAD                                              02434
         A     R0,=F'1'                                                 02435
         ST    R0,LTMBINAD                                              02436
         BCTR  R1,0                 Not yet 0. Lower it by one.         02437
         ST    R1,LTMCNTR           And store it away for next pass.    02438
* --- >>   Diagnostics for tape mark writing << --- * below             02439
         TM    PARMFLG6,X'04'                                           02440
         BZ    DGSTRI01                                                 02441
         MVI   LINE-1,X'40'                                             02442
         MVC   LINE,LINE-1                                              02443
         MVC   LINE(11),=C' STRIPFLG: '                                 02444
         HEX   LINE+11,1,STRIPFLG                                       02445
         MVI   LINE+15,C'1'                                             02446
         MVC   LINE+20(10),=C'ISLBLFLG: '                               02447
         HEX   LINE+30,1,ISLBLFLG                                       02448
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         02449
         PUT   SYSPRINT,LINE                                            02450
DGSTRI01 DS    0H                                                       02451
* --- >>   Diagnostics for tape mark writing << --- * above             02452
         MVI   OUTCCW,X'1F'         Load tape mark CCW opcode.          02453
         MVC   OUTCCW+6(2),=X'0001'    Put 1 in bytes field, and        02454
         ADRSMS                                                         02455
         MVC   LTMRNUM(11),LTMCTPAT                                     02456
         ED    LTMRNUM(11),LTMCOUNT+1                                   02457
         MVC   LTMRPTI,WRITTEN      Report tape mark written.           02458
         PTMSN LTMRPT               Write report line.                  02459
         DROPMS                                                         02460
         B     WRITE1               Write the tape mark to outputs.     02461
NOWRLTMS DS    0H                                                       02462
*---------------------------- Write Leading Tapemarks ----- above -->   02463
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                  02464
         BO    TLITWRIT                                                 02465
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?          02466
         BO    TLITASCI                                                 02467
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?          02468
         BO    TLITASCI                                                 02469
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR          * 02470
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                    02471
         MVI   INECB,X'00'    INITIALIZE ECB                            02472
* ------------------------------------------------------------------ *  02473
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *  02474
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *  02475
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *  02476
* ------------------------------------------------------------------ *  02477
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                 02478
         BZ    NONLSL0        NO. IGNORE THIS CODE                      02479
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN         02480
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE          02481
NONLSL0  DS    0H                                                       02482
* -----------------------------------------------------------         * 02483
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE              02484
***** --------------- LIMITING FILES ------------------ ***** BELOW *   02485
         TM    PARMFLG3,X'02'     LIMITING FILES?                       02486
         BZ    INOLIMIT           NO - BYPASS THIS CODE                 02487
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?              02488
         BZ    INOLIMIT           NOT YET - JUST GO ON                  02489
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE    02490
*                                 AND DON'T DO MORE READS OF INPUT TAPE 02491
INOLIMIT DS    0H                                                       02492
***** --------------- LIMITING FILES ------------------ ***** ABOVE *   02493
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *   02494
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                 02495
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS    02496
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK    02497
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                    02498
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ     02499
         L     R7,SAVE7RG3        RESTORE R7                            02500
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                    02501
NOLBDADJ DS    0H                                                       02502
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *   02503
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*        02504
*                                                                       02505
*       Since there is a possibility that the WRITE will                02506
*       not work for one of the output ddnames, we have                 02507
*       to save the total bytes successfully moved to the               02508
*       currently open output tapes.  Also file count for               02509
*       this tape, and block count for this file.                       02510
*                                                                       02511
         MVC   PRVBY,TOTBY        Total bytes before this READ          02512
         MVC   FILECNTP,FILECNT   Total file count before this READ     02513
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ    02514
*                                                                       02515
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*        02516
         EXCP  INIOB          READ                                      02517
         WAIT  ECB=INECB      WAIT FOR READ                             02518
* -- >  Display Tape Mark Reads  -  BELOW                               02519
         TM    INCSW+4,X'01'  WAS TM READ?                              02520
*        BO    READIN1        YES                                       02521
         BO    SHOWTMRD                                                 02522
         B     NOTMREAD                                                 02523
SHOWTMRD DS    0H                                                       02524
         TM    PARMFLG6,X'04'                                           02525
         BZ    DGSTRI0R                                                 02526
         MVI   LINE-1,X'40'                                             02527
         MVC   LINE,LINE-1                                              02528
         MVC   LINE+1(31),=C'A Tape Mark has been read !!    1'         02529
         PUT   SYSPRINT,LINE                                            02530
DGSTRI0R DS    0H                                                       02531
         B     READIN1                                                  02532
NOTMREAD DS    0H                                                       02533
* -- >  Display Tape Mark Reads  -  ABOVE                               02534
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?               02535
         BNE   INERR          NO -- ERROR                               02536
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                   02537
*        LH    R2,INCCW+6     R2=READ LENGTH                          * 02538
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY            * 02539
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                      * 02540
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER             * 02541
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT                  * 02542
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT              * 02543
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER             * 02544
         SR    R2,R3          R2=ACTUAL LENGTH READ                     02545
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED             02546
         MVC   BYTESCOH(2),=H'0'  Make sure upper halfword is X'0000'   02547
* ------------------------------------------------------------------- * 02548
*  The BYTESMVD field is now a fullword that should contain the number  02549
*  of bytes moved by the currently executed EXCP READ.                  02550
*                                                                       02551
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***        02552
         TM    PARMFLG6,X'20'     Reporting footages?                   02553
         BZ    NOFEET01           No. Don't execute this code           02554
         MVC   BLKSZWRK(4),BYTESMVD   No longer dependent on R2.        02555
*        ST    R2,BLKSZWRK        Fullword arithmetic, save count       02556
         CLC   BLKSZE,BLKSZWRK    Compare to what was there before      02557
         BNL   NOFEET01           Prev BLKSZE not higher than current?  02558
         MVC   BLKSZE,BLKSZWRK    Less, replace with current blocksize  02559
NOFEET01 DS    0H                                                       02560
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***        02561
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below  02562
         TM    PARMFLG6,X'01'     Are we reporting Max-Min blocksizes?  02563
         BZ    NOMNMXRP           No. Skip all this code.               02564
         ST    R1,SAVE1RG1        Yes. Start by saving work reg.        02565
         L     R1,BYTESMVD        Load it with number of bytes moved.   02566
         C     R1,MAXBLK          Bigger than previous maximum?         02567
         BNH   TRYMINBK           No. Don't adjust maxmimum.            02568
         ST    R1,MAXBLK          Yes. Set new maximum.                 02569
TRYMINBK DS    0H                                                       02570
         C     R1,MINBLK          Smaller than previous minimum?        02571
         BNL   TRYNOMOR           No. Don't adjust minimum.             02572
         ST    R1,MINBLK          Yes. Reduce minimum to current quant. 02573
TRYNOMOR DS    0H                                                       02574
         L     R1,SAVE1RG1        Restore work register.                02575
NOMNMXRP DS    0H                                                       02576
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above  02577
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ         02578
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO          02579
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*        02580
         ST    R7,TOTB7REG        Save BAL Register                     02581
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          02582
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER      02583
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK             02584
         L     R7,TOTB7REG        Restore BAL Register                  02585
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*        02586
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*            02587
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                    02588
         BZ    NPRTHEX           NO. SKIP THIS CODE.                    02589
         ST    R7,R7HXPRT        SAVE R7.                               02590
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.           02591
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT            02592
         BCTR  R1,0              LOWER BY ONE                           02593
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS              02594
         L     R7,R7HXPRT        RESTORE R7.                            02595
NPRTHEX  DS    0H                                                       02596
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*            02597
**** ----  BYTE COUNTS ---- BELOW                                       02598
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                    02599
         BZ    INNOBYTE       NO, SKIP INCREMENT                        02600
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED              02601
         LA    R3,DBIN        POINT REGISTER TO COUNTER                 02602
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                 02603
INNOBYTE DS    0H                                                       02604
**** ----  BYTE COUNTS ---- ABOVE                                       02605
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              * 02606
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST?         * 02607
         BNE   READGO1        NO. SKIP THIS PROCESSING.               * 02608
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ            * 02609
* ------------------------------------------------------------------*   02610
*    Call the LABELCHK program and get the returns.                 *   02611
* ------------------------------------------------------------------*   02612
         L     R15,LABCHENT       Get entry point of called program     02613
         STM   R1,R3,SAVE13LC     Save R1 and R2 and R3.                02614
         LA    R1,PARMFLGS        Point R1 to parm flags.               02615
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   02616
         L     R3,=A(INAREA)      Point R3 to address of INAREA.        02617
         BALR  R14,R15                 Do CALL.                         02618
         ST    R2,SAVELBCK             Address of returned user area    02619
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   02620
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          02621
*                                 A call to LABCHECK overlays INAREA,   02622
*                                 so if a LABCHECK routine alters       02623
*                                 a label, the alteration will be       02624
*                                 written out to the output tapes.      02625
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA    02626
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   02627
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?  02628
         BO    CLOSMALL           Yes. Close all files and finish up.   02629
* ------------------------------------------------------------------*   02630
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL               * 02631
*                             FORMATS, AND SET FLAGS                  * 02632
*                             ACCORDINGLY.  OPTIONALLY                * 02633
*                             PRINT LABEL INFO FOUND.                 * 02634
* ------------------------------------------------------------------ *  02630
* --------------------------------- KEEPVOL processing - below
READKVOL DS    0H         Only do this code for one VOL1 label,
*                         because maybe we have a pernicious input
*                         tape with more than one VOL1 label.
* ------------------------------------------------------------------ *
         TM    PARMFLG6,X'08'     Keep output VOL1 (KEEPVOL) in effect?
         BZ    READKVEN           No. Skip this code.
         TM    READKFLG,X'01'     Don't execute this code twice.
         BO    READKVEN           Flag on, we were already here.
         OI    READKFLG,X'01'     Turn this flag on after first time.
         TM    LBLFLAG,X'04'      Is this a VOL1 label?
         BZ    READKVEN           No. Nothing to do here.
         TM    ISLBLFLG,X'01'     EBCDIC?
         BO    READKVEB           Yes. Deal with EBCDIC VOL1 label.
         TM    ISLBLFLG,X'02'     ASCII?
         BO    READKVAS           Yes. Deal with ASCII VOL1 label.
         B     READKVEN           Fall through. Get out.
READKVEB DS    0H
         OI    INVOLFLG,X'11'     Turn on eligibility flag + EBCDIC
         B     READKVDM           Finished setting flags.
READKVAS DS    0H
         OI    INVOLFLG,X'02'     Show ASCII.
         CLI   INAREA+79,X'33'    Is ASCII VOL1 a Type 3?
         BE    READKVT3           Yes. Turn on appropriate flags.
         CLI   INAREA+79,X'34'    Is ASCII VOL1 a Type 4?
         BE    READKVT4           Yes. Turn on appropriate flags.
         NI    INVOLFLG,X'FF'-X'10'    Turn off eligibility flag.
         B     READKVEN           No. Not eligible to keep this VOL1.
READKVT3 DS    0H
         OI    INVOLFLG,X'14'     Eligibility plus Type 3
         B     READKVDM
READKVT4 DS    0H
         OI    INVOLFLG,X'18'     Eligibility plus Type 4
READKVDM DS    0H                 Copy input VOL1 to storage slot.
         ST    R2,SAVER2X1             Save R2
         L     R2,VOL1SENT             Load VOL1 storage area CSECT
         USING VOL1STOR,R2             Tell Assembler
         MVC   VOL1LBIN,INAREA         Store VOL1 image in proper slot
         MVC   VOL1LBIN-1(1),INVOLFLG  Flag eligible VOL1 label + type
         L     R2,SAVER2X1             Restore R2
         DROP  R2
READKVEN DS    0H
* --------------------------------- KEEPVOL processing - above
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW             02635
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?               02636
         BZ    LBLNOCNT                                                 02637
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?        02638
         BZ    LBLNOCNT                                                 02639
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          02640
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER       02641
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL             02642
LBLNOCNT DS    0H                                                       02643
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW             02644
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?              02645
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING       02646
****-->>                below  -  Test of LRECL=80 and not a label      02647
         ST    R2,SAVER2A         Save contents of R2                   02648
         L     R2,BYTESMVD        Get size of this record.              02649
         C     R2,=F'80'          80 bytes exactly in record?           02650
         BNE   YSTRPFLG           No. Not an exception.                 02651
         TM    ISLBLFLG,X'03'     Was last input record a label?        02652
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.           02653
YSTRPFLG DS    0H                                                       02654
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING             02655
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.    02656
         L     R2,SAVER2A                                               02657
****-->>                above  -  Test of LRECL=80 and not a label      02658
         B     READGO1            AND CONTINUE READ PROCESSING          02659
STRNOSKP DS    0H                                                       02660
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE             02661
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE             02662
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.              * 02663
*                                                                     * 02664
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.              * 02665
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                 02666
         BZ    READGO1            NO. WE CAN GO ON.                     02667
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?             02668
         BZ    READGO1            NO DON'T CHECK FOR SL                 02669
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG               02670
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   02671
         CLOSE (LABADDIN)                                               02672
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM           02673
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.              * 02674
         EJECT                                                          02675
*  ----------------------------------------------------------------  *  02676
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.  02677
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE      02678
*                           INPUT IS FROM THE EXTERNAL LABEL FILE       02679
*  ----------------------------------------------------------------  *  02680
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?              02681
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.              02682
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****       02683
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?            02684
         BZ    STILTAPE                                                 02685
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?       02686
         BZ    STILTAPE                                                 02687
         B     WRTTAPMK                                                 02688
STILTAPE DS    0H                                                       02689
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****       02690
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?   02691
         BZ    DOTHEGET             NO. DO THE FILE GETS.               02692
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                02693
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA   02694
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.         02695
DOTHEGET DS    0H                                                       02696
*** ---                                                                 02697
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?             02698
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                  02699
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?              02700
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                02701
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.  02702
DOGETALW DS    0H                                                       02703
*** ---                                                                 02704
         GET   LABADDIN,EXTLBLIN                                        02705
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                   02706
         BE    INEXTLAB         IF IT IS, IGNORE IT.                    02707
*------------------------------------> Hex Print Limit - Below          02708
         TM    PARMFLG5,X'20'          HEX PRINT ON?                    02709
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT           02710
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?    02711
         BE    NOHXPRAX                          Yes. Reset count.      02712
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?     02713
         BNE   NOHXPREX                        No. Don't reset count.   02714
NOHXPRAX DS    0H                                                       02715
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF          02716
NOHXPREX DS    0H                                                       02717
*------------------------------------> Hex Print Limit - Above          02718
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                       02719
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE       02720
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN    02721
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                02722
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                       02723
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS          02724
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN  02725
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER               02726
* ---------------------------------  EOV2EOF  BELOW  ------------- *    02727
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN 02728
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV            02729
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                    02730
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT           02731
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER         02732
TRAIXEOV DS    0H                                                       02733
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD    02734
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER              02735
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?     02736
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT            02737
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER            02738
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.          02739
NTRALEOV DS    0H                                                       02740
* ---------------------------------  EOV2EOF  ABOVE  ------------- *    02741
*                                                                       02742
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.   02743
*                                                                       02744
* ------     Hex Print records from External Labels    ----  below      02745
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?             02746
         BZ    EXTNOPRT             NO, SO BYPASS THIS                  02747
         ST    R7,R7HXPRT           SAVE R7.                            02748
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.        02749
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT         02750
         BCTR  R1,0                 LOWER BY ONE                        02751
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS           02752
         L     R7,R7HXPRT           RESTORE R7.                         02753
EXTNOPRT DS    0H                                                       02754
* ------     Hex Print records from External Labels    ----  above      02755
* -- >                                                                  02756
ASCIITST DS    0H                                                       02757
         CLI   EXTLBLIN,X'56'              ASCII V                      02758
         BE    ISASCIIG                                                 02759
         CLI   EXTLBLIN,X'45'              ASCII E                      02760
         BE    ISASCIIG                                                 02761
         CLI   EXTLBLIN,X'48'              ASCII H                      02762
         BE    ISASCIIG                                                 02763
         CLI   EXTLBLIN,X'55'              ASCII U                      02764
         BE    ISASCIIG                                                 02765
         CLI   EXTLBLIN,X'2D'              ASCII DASH                   02766
         BE    ISASCIIG                                                 02767
         B     ISNTASCI                                                 02768
ISASCIIG DS    0H                                                       02769
         OI    ASCIIFLG,X'01'              ASSUME ASCII                 02770
         OI    EXASCFLG,X'01'              ASSUME ASCII                 02771
         B     ASCIITSE                                                 02772
ISNTASCI DS    0H                                                       02773
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC   02774
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC   02775
ASCIITSE DS    0H                                                       02776
* -- >                                                                  02777
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                  02778
         BE    NASCVOL1                    YES. TREAT AS A VOL1.        02779
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                 02780
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS           02781
NASCVOL1 DS    0H                                                       02782
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS   02783
*** --- >>  Security off?  -  below                                     02784
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 02785
         BZ    NOSECV01             No. Don't affect these fields.      02786
         TM    ASCIIFLG,X'01'       Only turn off security if ASCII.    02787
         BO    NOSECV01             Otherwise, no security byte here.   02788
         MVI   EXTLBLIN+10,X'20'    Move in ASCII blank.                02789
NOSECV01 DS    0H                                                       02790
*** --- >>  Security off?  -  above                                     02791
         B     GOTVOL01             PROCESS THE VOL1                    02792
NLABVOL1 DS    0H                                                       02793
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW               02794
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                  02795
         BE    NASCHDR1                    YES. TREAT AS A HDR1.        02796
         CLC   EXTLBLIN(4),=C'HDR1'                                     02797
         BNE   NLABHDR1                                                 02798
NASCHDR1 DS    0H                                                       02799
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN             02800
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                   02801
*** --- >>  Security off?  -  below                                     02802
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 02803
         BZ    NOSCEHE2             No. Don't affect these fields.      02804
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        02805
         BO    NOSCEHA1             Yes, turn off appropriate security. 02806
         B     NOSCEHE1             Otherwise do it in EBCDIC.          02807
NOSCEHA1 DS    0H                                                       02808
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                02809
         B     NOSCEHE2                                                 02810
NOSCEHE1 DS    0H                                                       02811
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                02812
NOSCEHE2 DS    0H                                                       02813
*** --- >>  Security off?  -  above                                     02814
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                     02815
         B     ENDIBMSL                                                 02816
NLABHDR1 DS    0H                                                       02817
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                  02818
         BE    NASCHDR2                    YES. TREAT AS A HDR2.        02819
         CLC   EXTLBLIN(4),=C'HDR2'                                     02820
         BNE   NLABHDR2                                                 02821
NASCHDR2 DS    0H                                                       02822
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN             02823
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                   02824
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                     02825
         B     ENDIBMSL                                                 02826
NLABHDR2 DS    0H                                                       02827
***** ----- *****                                                       02828
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                  02829
         BE    NASCEOF1                    YES. TREAT AS A EOF1.        02830
         CLC   EXTLBLIN(4),=C'EOF1'                                     02831
         BNE   NLABEOF1                                                 02832
NASCEOF1 DS    0H                                                       02833
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN             02834
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            02835
*** --- >>  Security off?  -  below                                     02836
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 02837
         BZ    NOSCEEE2             No. Don't affect these fields.      02838
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        02839
         BO    NOSCEEA1             Yes, turn off appropriate security. 02840
         B     NOSCEEE1             Otherwise do it in EBCDIC.          02841
NOSCEEA1 DS    0H                                                       02842
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                02843
         B     NOSCEEE2                                                 02844
NOSCEEE1 DS    0H                                                       02845
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                02846
NOSCEEE2 DS    0H                                                       02847
*** --- >>  Security off?  -  above                                     02848
         B     ENDIBMSL                                                 02849
NLABEOF1 DS    0H                                                       02850
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                  02851
         BE    NASCEOF2                    YES. TREAT AS A EOF2.        02852
         CLC   EXTLBLIN(4),=C'EOF2'                                     02853
         BNE   NLABEOF2                                                 02854
NASCEOF2 DS    0H                                                       02855
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN             02856
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            02857
         B     ENDIBMSL                                                 02858
NLABEOF2 DS    0H                                                       02859
***** ----- *****                                                       02860
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                  02861
         BE    NASCEOV1                    YES. TREAT AS A EOV1.        02862
         CLC   EXTLBLIN(4),=C'EOV1'                                     02863
         BNE   NLABEOV1                                                 02864
NASCEOV1 DS    0H                                                       02865
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN            02866
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            02867
*** --- >>  Security off?  -  below                                     02868
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 02869
         BZ    NOSCEVE2             No. Don't affect these fields.      02870
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?        02871
         BO    NOSCEVA1             Yes, turn off appropriate security. 02872
         B     NOSCEVE1             Otherwise do it in EBCDIC.          02873
NOSCEVA1 DS    0H                                                       02874
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                02875
         B     NOSCEVE2                                                 02876
NOSCEVE1 DS    0H                                                       02877
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                02878
NOSCEVE2 DS    0H                                                       02879
*** --- >>  Security off?  -  above                                     02880
         B     ENDIBMSL                                                 02881
NLABEOV1 DS    0H                                                       02882
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                  02883
         BE    NASCEOV2                    YES. TREAT AS A EOV2.        02884
         CLC   EXTLBLIN(4),=C'EOV2'                                     02885
         BNE   NLABEOV2                                                 02886
NASCEOV2 DS    0H                                                       02887
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN            02888
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1            02889
         B     ENDIBMSL                                                 02890
NLABEOV2 DS    0H                                                       02891
ENDIBMSL DS    0H                                                       02892
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE               02893
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                  02894
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW             02895
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                    02896
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR      02897
* -------------- EOV2EOF BELOW ----------------- *                      02898
ISITEOV  DS    0H                                                       02899
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                    02900
         BE    ISASCEOV                   TREAT AS ASCII EOV            02901
         CLC   EXTLBLIN(3),=C'EOV'                                      02902
         BNE   NOEOF2V                                                  02903
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?               02904
         BZ    NOEOF2V                                                  02905
         MVC   EXTLBLIN(3),=C'EOF'                                      02906
         PTMS  EOVCHG                     MOVE IN MESSAGE               02907
         B     NOEOF2V                                                  02908
ISASCEOV DS    0H                                                       02909
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?               02910
         BZ    NOEOF2V                                                  02911
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD      02912
         PTMS  EOVCHG                     MOVE IN MESSAGE               02913
NOEOF2V  DS    0H                                                       02914
* -------------- EOV2EOF ABOVE ----------------- *                      02915
* ----------                                                            02916
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?     02917
         BZ    BLNOCORR             NO. SKIP THIS.                      02918
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                      02919
         BE    CORBLKCT                                                 02920
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1               02921
         BE    CORBLKCT                                                 02922
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                      02923
         BE    CORBLKCT                                                 02924
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1               02925
         BE    CORBLKCT                                                 02926
BLNOCORR B     EOFOREOV                                                 02927
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW         02928
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?               02929
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.        02930
         TM    PARMFLG3,X'80'       FIXING LABELS?                      02931
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING      02932
         MVC   EXTLBLIN(80),HDR2SAV                                     02933
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDR?                   02934
         BNE   MAKEEOF2                                                 02935
         MVC   EXTLBLIN(3),=X'454F46'      REPLACE IT WITH ASCII EOF.   02936
         B     NOMKEOF2                                                 02937
MAKEEOF2 DS    0H                                                       02938
         MVC   EXTLBLIN(3),=C'EOF'                                      02939
NOMKEOF2 DS    0H                                                       02940
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE         02941
* ----------                                                            02942
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                        02943
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET         02944
         CLC   EXTLBLIN(2),=X'454F'                                     02945
         BE    WRTLABEL                                                 02946
**** ---- ****                                                          02947
         CLC   EXTLBLIN(3),=X'55484C'                                   02948
         BE    ISASUHL                                                  02949
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                 02950
         BNE   NOTLUHL                                                  02951
ISASUHL  DS    0H                                                       02952
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS    02953
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS 02954
NOTLUHL  DS    0H                                                       02955
**** ---- ****                                                          02956
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                02957
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.            02958
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                    02959
         BE    WRTLABEL                                                 02960
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD        02961
ENDHEADR DS    0H                                                       02962
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD  02963
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE 02964
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER            02965
*** -----                                                               02966
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE           02967
         BZ    NOEODFL1                                                 02968
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK    02969
         B     ENDTRAIL                                                 02970
NOEODFL1 DS    0H                                                       02971
*** -----                                                               02972
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME           02973
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA        02974
ENDTRAIL DS    0H                                                       02975
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS        02976
         A     R0,=F'1'         ADD 1 TO COUNT                          02977
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                 02978
*** ---                                                                 02979
         TM    PARMFLG4,X'10'       LIMITING LABELS?                    02980
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.             02981
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?     02982
         BL    ENDNOLIM             NOT YET. GET OUT.                   02983
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.      02984
ENDNOLIM DS    0H                                                       02985
*** ---                                                                 02986
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                 02987
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN    02988
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD 02989
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS             02990
         B     WRTTAPMK                                                 02991
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS   02992
CORBLKCT DS    0H                                                       02993
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED    02994
         BZ    NOCORBLK          NO. BYPASS.                            02995
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED  02996
         BZ    NOCORBLK          NO. BYPASS.                            02997
*** ---  FIXING LABELS  --- ***                                         02998
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                02999
         BZ    NOFIXL1           NO. DON'T FIX.                         03000
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?              03001
         BO    NOFIXL1           YES. DON'T CREATE ONE.                 03002
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1           03003
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                   03004
         BNE   NOTASCHD                   NO.                           03005
         MVC   EXTLBLIN(3),=X'454F46'     YES. MOVE IN ASCII EOF        03006
         B     NOFIXL1                    AND GET OUT.                  03007
NOTASCHD DS    0H                                                       03008
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL             03009
NOFIXL1  DS    0H                                                       03010
*** ---  FIXING LABELS  --- ***                                         03011
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                   03012
         BE    NOFIXL1A                                                 03013
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                   03014
         BNE   NOFIXL1B                                                 03015
NOFIXL1A DS    0H                                                       03016
         ST    R5,R5HXPRT              Save register.                   03017
         L     R5,SAVTRTCS             Point to translation table CSECT 03018
         USING TRTCSECT,R5                                              03019
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  03020
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         03021
         L     R5,R5HXPRT              Restore R5                       03022
         DROP  R5                                                       03023
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                03024
         B     NOFIXL2                      AND NOT THE EBCDIC ONE      03025
NOFIXL1B DS    0H                                                       03026
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT     03027
NOFIXL2  DS    0H                                                       03028
         STM   R2,R3,SAVE2TO3                                           03029
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD    03030
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   03031
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                03032
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       03033
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             03034
         LM    R2,R3,SAVE2TO3                                           03035
NOCORBLK B     EOFOREOV                                                 03036
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS   03037
GOTVOL01 DS    0H                                                       03038
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT   03039
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"        03040
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                       03041
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?             03042
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT        03043
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS  03044
NOOVLALL DS    0H                                                       03045
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                       03046
         B     WRTLABEL                                                 03047
WRTLABEL OI    WRLBLFLG,X'01'                                           03048
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *       03049
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN      03050
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM         03051
* ----------------------------------------------------------------- *   03052
         L     R15,PRTLBENT       Get entry point of called program     03053
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                      03054
         LA    R1,PARMFLGS        Point R1 to parm flags.               03055
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.    03056
         BALR  R14,R15                 Do CALL.                         03057
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.    03058
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN     03059
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   03060
* ----------------------------------------------------------------- *   03061
NOPRTEXT DS    0H             Don't print external label on report      03062
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *       03063
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           03064
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE         03065
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                   03066
         B     WRITE1         WRITE LABEL RECORD                        03067
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE            03068
WRTTAPMK DS    0H                                                       03069
*** ----------------                                                    03070
         TM    INEODFLG,X'02'                                           03071
         BZ    NOEODNOW                                                 03072
         TM    WRLBLFLG,X'04'                                           03073
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR 03074
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?      03075
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.               03076
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS       03077
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR  03078
NOEODNOW DS    0H                                                       03079
*** ----------------                                                    03080
* --- >>   Diagnostics for tape mark writing << --- * below             03081
         TM    PARMFLG6,X'04'                                           03082
         BZ    DGSTRI02                                                 03083
         MVI   LINE-1,X'40'                                             03084
         MVC   LINE,LINE-1                                              03085
         MVC   LINE(11),=C' STRIPFLG: '                                 03086
         HEX   LINE+11,1,STRIPFLG                                       03087
         MVI   LINE+15,C'2'                                             03088
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03089
         HEX   LINE+30,1,ISLBLFLG                                       03090
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         03091
         PUT   SYSPRINT,LINE                                            03092
DGSTRI02 DS    0H                                                       03093
* --- >>   Diagnostics for tape mark writing << --- * above             03094
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                          03095
         B     WRITE1         WRITE TAPE MARK                           03096
* ------------------ SPECIAL ROUTINES ------------------------------- * 03097
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD   03098
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN        03099
         B     READIN             AND GO BACK WHERE YOU STARTED         03100
* ------------------ SPECIAL ROUTINES ------------------------------- * 03101
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS  03102
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                   03103
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- ** 03104
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                   03105
         BZ    NOFIXLBL          NO. DON'T TRY IT.                      03106
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING   03107
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                 03108
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE             03109
         B     CLOSMALL          FINISHED, GET OUT.                     03110
NOFIXLBL DS    0H                                                       03111
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- ** 03112
* --- >>   Diagnostics for tape mark writing << --- * below             03113
         TM    PARMFLG6,X'04'                                           03114
         BZ    DGSTRI03                                                 03115
         MVI   LINE-1,X'40'                                             03116
         MVC   LINE,LINE-1                                              03117
         MVC   LINE(11),=C' STRIPFLG: '                                 03118
         HEX   LINE+11,1,STRIPFLG                                       03119
         MVI   LINE+15,C'3'                                             03120
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03121
         HEX   LINE+30,1,ISLBLFLG                                       03122
         MVC   LINE+40(32),=C'We are writing a Tape Mark now!!'         03123
         PUT   SYSPRINT,LINE                                            03124
DGSTRI03 DS    0H                                                       03125
* --- >>   Diagnostics for tape mark writing << --- * above             03126
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN      03127
         B     READIN2        WRITE OUTPUTS AND FINISH                  03128
* ------------------------------------------------------------------- * 03129
*                                                                       03130
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                          03131
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                       03132
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                     03133
*      ALREADY.                                                         03134
*                                                                       03135
* ------------------ SPECIAL ROUTINES ------------------------------- * 03136
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.  03137
         EJECT                                                          03138
READGO1  DS    0H                                                       03139
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW         03140
         TM    PARMFLG3,X'04'  COUNTING BYTES?                          03141
         BZ    READNCNT                                                 03142
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                       03143
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE       03144
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED          03145
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY     03146
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL             03147
READNCNT DS    0H                                                       03148
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE         03149
**---->            LABEL STRIPPING CODE          BELOW                  03150
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?              03151
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING       03152
* --- >>   Diagnostics for stripping   << --- *   below                 03153
         TM    PARMFLG6,X'04'                                           03154
         BZ    DGSTRI0A                                                 03155
         MVI   LINE-1,X'40'                                             03156
         MVC   LINE,LINE-1                                              03157
         MVC   LINE(11),=C' STRIPFLG: '                                 03158
         HEX   LINE+11,1,STRIPFLG                                       03159
         MVI   LINE+15,C'A'                                             03160
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03161
         HEX   LINE+30,1,ISLBLFLG                                       03162
         MVC   LINE+40(10),=C'LBLFLAG:  '                               03163
         HEX   LINE+50,1,LBLFLAG                                        03164
         PUT   SYSPRINT,LINE                                            03165
DGSTRI0A DS    0H                                                       03166
* --- >>   Diagnostics for stripping   << --- *   above                 03167
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW      03168
         BZ    RDNOSTRP           NO IT WASN'T                          03169
         TM    ISLBLFLG,X'03'     LAST READ A LABEL?                    03170
         BZ    RDNOSTRP           NO. DON'T STRIP ANYTHING.             03171
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.  03172
RDNOSTRP DS    0H                                                       03173
**---->            LABEL STRIPPING CODE          ABOVE                  03174
         STH   R2,OUTCCW+6    STORE FOR WRITE                         * 03175
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER       03176
         ST    R7,STOR7REG                                              03177
         L     R7,BLOKCNT                                               03178
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS             03179
         ST    R7,BLOKCNT                                               03180
         L     R7,STOR7REG                                              03181
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - below     03182
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   03183
* Output of this option looks like:                                     03184
*  File 00002 Record number: 0000000140 Size of record: 0000032720      03185
*  File 00002 Record number: 0000000141 Size of record: 0000032720      03186
*  File 00002 Record number: 0000000142 Size of record: 0000006400      03187
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   03188
         TM    PARMFLG6,X'02'   Are we reporting individual blk sizes?  03189
         BZ    NORCSIZ1         No. Don't do this routine.              03190
         ST    R7,SAVE7RG7      Save BAL register                       03191
         BAL   R7,CLRCSZMS      Clear data fields from message          03192
         L     R7,SAVE7RG7      Restore BAL register                    03193
         ST    R7,STOR7REG      Save register for safety                03194
         L     R7,BLOKCNT       Get current block count                 03195
         CVD   R7,DWORD         CONVERT BLOCK COUNT TO DECIMAL          03196
         L     R7,STOR7REG      Restore register                        03197
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE                      03198
         MVC   BLKCNTRN,BLKCNTRN-1        INITIALIZE TO ZEROS           03199
         UNPK  BLKCNTRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   03200
         ST    R7,STOR7REG      Save register for safety                03201
         L     R7,BYTESMVD      Get current block size                  03202
         CVD   R7,DWORD         CONVERT BYTES MOVED TO DECIMAL          03203
         L     R7,STOR7REG      Restore register                        03204
         OI    DWORD+7,X'0F'    MAKE SIGN READABLE                      03205
         MVC   BMOVEDRN,BMOVEDRN-1        INITIALIZE TO ZEROS           03206
         UNPK  BMOVEDRN(10),DWORD+2(6)    SAVE 10 DIGITS OF BLKSIZE     03207
         ADRSMS                                                         03208
         MVC   RECSZFNM(5),FILNOSAW       Move File number to message   03209
         MVC   RECSZRCD(10),BLKCNTRN      Move Record number for file   03210
         MVC   RECSZSIZ(10),BMOVEDRN      Move Block Size (byte count)  03211
         PTMSN RECSZMSG                                                 03212
         DROPMS                                                         03213
NORCSIZ1 DS    0H                                                       03214
* - * - * ------ >   RECSIZE Reporting of Individual Blocks - above     03215
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *      03216
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                  03217
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT          03218
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.  03219
NOINITT1 DS    0H                                                       03220
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *      03221
         B     WRITE1           CONTINUE                                03222
*                                                                     * 03223
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           * 03224
READIN1  DS    0H             COME HERE IF TM WAS READ                * 03225
**** ------------------- Leading Tape Marks ------- below               03226
         TM    DATFLAG,X'10'    Has any real data been read?            03227
         BZ    NOSKLTME         Yes, bypass this entire routine.        03228
         TM    PARMFLG1,X'20'   Are we skipping LTMs?                   03229
         BZ    NOSKLTMO         PARM is off, we copy them.              03230
         AP    LTMCOUNT,=P'1'   Increment counter                       03231
         L     R0,LTMBINAD      Increment binary counter                03232
         A     R0,=F'1'                                                 03233
         ST    R0,LTMBINAD                                              03234
         ADRSMS                                                         03235
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern            03236
         ED    LTMRNUM(11),LTMCOUNT+1           Put number in report    03237
         MVC   LTMRPTI,SKIPPED      Report tape mark skipped.           03238
         PTMSN LTMRPT               Write report line.                  03239
         DROPMS                                                         03240
         B     READIN           Skip this tapemark.                     03241
NOSKLTMO DS    0H                                                       03242
         TM    PARMFLG2,X'08'       Is this run READ only?              03243
         BO    NOSKLTMR                                                 03244
         MVFMS LTMRPTI,COPIED       Report tape mark copied.            03245
         B     NOSKLTME                                                 03246
NOSKLTMR DS    0H                                                       03247
         MVFMS LTMRPTI,READDD       Report tape mark read.              03248
NOSKLTME DS    0H                                                       03249
**** ------------------- Leading Tape Marks ------- above               03250
* ------------------------- ADD LABEL TO NL CODE ----------- *          03251
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                03252
         BZ    NONLSL1          NO.  BYPASS.                            03253
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS           03254
*** ---                                                                 03255
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?        03256
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.   03257
*                               DO NOT COLLECT 200 DOLLARS.             03258
*** ---                                                                 03259
NONLSL1  DS    0H                                                       03260
* ------------------------- ADD LABEL TO NL CODE ----------- *          03261
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- * 03262
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?        03263
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.       03264
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?       03265
         BO    WRCTLHDR         YES. PUT IT OUT.                        03266
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?       03267
         BO    WRCTLEOF         YES. PUT IT OUT.                        03268
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?       03269
         BO    WRCTLEOV         YES. PUT IT OUT.                        03270
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.      03271
WRCTLHDR DS    0H                                                       03272
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03273
         MVC   LLINE(80),LABELITH   MARK END OF LABEL                 * 03274
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03275
         BZ    WRCTLAS1         No. Don't translate the control card.   03276
         ST    R5,R5HXPRT       Yes.   Save register.                   03277
         L     R5,SAVTRTCS             Point to translation table CSECT 03278
         USING TRTCSECT,R5                                              03279
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03280
         L     R5,R5HXPRT              Restore R5                       03281
         DROP  R5                                                       03282
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.     03283
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03284
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03285
WRCTLEOF DS    0H                                                       03286
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03287
         MVC   LLINE(80),LABELITR   MARK END OF LABEL                 * 03288
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03289
         BZ    WRCTLAS2         No. Don't translate the control card.   03290
         ST    R5,R5HXPRT       Yes.   Save register.                   03291
         L     R5,SAVTRTCS             Point to translation table CSECT 03292
         USING TRTCSECT,R5                                              03293
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03294
         L     R5,R5HXPRT              Restore R5                       03295
         DROP  R5                                                       03296
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.     03297
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03298
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03299
WRCTLEOV DS    0H                                                       03300
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                 * 03301
         MVC   LLINE(80),LABELITV   MARK END OF LABEL                 * 03302
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            03303
         BZ    WRCTLAS4         No. Don't translate the control card.   03304
         ST    R5,R5HXPRT       Yes.   Save register.                   03305
         L     R5,SAVTRTCS             Point to translation table CSECT 03306
         USING TRTCSECT,R5                                              03307
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII    03308
         L     R5,R5HXPRT              Restore R5                       03309
         DROP  R5                                                       03310
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.     03311
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                    * 03312
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD         03313
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE         03314
NOCNTLWR DS    0H                                                       03315
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- * 03316
         TM    DATFLAG,X'10'  NO DATA READ YET?                       * 03317
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY          * 03318
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?     03319
         BNE   RDNOSKIP                                               * 03320
         AP    LTMCOUNT,=P'1'                                           03321
         L     R0,LTMBINAD                                              03322
         A     R0,=F'1'                                                 03323
         ST    R0,LTMBINAD                                              03324
         ADRSMS                                                         03325
         MVC   LTMRNUM(11),LTMCTPAT                                     03326
         ED    LTMRNUM(11),LTMCOUNT+1                                   03327
         PTMSN LTMRPT            INDICATE LEADING TM SKIPPED            03328
         DROPMS                                                         03329
         B     READIN         DO ANOTHER READ                         * 03330
RDNOSKIP DS    0H                                                     * 03331
         AP    LTMCOUNT,=P'1'                                           03332
         L     R0,LTMBINAD                                              03333
         A     R0,=F'1'                                                 03334
         ST    R0,LTMBINAD                                              03335
         ADRSMS                                                         03336
         MVC   LTMRNUM(11),LTMCTPAT                                     03337
         ED    LTMRNUM(11),LTMCOUNT+1                                   03338
         PTMSN LTMRPT            INDICATE LEADING TM COPIED           * 03339
         DROPMS                                                         03340
         B     MARKFILE                                               * 03341
READINGO DS    0H                                                     * 03342
*------------------------------------> HEX PRINT LIMIT - BELOW          03343
         TM    PARMFLG5,X'20'          HEX PRINT ON?                    03344
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT           03345
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF          03346
NOHXPRST DS    0H                                                       03347
*------------------------------------> HEX PRINT LIMIT - ABOVE          03348
         ST    R7,STOR7REG                                              03349
         L     R7,FILECNT                                               03350
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          * 03351
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        03352
         ADRSMS                                                         03353
         UNPK  FILEDONE+6(5),DWORD+5(3)    UNPACK FILE NUMBER           03354
         MVC   FILNOSAV(5),FILEDONE+6      SAVE DISPLAY NUMBER          03355
         DROPMS                                                         03356
         ST    R7,FILECNT                                               03357
         STH   R7,FILENO      Save File number for FOOTAGE routine      03358
         A     R7,=F'1'       Save one more than current file number    03359
         CVD   R7,DWORD                                                 03360
         OI    DWORD+7,X'0F'                                            03361
         UNPK  FILNOSAW(5),DWORD+5(3)                                   03362
         L     R7,BLOKCNT                                               03363
         ST    R7,NUMBLKS     Save Block Count for FOOTAGE routine      03364
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL            03365
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        03366
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT   03367
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS           03368
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   03369
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****       03370
         TM    PARMFLG3,X'04'     COUNTING BYTES?                       03371
         BZ    MARKNCNT           NO-SKIP ROUTINE                       03372
         ADRSMS                                                         03373
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                  03374
         MVC   FILECONT,=C'CONTAINING'                                  03375
         DROPMS                                                         03376
         L     R4,DBINH           LOAD REG WITH HI ORDER                03377
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED            03378
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA          03379
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                 03380
         L     R4,DBINL           LOAD REG WITH LOW ORDER               03381
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED           03382
         AP    QWORD,DWORD        AND ADD IT IN                         03383
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE          03384
** ----                                                                 03385
         LM    R4,R5,TOTBYTES                                           03386
         A     R5,DBINL            LOW ORDER COUNT                      03387
         BNO   MARKNOVR            B IF NO OVERFLOW                     03388
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03389
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03390
MARKNOVR DS    0H                                                       03391
         A     R4,DBINH            HIGH ORDER                           03392
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL              03393
** ----                                                                 03394
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?            03395
         BZ    MARKISNL            NO. DON'T ADD TOTALS                 03396
         LM    R4,R5,LABBYTES                                           03397
         A     R5,LABINL           LOW ORDER COUNT                      03398
         BNO   MARKNOVL            B IF NO OVERFLOW                     03399
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03400
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03401
MARKNOVL DS    0H                                                       03402
         A     R4,LABINH           HIGH ORDER                           03403
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL              03404
* - >                                                                   03405
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                         03406
         BZ    NOSEPLBL                                                 03407
         ADRSMS                                                         03408
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  03409
         MVC   FILECUMT,=C'CUM LABEL:'                                  03410
         DROPMS                                                         03411
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                  03412
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          03413
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       03414
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  03415
         CVD   R5,DWORD          LOW ORDER WORD                         03416
         AP    QWORD,DWORD       AND ADD IT IN                          03417
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE         03418
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL       03419
NOSEPLBL DS    0H                                                       03420
* - >                                                                   03421
         B     MARKNOLB                                                 03422
MARKISNL DS    0H                                                       03423
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?            03424
         BO    MARKNOLB                                                 03425
         LM    R4,R5,FILBYTES                                           03426
         A     R5,DBINFL           LOW ORDER COUNT                      03427
         BNO   MARKNOVF            B IF NO OVERFLOW                     03428
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                 03429
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                  03430
MARKNOVF DS    0H                                                       03431
         A     R4,DBINFH           HIGH ORDER                           03432
         STM   R4,R5,FILBYTES                                           03433
* - >                                                                   03434
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                         03435
         BZ    NOSEPDAT                                                 03436
         ADRSMS                                                         03437
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  03438
         MVC   FILECUMT,=C'CUM DATA :'                                  03439
         DROPMS                                                         03440
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                  03441
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          03442
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       03443
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  03444
         CVD   R5,DWORD          LOW ORDER WORD                         03445
         AP    QWORD,DWORD       AND ADD IT IN                          03446
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE        03447
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL       03448
NOSEPDAT DS    0H                                                       03449
* - >                                                                   03450
MARKNOLB DS    0H                                                       03451
** ----                                                                 03452
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?               03453
         BZ    MARKNCN2           NO-SKIP ROUTINE                       03454
* - >                                                                   03455
         ADRSMS                                                         03456
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                  03457
         MVC   FILECUMT,=C'CUM TOTAL:'                                  03458
         DROPMS                                                         03459
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                  03460
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          03461
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       03462
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  03463
         CVD   R5,DWORD          LOW ORDER WORD                         03464
         AP    QWORD,DWORD       AND ADD IT IN                          03465
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE        03466
* - >                                                                   03467
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE               03468
MARKNCNT DS    0H                                                       03469
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE     03470
MARKNCN2 DS    0H                                                       03471
         MVFMS FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE     03472
MARKNCNE DS    0H                                                       03473
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****       03474
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below  03475
* Output of this option looks like:                                 *   03476
*  File 00002 Min Blksize:     6400 Max Blksize:    32720           *   03477
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   03478
         TM    PARMFLG6,X'01'               Reporting Min-Max blksize?  03479
         BZ    XMINMAX                      No. Skip all this code.     03480
         STM   R1,R5,SAVE1TO5               Save regs                   03481
         L     R1,MINBLK                    Minimum blksize for file    03482
         XC    DWORD,DWORD                  Clear DWORD to zeros.       03483
         CVD   R1,DWORD                     Convert to decimal.         03484
         OI    DWORD+7,X'0F'                Make sign readable.         03485
         ADRSMS                                                         03486
*        UNPK  MNMXMIN+1(7),DWORD+4(4)      Display number in message   03487
         MVC   MNMXMIN(8),MXPATTRN                                      03488
         ED    MNMXMIN+1(8),DWORD+4                                     03489
         DROPMS                                                         03490
         L     R1,MAXBLK                    Maximum blksize for file    03491
         XC    DWORD,DWORD                  Clear DWORD to zeros.       03492
         CVD   R1,DWORD                     Convert to decimal.         03493
         OI    DWORD+7,X'0F'                Make sign readable.         03494
         ADRSMS                                                         03495
*        UNPK  MNMXMAX+1(7),DWORD+4(4)      Display number in message   03496
         MVC   MNMXMAX(8),MXPATTRN                                      03497
         ED    MNMXMAX+1(8),DWORD+4                                     03498
         MVC   MNMXFNUM(5),FILNOSAV         Display saved file number   03499
         CLC   MNMXMIN+1(7),=C'8435455'     End of input tape?          03500
         BNE   NOPRMSXE                     No. Print msg unchanged.    03501
         MVC   MNMXMIN+1(7),=C'0000000'     Make message reasonable.    03502
         B     NOPRMSXF                     And don't even print it.    03503
NOPRMSXE DS    0H                                                       03504
         PTMSN MNMXMSG1                     Print message               03505
NOPRMSXF DS    0H                                                       03506
         DROPMS                                                         03507
         LM    R1,R5,SAVE1TO5               Restore work regs           03508
XMINMAX  B     XMINMAX1                                                 03509
MXPATTRN DC    X'4020202020202120'          8 bytes of pattern          03510
XMINMAX1 DS    0H                                                       03511
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above  03512
         PTMS  FILEDONE            WRITE IT                             03513
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                   03514
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.        03515
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****       03516
         TM    PARMFLG3,X'04'     COUNTING BYTES?                       03517
         BZ    MARKNTOT           NO-SKIP ROUTINE                       03518
         ADRSMS                                                         03519
         MVC   FILECONT,=C'          '                                  03520
         MVC   FILECUMT,=C'          '                                  03521
         DROPMS                                                         03522
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE             03523
         ST    R4,DBINH            ZERO BYTE COUNT                      03524
         ST    R4,DBINL            ZERO BYTE COUNT                      03525
         ST    R4,LABINH           ZERO BYTE COUNT                      03526
         ST    R4,LABINL           ZERO BYTE COUNT                      03527
         ST    R4,DBINFH           ZERO BYTE COUNT                      03528
         ST    R4,DBINFL           ZERO BYTE COUNT                      03529
MARKNTOT DS    0H                                                       03530
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****       03531
MARKFILE DS    0H                                                       03532
* -- >      Max - Min reporting    -   below                            03533
         TM    PARMFLG6,X'01'               MINMAX on?                  03534
         BZ    NOMXMNRS                     No. No reset necessary.     03535
         MVC   MAXBLK,=F'0'                 Start small - RESET MAX     03536
         MVC   MINBLK,=F'268435455'         Start big   - RESET MIN     03537
NOMXMNRS DS    0H                                                       03538
* -- >      Max - Min reporting    -   above                            03539
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE             03540
         ST    R7,BLOKCNT                                               03541
         L     R7,FILECNT                                               03542
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                      03543
         ST    R7,FILECNT                                               03544
         L     R7,STOR7REG                                              03545
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?                * 03546
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK             * 03547
*                                                                       03548
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***        03549
         TM    PARMFLG6,X'20'     Reporting footages?                   03550
         BZ    NOFEET02           No. Don't execute this code           03551
         LA    R1,LABELTYP        Point to footage work area            03552
         L     R15,FOOTGENT       Load entry point for FOOTAGE routine  03553
         BALR  R14,R15            Call FOOTAGE                          03554
*                                 FOOTAGE workarea has now been updated 03555
         ST    R7,SAVE7RG6                                              03556
         LA    R7,0                                                     03557
         LH    R7,FILENO                                                03558
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL            03559
         L     R7,SAVE7RG6                                              03560
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        03561
         ADRSMS                                                         03562
         UNPK  FOOTMNUM(5),DWORD+5(3)           UNPACK FILE             03563
         MVC   FOOTMFT,FILEFT                                           03564
         MVC   FOOTMCFT,REELFT                                          03565
         DROPMS                                                         03566
*  TEST TEST TEST TEST TEST TEST - below                                03567
FEETDIAG DS    0H                                                       03568
         TM    PARMFLG6,X'40'     Diagnostics wanted?                   03569
         BZ    NOFEETDI           Not requested. Skip printing them.    03570
         STM   R4,R5,SAV45MSG     Register save                         03571
         USING MSGCSECT,R5,R4                                           03572
         L     R5,=V(MSGCSECT)          Load Messages CSECT             03573
         LA    R4,4095(,R5)             Addressability                  03574
         LA    R4,1(,R4)                                                03575
         HEX   FOOTMFIL+2,2,FILENO      File Number from FOOTAGE block  03576
         HEX   FOOTMFIL+8,4,BLKSZE      Block Size  from FOOTAGE block  03577
         HEX   FOOTMFIL+18,4,NUMBLKS    Block Count from FOOTAGE block  03578
         HEX   FOOTMFIL+28,4,CUMTOTAL   Running Total in FOOTAGE block  03579
         MVC   FOOTMFIL+37(10),FILEFT                                   03580
         MVC   FOOTMFIL+47(10),REELFT                                   03581
         LM    R4,R5,SAV45MSG     Register restore                      03582
         DROP  R5,R4                                                    03583
NOFEETDI DS    0H                                                       03584
*  TEST TEST TEST TEST TEST TEST - above                                03585
         ADRSMS                                                         03586
         CLC   FILEDONE+21(7),=C'0000000'                               03587
         BE    NOLASTFT                                                 03588
         PTMSN FOOTMSG1                                                 03589
NOLASTFT DS    0H                                                       03590
         DROPMS                                                         03591
         XC    BLKSZE,BLKSZE  Set max block size to 0 in footage block  03592
NOFEET02 DS    0H                                                       03593
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***        03594
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                         03595
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES            03596
         BZ    MARKFILA          NO - SKIP THIS CODE                    03597
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?    03598
         BNL   MARKFILA          NO - NO RESTRICTIONS                   03599
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA    03600
MARKFILA DS    0H                                                       03601
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                         03602
         TM    PARMFLG4,X'02'   Stripping labels?                       03603
         BZ    MARKSTRX         no - bypass strip-related code          03604
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?               03605
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                 03606
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.    03607
         B     READIN           YES. SKIP WRITING THE T.M. TOO          03608
MARKSTRX DS    0H                                                       03609
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK              * 03610
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?             * 03611
         BZ    MARKGO         NO. TEST FOR 2ND TM                     * 03612
         B     READIN2        YES. WRITE TO OUTPUTS & END             * 03613
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                          03614
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS         * 03615
NOLBL    DS    0H                                                       03616
* --- >>   Diagnostics for tape mark writing << --- * below             03617
         TM    PARMFLG6,X'04'                                           03618
         BZ    DGSTRI04                                                 03619
         MVI   LINE-1,X'40'                                             03620
         MVC   LINE,LINE-1                                              03621
         MVC   LINE(11),=C' STRIPFLG: '                                 03622
         HEX   LINE+11,1,STRIPFLG                                       03623
         MVI   LINE+15,C'4'                                             03624
         MVC   LINE+20(10),=C'ISLBLFLG: '                               03625
         HEX   LINE+30,1,ISLBLFLG                                       03626
         MVC   LINE+40(10),=C'LBLFLAG:  '                               03627
         HEX   LINE+50,1,LBLFLAG                                        03628
         MVC   LINE+55(32),=C'We are writing a Tape Mark now!!'         03629
         PUT   SYSPRINT,LINE                                            03630
DGSTRI04 DS    0H                                                       03631
* --- >>   Diagnostics for tape mark writing << --- * above             03632
         MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM              * 03633
         B     WRITE1         GO WRITE TM TO OUTPUTS                    03634
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         * 03635
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2              * 03636
         BZ    INEODATA       NOT EITHER. END AS USUAL.               * 03637
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ         * 03638
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG          * 03639
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS.         * 03640
*                                                                     * 03641
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED           * 03642
INEODATA DS    0H                                                       03643
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE      03644
*                                                                       03645
READIN2  DS    0H                                                       03646
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?      03647
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?     03648
         BZ    READ2GO           NO. BYPASS THIS CODE.                  03649
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA 03650
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS          03651
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?             03652
         BZ    NOEXTMK           NO                                     03653
         B     WRTTAPMK                                                 03654
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?          03655
         BZ    READ2GO           NO. BYPASS REST OF CODE.               03656
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.         03657
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                   03658
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS   03659
         B     READIN            DON'T WRITE FINAL TAPE MARK YET        03660
READ2STP DS    0H                                                       03661
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS           03662
READ2GO  DS    0H                                                       03663
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?      03664
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                  03665
* --- >>>  ------------------ below -------- Skip writing last T.M.     03666
* -------------------------------------------------------------- *      03667
*            When stripping labels, somehow an extra             *      03668
*            tape mark gets written.  This is a kludge           *      03669
*            to correct that.....                                *      03670
* -------------------------------------------------------------- *      03671
         TM    PARMFLG4,X'02'    Stripping Labels?                      03672
         BZ    READ2GNS          No. don't skip writing last t.m.       03673
*        MVC   LINE(133),LINE-1       CLEAR LINE                        03674
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1             03675
*        PUT   SYSPRINT,LINE                                            03676
         B     WRITE17           Do not write the extra tape mark       03677
READ2GNS DS    0H                                                       03678
* --- >>>  ------------------ above -------- Skip writing last T.M.     03679
         B     WRITE1                                                   03680
         SPACE 3                                                        03681
* -------------------- Code for Initting Tapes ---------->>>>> below    03682
TLITWRIT DS    0H                                                       03683
         TM    PARMFLG3,X'01'                                           03684
         BZ    TLITWRIE                                                 03685
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.   03686
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?        03687
         BO    TLITREW2                YES. SET WRITE CCW BACK.         03688
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.       03689
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.              03690
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.   03691
TLITREW2 DS    0H                      ALREADY DID THE REWIND.          03692
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES. 03693
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           03694
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.         03695
TLITSKP1 DS    0H                                                       03696
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?             03697
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1       03698
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT    03699
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2         03700
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS    03701
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2         03702
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1   03703
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any      03704
* --> Hex printing - below                                              03705
         TM    PARMFLG5,X'20'          Is Hex Printing On?              03706
         BZ    NPRHINT1                No. Bypass it.                   03707
         ST    R7,R7HXPRT              Save BAL register.               03708
         BAL   R7,HEXPRNEX             Hex print from external labels.  03709
         L     R7,R7HXPRT              Restore BAL register.            03710
NPRHINT1 DS    0H                                                       03711
* --> Hex printing - above                                              03712
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      03713
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN       03714
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS       03715
TLITSKP2 DS    0H                                                       03716
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1   03717
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS    03718
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1   03719
* --> Hex printing - below                                              03720
         TM    PARMFLG5,X'20'          Is Hex Printing On?              03721
         BZ    NPRHINT2                No. Bypass it.                   03722
         ST    R7,R7HXPRT              Save BAL register.               03723
         BAL   R7,HEXPRNEX             Hex print from external labels.  03724
         L     R7,R7HXPRT              Restore BAL register.            03725
NPRHINT2 DS    0H                                                       03726
* --> Hex printing - above                                              03727
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      03728
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT            03729
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE   03730
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS    03731
TLITWRIE DS    0H                                                       03732
* -------------------- Code for Initting Tapes ---------->>>>> above    03733
* -------------------- Code for Initting ASCII Tapes ---->>>>> below    03734
TLITASCI DS    0H               INIT ASCII TAPES.                       03735
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape? 03736
         BZ    TLITASCE         No. Bypass this code.                   03737
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.   03738
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?        03739
         BO    TLITRAS2                YES. SET WRITE CCW BACK.         03740
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.       03741
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.              03742
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.   03743
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.          03744
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES. 03745
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE           03746
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.         03747
TLITSKA1 DS    0H                                                       03748
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?             03749
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1       03750
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT    03751
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2         03752
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS    03753
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2         03754
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1   03755
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any      03756
* --> Hex printing - below                                              03757
         TM    PARMFLG5,X'20'          Is Hex Printing On?              03758
         BZ    NPRHINA1                No. Bypass it.                   03759
*           Temporary ASCII translation is done here.           *       03760
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area          03761
         ST    R5,R5HXPRT              Save register.                   03762
         L     R5,SAVTRTCS             Point to translation table CSECT 03763
         USING TRTCSECT,R5                                              03764
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII 03765
         ST    R7,R7HXPRT              Save BAL register.               03766
         BAL   R7,HEXPRNEX             Hex print from external labels.  03767
         L     R7,R7HXPRT              Restore BAL register.            03768
         L     R5,R5HXPRT              Restore R5                       03769
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area      03770
         DROP  R5                                                       03771
NPRHINA1 DS    0H                                                       03772
* --> Hex printing - above                                              03773
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      03774
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN       03775
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS       03776
TLITSKA2 DS    0H                                                       03777
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1   03778
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS    03779
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1   03780
* --------------------------------------------------------------*       03781
*           Note:  The real ASCII translation is                *       03782
*                  done in the CHANGVOL routine that            *       03783
*                  gets executed just before each               *       03784
*                  output write.  Please note that              *       03785
*                  INASC3 and INASC4 imply CHGVOL.              *       03786
* --------------------------------------------------------------*       03787
* --> Hex printing - below                                              03788
         TM    PARMFLG5,X'20'          Is Hex Printing On?              03789
         BZ    NPRHINA2                No. Bypass it.                   03790
*           Temporary ASCII translation is done here.           *       03791
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area          03792
         ST    R5,R5HXPRT              Save register.                   03793
         L     R5,SAVTRTCS             Point to translation table CSECT 03794
         USING TRTCSECT,R5                                              03795
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII 03796
         ST    R7,R7HXPRT              Save BAL register.               03797
         BAL   R7,HEXPRNEX             Hex print from external labels.  03798
         L     R7,R7HXPRT              Restore BAL register.            03799
         L     R5,R5HXPRT              Restore R5                       03800
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area      03801
         DROP  R5                                                       03802
NPRHINA2 DS    0H                                                       03803
* --> Hex printing - above                                              03804
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES      03805
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT            03806
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE   03807
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS    03808
TLITASCE DS    0H                                                       03809
* -------------------- Code for Initting ASCII Tapes ---->>>>> above    03810
*                                                                       03811
*  WRITE TO OUTPUT TAPES                                                03812
*                                                                       03813
* ------------------------------------------------------------------- *
WRITE1   DS    0H                                                     * 03814
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?             03815
         BNE   WRNOTPMK         No. Don't touch bytes to be moved       03816
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved             03817
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.       03818
WRNOTPMK DS    0H                                                       03819
* --- READ ONLY CODE ------------------------------- BELOW --         * 03820
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 03821
         BO    WRITE17    YES--NO WRITES - ONLY READS                 * 03822
* --- READ ONLY CODE ------------------------------- ABOVE --         * 03823
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                   03824
         BZ    WRITE2         NO                                        03825
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER    03826
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE 03827
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'00'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03828
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03829
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                 03830
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03831
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03832
         EXCP  OUTIOB         WRITE IT                                  03833
         WAIT  ECB=OUTECB     WAIT FOR IT                               03834
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03835
         BNE   OUTERR         NO - ERROR                                03836
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                   03837
         BZ    WRITE3         NO                                        03838
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER    03839
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE 03840
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'01'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03841
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03842
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                 03843
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03844
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03845
         EXCP  OUTIOB         WRITE IT                                  03846
         WAIT  ECB=OUTECB     WAIT FOR IT                               03847
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03848
         BNE   OUTERR         NO - ERROR                                03849
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                   03850
         BZ    WRITE4         NO                                        03851
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER    03852
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE 03853
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'02'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03854
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03855
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                 03856
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03857
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03858
         EXCP  OUTIOB         WRITE IT                                  03859
         WAIT  ECB=OUTECB     WAIT FOR IT                               03860
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03861
         BNE   OUTERR         NO - ERROR                                03862
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                   03863
         BZ    WRITE5         NO                                        03864
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER    03865
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE 03866
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'03'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03867
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03868
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                 03869
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03870
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03871
         EXCP  OUTIOB         WRITE IT                                  03872
         WAIT  ECB=OUTECB     WAIT FOR IT                               03873
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03874
         BNE   OUTERR         NO - ERROR                                03875
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                   03876
         BZ    WRITE6         NO                                        03877
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER    03878
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE 03879
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'04'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03880
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03881
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                 03882
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03883
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03884
         EXCP  OUTIOB         WRITE IT                                  03885
         WAIT  ECB=OUTECB     WAIT FOR IT                               03886
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03887
         BNE   OUTERR         NO - ERROR                                03888
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                   03889
         BZ    WRITE7         NO                                        03890
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER    03891
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE 03892
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'05'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03893
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03894
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                 03895
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03896
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03897
         EXCP  OUTIOB         WRITE IT                                  03898
         WAIT  ECB=OUTECB     WAIT FOR IT                               03899
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03900
         BNE   OUTERR         NO - ERROR                                03901
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                   03902
         BZ    WRITE8         NO                                        03903
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER    03904
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE 03905
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'06'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03906
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03907
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                 03908
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03909
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03910
         EXCP  OUTIOB         WRITE IT                                  03911
         WAIT  ECB=OUTECB     WAIT FOR IT                               03912
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03913
         BNE   OUTERR         NO - ERROR                                03914
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                   03915
         BZ    WRITE9         NO                                        03916
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER    03917
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE 03918
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'07'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03919
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03920
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                 03921
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03922
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03923
         EXCP  OUTIOB         WRITE IT                                  03924
         WAIT  ECB=OUTECB     WAIT FOR IT                               03925
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03926
         BNE   OUTERR         NO - ERROR                                03927
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                   03928
         BZ    WRITE10        NO                                        03929
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER    03930
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE 03931
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'08'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03932
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03933
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                 03934
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03935
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03936
         EXCP  OUTIOB         WRITE IT                                  03937
         WAIT  ECB=OUTECB     WAIT FOR IT                               03938
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03939
         BNE   OUTERR         NO - ERROR                                03940
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                   03941
         BZ    WRITE11        NO                                        03942
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER    03943
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE 03944
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'09'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03945
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03946
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                 03947
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03948
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03949
         EXCP  OUTIOB         WRITE IT                                  03950
         WAIT  ECB=OUTECB     WAIT FOR IT                               03951
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03952
         BNE   OUTERR         NO - ERROR                                03953
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                   03954
         BZ    WRITE12        NO                                        03955
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER    03956
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE 03957
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0A'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03958
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03959
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                 03960
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03961
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03962
         EXCP  OUTIOB         WRITE IT                                  03963
         WAIT  ECB=OUTECB     WAIT FOR IT                               03964
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03965
         BNE   OUTERR         NO - ERROR                                03966
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                   03967
         BZ    WRITE13        NO                                        03968
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER    03969
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE 03970
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0B'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03971
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03972
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                 03973
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03974
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03975
         EXCP  OUTIOB         WRITE IT                                  03976
         WAIT  ECB=OUTECB     WAIT FOR IT                               03977
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03978
         BNE   OUTERR         NO - ERROR                                03979
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                   03980
         BZ    WRITE14        NO                                        03981
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER    03982
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE 03983
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0C'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03984
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03985
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                 03986
         ST    R2,OUTDCBPT    PUT IT IN IOB                             03987
         MVI   OUTECB,X'00'   INITIALIZE ECB                            03988
         EXCP  OUTIOB         WRITE IT                                  03989
         WAIT  ECB=OUTECB     WAIT FOR IT                               03990
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  03991
         BNE   OUTERR         NO - ERROR                                03992
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                   03993
         BZ    WRITE15        NO                                        03994
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER    03995
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE 03996
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0D'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      03997
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        03998
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                 03999
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04000
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04001
         EXCP  OUTIOB         WRITE IT                                  04002
         WAIT  ECB=OUTECB     WAIT FOR IT                               04003
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04004
         BNE   OUTERR         NO - ERROR                                04005
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                   04006
         BZ    WRITE16        NO                                        04007
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER    04008
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE 04009
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0E'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04010
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04011
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                 04012
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04013
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04014
         EXCP  OUTIOB         WRITE IT                                  04015
         WAIT  ECB=OUTECB     WAIT FOR IT                               04016
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04017
         BNE   OUTERR         NO - ERROR                                04018
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                   04019
         BZ    WRITE17        NO                                        04020
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER    04021
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE 04022
* ------ KEEPVOL ONLY ---- below --------------------------------
         MVI   V1INDEX,X'0F'         Index into table.
         BAL   R7,GETVTABL           Get table entry for KEEPVOL
* ------ KEEPVOL ONLY ---- above --------------------------------
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY      04023
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE        04024
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                 04025
         ST    R2,OUTDCBPT    PUT IT IN IOB                             04026
         MVI   OUTECB,X'00'   INITIALIZE ECB                            04027
         EXCP  OUTIOB         WRITE IT                                  04028
         WAIT  ECB=OUTECB     WAIT FOR IT                               04029
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                  04030
         BNE   OUTERR         NO - ERROR                                04031
WRITE17  DS    0H                                                       04032
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?              04033
         BNE   WR17NTPM       No. Don't correct bytes moved field       04034
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field   04035
WR17NTPM DS    0H                                                       04036
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                        04037
         BO    ENDINPUT       YES. CLOSE.                               04038
         TM    FLAG2A,EOV     END OF INPUT?                             04039
         BO    ENDINPUT       YES - QUIT                                04040
         B     READIN         NO - LOOP                                 04041
         SPACE 3                                                        04042
*                                                                       04043
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                            04044
*                                                                       04045
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                               04046
         BZ    INERR1         NO - ASSUME DATA CHECK                    04047
         ADRSMS                                                         04048
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                       04049
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR       04050
         DROPMS                                                         04051
         B     INERR2         CONTINUE                                  04052
INERR1   DS    0H                                                       04053
         ADRSMS                                                         04054
         MVC   LINE(133),INDCK  SET ERROR MESSAGE                       04055
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR       04056
         DROPMS                                                         04057
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                       04058
         MVI   INECB,X'00'    RESET ECB                                 04059
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X04060
               6,INECB,ROUTCDE=(3)                                      04061
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE      04062
*                             WHO CARES WHAT THE REPLY IS               04063
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                     04064
         B     CLOSMALL                                                 04065
*        ABEND 69             QUIT                                      04066
         SPACE 3                                                        04067
*                                                                       04068
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY     04069
*                                                                       04070
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG      04071
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                     04072
         TM    OUTCSW+4,X'02' UNIT CHECK?                               04073
         BO    OUTERUC        YES. HANDLE IT.                           04074
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                  04075
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                    04076
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION      04077
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE      04078
         B     OUTERR2            GO FILL IN REST OF THE INFO           04079
OUTERUC  DS    0H                                                       04080
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                      04081
         B     OUTERR2        CONTINUE                                  04082
OUTERR1  DS    0H                                                       04083
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                      04084
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                            04085
         L     R5,16          R5=CVT                                    04086
         L     R5,0(,R5)      R5=TCB WORDS                              04087
         L     R5,4(,R5)      R5=MY TCB                                 04088
         L     R5,12(,R5)     R5=TIOT                                   04089
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT             04090
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                 04091
         MVC   SAVDDN(5),4(R4)   Save DDNAME                            04092
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                    04093
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE          04094
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE               04095
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                    04096
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                04097
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY         04098
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE      04099
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                04100
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                      04101
         MVC   SAVELINE(133),LINE                                       04102
         PUT   SYSPRINT,LINE  WRITE MESSAGE                             04103
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.     04104
         MVC   LINE(133),LINE-1      CLEAR LINE                         04105
         MVFMS LINE(133),OUTCOUNT    How much was copied?               04106
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE  04107
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE             04108
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE       04109
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE             04110
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ       04111
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP     04112
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL          * 04113
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        04114
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                04115
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ      04116
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ         04117
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL            04118
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                        04119
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS           04120
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT   04121
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE          04122
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ       04123
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                04124
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED            04125
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA          04126
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                 04127
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER               04128
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED           04129
         AP    QWORD,DWORD        AND ADD IT IN                         04130
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN              04131
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE             04132
         PUT   SYSPRINT,LINE  WRITE MESSAGE                             04133
* ---- >    WTO on a Unit Exception   < ---- Below                      04134
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?          04135
         BO    OUTERR2A         Yes. WTO anyway, as of old.             04136
* ---- >    WTO on a Unit Exception   < ---- Above                      04137
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY          04138
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE            04139
*                               THIS IS A SEMI-NORMAL CONDITION         04140
*                               AND WHY INVOLVE THE OPERATOR?           04141
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR   04142
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                 04143
OUTERR4  DS    0H                                                       04144
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED              04145
         WTOR  '                                                       X04146
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)      04147
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                04148
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                          04149
         BNE   OUTERR3        NO - TRY AGAIN                            04150
* ------------------------------------------------------------------- * 04151
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   * 04152
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             * 04153
* ------------------------------------------------------------------- * 04154
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB             04155
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                04156
*                             DON'T BOTHER WAITING FOR REWIND           04157
* ------------------------------------------------------------------- * 04158
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR          04159
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                       04160
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04161
         BNE   OUTERR5        NO                                        04162
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04163
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                04164
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                       04165
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04166
         BNE   OUTERR6        NO                                        04167
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04168
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                04169
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                       04170
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04171
         BNE   OUTERR7        NO                                        04172
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04173
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                04174
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                       04175
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04176
         BNE   OUTERR8        NO                                        04177
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04178
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                04179
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                       04180
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04181
         BNE   OUTERR9        NO                                        04182
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04183
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                04184
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                       04185
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04186
         BNE   OUTERR10       NO                                        04187
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04188
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                04189
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                       04190
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04191
         BNE   OUTERR11       NO                                        04192
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04193
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                04194
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                       04195
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04196
         BNE   OUTERR12       NO                                        04197
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04198
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                04199
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                       04200
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04201
         BNE   OUTERR13       NO                                        04202
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE     04203
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                04204
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                      04205
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04206
         BNE   OUTERR14       NO                                        04207
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04208
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                04209
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                      04210
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04211
         BNE   OUTERR15       NO                                        04212
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04213
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                04214
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                      04215
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04216
         BNE   OUTERR16       NO                                        04217
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04218
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                04219
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                      04220
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04221
         BNE   OUTERR17       NO                                        04222
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04223
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                04224
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                      04225
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04226
         BNE   OUTERR18       NO                                        04227
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04228
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                04229
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                      04230
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?          04231
         BNE   OUTERR19       NO                                        04232
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04233
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                04234
*                             THEN IT MUST BE OUTPUT 16                 04235
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE     04236
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                04237
         SPACE 3                                                        04238
*                                                                       04239
*  END OF INPUT -- FINISH UP                                            04240
*                                                                       04241
ENDINPUT DS    0H                                                       04242
         SPACE 3                                                        04243
* --- READ ONLY CODE ----------------------------------------         * 04244
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                * 04245
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE               * 04246
         MVFMS LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE           * 04247
         B     ENDIN16          WRITE OUT MESSAGE                     * 04248
* --- READ ONLY CODE ----------------------------------------         * 04249
ENDIN0   DS    0H                                                       04250
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                  04251
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                      04252
         BO    ENDIN1         YES - CONTINUE                            04253
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                  04254
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                      04255
         BO    ENDIN2         YES - CONTINUE                            04256
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                04257
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                      04258
         BO    ENDIN3         YES - CONTINUE                            04259
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                04260
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                      04261
         BO    ENDIN4         YES - CONTINUE                            04262
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                04263
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                      04264
         BO    ENDIN5         YES - CONTINUE                            04265
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                 04266
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                      04267
         BO    ENDIN6         YES - CONTINUE                            04268
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                  04269
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                      04270
         BO    ENDIN7         YES - CONTINUE                            04271
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                  04272
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                       04273
         BO    ENDIN8         YES - CONTINUE                            04274
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                  04275
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                       04276
         BO    ENDIN9         YES - CONTINUE                            04277
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                  04278
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                       04279
         BO    ENDIN10        YES - CONTINUE                            04280
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                  04281
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                       04282
         BO    ENDIN11        YES - CONTINUE                            04283
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                  04284
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                       04285
         BO    ENDIN12        YES - CONTINUE                            04286
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                  04287
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                       04288
         BO    ENDIN13        YES - CONTINUE                            04289
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                  04290
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                       04291
         BO    ENDIN14        YES - CONTINUE                            04292
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                  04293
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                       04294
         BO    ENDIN15        YES - CONTINUE                            04295
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                  04296
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                       04297
         BO    ENDIN16        YES - CONTINUE                            04298
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                 04299
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                  04300
         SPACE 3                                                        04301
*                                                                       04302
*  CLOSE ALL FILES                                                      04303
*                                                                       04304
CLOSMALL DS    0H                                                       04305
*        B     OUTERR        REMOVE - REMOVE - REMOVE                   04306
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *             04307
         TM    PARMFLG3,X'04'    COUNTING BYTES?                        04308
         BZ    ENDINTOT          NO - SKIP ROUTINE                      04309
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES              04310
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04311
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04312
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04313
         CVD   R5,DWORD          LOW ORDER WORD                         04314
         AP    QWORD,DWORD       AND ADD IT IN                          04315
         ADRSMS                                                         04316
         ED    TOTBPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04317
         PTMSN TOTBLINE                                                 04318
         DROPMS                                                         04319
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS    04320
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04321
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04322
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04323
         CVD   R5,DWORD          LOW ORDER WORD                         04324
         AP    QWORD,DWORD       AND ADD IT IN                          04325
         ADRSMS                                                         04326
         ED    TOTLPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04327
         PTMSN TOTLLINE                                                 04328
         DROPMS                                                         04329
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES     04330
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT          04331
         ZAP   QWORD,DWORD       DUMP INTO TARGET                       04332
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                  04333
         CVD   R5,DWORD          LOW ORDER WORD                         04334
         AP    QWORD,DWORD       AND ADD IT IN                          04335
         ADRSMS                                                         04336
         ED    TOTWPATT,QWORD+6          MAKE NUMBER DISPLAYABLE        04337
         PTMSN TOTWLINE                                                 04338
         DROPMS                                                         04339
         MVI   LINE,C' '                                                04340
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                         04341
ENDINTOT DS    0H                                                       04342
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *             04343
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - * 04344
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?    04345
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.      04346
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?             04347
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE      04348
         ADRSMS                                                         04349
         MVC   INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1           04350
         PTMSN INITMSG               MSG-WE'RE DOING INITTED TAPE       04351
         DROPMS                                                         04352
NOINITT3 DS    0H                                                       04353
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - * 04354
         TM    PARMFLG3,X'01'   INIT ONLY?                              04355
         BO    NOCLOSIN                                                 04356
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                     04357
         BO    NOCLOSIN                                                 04358
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                     04359
         BO    NOCLOSIN                                                 04360
         CLOSE (IN)                                                     04361
NOCLOSIN DS    0H                                                       04362
         CLOSE (SYSPRINT)                                               04363
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?                    * 04364
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE                  * 04365
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                   04366
         CLOSE (LABLDUMP)                                               04367
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE           04368
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                       04369
         BZ    NOLABACL         NO. NO FILE TO CLOSE                    04370
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                       04371
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                    04372
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                   04373
         CLOSE (LABADDIN)                                               04374
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE       04375
* --- READ ONLY CODE ------------------------- below ---------------- * 04376
         TM    PARMFLG7,X'10'   Is SHOOVL on?                         *
         BO    CLOOVL           Yes. Then we must close output files. *
         TM    PARMFLG2,X'08'   Is this run read-only?                * 04377
         BO    THEEND           Yes. Only CLOSE input and SYSPRINT.   * 04378
CLOOVL   DS    0H               CLOSE the OPEN OUTnn files.           *
* --- READ ONLY CODE ------------------------- above ---------------- * 04379
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                            04380
         BZ    CLOSE1         NO                                        04381
         CLOSE (OUT1)         CLOSE OUTPUT 1                            04382
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                            04383
         BZ    CLOSE2         NO                                        04384
         CLOSE (OUT2)         CLOSE OUTPUT 2                            04385
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                            04386
         BZ    CLOSE3         NO                                        04387
         CLOSE (OUT3)         CLOSE OUTPUT 3                            04388
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                            04389
         BZ    CLOSE4         NO                                        04390
         CLOSE (OUT4)         CLOSE OUTPUT 4                            04391
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                            04392
         BZ    CLOSE5         NO                                        04393
         CLOSE (OUT5)         CLOSE OUTPUT 5                            04394
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                            04395
         BZ    CLOSE6         NO                                        04396
         CLOSE (OUT6)         CLOSE OUTPUT 6                            04397
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                            04398
         BZ    CLOSE7         NO                                        04399
         CLOSE (OUT7)         CLOSE OUTPUT 7                            04400
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                            04401
         BZ    CLOSE8         NO                                        04402
         CLOSE (OUT8)         CLOSE OUTPUT 8                            04403
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                            04404
         BZ    CLOSE9         NO                                        04405
         CLOSE (OUT9)         CLOSE OUTPUT 9                            04406
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                           04407
         BZ    CLOSE10        NO                                        04408
         CLOSE (OUT10)        CLOSE OUTPUT 10                           04409
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                           04410
         BZ    CLOSE11        NO                                        04411
         CLOSE (OUT11)        CLOSE OUTPUT 11                           04412
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                           04413
         BZ    CLOSE12        NO                                        04414
         CLOSE (OUT12)        CLOSE OUTPUT 12                           04415
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                           04416
         BZ    CLOSE13        NO                                        04417
         CLOSE (OUT13)        CLOSE OUTPUT 13                           04418
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                           04419
         BZ    CLOSE14        NO                                        04420
         CLOSE (OUT14)        CLOSE OUTPUT 14                           04421
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                           04422
         BZ    CLOSE15        NO                                        04423
         CLOSE (OUT15)        CLOSE OUTPUT 15                           04424
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                           04425
         BZ    THEEND         NO                                        04426
         CLOSE (OUT16)        CLOSE OUTPUT 16                           04427
         SPACE 3                                                        04428
*                                                                       04429
*  Test for ABEND 069 first.  Did we come from an Input Error?          04430
*                                                                       04431
         TM    ABENDFLG,X'01'    Is ABEND flag on?                      04432
         BZ    THEEND            No.  End normally.                     04433
         ABEND 69                QUIT                                   04434
*                                                                       04435
*  THE END                                                              04436
*                                                                       04437
THEEND   DS    0H                                                       04438
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                04439
         BO    THEEND0           YES WE DO.  Issue RC = 0.              04440
         MVFMS WTOCBT+16(41),FILEDONE                                   04441
WTOCBT   WTO   'CBT990                                              '   04442
THEENDS  DS    0H                                                       04443
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?              04444
         BO    THEEND16         Yes, issue RC = 16                      04445
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                     04446
         BO    THEEND8          Yes, issue RC = 8                       04447
         B     THEEND0          Otherwise, issue RC = 0                 04448
*                               FLAGCODE must be in COPYMODS CSECT
*                                 and not in GETMAINED area.
THEEND16 MVI   FLAGCODE,X'04'           Code 16 flagged                 04449
         B     THEEND2                                                  04452
THEEND8  MVI   FLAGCODE,X'02'           Code  8 flagged                 04453
         B     THEEND2                                                  04456
THEEND0  MVI   FLAGCODE,X'00'           Code  0 flagged                 04457
*
THEEND2  DS    0H                       FREEMAIN gotten storage.        04460
         LR    R3,R13                   Address of Getmained area
         L     R13,4(,R13)              Restore caller's R13            04450
         FREEMAIN RC,A=(3),LV=WORKLENG,SP=0   Free Getmained storage.
         TM    FLAGCODE,X'06'           Code 8 or 16?
         BZ    THEENC00                 Neither, end with code 0
         TM    FLAGCODE,X'04'           Code 16?
         BZ    THEENC08                 No.  Do code 8.
THEENC16 DS    0H                       Yes. Do code 16.
         MVC   16(4,R13),=F'16'         Return code 16    in R15        04451
         B     THEENDEN                 And get out.
THEENC08 DS    0H
         MVC   16(4,R13),=F'8'          Return code 8     in R15        04455
         B     THEENDEN                 And get out.
THEENC00 DS    0H
         MVC   16(4,R13),=F'0'          Return code 0     in R15        04459
THEENDEN LM    R14,R12,12(R13)                                          04461
         BR    R14                                                      04462
         EJECT                                                          04463
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *     04464
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     04465
*    BAL REGISTER IS R4.                                                04466
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     04467
HEX      DS    0H                                                       04468
         MVC   1(1,R15),0(R1)        Move byte                          04469
         UNPK  0(3,R15),1(2,R15)     Unpack                             04470
         TR    0(2,R15),HEXTAB-240                                      04471
         LA    R15,2(,R15)           Increment output pointer           04472
         LA    R1,1(,R1)             Increment input pointer            04473
         BCT   R0,HEX                Decrement length, then loop        04474
         MVI   0(R15),C' '           Blank the trailing byte            04475
         BR    R4                    Return to caller                   04476
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    04477
         SPACE                                                          04478
* --------------------------------------------------------- *           04479
*    BAL REGISTER IS R7.                                    *           04480
* --------------------------------------------------------- *           04481
*** ---  Conditionally open OUTnn either for OUTPUT or for INPUT  --- *
*                                                                     *
*   If you are doing READ and SHOOVL (Show Output Volumes) at the     *
*   same time, then you have to OPEN the output volumes for INPUT     *
*   instead of for OUTPUT.  Otherwise, when the output volumes are    *
*   rewound after being OPEN for output, and then CLOSE'd, their      *
*   previous contents will be wiped out. (You don't want to do that.  *
*   READ is supposed to be "read-only", even for the output tapes.)   *
*                                                                     *
*** ----------------------------------------------------------------- *
OPENOUT  DS    0H                    Address of DCB to OPEN is in R2.
         ST    R7,SAVER7OP           Save BAL register.
         TM    PARMFLG2,X'08'        Is this READ only?
         BZ    OPENOUTP              No. Do OPEN normally.
         TM    PARMFLG7,X'10'        Yes, but is it also SHOOVL?
         BO    OPENINPT              SHOOVL and READ only, OPEN input.
         B     OPENOUTP              Default. OPEN for output.
OPENINPT DS    0H
         MVI   OPENODIS,X'80'        Move INPUT flags into OPEN.
         B     OPENIDCB              Move in DCB info and OPEN.
OPENOUTP DS    0H
         MVI   OPENODIS,X'8F'        Move OUTPUT flags into OPEN.
OPENIDCB DS    0H
         STCM  R2,7,OPENODCB         Move in correct DCB and OPEN.
*                          below --- Expansion of OPEN macro.
         CNOP  0,4
         BAS   1,*+8
OPENODIS DC    AL1(143)
OPENODCB DC    AL3(OUT1)
         SVC   19
*                          above --- Expansion of OPEN macro.
OPENEND  DS    0H
         L     R7,SAVER7OP           Restore BAL register.
         BR    R7
* --------------------------------------------------------- *           04479
*    BAL REGISTER IS R7.                                                04480
* --------------------------------------------------------- *           04481
CLRCSZMS DS    0H                Clear data fields from RECSZMSG        04482
         ADRSMS                                                         04483
         MVI   RECSZFNM,X'40'                                           04484
         MVC   RECSZFNM+1(4),RECSZFNM                                   04485
         MVI   RECSZRCD,C'0'                                            04486
         MVC   RECSZRCD+1(9),RECSZRCD                                   04487
         MVI   RECSZSIZ,C'0'                                            04488
         MVC   RECSZSIZ+1(9),RECSZSIZ                                   04489
         DROPMS                                                         04490
         BR    R7                                                       04491
* --------------------------------------------------------- *           04492
*    BAL REGISTER IS R7.                                                04493
* --------------------------------------------------------- *           04494
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS             04495
*                         ALTERED.                                      04496
         ADRSMS                                                         04497
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG          04498
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG          04499
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                04500
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                04501
* ----                                                                  04502
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS? 04503
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS            04504
         MVC   VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG       04505
INDVVOLS DS    0H                                                       04506
* ----                                                                  04507
         MVC   VOLDDN(5),LINE        CLEAR FIELD                        04508
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                    04509
         PTMSN VOLALT                MOVE MESSAGE TO PRT                04510
         DROPMS                                                         04511
         BR    R7                    RETURN TO CALLER                   04512
* --------------------------------------------------------- *           04494
VOL1KPRT DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS             04495
*                         ALTERED.                                      04496
         ADRSMS                                                         04497
         MVC   VOLKEPT+13(6),LINE    CLEAR OLDVOL FIELD IN MSG          04498
         MVC   VOLKEPT+13(6),VOLCHG  MOVE NEW VOL TO MSG                04500
* ----                                                                  04502
         MVC   VOLKDDN(5),LINE       CLEAR FIELD                        04508
         MVC   VOLKDDN(5),VOLDD      MOVE DD NAME IN                    04509
         PTMSN VOLKEPT               MOVE MESSAGE TO PRT                04510
         DROPMS                                                         04511
         BR    R7                    RETURN TO CALLER                   04512
* --------------------------------------------------------- *           04513
*    BAL REGISTER IS R7.                                                04514
* --------------------------------------------------------- *           04515
PRTBLCNT DS    0H                                                       04516
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE              04517
PRTBLCNE BR    R7                                                       04518
* --------------------------------------------------------- *           04519
*    BAL REGISTER IS R7.                                                04520
* --------------------------------------------------------- *           04521
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS        04522
         ST    R7,SAVE7REG                                              04523
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                 04524
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET   04525
         MVC   OUTCCWPT(4),=A(BACKCCW)                                  04526
BACKEXT1 L     R7,SAVE7REG                                              04527
BACKEXTE BR    R7                                                       04528
* --------------------------------------------------------- *           04529
*    BAL REGISTER IS R7.                                                04530
* --------------------------------------------------------- *           04531
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS      04532
         ST    R7,SAVE7REG                                              04533
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?        04534
         BZ    CLEARSV1                 NO. BYPASS CLEAR                04535
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                04536
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                         04537
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                      04538
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                      04539
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                   04540
CLEARSV1 L     R7,SAVE7REG                                              04541
CLEARSVE BR    R7                                                       04542
* --------------------------------------------------------- *           04543
*    BAL REGISTER IS R7.                                                04544
* --------------------------------------------------------- *           04545
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE      04546
         ST    R7,SAVE7REG                                              04547
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?        04548
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION          04549
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *  04550
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2         04551
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX     04552
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?          04553
         BZ    FIXALL3                                                  04554
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?             04555
         BZ    FIXLAST2                                                 04556
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                      04557
         BZ    FIXLAST1                                                 04558
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR      04559
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *  04560
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2             04561
         L     R7,SAVE7REG                                              04562
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG   04563
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                   04564
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                          04565
         L     R7,SAVE7REG                                              04566
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE  04567
FIXLAST1 DS    0H               REPLACE EOF2                            04568
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                          04569
         L     R7,SAVE7REG                                              04570
         B     ADDEOF2          CREATE THE EOF2                         04571
FIXEXTL1 DS    0H                                                       04572
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                     04573
         L     R7,SAVE7REG                                              04574
FIXEXTLE BR    R7                                                       04575
* --------------------------------------------------------- *           04576
*    BAL REGISTER IS R7.                                                04577
* --------------------------------------------------------- *           04578
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT     04579
*                             IOS USES DURING EXCP PROCESSING.          04580
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.   04581
* ------------------------------------------------------------------- * 04582
         MVC   OUTIOB(4),IOB01                                          04583
         MVC   OUTCSW(8),FUL2ZERO                                       04584
         MVC   OUTDCBPT(4),FUL2ZERO                                     04585
         MVC   OUTDCBPT+4(4),FUL2ZERO                                   04586
         MVC   OUTDCBPT+8(4),IOB02                                      04587
CLEARIOE BR    R7                                                       04588
* --------------------------------------------------------- *           04576
CLVL1IOB DS    0H
         MVC   VOL1IOB(4),IOB01
         MVC   VOL1CSW(8),FUL2ZERO
         MVC   VOL1DCBP(4),FUL2ZERO
         MVC   VOL1DCBP+4(4),FUL2ZERO
         MVC   VOL1DCBP+8(4),IOB02
CLVL1IOE BR    R7
* --------------------------------------------------------- *           04576
CLVLRIOB DS    0H
         ST    R7,SAVER7C
         MVC   VOLRIOB(4),IOB01
         MVC   VOLRCSW(8),FUL2ZERO
         MVC   VOLRDCBP(4),FUL2ZERO
         MVC   VOLRDCBP+4(4),FUL2ZERO
         MVC   VOLRDCBP+8(4),IOB02
         L     R7,SAVER7C
CLVLRIOE BR    R7
* --------------------------------------------------------- *           04576
*    BAL REGISTER IS R7.                                                04577
* --------------------------------------------------------- *           04578
TESTOPRT DS    0H                         Print beginnings of open
*                                          output tapes.
         ST    R7,SAVER7A                 Protect BAL register.
         TM    PARMFLG7,X'10'             IS SHOOVL IN EFFECT?
         BZ    TESTOPND                   NO. DON'T DO THIS ROUTINE.
         MVC   LINE,LINE-1                CLEAR OUTPUT LINE
         MVC   LINE(L'OVOLMSGH),OVOLMSGH  OUTPUT VOL1 HEADER
         PUT   SYSPRINT,LINE
         MVC   LINE,LINE-1                CLEAR OUTPUT LINE
         MVC   LINE+1(80),VOL1AREA        MOVE LABEL TEXT ITSELF
         HEX   LINE+106,1,VOL1FLAG        SHOW IF ELIGIBLE LABEL
         TM    ASCIIFLG,X'01'             ASCII FLAG SET FROM LABELCHK?
         BO    TESTOASC                   YES. TREAT LABEL AS ASCII
         MVC   LINE+85(6),EBCDL           NO. SHOW IT'S EBCDIC
         B     TESTODPR                   GO PRINT THE RECORD
TESTOASC DS    0H
         ST    R5,SAVE5ASC                SAVE R5
         L     R5,SAVTRTCS                POINT TO TRANS TBL DSECT
         USING TRTCSECT,R5
         TR    LINE+1(80),TRTA2E          TRANSLATE RCD IMAGE TO EBCDIC
         L     R5,SAVE5ASC                RESTORE R5
         DROP  R5
         MVC   LINE+85(6),ASCIL           SHOW IT'S ASCII
TESTODPR DS    0H                         DO THE PRINT
         TM    ISLBLFLG,X'03'             IS IMAGE A LABEL?
         BZ    TESTONLB                   NO. SAY IT'S NOT.
         TM    LBLFLAG,X'04'              IS IT VOL1?
         BZ    TESTONV1                   NO. SAY THAT.
         MVC   LINE+93(10),=C'VOL1 LABEL'   YES. TELL EM.
         B     TESTORPT
TESTONV1 DS    0H                           SAY NOT VOL1.
         MVC   LINE+93(10),=C'NOT A VOL1'
         B     TESTORPT
TESTONLB DS    0H                           SAY NOT A LABEL AT ALL.
         MVC   LINE+93(10),=C'NOT  LABEL'
TESTORPT DS    0H
         PUT   SYSPRINT,LINE
TESTOPND DS    0H
         L     R7,SAVER7A
         BR    R7
* --------------------------------------------------------- *           04576
*    BAL REGISTER IS R7.                                    *           04577
* ----------------------------------------------------------------- *   04578
TESTOVOL DS    0H     Test output volumes to see what VOL1 labels   *
*                      that they may have, and if they have any.    *
* ------------------------------------------------------------------*
         ST    R7,SAVER7B                 Protect BAL register.
         TM    PARMFLG7,X'10'             Is SHOOVL in effect?
         BZ    TESTOVOE                   No. Don't do this routine.
* ------------------------------------------------------------------*
TESTOV1  DS    0H                         Try to read 80 bytes of
*                                          each output volume.
         MVC   VOL1AREA,VOL1AREA-1        Clear the staging area.
         MVI   VOL1ECB,X'00'              Initialize ECB.
         EXCP  VOL1IOB                    Read 80 bytes of output tape.
         WAIT  ECB=VOL1ECB
*        CLI   VOL1ECB,X'7F'              Read complete normally?   *   03835
*           (Don't test, because there may not be 80 bytes there.)  *
* ------------------------------------------------------------------*   02610
TESTOREW DS    0H                         Now rewind each output volume
         BAL   R7,CLVLRIOB                Clear IOB for next use.
         MVC   VOLRDCBP(4),VOL1DCBP       Use the same DCB.
         MVI   VOLRECB,X'00'              Initialize ECB.
         EXCP  VOLRIOB                    Rewind the output tape.
         WAIT  ECB=VOLRECB
*        CLI   VOLRECB,X'7F'              Read complete normally?   *   03835
*                                (Rewind unconditionally.....)      *
* ------------------------------------------------------------------*   02610
*    Call the LABELCHK program and get the returns.                 *   02611
* ------------------------------------------------------------------*   02612
         L     R15,LABCHENT       Get entry point of called program     02613
         STM   R1,R3,SAVE13LC     Save R1 and R2 and R3.                02614
         LA    R1,PARMFLGS        Point R1 to parm flags.               02615
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   02616
         L     R3,=A(VOL1AREA)    Point R3 to address of INAREA.        02617
         BALR  R14,R15                 Do CALL.                         02618
         ST    R2,SAVELBCK             Address of returned user area    02619
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   02620
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          02621
*                                 A call to LABCHECK overlays INAREA,   02622
*                                 so if a LABCHECK routine alters       02623
*                                 a label, the alteration will be       02624
*                                 written out to the output tapes.      02625
         MVC   VOL1AREA(80),0(R3)         Overlay 80 bytes of VOL1AREA  02626
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   02627
         MVI   VOL1FLAG,X'00'     Clear eligibility flags.
         TM    ISLBLFLG,X'03'     Test VOL1AREA if eligible VOL1 label.
         BNZ   TESTOLBL           Is a label. See if VOL1.
         B     TESTOLEN           Not a label.
* ------------------------------------------------------------------*   02612
TESTOLBL DS    0H                 LABELCHK has now been done.
         TM    LBLFLAG,X'04'      Is this label a VOL1?
         BZ    TESTOLEN           No. Leave eligibilty flag zeros.
         MVC   VOL1FLAG(1),ISLBLFLG   Yes. Show if EBCDIC or ASCII.
         TM    ISLBLFLG,X'02'     ASCII tape?
         BZ    TESTONAS           No. Must be EBCDIC. Set eligibility.
         CLI   VOL1AREA+79,X'33'  ASCII VOL1 Type 3?
         BE    TESTONT3           Yes. Set appropriate flags.
         CLI   VOL1AREA+79,X'34'  ASCII VOL1 Type 4?
         BE    TESTONT4           Yes. Set appropriate flags.
         B     TESTOLEN           No indicator, not eligible for keep.
TESTONT3 DS    0H                 Deal with Type 3.
         OI    VOL1FLAG,X'04'     Turn on type 3 bit in flag
         B     TESTONAS           Set eligibility bit.
TESTONT4 DS    0H                 Deal with Type 4.
         OI    VOL1FLAG,X'08'     Turn on type 4 bit in flag
TESTONAS DS    0H                 Turn on eligibility for VOL1 keep.
         OI    VOL1FLAG,X'10'     Set eligibility bit.
TESTOLEN DS    0H                 Print image of what we found.
         BAL   R7,TESTOPRT        Do it even if it isn't appropriate.
TESTOVOE DS    0H                 End of routine.
         L     R7,SAVER7B         Restore BAL register.
         BR    R7
* ------------  CONSTANTS  ---------------- *  BELOW
READKFLG DC    X'00'
EBCDL    DC    C'EBCDIC'          Mark as EBCDIC
ASCIL    DC    C'ASCII '          Mark as ASCII
* ------------  CONSTANTS  ---------------- *  ABOVE
* --------------------------------------------------------- *           04589
*    BAL REGISTER IS R7.                                                04590
* --------------------------------------------------------- *           04591
CHANGVOL DS    0H       PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL     * 04592
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 04593
* ------------------------------------------------------------------- *
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?   04594
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                 04595
         TM    LBLFLAG,X'04'   ARE WE WRITING A VOL1 LABEL?           * 04596
         BZ    CHANGVOE        NO, GET OUT OF THIS ROUTINE.             04597
         TM    LBLFLAG,X'03'   IS THIS A HDR1 OR A HDR2?                04598
         BNZ   CHANGVOE        NO. DON'T ATTEMPT TO CHANGE THIS.        04599
         TM    PARMFLG2,X'41'  ARE WE CHANGING OUTPUT VOLSERS?        * 04600
         BZ    CHANGVOE        NO, GET OUT OF THIS ROUTINE.             04601
* - - - - - - - -  KEEPVOL PROCESSING   - - - - - - - - below - - - *
*    This routine assumes that BAL R7,GETVTABL was done first....   *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TM    PARMFLG6,X'08'       Doing KEEPVOL processing?
         BZ    CHANNOKE             No. Skip this routine.
*
* --- >   TEST                 Comparison of input and output flags.
*        MVC   LINE,LINE-1       (Takes up X'7D' bytes of CSECT space
*        HEX   LINE+8,1,V1FLAG        when uncommented.)
*        HEX   LINE+18,1,INVOLFLG
*        MVC   LINE+2(3),=C'V1F'
*        MVC   LINE+12(4),=C'INVF'
*        PUT   SYSPRINT,LINE
* --- >   TEST                 Being kept here for reference.
*
         TM    INVOLFLG,X'10'       If the input tape isn't SL,
*                                    i.e. the input tape's eligibility
*                                    flag is not on, then there's
         BZ    CHANNOKE              nothing to do here.
*                                   First, we make sure the original
*                                    VOL1 label is defaulted in place.
         ST    R2,SAVER2X1          Save R2.
         L     R2,VOL1SENT          Load VOL1 storage area CSECT.
         USING VOL1STOR,R2          Tell assembler.
         MVC   INAREA(80),VOL1LBIN  Overlay VOL1 label with original.
         L     R2,SAVER2X1          Restore R2.
* ----
*   Now, we see if we should use the output tape's VOL1 label, which
*    has been placed in V1VOL1 by the GETVTABL routine.
*   If V1FLAG doesn't have the eligibility bit on, this will be the
*    original VOL1 label.  See GETVTABL routine.
* ----
         CLC   INVOLFLG,V1FLAG      Compare type of VOL1 that we have.
         BNE   CHANNOKE             Not equal to IN VOL1? No action.
         TM    V1FLAG,X'10'         Eligibility bit on for output?
         BZ    CHANNOKE             No. No action.
         MVC   INAREA(80),V1VOL1    Yes. Overlay VOL1 from output tape.
         MVC   VOLCHG(6),INAREA+4   Grab VOLSER from output VOL1.
         MVC   VOLDD(5),DDOCHG      Move this output DDNAME in.         04722
         TM    ISLBLFLG,X'02'       ASCII?
         BZ    CHAAKVPR             No. Print in message as is.
         ST    R5,R5HXPRT           Save register.                      04605
         L     R5,SAVTRTCS          Point to translation table CSECT.   04606
         USING TRTCSECT,R5                                              04607
         TR    VOLCHG(6),TRTA2E     Translate VOLSER to EBCDIC to print
         DROP  R5                                                       04610
CHAAKVPR DS    0H
         ST    R7,SAVE7RG5                                              04729
         BAL   R7,VOL1KPRT          Print VOL1 from output reused msg.
         L     R7,SAVE7RG5                                              04729
         B     CHCHANOW             See if you need to change owner.
CHANNOKE DS    0H
* - - - - - - - -  KEEPVOL PROCESSING   - - - - - - - - above - - - *
*                                   Change VOLSER here.             *
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
         TM    PARMFLG6,X'08'       KEEPVOL processing on?
         BO    CHCHANOW             Yes. Don't change volser.
         TM    ISLBLFLG,X'02'       Is this an ASCII label?             04603
         BZ    CHEBCVID             No. No translation of volser.       04604
         ST    R5,R5HXPRT           Save register.                      04605
         L     R5,SAVTRTCS          Point to translation table CSECT.   04606
         USING TRTCSECT,R5                                              04607
         MVC   VOLASC(6),VOLCHG                                         04608
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.          04609
         DROP  R5                                                       04610
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace         04611
         B     CHASCVID             And not the EBCDIC one.             04612
CHEBCVID DS    0H                                                       04614
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                      04613
         B     CHCHANOW
CHASCVID DS    0H                                                       04614
CHCHANOW DS    0H
* -- >>                                                                 04615
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                 04616
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION       04617
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                04618
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE  04619
* -- >>                                                                 04620
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             04621
         BZ    CHEBCTOW             NO. NO TRANSLATION OF OWNER.        04622
         ST    R5,R5HXPRT           Save register.                      04623
         L     R5,SAVTRTCS          Point to translation table CSECT.   04624
         USING TRTCSECT,R5                                              04625
         MVC   TAPEOASC(14),TAPEOWN                                     04626
         TR    TAPEOASC(14),TRTE2A       Translate owner to ASCII.      04627
         DROP  R5                                                       04628
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace       04629
         B     CHASCTOW                  And not the EBCDIC one.        04630
CHEBCTOW DS    0H                                                       04631
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner         04632
CHASCTOW DS    0H                                                       04633
* -- >>                                                                 04634
         MVC   LINE(133),LINE-1                                         04635
         ADRSMS                                                         04636
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    04637
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       04638
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    04639
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    04640
         PTMSN OWNRMSG                                                  04641
         DROPMS                                                         04642
CHNOTOWN DS    0H                                                       04643
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS     04644
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS            04645
CHEXTLAB DS    0H                                                       04646
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?         04647
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING           04648
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.          04649
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?       04650
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN            04651
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          04652
         BO    CHNOZAPV            YES, SKIP SECOND WRITE               04653
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                  04654
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                04655
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?              04656
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.          04657
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?      04658
         BZ    CHNOZAPV            NO. BYPASS.                          04659
* -- >>                                                                 04660
         TM    ASCIIFLG,X'01'                                           04661
         BO    CHASCVE1                                                 04662
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             04663
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER        04664
CHASCVE1 DS    0H                                                       04665
         ST    R5,R5HXPRT           Save register.                      04666
         L     R5,SAVTRTCS          Point to translation table CSECT.   04667
         USING TRTCSECT,R5                                              04668
         MVC   VOLASC(6),VOLCHG                                         04669
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.          04670
         DROP  R5                                                       04671
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace         04672
         B     CHASCVEX             And not the EBCDIC one.             04673
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL   04674
CHASCVEX DS    0H                                                       04675
* -- >>                                                                 04676
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                 04677
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION       04678
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?      04679
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE          04680
* -- >>                                                                 04681
         TM    ASCIIFLG,X'01'                                           04682
         BO    CHASCVE2                                                 04683
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?             04684
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER        04685
CHASCVE2 DS    0H                                                       04686
         ST    R5,R5HXPRT           Save register.                      04687
         L     R5,SAVTRTCS          Point to translation table CSECT.   04688
         USING TRTCSECT,R5                                              04689
         MVC   TAPEOASC(14),TAPEOWN                                     04690
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.     04691
         DROP  R5                                                       04692
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace       04693
         B     CHASCTEX                  And not the EBCDIC one.        04694
CHEBCTEX DS    0H                                                       04695
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner         04696
CHASCTEX DS    0H                                                       04697
* -- >>                                                                 04698
         MVC   LINE(133),LINE-1                                         04699
         ADRSMS                                                         04700
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    04701
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       04702
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    04703
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    04704
         PTMSN OWNRMSG                                                  04705
         DROPMS                                                         04706
CHNOZAPV DS    0H                                                       04707
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS            04708
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          04709
         BO    CHGWRIT             YES, SKIP SECOND WRITE               04710
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?            04711
         BO    CHGPRINT            YES, PRINT.                          04712
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?      04713
         BO    CHGPRINT            YES, PRINT                           04714
         B     CHGWRIT                                                  04715
CHGPRINT DS    0H                                                       04716
         TM    PARMFLG6,X'08'      KEEPVOL processing on?
         BO    CHGWRIT             Yes. Don't print message.
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                 04717
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG       04718
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL  04719
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG       04720
         TM    PARMFLG2,X'01'      CHGVOL processing on?
         BO    CHGCHGVL            Yes. Print appropriate messages.
         TM    V1FLAG,X'10'        KEEPVOL output eligibility flag on?
         BZ    CHGWRIT             No. Suppress VOLSER change message.
CHGCHGVL DS    0H
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                  04721
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN           04722
         TM    EXASCFLG,X'01'                                           04723
         BZ    CHGPRANT                                                 04724
         ST    R5,R5HXPRT        Save register.                         04725
         L     R5,SAVTRTCS       Point to translation table CSECT.      04726
         USING TRTCSECT,R5                                              04727
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC           04728
         ST    R7,SAVE7RG5                                              04729
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         * 04730
         L     R7,SAVE7RG5                                              04729
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII            04732
         L     R5,R5HXPRT        Restore register.                      04733
         DROP  R5                                                       04734
         B     CHGWRIT                                                  04735
CHGPRANT DS    0H                                                       04736
         ST    R7,SAVE7RG5                                              04729
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED         * 04738
         L     R7,SAVE7RG5                                              04729
CHGWRIT  DS    0H                                                     * 04740
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 04741
CHANGVOE BR    R7                  END OF ROUTINE - RETURN              04742
         SPACE 3                                                        04743
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII  04744
* ----------------------------------  PROCESS CHGVOL KEYWORD          * 04745
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.       04746
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS      04747
CHASCLAB DS    0H                                                       04748
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          04749
         BO    CHNOASCV            YES, SKIP SECOND WRITE               04750
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL   04751
         MVC   EXTLBLIN(4),AVOL1LIT                                     04752
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?              04753
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.         04754
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.        04755
CHASCLX1 DS    0H                                                       04756
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI  04757
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT             04758
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION   04759
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?      04760
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE          04761
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO         04762
         MVC   LINE(133),LINE-1                                         04763
         ADRSMS                                                         04764
         MVC   OWNRTID(14),LINE          CLEAR FIELD                    04765
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG       04766
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                    04767
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG    04768
         PTMSN OWNRMSG                                                  04769
         DROPMS                                                         04770
CHNOASCV DS    0H                                                       04771
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS      04772
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?          04773
         BO    CHGWRASX            YES, SKIP SECOND WRITE               04774
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?            04775
         BO    CHGASPRT            YES, PRINT.                          04776
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?      04777
         BO    CHGASPRT            YES, PRINT                           04778
         B     CHGWRAS                                                  04779
CHGASPRT DS    0H                                                       04780
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                 04781
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG       04782
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL  04783
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG       04784
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                  04785
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN           04786
         ST    R7,SAVE7RG5                                              04729
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED    04788
         L     R7,SAVE7RG5                                              04729
         B     CHGWRAS                                                  04790
CHGWRASX DS    0H                                                       04791
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal      04792
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.   04793
CHGWRAS  DS    0H                                                       04794
         ST    R5,R5HXPRT        Save register.                         04795
         L     R5,SAVTRTCS       Point to translation table CSECT.      04796
         USING TRTCSECT,R5                                              04797
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.   04798
         DROP  R5                                                       04799
         L     R5,R5HXPRT        Restore register.                      04800
CHASCEND BR    R7                  END OF ROUTINE - RETURN              04801
         SPACE 3                                                        04802
* --------------------------------------------------------- *           04803
*    BAL REGISTER IS R7.                                                04804
* --------------------------------------------------------- *           04805
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                 04806
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED         04807
* --------------------------------------------------------- *           04808
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE            04809
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER              04810
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER              04811
         AR    R5,R2               ADD TO BYTE COUNT                    04812
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH             04813
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD          04814
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                  04815
ADDCNOOV DS    0H                                                       04816
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE       04817
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE       04818
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN              04819
* --------------------------------------------------------- *           04820
*    BAL REGISTER IS R7.                                                04821
* --------------------------------------------------------- *           04822
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.           04823
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76             04824
* --------------------------------------------------------- *           04825
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT         04826
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       04827
         BE    MOVEHI09                                                 04828
         MVC   0(4,R3),0(R2)                                            04829
         B     MOVEHIEN                                                 04830
         LA    R2,1(,R2)                                                04831
         LA    R3,1(,R3)                                                04832
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       04833
         BE    MOVEHI08                                                 04834
         MVC   0(3,R3),0(R2)                                            04835
         B     MOVEHIEN                                                 04836
         LA    R2,1(,R2)                                                04837
         LA    R3,1(,R3)                                                04838
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       04839
         BE    MOVEHI07                                                 04840
         MVC   0(2,R3),0(R2)                                            04841
         B     MOVEHIEN                                                 04842
         LA    R2,1(,R2)                                                04843
         LA    R3,1(,R3)                                                04844
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       04845
         BE    MOVEHIEN                                                 04846
         MVC   0(1,R3),0(R2)                                            04847
MOVEHIEN BR    R7                                                       04848
* --------------------------------------------------------- *           04849
*    BAL REGISTER IS R7.                                                04850
* --------------------------------------------------------- *           04851
****                                                                    04852
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                            04853
****                                                                    04854
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                04855
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                   04856
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,     04857
****                      THEN BACK SPACE FILE OVER TAPE MARK.          04858
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR        04859
****                                                                    04860
* --------------------------------------------------------- *           04861
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO    04862
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       04863
         EXCP  INIOB          READ                                      04864
         WAIT  ECB=INECB      WAIT FOR READ                             04865
         TM    INCSW+4,X'01'  WAS TM READ?                              04866
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.              04867
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?               04868
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                 04869
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY              04870
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                        04871
         L     R2,FULLWORK           LOAD FULLWORD LENGTH               04872
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY              04873
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                04874
         L     R3,FULLWORK           LOAD FULLWORD LENGTH               04875
         SR    R2,R3                 R2=ACTUAL LENGTH READ              04876
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS           04877
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?          04878
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE     04879
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                         04880
* ------------------------------------------------------------------*   04881
*    Call the LABELCHK program and get the returns.                 *   04882
* ------------------------------------------------------------------*   04883
         L     R15,LABCHENT       Get entry point of called program     04884
         STM   R1,R3,SAVE13LC     Save R1 and R2.                       04885
         LA    R1,PARMFLGS        Point R1 to parm flags.               04886
         LA    R2,LCHKPASS        Point R2 to user area to be passed.   04887
         L     R3,=A(INAREA)      Point R3 to address of INAREA.        04888
         BALR  R14,R15                 Do CALL.                         04889
         ST    R2,SAVELBCK             Address of returned user area    04890
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.   04891
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.          04892
*                                 A call to LABCHECK overlays INAREA,   04893
*                                 so if a LABCHECK routine alters       04894
*                                 a label, the alteration will be       04895
*                                 written out to the output tapes.      04896
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA    04897
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   04898
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?  04899
         BO    CLOSMALL           Yes. Close all files and finish up.   04900
* ------------------------------------------------------------------*   04901
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE            04902
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                      04903
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?         04904
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS        04905
         TM    ISLBLFLG,X'02'                                           04906
         BO    LBDQLABL                                                 04907
*                             NORMALLY WITHOUT CHANGING ANYTHING.       04908
*                             BUT IF IT IS A DATA FILE,                 04909
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE  04910
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK         04911
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       04912
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.           04913
         EXCP  INIOB          DO THIS EXCP                              04914
         WAIT  ECB=INECB      WAIT FOR READ                             04915
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               04916
         BNE   LBDQINER       NO -- ERROR                               04917
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     04918
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            04919
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR            04920
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR    04921
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE        04922
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       04923
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ     04924
         EXCP  INIOB          DO THIS EXCP                              04925
         WAIT  ECB=INECB      WAIT FOR READ                             04926
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               04927
         BNE   LBDQINER       NO -- ERROR                               04928
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     04929
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            04930
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE         04931
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                       04932
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE    04933
         EXCP  INIOB          DO THIS EXCP                              04934
         WAIT  ECB=INECB      WAIT FOR READ                             04935
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?               04936
         BNE   LBDQINER       NO -- ERROR                               04937
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER     04938
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE            04939
LBDQREND BR    R7                                                       04940
* --------------------------------------------------------- *           04941
*    BAL REGISTER IS R7.                                                04942
* --------------------------------------------------------- *           04943
****                                                                    04944
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.       04945
****                                                                    04946
* --------------------------------------------------------- *           04947
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)      04948
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                04949
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                04950
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.    04951
         ST    R5,R5HXPRT        Save register.                         04952
         L     R5,SAVTRTCS       Point to translation table CSECT.      04953
         USING TRTCSECT,R5                                              04954
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE              04955
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?           04956
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.       04957
         B     HEXPRNXX          Bypass Hex Print from external labels  04958
*                                                                       04959
HEXPRNEX DS    0H                Hex Print from External Label Input    04960
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                04961
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                04962
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.     04963
         ST    R5,R5HXPRT        Save register.                         04964
         L     R5,SAVTRTCS       Point to translation table CSECT.      04965
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE              04966
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?           04967
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.       04968
         L     R2,=F'80'         We know to print exactly 80 bytes.     04969
         B     MOVESIZ1          Now go print them.                     04970
*                                                                       04971
HEXPRNXX DS    0H                                                       04972
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT     04973
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?          04974
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.          04975
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                  04976
MOVESIZ1 DS    0H                                                       04977
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA               04978
         BCTR  R2,0                ONE LESS FOR EXECUTE                 04979
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    04980
         EX    R2,MOVRULER         PUT IN HEX RULER                     04981
         PUT   SYSPRINT,LINE                                            04982
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    04983
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  04984
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.    04985
         EX    R2,MOVDATIN         No. Move the record from INAREA.     04986
         B     HEXEN000            and continue to print.               04987
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.             04988
HEXEN000 DS    0H                                                       04989
         TM    PARMFLG5,X'80'      Is ASCII on?                         04990
         BZ    HEXEN001            No. Use EBCDIC printables.           04991
         EX    R2,PRHEXAS          Yes. Use ASCII printables.           04992
         B     HEXENSK1                                                 04993
HEXEN001 DS    0H                                                       04994
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES     04995
HEXENSK1 DS    0H                                                       04996
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    04997
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT       04998
         PUT   SYSPRINT,LINE                                            04999
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  05000
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.    05001
         EX    R2,MOVDATIN         No. Move the record from INAREA.     05002
         B     HEXEN002            and continue to print.               05003
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.             05004
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE      05005
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05006
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT       05007
         PUT   SYSPRINT,LINE                                            05008
         TM    HEXEXFLG,X'01'      Printing from External Label Input?  05009
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.    05010
         EX    R2,MOVDATIN         No. Move the record from INAREA.     05011
         B     HEXEN003            and continue to print.               05012
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.             05013
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE       05014
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                    05015
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT       05016
         PUT   SYSPRINT,LINE                                            05017
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK     05018
         B     HEXPREND                                                 05019
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***            05020
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***            05021
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***            05022
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***            05023
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***            05024
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***            05025
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***            05026
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***            05027
HEXPREND DS    0H                                                       05028
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE             05029
NOHEXPRO DS    0H                                                       05030
         L     R5,R5HXPRT                                               05031
         DROP  R5                                                       05032
         BR    R7             RETURN TO CALLER                          05033
* --------------------------------------------------------- *           05034
*    BAL REGISTER IS R7.                                    *           04942
* --------------------------------------------------------- *           04943
GETVTABL DS    0H        ***  Get stored entry from VOL1 table  ***
*                        ***    and place it into our CSECT     ***
*                        ***  --------------------------------  ***
         ST    R7,SV7VTABL             Protect this routine's BAL reg.
         TM    PARMFLG6,X'08'          Changing entire VOL1 label?
         BZ    GETVTABE                No. Skip this routine entirely.
         TM    LBLFLAG,X'04'           Is this a VOL1 label?
         BZ    GETVTABE                No. Don't do this routine.
         STM   R2,R5,SAVER2T5          Save a bunch of registers.
         LA    R4,0                    Clear Reg 4
         LA    R5,0                    Clear Reg 5
         IC    R5,V1INDEX              Load index into table.
         LA    R3,L'V1TABENT           Load table entry size.
         MR    R4,R3                   Multiply index by size of entry
         L     R2,VOL1SENT             Entry point of VOL1STOR CSECT,
*                                       which is beginning of the table
         USING VOL1STOR,R2             Tell assembler.
         AR    R2,R5                   Point to actual table entry.
         MVC   V1TABENT(L'V1TABENT),0(R2)  Dump entry into our CSECT.
*                                      This is the "found" VOL1 label,
*                                      and its associated flag bits.
         TM    0(R2),X'10'             Is the target tape's
*                                       eligibility flag on?
         BO    GETVTELG                Yes. Keep the found VOL1 label.
*                                      Otherwise.......
         MVC   V1VOL1(80),VOL1LBIN     No. Use the original VOL1 label.
         MVI   V1FLAG,X'00'            Turn eligibility flag, etc. off.
*                          ....... This is a safety net, that at
*                                   least, the orig VOL1 is in place.
GETVTELG DS    0H
         LM    R2,R5,SAVER2T5          Restore the work registers.
         DROP  R2
GETVTABE DS    0H
         L     R7,SV7VTABL             Restore BAL register for routine
         BR    R7                      Return to caller.                05033
* --- Constants associated with this routine. ------- *
V1INDEX  DC    X'00'                   Index into VOL1 storage table.
V1TABENT DS    0CL81                   Image of this VOL1 table entry.
V1FLAG   DC    X'00'                   Image of gotten flag.
*              X'00'                   No VOL1 label found
*              X'10'                   Eligibility flag
*              X'01'                   EBCDIC VOL1 label
*              X'02'                   ASCII  VOL1 label
*              X'04'                   ASCII Type 3
*              X'08'                   ASCII Type 4
V1VOL1   DC    CL80' '                 Image of gotten VOL1 label.
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - -         * 05035
         EJECT                                                          05036
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - * 05037
MAXBLK   DC    F'0'           Maximum Blocksize for file                05041
MINBLK   DC    F'0'           Minimum Blocksize for file                05042
FILNOSAV DC    CL5' '                                                   05043
FILNOSAW DC    CL5' '         One more than FILNOSAV                    05044
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED           05045
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO          05046
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT 05047
FUL2ZERO DC    2F'0'                                                    05048
IOB01    DC    X'02000000'                                              05049
IOB02    DC    X'00010000'                                              05050
PL4NO3   DC    PL4'3'                                                   05051
BLOKCNTP DC    F'0'                                                     05052
FILECNTP DC    F'1'                                                     05053
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES      05054
TOTBYH   DC    F'0'                                                     05055
TOTBYL   DC    F'0'                                                     05056
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES 05057
PRVBYH   DC    F'0'                                                     05058
PRVBYL   DC    F'0'                                                     05059
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE       05060
DBINFH   DC    F'0'                                                     05061
DBINFL   DC    F'0'                                                     05062
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL      05063
DBINH    DC    F'0'                                                     05064
DBINL    DC    F'0'                                                     05065
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS     05066
LABINH   DC    F'0'                                                     05067
LABINL   DC    F'0'                                                     05068
WORKA    DC    D'0'                                                     05069
WORKL    DC    D'0'                                                     05070
WORKP    DC    D'0'                                                     05071
BLOKCNT  DC    F'0'                                                     05075
FILECNT  DC    F'1'                                                     05076
LABELCNT DC    F'0'                                                     05077
SAVUNIT  DC    CL4' '                                                   05078
         DC    CL1' '         Need this to absorb blank from HEX macro  05079
SAVDDN   DC    CL5' '                                                   05080
SAVVOLSR DC    CL6' '                                                   05081
         DC    C'0'                                                     05082
BLKCNTRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES   05083
         DC    C'0'                                                     05084
BMOVEDRN DC    C'0000000000'  SAVE RUNNING BLOCK COUNT FOR DATA FILES   05085
SAVBYTES DC    X'0000'                                                  05086
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE      05087
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT     05088
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT    05089
NOUTSFLG DC    X'00'          NO OUTxx DDs were coded in JCL            05090
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                       05091
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT 05092
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT 05093
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND            05094
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL        05095
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE      05096
*              X'01'          TAPE IS SL                                05097
HEXEXFLG DC    X'00'          Hex printing from INAREA.                 05098
*              X'01'          Hex printing from EXTLBLIN.               05099
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS     05100
*              X'00'          WE ARE NOW WRITING DATA FROM THE          05101
*                             INPUT TAPE. X'01' IS OFF.                 05102
*              X'01'          WE ARE NOW WRITING LABELS FROM THE        05103
*                             EXTERNAL FILE                             05104
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK         05105
*              X'04'          WE CAME FROM THE ENDHEADR LABEL           05106
*              X'08'          WE CAME FROM THE LBLINEND LABEL           05107
*                             THIS MEANS EOF OF THE LABADDIN FILE       05108
*              X'10'          FINISHED FIXING LABELS                    05109
RESLTMWF DC    X'00'                                                    05110
*              X'01'          CAME FROM RESETIN FOR LABADDIN            05111
FLAGCODE DC    X'00'
CODE00   EQU   X'00'
CODE04   EQU   X'01'
CODE08   EQU   X'02'
CODE16   EQU   X'04'
**** ----- LABELCHK -------------------->>>>  Passed area, below        05112
*                                                                       05113
LCHKPASS DS    0H                                                       05114
*                                                                       05115
INAREAX  DC    CL80' '        Read labels into here.                    05116
         DC    CL10' '        Padding for possible overflow.            05117
* --------------------------------------------------------- *           05118
*                                                                       05119
*                                                                       05120
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL      05121
*              X'00'          DATA IS NOT A LABEL                       05122
*              X'01'          DATA IS A LABEL                           05123
*              X'02'          DATA IS AN ASCII LABEL                    05124
*                                                                       05125
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST              05126
*              X'01'          BECAUSE OF LABLDUMP DD MISSING            05127
*              X'02'          BECAUSE OF SYSIN    DD MISSING            05128
*              X'04'          BECAUSE OF LABADDIN DD MISSING            05129
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               05130
*              X'01'          LABLDUMP DD IS OPEN                       05131
*              X'02'          SYSIN    DD IS OPEN                       05132
*              X'04'          LABADDIN DD IS OPEN                       05133
L80FLAG  DC    X'00'                                                    05134
*              X'01'          LAST DATA WAS 80 BYTE RECORD              05135
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN   05136
*              X'01'          HDR1 HAS BEEN SEEN                        05137
*              X'02'          HDR2 HAS BEEN SEEN                        05138
*              X'04'          VOL1 HAS BEEN SEEN                        05139
*              X'08'          HDR1 IS FROM AN INITTED TAPE              05140
*              X'10'          EOF1 HAS BEEN SEEN                        05141
*              X'20'          EOF2 HAS BEEN SEEN                        05142
*              X'40'          EOV1 HAS BEEN SEEN                        05143
*              X'80'          EOV2 HAS BEEN SEEN                        05144
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                   05145
EXASCFLG DC    X'00'          External Label is ASCII if X'01'          05146
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK  05147
LABADFLG DC    X'00'          If X'01' then close LABADDIN file         05148
CLOSMFLG DC    X'00'          If X'01' then close all open files        05149
* --------------------------                                            05150
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP    05151
*              X'01'          WE ARE IN A HDR GROUP                     05152
*              X'02'          WE ARE IN A EOF GROUP                     05153
*              X'04'          WE ARE IN A EOV GROUP                     05154
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND   05155
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL   05156
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES      05157
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII    05158
* ---------- *                                                          05159
* --------------------------------------------------------- *           05160
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE       05161
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL          05162
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME          05163
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL          05164
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE            05165
VOLCHG   DC    C'      '                                                05166
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS       05167
VOLASC   DC    C'      '     ASCII VOLUME                               05168
LCHKPASE EQU   *-LCHKPASS                                               05169
**** ----- LABELCHK -------------------->>>>  Passed area, above        05170
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR   05171
*              X'01'          ERROR WAS PRESENT                         05172
OUTBYT   DS    0F                                                       05173
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER       05174
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE            05175
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY) 05176
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS       05177
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES        05178
LTMCNTR  DC    F'0'                                                     05179
LTMBINAD DC    F'0'                                                     05180
LTMCOUNT DC    PL6'0'                                                   05181
TWO31    DC    P'2147483648'       2 TO THE 31ST                        05182
         DC    C'      '                                                05183
         DC    C'0'                                                     05184
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES     05185
         DC    C'      '                                                05186
DWORD    DC    D'0'                                                     05187
QWORD    DS    PL16                                                     05188
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1                * 05189
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1            05190
         CNOP  0,8                                                      05191
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                        05192
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                        05193
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                        05194
         DC    X'03',AL3(INAREA),X'2000',X'0001'                        05195
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES  05196
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE 05197
         DC    X'03',AL3(INAREA),X'2000',X'0001'                        05198
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK    05199
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                        05200
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK    05201
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE     05202
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.     05203
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                        05204
VOL1CCW  DC    X'07',AL3(VOL1AREA),X'6000',X'0001'   REWIND
         DC    X'02',AL3(VOL1AREA),X'2000',X'0050'   READ 80 BYTES
VOLRCCW  DC    X'07',AL3(VOL1AREA),X'6000',X'0001'   REWIND
         DC    X'03',AL3(VOL1AREA),X'2000',X'0001'   NOOP CCW           05195
VOL1ECB  DC    F'0'                                                     05205
VOL1IOB  DC    X'02000000'                                              05206
         DC    A(VOL1ECB)                                               05207
VOL1CSW  DC    2F'0'                                                    05208
VOL1CCWP DC    A(VOL1CCW)                                               05209
VOL1DCBP DC    A(OUT1)                                                  05210
         DC    F'0'                                                     05211
         DC    X'00010000'                                              05212
VOLRECB  DC    F'0'                                                     05205
VOLRIOB  DC    X'02000000'                                              05206
         DC    A(VOLRECB)                                               05207
VOLRCSW  DC    2F'0'                                                    05208
VOLRCCWP DC    A(VOLRCCW)                                               05209
VOLRDCBP DC    A(OUT1)                                                  05210
         DC    F'0'                                                     05211
         DC    X'00010000'                                              05212
INECB    DC    F'0'                                                     05205
INIOB    DC    X'02000000'                                              05206
         DC    A(INECB)                                                 05207
INCSW    DC    2F'0'                                                    05208
INCCWPT  DC    A(INCCW)                                                 05209
         DC    A(IN)                                                    05210
         DC    F'0'                                                     05211
         DC    X'00010000'                                              05212
OUTECB   DC    F'0'                                                     05213
OUTIOB   DC    X'02000000'                                              05214
         DC    A(OUTECB)                                                05215
OUTCSW   DC    2F'0'                                                    05216
OUTCCWPT DC    A(OUTCCW)                                                05217
OUTDCBPT DC    A(OUT1)                                                  05218
         DC    F'0'                                                     05219
         DC    X'00010000'                                              05220
REWECB   DC    F'0'                                                     05221
REWIOB   DC    X'02000000'                                              05222
         DC    A(REWECB)                                                05223
REWCSW   DC    2F'0'                                                    05224
REWCCWPT DC    A(REWCCW)                                                05225
REWDCBPT DC    A(OUT1)                                                  05226
         DC    F'0'                                                     05227
         DC    X'00010000'                                              05228
BK1BECB  DC    F'0'                                                     05229
BK1BIOB  DC    X'02000000'                                              05230
         DC    A(BK1BECB)                                               05231
BK1BCSW  DC    2F'0'                                                    05232
BKBCCWPT DC    A(BK1BCCW)                                               05233
BKBDCBPT DC    A(IN)                                                    05234
         DC    F'0'                                                     05235
         DC    X'00010000'                                              05236
         SPACE 3                                                        05237
DDOCHG   DC    C'     '                                                 05238
DDOUT1   DC    C'OUT1 '                                                 05239
DDOUT2   DC    C'OUT2 '                                                 05240
DDOUT3   DC    C'OUT3 '                                                 05241
DDOUT4   DC    C'OUT4 '                                                 05242
DDOUT5   DC    C'OUT5 '                                                 05243
DDOUT6   DC    C'OUT6 '                                                 05244
DDOUT7   DC    C'OUT7 '                                                 05245
DDOUT8   DC    C'OUT8 '                                                 05246
DDOUT9   DC    C'OUT9 '                                                 05247
DDOUT10  DC    C'OUT10'                                                 05248
DDOUT11  DC    C'OUT11'                                                 05249
DDOUT12  DC    C'OUT12'                                                 05250
DDOUT13  DC    C'OUT13'                                                 05251
DDOUT14  DC    C'OUT14'                                                 05252
DDOUT15  DC    C'OUT15'                                                 05253
DDOUT16  DC    C'OUT16'                                                 05254
FLAGLIT  DC    C' - FLAGS - '                                           05255
* --------------------------                                            05256
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE     05257
* ------------------------------------------------------------------ *
FLAG1    DC    X'00'             KEEP FLAG1 AND FLAG2 TOGETHER          05258
OP1      EQU   X'80'             OUT1  IS CODED IN JCL                  05259
OP2      EQU   X'40'             OUT2  IS CODED IN JCL                  05260
OP3      EQU   X'20'             OUT3  IS CODED IN JCL                  05261
OP4      EQU   X'10'             OUT4  IS CODED IN JCL                  05262
OP5      EQU   X'08'             OUT5  IS CODED IN JCL                  05263
OP6      EQU   X'04'             OUT6  IS CODED IN JCL                  05264
OP7      EQU   X'02'             OUT7  IS CODED IN JCL                  05265
OP8      EQU   X'01'             OUT8  IS CODED IN JCL                  05266
FLAG2    DC    X'00'                                                    05267
OP9      EQU   X'80'             OUT9  IS CODED IN JCL                  05268
OP10     EQU   X'40'             OUT10 IS CODED IN JCL                  05269
OP11     EQU   X'20'             OUT11 IS CODED IN JCL                  05270
OP12     EQU   X'10'             OUT12 IS CODED IN JCL                  05271
OP13     EQU   X'08'             OUT13 IS CODED IN JCL                  05272
OP14     EQU   X'04'             OUT14 IS CODED IN JCL                  05273
OP15     EQU   X'02'             OUT15 IS CODED IN JCL                  05274
OP16     EQU   X'01'             OUT16 IS CODED IN JCL                  05275
* ------------------------------------------------------------------ *
FLAG2A   DC    X'00'                                                  * 05276
ERR      EQU   X'02'                                                    05277
EOV      EQU   X'01'                                                    05278
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                  05279
FF       EQU   X'FF'                                                    05280
FLAG3    DC    X'00'                                                    05281
FLAG4    DC    X'00'                                                    05282
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE             * 05283
* ---------- *                                                          05284
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                     05285
*              x'01'    Yes.                                            05286
* ---------- *                                                          05287
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN  05288
*              X'01'    HDR1 HAS BEEN READ IN                           05289
*              X'02'    HDR2 HAS BEEN READ IN                           05290
*              X'04'    VOL1 HAS BEEN READ IN                           05291
*              X'08'    UHL  HAS BEEN READ IN                           05292
*              X'10'    EOF1 HAS BEEN READ IN                           05293
*              X'20'    EOF2 HAS BEEN READ IN                           05294
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN          05295
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN          05296
* ---------- *                                                          05297
STRIPFLG DC    X'00'                                                    05298
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.   05299
DATFLAG  DC    X'00'                                                  * 05300
*              X'10'    NO REAL DATA HAS BEEN READ YET                * 05301
* --------------------------------------------------------- *         * 05302
VOLDD    DC    C'     '                                                 05303
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  05310
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                       05311
         SPACE 3                                                        05312
LABELITH DC    CL80'----ENDOFLABELHEADER '                              05313
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           05314
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              05315
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           05316
LTMCTPAT DC    X'4020202020202020202120'                                05317
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *  05318
VOL1LABL DS    0CL80                                                    05319
VOL1LIT  DC    CL4'VOL1'                                                05320
VOL1SERL DC    CL6' '                                                   05321
VOL1FIL1 DC    CL31' '                                                  05322
VOL1ONER DC    CL10' '                                                  05323
VOL1FIL2 DC    CL29' '                                                  05324
* ------------------------ INITIALIZATION OF VOLUMES --------------- *  05325
HDR1INIT DS    0CL80                                                    05326
HDR1ILIT DC    CL4'HDR1'                                                05327
HDR1IFIL DC    76C'0'                                                   05328
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *  05329
AVOL1LAB DS    0CL80                                                    05330
AVOL1LIT DC    CL4'VOL1'                                                05331
AVOL1SER DC    CL6' '                                                   05332
AVOL1ACC DC    CL1' '                                                   05333
AVOL1RS1 DC    CL13' '                                                  05334
AVOL1IMP DC    CL13' '                                                  05335
AVOL1OWN DC    CL14' '                                                  05336
AVOL1RS2 DC    CL28' '                                                  05337
AVOL1LVL DC    CL1'3'                                                   05338
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *  05339
AHDR1INI DS    0CL80                                                    05340
AHDR1LIT DC    CL4'HDR1'                                                05341
AHDR1ID1 DC    23C'0'                                                   05342
AHDR1FSN DC    CL4'0001'                                                05343
AHDR1FSQ DC    CL4'0001'                                                05344
AHDR1GNM DC    CL4'0001'                                                05345
AHDR1VNM DC    CL2'00'                                                  05346
AHDR1CRD DC    CL6' 00000'                                              05347
AHDR1EXD DC    CL6' 00000'                                              05348
AHDR1ACC DC    CL1' '                                                   05349
AHDR1BKC DC    CL6'000000'                                              05350
AHDR1OSC DC    CL20'IBMZLA '                                            05351
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *  05352
MSGCSECT CSECT                                                          05353
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                         05354
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  05355
         DC    CL78' '                                                  05356
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                         05357
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  05358
         DC    CL78' '                                                  05359
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                         05360
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'  05361
         DC    CL78' '                                                  05362
BLKCNTMS DC    C' BLOCK COUNTS in EOF1 and EOV1 are being corrected fo' 05363
         DC    C'r TAPE COPY operation, when outputs are SL.'           05364
         DC    CL37' '                                                  05365
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM' 05366
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE ' 05367
         DC    C'A PARM OF INITVOLS.'                                   05368
         DC    CL8' '                                                   05369
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               ' 05370
         DC    C'                             MEMBER=         VOLUME= ' 05371
         DC    C'                          '                            05372
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               ' 05373
         DC    C'                             MEMBER=         VOLUME= ' 05374
         DC    C'                          '                            05375
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L' 05376
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A' 05377
         DC    C' MULTIPLE OF 80           '                            05378
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N' 05379
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT' 05380
         DC    C' TAPES. '                                              05381
         DC    CL19' '                                                  05382
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 05383
         DC    C' IS TREATED AS NL.                                   ' 05384
         DC    CL27' '                                                  05385
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 05386
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  ' 05387
         DC    CL27' '                                                  05388
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER' 05389
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   ' 05390
         DC    CL27' '                                                  05391
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                05392
         DC    CL6'&HEXDFLM'                                            05393
         DC    C' RECORDS WILL'                                         05394
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in ' 05395
         DC    C'SYSIN.'                                                05396
         DC    CL17' '                                                  05397
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS ' 05398
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP' 05399
         DC    C'UT TAPES.                 '                            05400
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S' 05401
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A' 05402
         DC    C' MULTIPLE OF 80           '                            05403
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C' 05404
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL ' 05405
         DC    C'IMAGES.                   '                            05406
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS ' 05407
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          ' 05408
         DC    C'                           '                           05409
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ' 05410
         DC    C'ing a Tape Mark right now.                           ' 05411
         DC    C'                           '                           05412
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced' 05413
         DC    C'.  Divide by 3 for the SL file number ***            ' 05414
         DC    C'                           '                           05415
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced' 05416
         DC    C'.  Multiply by 3 for the NL file number ***          ' 05417
         DC    C'                           '                           05418
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe' 05419
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no' 05420
         DC    C't code PARM=SLLIM.         '                           05421
FORCREAD DC    C' Option READONLY has been forced by not having any OU' 05422
         DC    C'Txx DDNAMES coded in the JCL.                        ' 05423
         DC    C'                           '                           05424
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '        05425
         DC    C'TERMINATED '                                           05426
         DC    76C'*'                                                   05427
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '   05428
         DC    82C'*'                                                   05429
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'           * 05430
         DC    C' FOR DDNAME '                                          05431
VOLDDN   DC    C'     '                                                 05432
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE          * 05433
VOLKEPT  DC    C' VOL1 VOLSER XXXXXX WAS KEPT FOR OUTPUT U'           * 05430
         DC    C'SING DDNAME '                                          05431
VOLKDDN  DC    C'     '                                                 05432
VOLKFILL DC    75C' '                    VOL1 CHANGE MESSAGE          * 05433
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                05434
OWNRTID  DC    C'          '                                            05435
OWNRTIDE DC    C'    '                                                  05436
OWNRLIT1 DC    C' FOR DDNAME '                                          05437
OWNRDDO  DC    C'     '                                                 05438
OWNRFIL2 DC    64C' '                                                   05439
LTMRPT   DC    C' LEADING TAPE MARK WAS '                             * 05440
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED          * 05441
         DC    C'  '                                                    05442
         DC    C'LTM Number ='                                          05443
LTMRNUM  DC    C'           '                                           05444
         DC    78C' '                                                   05445
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '          * 05446
         DC    C'EOV2EOF PARM OR OPTION'                              * 05447
         DC    69C' '                                                 * 05448
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                               05449
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                               05450
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                          05451
INITMSG  DC    C' INITTED TAPE HAS BEEN '                               05452
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                          05453
INITSER  DC    C'      '                                              * 05454
INITBLNK DC    76C' '                                                 * 05455
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '       05456
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '              05457
OUTCFCNT DC    C'XXXXXXXXXX'                                            05458
         DC    C'  Bytes:'                                              05459
OUTCBCNT DC    CL26' '                                                  05460
         DC    C' '                                                     05461
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '       05462
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        05463
         DC    40C'*'                                                   05464
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '       05465
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        05466
         DC    40C'*'                                                   05467
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '       05468
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '        05469
         DC    40C'*'                                                   05470
TESTMSG  DS    0CL133
         DC    CL133' '
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'              05471
FILEPBYT DS    0CL44                                                    05472
FILEDFL1 DC    C' '                                                     05473
FILECONT DC    C'          '                                            05474
FILEDFL2 DC    C' '                                                     05475
FILEBYTE DC    C' 9,999,999,999,999,999,999'                            05476
         DC    C' BYTES'                                                05477
FILETBYT DS    0CL44                                                    05478
FILEDFL3 DC    C'    '                                                  05479
FILECUMT DC    C'          '                                            05480
FILEDFL4 DC    C' '                                                     05481
FILETBYE DC    C' 9,999,999,999,999,999,999'                            05482
         DC    8C' '                                                    05483
FOOTMSG1 DS    0CL133                                                   05484
         DC    C' File '                                                05485
FOOTMNUM DC    C'     '                                                 05486
         DC    C' Ft @ 6250: '                                          05487
FOOTMFT  DC    C'          '                                            05488
         DC    C' Cumulative Feet for this Tape: '                      05489
FOOTMCFT DC    C'          '                                            05490
FOOTMFIL DC    58C' '                                                   05491
MNMXMSG1 DS    0CL133                                                   05492
         DC    C' File '                                                05493
MNMXFNUM DC    C'     '                                                 05494
         DC    C' Min Blksize: '                                        05495
MNMXMIN  DC    C'        '                                              05496
         DC    C' Max Blksize: '                                        05497
MNMXMAX  DC    C'        '                                              05498
         DC    78C' '                                                   05499
RECSZMSG DS    0CL133                                                   05500
         DC    C' File '                                                05501
RECSZFNM DC    C'     '                                                 05502
         DC    C' Record number: '                                      05503
RECSZRCD DC    C'          '                                            05504
         DC    C' Size of record: '                                     05505
RECSZSIZ DC    C'          '                                            05506
         DC    69C' '                                                   05507
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'    05508
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'    05509
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                     05510
         DC    C'       '          BLANKS FOR COVERING UP             * 05511
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX05512
               LSER: XXXXXX '                                         * 05513
         DC    66C' '                                                 * 05514
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX05515
               ERIAL XXXXXX '                                         * 05516
         DC    66C' '                                                 * 05517
         DC    C' '                                                     05518
LINE44   DC    CL44' '                                                  05525
SHOOVLHD DC    CL64' ***  ---  SHOW OUTPUT VOLUME FIRST 80 BYTES BY DDNx
               AME  ---  ***'
SHOOVLHU DC    CL64' ***  ---  ----------------------------------------x
               ---  ---  ***'
COPYMODS CSECT                                                          05519
HEXPRTWK DC    CL133' '                                                 05520
RULERHEX DS    0CL132                                                   05526
         DC    C'----+----1----+----2----+----3----+----4----+----5--'  05527
         DC    C'--+----6----+----7----+----8----+----9----+----0----+' 05528
         DC    C'----1----+----2----+----3----+----4'                   05529
REPLY    DC    C'      '                                                05530
COPIED   DC    C'COPIED '                                             * 05531
SKIPPED  DC    C'SKIPPED'                                             * 05532
WRITTEN  DC    C'WRITTEN'                                               05533
READDD   DC    C'READ   '                                               05534
PASSED   DC    C'PASSED '                                               05535
OVOLMSGH DC    C'       FIRST 80 BYTES OF OUTPUT TAPE, IF THAT MUCH EXI-
               STS: '
OVOLMSGT DC    CL81' '
FULLWORK DS    0F                                                     * 05536
         DC    H'0'                                                   * 05537
HALFWORK DC    H'0'                HALFWORD WORK AREA                 * 05538
         DC    2F'0'               FILLER                             * 05539
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.    05540
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW   05541
* --------------------------------------------------------- *         * 05542
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS               05543
PARMFLG1 DC    X'00'                                                    05544
*              X'DE'    LABEL INFORMATION WILL BE PRINTED               05545
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED              05546
PARMFLG2 DC    X'00'                                                    05547
PARMFLG3 DC    X'00'                                                    05548
PARMFLG4 DC    X'00'                                                    05549
PARMFLG5 DC    X'00'                                                    05550
PARMFLG6 DC    X'00'                                                    05551
PARMFLG7 DC    X'00'                                                    05552
PARMFLG8 DC    X'00'                                                    05553
PARMFLG9 DC    X'00'                                                    05554
PARMFLGA DC    X'00'                                                    05555
PARMFLLN EQU   *-PARMFLGS                                               05556
PARMCOPY DS    XL10                Copy of options before correction    05557
* --------------------------------------------------------- *         * 05558
         DS    0F                                                       05559
STRTVALU DS    0CL(ENDVALUE)                                            05560
         DC    A(ENDVALUE)                                              05561
PARMSLEN DC    F'0'                LENGTH OF PARMS                      05562
*                                  Upon entry to PARMCHEK, contains     05563
*                                  the PARM address from COPYMODS,      05564
*                                  which gets overlaid.                 05565
SAVMSLEN DC    F'0'                LENGTH OF PARMS                      05566
*                                  Upon entry to PARMCHEK, contains     05567
*                                  the PARM address from COPYMODS,      05568
*                                  which gets overlaid.                 05569
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS              05570
*                                  Upon entry to PARMCHEK, contains     05571
*                                  the PARM length from COPYMODS,       05572
*                                  which gets overlaid.                 05573
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            05574
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            05575
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            05576
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                  05577
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                  05578
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                  05579
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 05580
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 05581
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 05582
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                05583
         DC    CL7' '              FILLER                               05584
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES           05585
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program    05586
LINLABEL DC    F'0'           LABEL LIMIT VALUE                         05587
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS 05588
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4     05589
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL        05590
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE        05591
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE        05592
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN      05593
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS      05594
TAPEOWN  DC    CL10' '                                                  05595
TAPEOEXT DC    CL4' '                                                   05596
TAPEOASC DC    CL14' '                                                  05597
OVERFLAG DC    X'00'                                                    05598
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL              05599
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                   05600
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN        05601
LIMCHAR  DC    CL10' '                                                  05602
LABCHAR  DC    CL10' '                                                  05603
PRTCHAR  DC    CL10' '                                                  05604
LTMCHAR  DC    CL10' '                                                  05605
ENDVALUE EQU   (*-PARMSLEN)+4                                           05606
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program    05607
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE   05608
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.    05609
* --------------------------------------------------------- *           05610
*              FORMAT OF PARM TABLE                                     05611
*              ONE ENTRY IS 20 BYTES                                    05612
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX              05613
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                05614
*                               X'00' SAYS TURN FLAG ON                 05615
*                               X'10' SET ENTRY AS A DEFAULT            05616
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED              05617
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,               05618
*                                WHICH ALLOWS FOR 80 PARMS              05619
*                                THAT DON'T HAVE TO BE                  05620
*                                SEPARATED BY A COMMA.                  05621
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES             05622
* --------------------------------------------------------- *           05623
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'              05624
* --------------------------------------------------------- *           05625
         SPACE 3                                                        05626
         LTORG                                                          05627
         SPACE 3                                                        05628
         DS    0D                                                     * 05629
LBNEXLST DC    X'87',AL3(LBNJFCB)                                       05630
LBNJFCB  DC    44F'0'                                                   05631
         DS    0D                                                     * 05632
LBLEXLST DC    X'87',AL3(LBLJFCB)                                       05633
LBLJFCB  DC    44F'0'                                                   05634
         DS    0D                                                     * 05635
OUTEXLST DC    X'87',AL3(OUTJFCB)                                       05636
OUTJFCB  DC    44F'0'                                                   05637
         DS    0D                                                     * 05638
INEXLST  DC    X'87',AL3(INJFCB)                                      * 05639
INJFCB   DC    44F'0'                                                 * 05640
         SPACE 3                                                        05641
* --------------------------------------------------------- *         * 05660
         SPACE 3                                                        05661
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X05662
               EXLST=INEXLST                                            05663
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X05664
               EXLST=OUTEXLST                                           05665
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X05666
               EXLST=OUTEXLST                                           05667
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X05668
               EXLST=OUTEXLST                                           05669
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X05670
               EXLST=OUTEXLST                                           05671
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X05672
               EXLST=OUTEXLST                                           05673
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X05674
               EXLST=OUTEXLST                                           05675
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X05676
               EXLST=OUTEXLST                                           05677
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X05678
               EXLST=OUTEXLST                                           05679
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X05680
               EXLST=OUTEXLST                                           05681
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X05682
               EXLST=OUTEXLST                                           05683
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X05684
               EXLST=OUTEXLST                                           05685
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X05686
               EXLST=OUTEXLST                                           05687
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X05688
               EXLST=OUTEXLST                                           05689
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X05690
               EXLST=OUTEXLST                                           05691
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X05692
               EXLST=OUTEXLST                                           05693
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X05694
               EXLST=OUTEXLST                                           05695
         ENTRY SYSPRINT                                                 05696
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X05697
               BLKSIZE=133                                              05698
         ENTRY LABLDUMP                                                 05699
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X05700
               EXLST=LBLEXLST                                           05701
         ENTRY LABADDIN                                                 05702
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X05703
               EXLST=LBNEXLST,EODAD=LBLINEND                            05704
         DC    CL4' '                                                   05730
HDR1SAV  DC    CL80' '                                                  05731
HDR2SAV  DC    CL80' '                                                  05732
UHL1SAV  DC    CL80' '                                                  05733
UHL2SAV  DC    CL80' '                                                  05734
UHL3SAV  DC    CL80' '                                                  05735
UHL4SAV  DC    CL80' '                                                  05736
UHL5SAV  DC    CL80' '                                                  05737
UHL6SAV  DC    CL80' '                                                  05738
UHL7SAV  DC    CL80' '                                                  05739
UHL8SAV  DC    CL80' '                                                  05740
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                         05741
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                     05742
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                05743
         DC    CL20' '    PADDING TO SEPARATE FROM INAREA             * 05744
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                   05745
*   This area must match the FOOTWORK DSECT in the FOOTAGE routine.     05746
LABELTYP DS    C                       LABEL TYPE                       05747
DENSITY  DS    C                       DENSITY CODE                     05748
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY   05749
BLKSZE   DS    F                       BLOCK SIZE IN BINARY             05750
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY       05751
USERLBLS DS    F                       USER LABELS IN BINARY            05752
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL            05753
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC           05754
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC           05755
*--------END OF FOOTAGE ROUTINE PARAMETERS                              05756
TRTCSECT CSECT                                                          05758
* ------------------------------------------------------------------- * 05759
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    * 05760
*   (and possibly other places) in synchronization with this CSECT.   * 05761
* ------------------------------------------------------------------- * 05762
TRTBL0   DS    0D                                                       05763
         DC    XL16'40404040404040404040404040404040'                   05764
         DC    XL16'40404040404040404040404040404040'                   05765
         DC    XL16'40404040404040404040404040404040'                   05766
         DC    XL16'40404040404040404040404040404040'                   05767
         DC    XL16'404040404040404040404A4B4C4D4E4F'                   05768
         DC    XL16'504040404040404040405A5B5C5D5E5F'                   05769
         DC    XL16'606140404040404040406A6B6C6D6E6F'                   05770
         DC    XL16'404040404040404040407A7B7C7D7E7F'                   05771
         DC    XL16'40818283848586878889404040404040'                   05772
         DC    XL16'40919293949596979899404040404040'                   05773
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                   05774
         DC    XL16'40404040404040404040404040404040'                   05775
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                   05776
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                   05777
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                   05778
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                   05779
TRTBL1   DS    0D                                                       05780
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                   05781
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                   05782
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                   05783
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                   05784
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                   05785
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                   05786
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                   05787
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                   05788
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                   05789
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                   05790
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                   05791
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                   05792
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                   05793
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                   05794
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                   05795
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                   05796
TRTBL2   DS    0D                                                       05797
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05798
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05799
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05800
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05801
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05802
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05803
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05804
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05805
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05806
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05807
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05808
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05809
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05810
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05811
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05812
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                   05813
TRTE2A   DS    0D                                                       05814
         DC    XL16'000102030405060708090A0B0C0D0E0F'                   05815
         DC    XL16'101112131415161718191A1B1C1D1E1F'                   05816
         DC    XL16'202122232425262728292A2B2C2D2E2F'                   05817
         DC    XL16'303132333435363738393A3B3C3D3E3F'                   05818
         DC    XL16'20414243444546474849A22E3C282B7C'                   05819
         DC    XL16'2651525354555657585921242A293B5E'                   05820
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                   05821
         DC    XL16'707172737475767778603A2340273D22'                   05822
         DC    XL16'806162636465666768698ABBF0FDFEB1'                   05823
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                   05824
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                   05825
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                   05826
         DC    XL16'7B414243444546474849CACBCCCDCECF'                   05827
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                   05828
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                   05829
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                   05830
TRTA2E   DS    0D                                                       05831
         DC    XL16'000102030405060708090A0B0C0D0E0F'                   05832
         DC    XL16'101112131415161718191A1B1C1D1E1F'                   05833
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                   05834
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                   05835
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                   05836
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                   05837
         DC    XL16'79818283848586878889919293949596'                   05838
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                   05839
         DC    XL16'808182838485868788898A8B8C8D8E8F'                   05840
         DC    XL16'909192939495969798999A9B9C9D9E9F'                   05841
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                   05842
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                   05843
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                   05844
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                   05845
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                   05846
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                   05847
TRTASPRT DS    0D                                                       05848
         DC    XL16'40404040404040404040404040404040'                   05849
         DC    XL16'40404040404040404040404040404040'                   05850
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                   05851
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                   05852
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                   05853
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                   05854
         DC    XL16'40818283848586878889919293949596'                   05855
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                   05856
         DC    XL16'40404040404040404040404040404040'                   05857
         DC    XL16'40404040404040404040404040404040'                   05858
         DC    XL16'40404040404040404040404040404040'                   05859
         DC    XL16'40404040404040404040404040404040'                   05860
         DC    XL16'40404040404040404040404040404040'                   05861
         DC    XL16'40404040404040404040404040404040'                   05862
         DC    XL16'40404040404040404040404040404040'                   05863
         DC    XL16'40404040404040404040404040404040'                   05864
         EJECT                                                          05865
JFCBLK   DSECT                                                          05866
         IEFJFCBN LIST=YES                                              05867
*
VOL1STOR CSECT                                                          05868
*                          Used for KEEPVOL and SHOOVL processing.
         DS    0D                Place to store VOL1 images.
VOL1LB   DS    0CL1377
*
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT1
VOL1LBL  EQU   *-VOL1LB             Table entry length
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT2
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT3
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT4
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT5
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT6
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT7
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT8
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT9
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT10
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT11
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT12
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT13
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT14
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT15
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR OUT16
         DC    X'00',CL80' '     SAVED VOL1 LABEL FOR IN
VOL1LB1  EQU   VOL1LB+1,80
VOL1LB2  EQU   VOL1LB+82,80
VOL1LB3  EQU   VOL1LB+163,80
VOL1LB4  EQU   VOL1LB+244,80
VOL1LB5  EQU   VOL1LB+325,80
VOL1LB6  EQU   VOL1LB+406,80
VOL1LB7  EQU   VOL1LB+487,80
VOL1LB8  EQU   VOL1LB+568,80
VOL1LB9  EQU   VOL1LB+649,80
VOL1LB10 EQU   VOL1LB+730,80
VOL1LB11 EQU   VOL1LB+811,80
VOL1LB12 EQU   VOL1LB+892,80
VOL1LB13 EQU   VOL1LB+973,80
VOL1LB14 EQU   VOL1LB+1054,80
VOL1LB15 EQU   VOL1LB+1135,80
VOL1LB16 EQU   VOL1LB+1216,80
VOL1LBIN EQU   VOL1LB+1297,80
*
COPYMODS CSECT
INVOLFLG DC    X'00'          Same meanings as VOL1FLAG for input tape
VOL1FLAG DC    X'00'          First record of each output tape.
*              X'01'          EBCDIC VOL1 LABEL
*              X'02'          ASCII  VOL1 LABEL
*              X'04'          ASCII Type 3 VOL1 Label
*              X'08'          ASCII Type 4 VOL1 Label
*              X'10'          Eligible for VOL1 overlay, bit.
         DC    C' '
VOL1AREA DC    CL80' '
INAREA   DS    CL65535                                                * 05869
*
WORKAREA DSECT
SAVEAREA DS    18F
         DC    C' '              BLANK FOR CLEARING AREA              * 05705
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP           * 05706
         DC    C' '                                                     05521
LINE     DC    CL133' '                                                 05522
         DC    C' '                                                     05523
SAVELINE DC    CL133' '                                                 05524
SAVER2X1 DC    F'0'               Register save areas
SAVER2T5 DC    4F'0'
SAVER7A  DC    F'0'
SAVER7B  DC    F'0'
SAVER7C  DC    F'0'
SAVER7OP DC    F'0'
SAVE1TO5 DC    5F'0'                                                    05038
SAVE1RG1 DC    F'0'                                                     05039
SAVER2A  DC    F'0'                                                     05040
SAVE5ASC DC    F'0'
STOR7REG DS    F                                                        05304
TOTB7REG DS    F                                                        05305
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST      05306
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST      05307
SAVE13LC DC    3F'0'                                                    05308
SAV45MSG DC    2F'0'                                                    05309
SV7VTABL DC    F'0'                    Saved BAL register for GETVTABL.
SAV01MLT DC    D'0'                                                     05072
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro    05073
HEXSAVE  DS    3F                    Register save for HEX macro        05074
SAVE2TO3 DC    2F'0'                                                    05707
SAVE3REG DC    F'0'                                                     05708
SAVE7BA1 DC    F'0'                                                     05709
SAVE7REG DC    F'0'                                                     05710
SAVE7BAL DC    F'0'                                                     05711
SAVE7RG1 DC    F'0'                                                     05712
SAVE7RG2 DC    F'0'                                                     05713
SAVE7RG3 DC    F'0'                                                     05714
SAVE7RG4 DC    F'0'                                                     05715
SAVE7RG5 DC    F'0'                                                     05716
SAVE7RG6 DC    F'0'                                                     05717
SAVE7RG7 DC    F'0'                                                     05718
R5HXPRT  DC    F'0'                                                     05719
R7HXPRT  DC    F'0'                                                     05720
SAVTRTCS DC    F'0'                                                     05721
ENTRYPT  DC    F'0'                                                     05722
LABCHENT DC    F'0'                                                     05723
VOL1SENT DC    F'0'
PRTLBENT DC    F'0'                                                     05724
FOOTGENT DC    F'0'                                                     05725
PARMSAVE DC    F'0'                                                     05726
PARMADDR DC    F'0'                                                     05727
USERSAVE DC    F'0'                                                     05728
SAVELBCK DC    F'0'                                                     05729
BLKSZWRK DS    F          Work area to calculate maximum BLKSZE         05757
         DS    X
VOLALL   DS    0CL96         16 X 6                                     05642
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05643
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05644
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05645
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05646
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05647
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05648
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05649
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05650
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05651
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05652
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05653
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05654
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05655
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05656
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05657
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB              05658
VOLALLLN EQU   *-VOLALL                                                 05659
WORKLENG EQU   *-WORKAREA
*
#PAN$AUD CSECT                                                          05870
$PAN#AUD DC    CL30'LEVEL 085 COPYMODS  05/22/12 '                      05871
         END                                                            05872
*          PRINT OPTION LIST   AT LEVEL 085 AS OF 05/22/12              05873
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                05874
**************************************************************          05875
**************************************************************          05876
**                                                          **          05877
**                                                          **          05878
**  MODULE: COPYMOPT                                        **          05879
**                                                          **          05880
**                                                          **          05881
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **          05882
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **          05883
**            PROGRAM.                                      **          05884
**                                                          **          05885
**                                                          **          05886
**  Technique Note:  A separate SYSPRINT DCB is coded here  **          05887
**            in this CSECT, besides the SYSPRINT DCB       **          05888
**            that was coded in the main COPYMODS CSECT.    **          05889
**            The SYSPRINT DCB that is here, is OPENed      **          05890
**            and CLOSEd by this CSECT before COPYMODS'     **          05891
**            SYSPRINT DCB is OPENed for the first time.    **          05892
**            This gives a "DISP=MOD" effect for the        **          05893
**            //SYSPRINT DD name, and it also allows SDSF   **          05894
**            or any other spool browser program to show    **          05895
**            the options in effect in SYSPRINT, before     **          05896
**            any tapes have been mounted yet.              **          05897
**                                                          **          05898
**************************************************************          05899
**************************************************************          05900
         EJECT                                                          05901
         YREGS                                                          05902
COPYMOPT CSECT                                                          05903
         USING *,R15                                                  * 05904
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.    05905
         B     EYECATCH                                               * 05906
         DC    C'--- '            MAKE EYECATCHER VISIBLE             * 05907
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '  05908
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '                 * 05909
SAVEAREA DC    18F'0'                                                   05910
EYECATCH DS    0D             ENSURE ALIGNMENT                        * 05911
         SAVE  (14,12)                                                  05912
         LR    R5,R1          SAVE PASSED QUANTITY                      05913
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  05914
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         05915
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        05916
         LR    R13,R1               NEW SAVE AREA ADDRESS               05917
         DROP  R15                                                      05918
* -----                       SET UP TWO BASE REGISTERS                 05919
         USING COPYMOPT,R12,R11                                         05920
         LR    R12,R15                                                  05921
         LA    R11,4095(,R12)                                           05922
         LA    R11,1(,R11)                                              05923
         LR    R1,R5          RESTORE PARM POINTER                      05924
OPTMOVE  DS    0H                                                       05925
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM          05926
         TM    TWICEFLG,X'02'         Second call to program?           05927
         BO    OPTMOVEO               Don't move ten bytes past....     05928
         MVC   PARMTCPY(10),10(R1)    Move original parms if first call 05929
         MVC   PARMFSAV(10),0(R1)     And save changed parms            05930
         OI    TWICEFLG,X'02'         Show original parms moved already 05931
OPTMOVEO DS    0H                                                       05932
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM      05933
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM      05934
         OPEN  (SYSPRINT,OUTPUT)                                        05935
         TM    TWICEFLG,X'01'         Is this the second time here?     05936
         BZ    WRITORIG               No. Write the original headers.   05937
         TM    PARMTBIN+5,X'80'       Is CODEDPRM coded?                05938
         BO    NOWRTHDR               Yes. Write different headers.     05939
WRITORIG DS    0H                     Write original OPTIONS headers.   05940
         OI    TWICEFLG,X'01'         Show we were here once already.   05941
         MVC   LINE(133),LINE-1       CLEAR LINE                        05942
         MVC   LINE(133),DISPLINH     Write original header 1.          05943
         PUT   SYSPRINT,LINE                                            05944
         MVC   LINE(133),LINE-1       CLEAR LINE                        05945
         MVC   LINE(133),DISPLINO     Write original header 2.          05946
         PUT   SYSPRINT,LINE                                            05947
         B     YSWRTHDR                                                 05948
NOWRTHDR DS    0H                     Write CODEDPRM different headers. 05949
         MVC   LINE(133),LINE-1       CLEAR LINE                        05950
         MVC   LINE(133),DISPNCOR     Write "before correction" hdr 1.  05951
         PUT   SYSPRINT,LINE                                            05952
         MVC   LINE(133),LINE-1       CLEAR LINE                        05953
         MVC   LINE(133),DISPNCRO     Write "before correction" hdr 2.  05954
         PUT   SYSPRINT,LINE                                            05955
YSWRTHDR DS    0H                                                       05956
         MVC   LINE(133),LINE-1       CLEAR LINE                        05957
         PUT   SYSPRINT,LINE                                            05958
         BAL   R7,FILLOPTS                                              05959
         MVC   LINE(133),LINE-1       CLEAR LINE                        05960
         MVC   LINE(133),DISPOP02                                       05961
         PUT   SYSPRINT,LINE                                            05962
         MVC   LINE(133),LINE-1       CLEAR LINE                        05963
         MVC   LINE(133),DISPOP01                                       05964
         PUT   SYSPRINT,LINE                                            05965
         MVC   LINE(133),LINE-1       CLEAR LINE                        05966
         MVC   LINE(133),DISPOP03                                       05967
         PUT   SYSPRINT,LINE                                            05968
         TM    TWICEFLG,X'04'         Don't do changed report on        05969
         BO    PARMGHNC                second call.                     05970
         CLC   PARMFSAV(10),PARMTCPY  COMPARE TO SEE IF PARMS CHANGED   05971
         BNE   PARMCHGD               Not equal, report that.           05972
         MVC   LINE(133),LINE-1       CLEAR LINE                        05973
         MVC   LINE(133),DISPSHNC     Display that parms not changed    05974
         PUT   SYSPRINT,LINE                                            05975
         B     PARMGHNC               And go on with other print lines  05976
PARMCHGD DS    0H                     Parms have changed                05977
         MVC   LINE(133),LINE-1       CLEAR LINE                        05978
         MVC   LINE(133),DISPSHCR     Display that parms have changed   05979
         PUT   SYSPRINT,LINE                                            05980
PARMGHNC DS    0H                     Go on with other print lines      05981
         MVC   LINE(133),LINE-1       CLEAR LINE                        05982
         MVC   LINE(133),DISPHEXM                                       05983
         PUT   SYSPRINT,LINE                                            05984
         MVC   LINE(133),LINE-1       CLEAR LINE                        05985
         PUT   SYSPRINT,LINE                                            05986
         CLOSE (SYSPRINT)                                               05987
* ----------------------------------------------------------------- *   05988
THEEND   EQU   *                                                        05989
         TM    TWICEFLG,X'04'         Second call, unconditionally?     05990
         BO    OPTMOVE2               Yes. No need to set flag.         05991
         OI    TWICEFLG,X'04'         No. Set flag for next time.       05992
OPTMOVE2 DS    0H                                                       05993
THEEND1  DS    0H                                                       05994
         L     R13,4(,R13)                                              05995
         RETURN (14,12),RC=0                                            05996
         EJECT                                                          05997
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *   05998
* ----------------------------------------------------------------- *   05999
*    BAL REGISTER IS R7.                                            *   06000
* ------------------------------------------------------------------*   06001
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT           06002
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE       06003
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE       06004
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION    06005
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                 06006
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                       06007
         BE    FILOPEND                                                 06008
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED           06009
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON               06010
         BZ    FILLZER                                                  06011
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON   06012
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY          06013
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA         06014
         BCT   R4,FILLOOP             LOOP BACK                         06015
         B     FILNEXTB                                                 06016
FILLZER  DS    0H                                                       06017
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF  06018
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY          06019
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA         06020
         BCT   R4,FILLOOP             LOOP BACK                         06021
FILNEXTB DS    0H                                                       06022
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                 06023
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE     06024
         PUT   SYSPRINT,LINE                                            06025
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE   06026
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE    06027
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP    06028
FILOPEND BR    R7                                                       06029
* ----------------------------------------------------------------- *   06030
* ----------  CONSTANTS  ------------------------------------------ *   06031
         LTORG                                                          06032
         DS    0F                                                       06033
PARMTBIN DC    X'00000000000000000000'                                  06034
PARMTCPY DC    X'00000000000000000000'                                  06035
PARMFSAV DC    X'00000000000000000000'                                  06036
PARMWORK DC    X'00000000000000000000'                                  06037
PARMZERO DC    X'00000000000000000000'                                  06038
OPTABLE  DS    0D                                                       06039
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '      06040
OPTENTLN EQU   *-OPTABLE                                                06041
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '      06042
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '      06043
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '      06044
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '      06045
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '      06046
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '      06047
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '      06048
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '      06049
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '      06050
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '      06051
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '      06052
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '      06053
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '      06054
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '      06055
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '      06056
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '      06057
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '      06058
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '      06059
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '      06060
         DC    X'00000100000000000000',C'INITVOLS  ',C'NOINITVO  '      06061
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '      06062
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '      06063
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '      06064
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '      06065
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '      06066
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '      06067
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '      06068
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '      06069
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '      06070
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '      06071
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '      06072
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '      06073
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '      06074
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '      06075
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '      06076
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '      06077
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '      06078
         DC    X'00000000040000000000',C'          ',C'NOENABLT  '      06079
         DC    X'00000000080000000000',C'WRTLTM    ',C'          '      06080
         DC    X'00000000001000000000',C'SECOFF    ',C'NOSECOFF  '      06081
         DC    X'00000000002000000000',C'FOOTAGE   ',C'NOFOOTAGE '      06082
         DC    X'00000000004000000000',C'FOOTDIAG  ',C'NOFOOTDI  '      06083
         DC    X'00000000008000000000',C'CODEDPRM  ',C'NOCODEDP  '      06084
         DC    X'00000000000100000000',C'MINMAX    ',C'NOMINMAX  '      06085
         DC    X'00000000000200000000',C'RECSIZE   ',C'NORECSIZ  '      06086
         DC    X'00000000000400000000',C'DGSTRI    ',C'NODGSTRI  '      06087
         DC    X'00000000000800000000',C'KEEPVOL   ',C'NOKEEPVL  '      06088
         DC    X'00000000000010000000',C'SHOOVL    ',C'NOSHOOVL  '      06089
         DC    X'00000000000020000000',C'          ',C'          '      06090
         DC    X'00000000000040000000',C'          ',C'          '      06091
         DC    X'00000000000080000000',C'          ',C'          '      06092
         DC    X'00000000000001000000',C'          ',C'          '      06093
         DC    X'00000000000002000000',C'          ',C'          '      06094
         DC    X'00000000000004000000',C'          ',C'          '      06095
         DC    X'00000000000008000000',C'          ',C'          '      06096
         DC    X'00000000000000100000',C'          ',C'          '      06097
         DC    X'00000000000000200000',C'          ',C'          '      06098
         DC    X'00000000000000400000',C'          ',C'          '      06099
         DC    X'00000000000000800000',C'          ',C'          '      06100
         DC    X'00000000000000010000',C'          ',C'          '      06101
         DC    X'00000000000000020000',C'          ',C'          '      06102
         DC    X'00000000000000040000',C'          ',C'          '      06103
         DC    X'00000000000000080000',C'          ',C'          '      06104
         DC    X'00000000000000001000',C'          ',C'          '      06105
         DC    X'00000000000000002000',C'          ',C'          '      06106
         DC    X'00000000000000004000',C'          ',C'          '      06107
         DC    X'00000000000000008000',C'          ',C'          '      06108
         DC    X'00000000000000000100',C'          ',C'          '      06109
         DC    X'00000000000000000200',C'          ',C'          '      06110
         DC    X'00000000000000000400',C'          ',C'          '      06111
         DC    X'00000000000000000800',C'          ',C'          '      06112
         DC    X'00000000000000000010',C'          ',C'          '      06113
         DC    X'00000000000000000020',C'          ',C'          '      06114
         DC    X'00000000000000000040',C'          ',C'          '      06115
         DC    X'00000000000000000080',C'          ',C'          '      06116
         DC    X'00000000000000000001',C'          ',C'          '      06117
         DC    X'00000000000000000002',C'          ',C'          '      06118
         DC    X'00000000000000000004',C'          ',C'          '      06119
         DC    X'00000000000000000008',C'          ',C'          '      06120
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                  06121
*  -----                                                                06122
TWICEFLG DC    X'00'     X'00' shows first invocation of this program.  06123
DISPAREA DS    0D                                                       06124
DISPSHNC DS    0CL133                                                   06125
         DC    C'     COPYMODS has not had to correct any of the optio' 06126
         DC    C'ns as coded in the JCL.                              ' 06127
         DC    27C' '                                                   06128
DISPSHCR DS    0CL133                                                   06129
         DC    C'     COPYMODS attempts to keep the options consistent' 06130
         DC    C' and has changed some options. For a comparison repor' 06131
         DC    C't, code the CODEDPRM parm. '                           06132
DISPNCOR DS    0CL133                                                   06133
         DC    C'-    CODED PARMS BEFORE BEING CORRECTED BY THE COPYMO' 06134
         DC    C'DS PROGRAM  -  List of Uncorrected Options           ' 06135
         DC    27C' '                                                   06136
DISPNCRO DS    0CL133                                                   06137
         DC    C'     OPTIONS:  As coded in the JCL and interpreted by' 06138
         DC    C' the PARMCHEK routine --                             ' 06139
         DC    27C' '                                                   06140
DISPLINH DS    0CL133                                                   06141
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - ' 06142
         DC    C'LEVEL 085 - OPTIONS DISPLAY                          ' 06143
         DC    27C' '                                                   06144
DISPLINO DS    0CL133                                                   06145
         DC    C'-    OPTIONS IN EFFECT:                              ' 06146
         DC    C'                                                     ' 06147
         DC    27C' '                                                   06148
DISPOP01 DS    0CL133                                                   06149
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE' 06150
         DC    C'LIMIT=   SYSIN CARD                                  ' 06151
         DC    27C' '                                                   06152
DISPOP02 DS    0CL133                                                   06153
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE' 06154
         DC    C'LIMIT=   SYSIN CARD                                  ' 06155
         DC    27C' '                                                   06156
DISPOP03 DS    0CL133                                                   06157
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE' 06158
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 ' 06159
         DC    27C' '                                                   06160
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco' 06161
         DC    C'rds before they have been changed by the COPYMODS pro' 06162
         DC    C'gram.                     '                            06163
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X06164
               BLKSIZE=133                                              06165
         DC    C' '                                                     06166
LINE     DS    CL133                                                    06167
DISPLIN1 DS    0CL133                                                   06168
         DC    C'0    '                                                 06169
DISPL1A  DC    8CL12' '                                                 06170
         DC    32C' '                                                   06171
DISPLIN2 DS    0CL133                                                   06172
         DC    C'     '                                                 06173
DISPL2A  DC    8CL12' '                                                 06174
         DC    32C' '                                                   06175
DISPLIN3 DS    0CL133                                                   06176
         DC    C'     '                                                 06177
DISPL3A  DC    8CL12' '                                                 06178
         DC    32C' '                                                   06179
DISPLIN4 DS    0CL133                                                   06180
         DC    C'     '                                                 06181
DISPL4A  DC    8CL12' '                                                 06182
         DC    32C' '                                                   06183
DISPLIN5 DS    0CL133                                                   06184
         DC    C'     '                                                 06185
DISPL5A  DC    8CL12' '                                                 06186
         DC    32C' '                                                   06187
DISPLIN6 DS    0CL133                                                   06188
         DC    C'     '                                                 06189
DISPL6A  DC    8CL12' '                                                 06190
         DC    32C' '                                                   06191
DISPLIN7 DS    0CL133                                                   06192
         DC    C'     '                                                 06193
DISPL7A  DC    8CL12' '                                                 06194
         DC    32C' '                                                   06195
DISPLIN8 DS    0CL133                                                   06196
         DC    C'     '                                                 06197
DISPL8A  DC    8CL12' '                                                 06198
         DC    32C' '                                                   06199
DISPLIN9 DS    0CL133                                                   06200
         DC    C'     '                                                 06201
DISPL9A  DC    8CL12' '                                                 06202
         DC    32C' '                                                   06203
DISPLINA DS    0CL133                                                   06204
         DC    C'     '                                                 06205
DISPLAA  DC    8CL12' '                                                 06206
         DC    32C' '                                                   06207
         SPACE 3                                                        06208
         EJECT                                                          06209
@PAN$AUD CSECT                                                          06210
$PAN#AUD DC    CL30'LEVEL 085 COPYMOPT  05/22/12 '                      06211
         END                                                            06212
*          PARM CHECKER        AT LEVEL 1.6 AS OF 03/13/05              06213
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                      06214
**************************************************************          06215
**************************************************************          06216
**                                                          **          06217
**                                                          **          06218
**  MODULE:   PARMCHEK - Set option bits, based on          **          06219
**                       keywords coded in PARM and/or      **          06220
**                       SYSIN.                             **          06221
**                                                          **          06222
**  AUTHOR:   Sam Golob                                     **          06223
**                                                          **          06224
**  PURPOSE:  This program converts keywords in a PARM      **          06225
**            field or in SYSIN, into bit settings that     **          06226
**            a program can use, to control options in      **          06227
**            its execution.                                **          06228
**                                                          **          06229
**            This program can be run as a subroutine       **          06230
**            which is called, to set up to 10 bytes of     **          06231
**            bits, up to 80 bits in all, based on the      **          06232
**            settings of keywords in a table.              **          06233
**                                                          **          06234
**            This routine makes it easy to put a lot of    **          06235
**            options into a program.  If you want to       **          06236
**            add options, or use other words in PARM or    **          06237
**            SYSIN to call the same options, all you       **          06238
**            have to do, is to change or add entries in    **          06239
**            a table.  There is no extra coding to be      **          06240
**            done.                                         **          06241
**                                                          **          06242
**            Keywords in the PARM or SYSIN areas do not    **          06243
**            have to be delimited by commas or spaces or   **          06244
**            anything else.  Although for clarity, I'd     **          06245
**            certainly recommend that you put commas or    **          06246
**            spaces between the PARM field keywords.       **          06247
**            Therefore, I'd also advise that when you      **          06248
**            design keywords to put into the table to      **          06249
**            designate options, that you make them         **          06250
**            significantly different from each other.      **          06251
**            There is a length field in the table,         **          06252
**            however, which gives you some more control    **          06253
**            in this area.                                 **          06254
**                                                          **          06255
**            From a calling program, it would be possible  **          06256
**            to call PARMCHEK twice, against two different **          06257
**            tables, to set 20 bytes of options, instead   **          06258
**            of 10 bytes of options, and so forth...       **          06259
**                                                          **          06260
**            This gives you the opportunity of having      **          06261
**            a tremendous number of options, set by        **          06262
**            keywords, in your program, without using      **          06263
**            up valuable "base register space" for such    **          06264
**            coding.                                       **          06265
**                                                          **          06266
**                                                          **          06267
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **          06268
**            from a table, based on assembled defaults.    **          06269
**            These default settings are then overridden    **          06270
**            from a scan of words in the PARM field of     **          06271
**            the EXEC card.                                **          06272
**                                                          **          06273
**            If a SYSIN DD card is present, its cards      **          06274
**            are scanned against the table entries, to     **          06275
**            further override the bit settings which       **          06276
**            have already been done by the defaults and    **          06277
**            the PARM field.                               **          06278
**                                                          **          06279
**            The main purpose of this routine is to set    **          06280
**            bits from words.  However, if you need some   **          06281
**            keywords with values, such as (for example)   **          06282
**            FILELIMIT=69  in your program, you may use    **          06283
**            the "user code" section of this program       **          06284
**            to code that stuff in, so that these special  **          06285
**            keywords can be coded in SYSIN.               **          06286
**                                                          **          06287
**            Two sample keywords expecting number values:  **          06288
**            FILELIMIT=nnn  or                             **          06289
**            LABELIMIT=mmm                                 **          06290
**            have been coded here, just to illustrate      **          06291
**            how the user coding might work.               **          06292
**                                                          **          06293
**            Search order is:  Defaults, then PARM in      **          06294
**            the EXEC card, then SYSIN.                    **          06295
**                                                          **          06296
**            As coded here, the FILELIMIT= and             **          06297
**            LABELIMIT= keywords in SYSIN have to be in    **          06298
**            column 1 of the SYSIN cards, and if these     **          06299
**            "special keywords" are present in a card,     **          06300
**            the rest of that card is not scanned for      **          06301
**            the table keywords.                           **          06302
**                                                          **          06303
**            As coded here, the PARMTABL is a separate     **          06304
**            CSECT, addressable by V-CONs from the         **          06305
**            PARMCHEK CSECT.                               **          06306
**                                                          **          06307
**            It would probably be best to invoke the       **          06308
**            PARMCHEK program as a separate CSECT which    **          06309
**            is linkedited with the calling program,       **          06310
**            but it may be LOADed and BALR 14,15 'ed to,   **          06311
**            and run as a separate program.  (See the      **          06312
**            PARMDRVR program that is included in this     **          06313
**            package, as a sample.)                        **          06314
**                                                          **          06315
**    Input:  A fullword containing the address of the      **          06316
**            saved Register 1 from the calling program,    **          06317
**            which points to its parms.                    **          06318
**                                                          **          06319
**            A table containing parms, which is coded      **          06320
**            according to the following rules, and which   **          06321
**            has entries of 20 bytes apiece.               **          06322
**                                                          **          06323
**      FORMAT OF THE PARM TABLE                            **          06324
**                                                          **          06325
**        ONE ENTRY IS 20 BYTES                             **          06326
**                                                          **          06327
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **          06328
**                         (This is the word which          **          06329
**                          controls the bit settings.)     **          06330
**                         (up to and including 8 bytes)    **          06331
**                                                          **          06332
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **          06333
**                         X'00' says turn bit flag(s) ON   **          06334
**                         X'10' set entry as a DEFAULT     **          06335
**                                                          **          06336
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **          06337
**                         (This is the word searched on,   **          06338
**                          in the EXEC PARM and SYSIN      **          06339
**                          areas.)                         **          06340
**                                                          **          06341
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **          06342
**                          this keyword.                   **          06343
**                                                          **          06344
**                         These are the bits which the     **          06345
**                          keyword will flip on (or off).  **          06346
**                                                          **          06347
**                         You may control multiple bits    **          06348
**                          using one keyword.  All bits    **          06349
**                          controlled by this keyword      **          06350
**                          are coded in this entry field.  **          06351
**                                                          **          06352
**          The table is ended by an entry of X'FF's.       **          06353
**                                                          **          06354
**                                                          **          06355
**    Output:  R1 points to a 10-byte area containing the   **          06356
**             80 switch settings.                          **          06357
**                                                          **          06358
**             Sample code to use PARMCHEK output:          **          06359
**                                                          **          06360
**                      ST    R1,PARMADDR                   **          06361
**                      USING PARMFLGS,R1                   **          06362
**             *                                            **          06363
**             PARMFLGS DSECT                               **          06364
**             PARMFLG1 DS    X                             **          06365
**             PARMFLG2 DS    X                             **          06366
**             PARMFLG3 DS    X                             **          06367
**             PARMFLG4 DS    X                             **          06368
**             PARMFLG5 DS    X                             **          06369
**             PARMFLG6 DS    X                             **          06370
**             PARMFLG7 DS    X                             **          06371
**             PARMFLG8 DS    X                             **          06372
**             PARMFLG9 DS    X                             **          06373
**             PARMFLGA DS    X                             **          06374
**                                                          **          06375
**               then ....                                  **          06376
**                                                          **          06377
**                      TM    PARMFLG2,X'04'                **          06378
**                      BZ    some location                 **          06379
**                        ....                              **          06380
**                                                          **          06381
**             R2 points to the address of a data area      **          06382
**             containing values generated by this          **          06383
**             program.  It's address is at label STRTVALU  **          06384
**             and its length is in the first fullword      **          06385
**             at STRTVALU.                                 **          06386
**                                                          **          06387
**             R2 is accessed in a similar manner to R1.    **          06388
**             See the PARMDRVR program for an example      **          06389
**             illustrating one way in which PARMCHEK       **          06390
**             may be called.                               **          06391
**                                                          **          06392
**                                                          **          06393
**************************************************************          06394
         EJECT                                                          06395
**************************************************************          06396
**                                                          **          06397
**  CHANGE LOG:                                             **          06398
**                                                          **          06399
**    Version 1.1 - Separate Parm Table into different      **          06400
**       CSECT.  Detailed reporting in PARMREPT ddname.     **          06401
**                                                          **          06402
**    Version 1.2 - Uppercase keyword before comparing      **          06403
**       against the table entries.  This assumes you       **          06404
**       will code your table with all uppercase keyword    **          06405
**       entries.                                           **          06406
**                                                          **          06407
**    Version 1.3 - Option for requiring commas or spaces   **          06408
**       as delimiters between parms.  Comment out one      **          06409
**       instruction to require delimiters.                 **          06410
**                                                          **          06411
**    Version 1.4 - Fitted to COPYMODS Level 061.           **          06412
**                                                          **          06413
**    Version 1.5 - Fitted to COPYMODS Level 085.           **          06414
**                  Ten parm bits instead of five.          **          06415
**                                                          **          06416
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **          06417
**                                                          **          06418
**                                                          **          06419
**************************************************************          06420
**************************************************************          06421
         EJECT                                                          06422
**************************************************************          06423
*  ---------------------------------------------------------------  *   06424
*    This macro is used to display hex values in a printed report.      06425
*  ---------------------------------------------------------------  *   06426
         MACRO                                                          06427
&NAME    HEX   &TO,&LEN,&FROM                                           06428
&NAME    DS    0H                                                       06429
         ST    R4,SAV4HEX                                               06430
         STM   R15,R1,HEXSAVE                                           06431
         LA    R1,&FROM                                                 06432
         LA    R0,&LEN                                                  06433
         LA    R15,&TO                                                  06434
         BAL   R4,HEX                                                   06435
         L     R4,SAV4HEX                                               06436
         LM    R15,R1,HEXSAVE                                           06437
         MEND                                                           06438
         SPACE                                                          06439
**************************************************************          06440
         GBLC  &LLEV                                                    06441
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                               06442
         GBLA  &HEXDFLA                                                 06443
&LLEV    SETC  '1.6 '                                                   06444
         YREGS                                                          06445
* ------------------------------------------------------------------ *  06446
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *  06447
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *  06448
* ------------------------------------------------------------------ *  06449
         ENTRY CARDREAD                                                 06450
         ENTRY PARMCHEK                                                 06451
&HEXDFLA SETA  4                                                        06452
&HEXDFLC SETC  '&HEXDFLA'                                               06453
PARMCHEK CSECT                                                          06454
         USING *,R15                                                    06455
         B     EYECATCH                                                 06456
         DC    C'HEX DUMP '                                             06457
HEXDFLCC DC    C'&HEXDFLC'                                              06458
         DC    C' RECORDS '                                             06459
HEXDFLL  EQU   L'HEXDFLCC                                               06460
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                06461
         DC    C'--- '            MAKE EYECATCHER VISIBLE               06462
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '               06463
         DC    C' - '                                                   06464
         DC    C'PARM INPUT IN SYSIN '                                  06465
         DC    C' - '                                                   06466
         DC    C'LEVEL '                                                06467
SYSLEV   DC    C'&LLEV'                                                 06468
         DC    C' - '                                                   06469
SYSDAT   DC    C'&SYSDATE'                                              06470
         DC    C'  ',C'&SYSTIME ',C'--- '                               06471
         DC    C'--- '            MAKE EYECATCHER VISIBLE               06472
SAVEAREA DC    18F'0'                                                   06473
EYECATCH DS    0D             ENSURE ALIGNMENT                          06474
         SAVE  (14,12)                                                  06475
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  06476
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         06477
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        06478
         LR    R13,R1               NEW SAVE AREA ADDRESS               06479
         DROP  R15                                                      06480
* -----                       SET UP BASE REGISTERS                     06481
         USING PARMCHEK,R12,R11,R10                                     06482
         LR    R12,R15                                                  06483
         LA    R11,4095(,R12)                                           06484
         LA    R11,1(,R11)                                              06485
         LA    R10,4095(,R11)                                           06486
         LA    R10,1(,R10)                                              06487
*                                                                       06488
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                     06489
*                                                                       06490
         LR    R6,R2          SAVE USER AREA POINTER                    06491
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS         06492
         LR    R1,R6          RESTORE PARM POINTER                      06493
         ST    R1,PARMSAVE                                              06494
* ----------------------------------------------------------------- *   06495
TIOTSCAN DS    0H             Determine the presence of Optional        06496
*                             DDNAMES:  SYSIN AND PARMREPT.             06497
* ----->                      OPEN them if there is JCL for them.       06498
* ----------------------------------------------------------------- *   06499
         L     R5,16          R5=CVT                                    06500
         L     R5,0(,R5)      R5=TCB WORDS                              06501
         L     R5,4(,R5)      R5=MY TCB                                 06502
         L     R5,12(,R5)     R5=TIOT                                   06503
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                         06504
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                            06505
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES       06506
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?              06507
         BNE   TIOTSYSN       NO                                        06508
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD        06509
         B     TIOTNEXT       CONTINUE                                  06510
TIOTSYSN CLC   4(8,R5),SYSIN+40                                         06511
         BNE   TIOTNEXT                                                 06512
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD        06513
         B     TIOTNEXT                                                 06514
TIOTNEXT SR    R3,R3                                                    06515
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                     06516
         AR    R5,R3          R5=NEXT DD ENTRY                          06517
         B     TIOTLOOP       GO CHECK IT                               06518
TIOTSEND DS    0H                                                       06519
*********************************************************************** 06520
* GET SYSTEM DATE AND TIME - A standard way to get date and time      * 06521
*********************************************************************** 06522
         STM   R14,R2,SAVE1402                                          06523
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY            06524
         OI    DATE+4,X'0F'                                             06525
         UNPK  DATED,DATE                                               06526
         OI    TIME+3,X'0F'                                             06527
         UNPK  TIMED,TIME                                               06528
*                          FILL HEADDATE AREA WITH INFO TO REUSE        06529
         MVC   HEADDATE(2),DATED                                        06530
         MVI   HEADDATE+2,C'/'                                          06531
         MVC   HEADDATE+3(2),DATED+2                                    06532
         MVI   HEADDATE+5,C'/'                                          06533
         MVC   HEADDATE+6(4),DATED+4                                    06534
         MVC   HEADDATE+12(2),TIMED                                     06535
         MVI   HEADDATE+14,C':'                                         06536
         MVC   HEADDATE+15(2),TIMED+2                                   06537
         MVI   HEADDATE+17,C':'                                         06538
         MVC   HEADDATE+18(2),TIMED+4                                   06539
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME        06540
         LM    R14,R2,SAVE1402                                          06541
*********************************************************************** 06542
         MVC   LEVDATE(8),SYSDAT                                        06543
*********************************************************************** 06544
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND            06545
* ----------------------------------------------------------------- *   06546
INITCONS DS    0H                                                       06547
         ZAP   TOTMLCNT,=P'0'                                           06548
* ----------------------------------------------------------------- *   06549
CHEKPRNT DS    0H                                                       06550
         TM    FLAGSYST,X'01'                                           06551
         BZ    CHEKPREN                                                 06552
         OPEN  (PARMREPT,OUTPUT)                                        06553
         OI    OPENDFLG,X'01'                                           06554
         MVC   PRTLINE,PRTLINE-1                                        06555
         MVC   PRTLINE,MESSAGE1                                         06556
         PUT   PARMREPT,MESSAGE1                                        06557
         MVC   PRTLINE,PRTLINE-1                                        06558
         PUT   PARMREPT,PRTLINE                                         06559
CHEKPREN DS    0H                                                       06560
* ----------------------------------------------------------------- *   06561
* --------------------------------------------------------- *           06562
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                    06563
*                         PRESENCE OR ABSENCE.                          06564
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                 06565
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                        06566
         L     R1,0(,R1)      Get PARM field                            06567
         LH    R5,0(,R1)      SAVE PARM LENGTH                          06568
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                      06569
         MVC   SAVMSLEN,PARMSLEN                                        06570
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                06571
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS               06572
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE              06573
         LA    R1,0           USE R1 TO MEASURE LENGTH READ             06574
* -----------------------------------------------------------           06575
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE              06576
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                              06577
* -----------------------------------------------------------           06578
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE              06579
         CLI   0(R2),X'FF'    END OF PARM TABLE?                        06580
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.           06581
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                  06582
         BO    PARMDSET       YES, GO SET IT.                           06583
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              06584
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                06585
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                 06586
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..               06587
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.       06588
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              06589
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                 06590
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK           06591
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES             06592
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF       06593
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,              06594
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE            06595
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER              06596
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                06597
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE              06598
* ----------------------------------------------------------------- *   06599
SCANPARM DS    0H                                                       06600
         ST    R7,SAVE7BA0                                              06601
         ZAP   PARMLCNT,=P'0'                                           06602
         ZAP   PARMHITS,=P'0'                                           06603
         MVC   PARMSLEN,SAVMSLEN                                        06604
         BAL   R7,PARMLOOP      Now check the PARM field                06605
         MVC   SAVPHITS,PARMHITS                                        06606
         MVC   SAVCHRCT,PRMCHRCT                                        06607
         MVC   SAVELCNT,PARMLCNT                                        06608
         AP    TOTMHITS,PARMHITS                                        06609
         AP    TOTMLCNT,PARMLCNT                                        06610
         L     R7,SAVE7BA0                                              06611
* ----------------------------------------------------------------- *   06612
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                  06613
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING            06614
         OPEN  (SYSIN,INPUT)                                            06615
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                  06616
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE              06617
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN               06618
         B     OPNSYSNE           AND CONTINUE PROCESSING.              06619
NOSYSIN  DS    0H                                                       06620
         B     CARDREND                                                 06621
OPNSYSNE DS    0H                                                       06622
* ----------------------------------------------------------------- *   06623
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT              06624
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.        06625
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                       06626
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.      06627
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS       06628
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06629
*              Insert User Code Here for Keywords                       06630
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06631
         GET   SYSIN,CARDIN                                             06632
*                                                                       06633
* -- >>              <-- Intercept any keywords you want in SYSIN -->   06634
* -- >>              <--    before you start the table scan       -->   06635
*                                                                       06636
* ----------------------------------------------------------------- *   06637
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS   06638
         MVC   CARDWORK+1(79),CARDWORK                                  06639
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA     06640
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                       06641
* ----------------------------------------------------------------- *   06642
*      CARDWORK now contains an uppercased version of CARDIN.           06643
* ----------------------------------------------------------------- *   06644
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06645
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD          06646
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06647
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD          06648
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06649
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD          06650
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06651
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD          06652
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06653
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD          06654
         CLC   =C'WRITELTMS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?   06655
         BE    LTMNMGET          PROCESS THIS CARD FOR KEYWORD          06656
         CLC   =C'/*',CARDIN                                            06657
         BE    SYSINEND                                                 06658
*                                                                       06659
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06660
* ----         Resume Checking SYSIN in PARM Table                      06661
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06662
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL       06663
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                        06664
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD   06665
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH            06666
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE       06667
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                 06668
         L     R1,TOTCHRCT                                              06669
         A     R1,PRMCHRCT                                              06670
         ST    R1,TOTCHRCT                                              06671
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN         06672
         ZAP   PARMHITS,=P'0'                                           06673
         ZAP   PARMLCNT,=P'0'                                           06674
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                06675
         AP    TOTMHITS,PARMHITS                                        06676
         AP    TOTMLCNT,PARMLCNT                                        06677
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                     06678
         B     CARDREAD        GET ANOTHER CARD                         06679
* ----                                                                  06680
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06681
*              Handle User Code Here for Keywords                       06682
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06683
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?       06684
         BE    CARDREAD                 YES. IGNORE CARD                06685
         MVC   VOLSTG1(6),CARDIN+10                                     06686
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                     06687
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER  06688
         B     CARDREAD          GET ANOTHER CARD                       06689
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?       06690
         BE    CARDREAD                 YES. IGNORE CARD                06691
         MVC   TAPEOWN(14),CARDIN+10                                    06692
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                     06693
         B     CARDREAD                                                 06694
FILELGET DS    0H                                                       06695
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           06696
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                06697
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     06698
         BL    CARDREAD          YES. IGNORE.                           06699
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         06700
         BH    CARDREAD          YES. IGNORE.                           06701
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON               06702
         LA    R15,CARDIN+10     STARTING ADDRESS                       06703
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              06704
FILELNUM DS    0H                                                       06705
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 06706
         C     R15,=A(CARDIN+71) END OF CARD?                           06707
         BH    FILELGNM          YES, GET NUMBER                        06708
         CLI   0(R15),C' '       BLANK HERE?                            06709
         BE    FILELGNM          YES, GET NUMBER                        06710
         B     FILELNUM          NO. STEP UP ONE PLACE                  06711
FILELGNM DS    0H                                                       06712
         SR    R15,R1            HOW BIG IS THE NUMBER                  06713
         BCTR  R15,0             LOWER IT FOR EXECUTE                   06714
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA           06715
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA        06716
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA      06717
         CVB   R0,WORKA          CONVERT IT TO BINARY                   06718
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE          06719
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES              06720
         CVB   R0,WORKA          CONVERT IT TO BINARY                   06721
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE          06722
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS      06723
FILELCLG DS    0H                                                       06724
         B     CARDREAD                                                 06725
LABELGET DS    0H                                                       06726
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           06727
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                06728
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     06729
         BL    CARDREAD          YES. IGNORE.                           06730
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         06731
         BH    CARDREAD          YES. IGNORE.                           06732
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON              06733
         LA    R15,CARDIN+10     STARTING ADDRESS                       06734
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              06735
LABELNUM DS    0H                                                       06736
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 06737
         C     R15,=A(CARDIN+71) END OF CARD?                           06738
         BH    LABELGNM          YES, GET NUMBER                        06739
         CLI   0(R15),C' '       BLANK HERE?                            06740
         BE    LABELGNM          YES, GET NUMBER                        06741
         B     LABELNUM          NO. STEP UP ONE PLACE                  06742
LABELGNM DS    0H                                                       06743
         SR    R15,R1            HOW BIG IS THE NUMBER                  06744
         BCTR  R15,0             LOWER IT FOR EXECUTE                   06745
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA           06746
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA        06747
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA           06748
         CVB   R0,WORKL          CONVERT IT TO BINARY                   06749
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE          06750
LABELCLG DS    0H                                                       06751
         B     CARDREAD                                                 06752
PRINTGET DS    0H                                                       06753
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           06754
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                06755
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     06756
         BL    CARDREAD          YES. IGNORE.                           06757
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         06758
         BH    CARDREAD          YES. IGNORE.                           06759
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ        06760
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                   06761
         LA    R15,CARDIN+10     STARTING ADDRESS                       06762
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              06763
PRINTNUM DS    0H                                                       06764
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 06765
         C     R15,=A(CARDIN+71) END OF CARD?                           06766
         BH    PRINTGNM          YES, GET NUMBER                        06767
         CLI   0(R15),C' '       BLANK HERE?                            06768
         BE    PRINTGNM          YES, GET NUMBER                        06769
         B     PRINTNUM          NO. STEP UP ONE PLACE                  06770
PRINTGNM DS    0H                                                       06771
         SR    R15,R1            HOW BIG IS THE NUMBER                  06772
         BCTR  R15,0             LOWER IT FOR EXECUTE                   06773
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA           06774
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA        06775
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA           06776
         CVB   R0,WORKP          CONVERT IT TO BINARY                   06777
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE          06778
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER           06779
PRINTCLG DS    0H                                                       06780
         B     CARDREAD                                                 06781
LTMNMGET DS    0H                                                       06782
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?           06783
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                06784
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                     06785
         BL    CARDREAD          YES. IGNORE.                           06786
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                         06787
         BH    CARDREAD          YES. IGNORE.                           06788
         OI    PARMFLG5,X'08'    SET WRTLTM OPTION ON                   06789
         LA    R15,CARDIN+10     STARTING ADDRESS                       06790
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS              06791
LTMNMNUM DS    0H                                                       06792
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                 06793
         C     R15,=A(CARDIN+71) END OF CARD?                           06794
         BH    LTMNMGNM          YES, GET NUMBER                        06795
         CLI   0(R15),C' '       BLANK HERE?                            06796
         BE    LTMNMGNM          YES, GET NUMBER                        06797
         B     LTMNMNUM          NO. STEP UP ONE PLACE                  06798
LTMNMGNM DS    0H                                                       06799
         SR    R15,R1            HOW BIG IS THE NUMBER                  06800
         BCTR  R15,0             LOWER IT FOR EXECUTE                   06801
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA           06802
         EX    R15,MVLTMNUM      COPY THE NUMBER TO MESSAGE AREA        06803
         EX    R15,MVLTMCHR      COPY THE NUMBER TO USER PASS AREA      06804
         CVB   R0,WORKA          CONVERT IT TO BINARY                   06805
         ST    R0,LTMNUMB        STORE THE VALUE FOR LATER USE          06806
LTMNMCLG DS    0H                                                       06807
         B     CARDREAD                                                 06808
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06809
*              End of User Code Here for Keywords                       06810
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *   06811
CHECKEND DS    0H                                                       06812
* -----------------------------------------------------------           06813
SYSINEND DS    0H                                                       06814
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                    06815
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.           06816
* ------- Correct Error - SYSIN not shown if not coded explicitly.      06817
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.            06818
* ------- Correct Error - SYSIN not shown if not coded explicitly.      06819
         L     R1,TOTCHRCT                                              06820
         A     R1,PRMCHRCT         Final totals for last card           06821
         ST    R1,TOTCHRCT                                              06822
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED            06823
         CLOSE (SYSIN)                                                  06824
         B     CARDREND                                                 06825
CARNOSYS DS    0H                                                       06826
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.        06827
CARDREND DS    0H                                                       06828
         BAL   R7,SUMMREPT                                              06829
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                    06830
         BZ    PARMRPEN         NO.  GET OUT.                           06831
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED            06832
         CLOSE (PARMREPT)                                               06833
PARMRPEN DS    0H                                                       06834
THEEND   DS    0H                                                       06835
         L     R13,4(,R13)                                              06836
         MVC   16(4,R13),=F'0'          Return code 0     in R15        06837
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1         06838
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2         06839
         LM    R14,R12,12(R13)                                          06840
         BR    R14                                                      06841
* -----------------------------------------------------------           06842
*        S U B R O U T I N E S                                          06843
* -----------------------------------------------------------           06844
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.             06845
* -----------------------------------------------------------           06846
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                    06847
         BNL   PARMFIN        YES - GET OUT                             06848
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE        06849
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING           06850
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                        06851
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                  06852
*        ------------------------------------------------------------   06853
*--->                    code to require a delimiter (space, etc)       06854
*                        to enable, comment out the next instruction    06855
*        ------------------------------------------------------------   06856
         B     PRMNODLM         comment this line to require delimiter  06857
         TM    PRMFDFLG,X'01'                                           06858
         BO    PRMNFND                                                  06859
PRMNODLM DS    0H                                                       06860
*--->                                                                   06861
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE             06862
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                06863
         BCTR  R5,0           ONE LESS FOR EXECUTE                      06864
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE      06865
*                                                                       06866
*   If you want to require parm comparisons as case sensitive,          06867
*    then comment out the following instruction....                     06868
*                                                                       06869
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM      06870
*                                                                       06871
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM    06872
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION               06873
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                         06874
         B     BOPPTBL        INNER LOOP                                06875
*                                                                       06876
PRMNFND  DS    0H                                                       06877
*--->                 below - Parm Found flagging to require delimiter  06878
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters  06879
         BE    PRMFDOFF                                                 06880
         CLI   0(R4),C','                                               06881
         BE    PRMFDOFF                                                 06882
         B     PRMFDEND                                                 06883
PRMFDOFF DS    0H                                                       06884
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag        06885
PRMFDEND DS    0H                                                       06886
*--->                 above - Parm Found flagging to require delimiter  06887
*                                                                       06888
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                      06889
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                 06890
*                                                                       06891
         B     PARMLOOP       TRY AGAIN                                 06892
*                                                                       06893
PRMFOUND DS    0H                                                       06894
*                                                                       06895
*--->                 below - Parm Found flagging to require delimiter  06896
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                06897
*--->                 above - Parm Found flagging to require delimiter  06898
PRMNOSEP DS    0H                                                       06899
         AP    PARMHITS,=P'1'    COUNT PARM HITS                        06900
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND           06901
         TM    1(R2),X'01'         PARM ON OR OFF?                      06902
         BO    PARMOFF             OFF                                  06903
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND    06904
         B     PARMGO                        AND GO ON                  06905
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK          06906
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS             06907
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF       06908
PARMGO   DS    0H                                                       06909
         XR    R5,R5          Clear Work Reg befor IC                   06910
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE            06911
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                 06912
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                  06913
         B     PARMLOOP       LOOK FOR MORE PARMS                       06914
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --             06915
*                             COUNT FOR DEBUGGING                       06916
PRMCHEND DS    0H                                                       06917
         BR    R7                                                       06918
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                   06919
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                   06920
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                   06921
* --------------------------------------------------------- *           06922
SUMMREPT DS    0H                  Print details of PARMREPT            06923
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                 06924
         BZ    SUMMREND            No. Bypass this routine.             06925
         MVC   PRTLINE,PRTLINE-1                                        06926
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                       06927
         HEX   PRTLINE+27,1,PARMFLG1                                    06928
         HEX   PRTLINE+30,1,PARMFLG2                                    06929
         HEX   PRTLINE+33,1,PARMFLG3                                    06930
         HEX   PRTLINE+36,1,PARMFLG4                                    06931
         HEX   PRTLINE+39,1,PARMFLG5                                    06932
         HEX   PRTLINE+42,1,PARMFLG6                                    06933
         HEX   PRTLINE+45,1,PARMFLG7                                    06934
         HEX   PRTLINE+48,1,PARMFLG8                                    06935
         HEX   PRTLINE+51,1,PARMFLG9                                    06936
         HEX   PRTLINE+54,1,PARMFLGA                                    06937
         PUT   PARMREPT,PRTLINE                                         06938
         MVC   PRTLINE,PRTLINE-1                                        06939
         PUT   PARMREPT,PRTLINE                                         06940
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first. 06941
         MVC   PRTLINE+4(12),=C'User Area : '                           06942
         HEX   PRTLINE+16,48,STRTVALU                                   06943
         PUT   PARMREPT,PRTLINE                                         06944
         MVC   PRTLINE,PRTLINE-1                                        06945
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                         06946
         HEX   PRTLINE+16,48,STRTVALU+48                                06947
         PUT   PARMREPT,PRTLINE                                         06948
         MVC   PRTLINE,PRTLINE-1                                        06949
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                         06950
         HEX   PRTLINE+16,48,STRTVALU+96                                06951
         PUT   PARMREPT,PRTLINE                                         06952
         MVC   PRTLINE,PRTLINE-1                                        06953
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                         06954
         HEX   PRTLINE+16,38,STRTVALU+144                               06955
         PUT   PARMREPT,PRTLINE                                         06956
         MVC   PRTLINE,PRTLINE-1                                        06957
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                 06958
         HEX   PRTLINE+30,4,STRTVALU                                    06959
         MVC   PRTLINE+42(6),=C'Hex   '                                 06960
         PUT   PARMREPT,PRTLINE                                         06961
         MVC   PRTLINE,PRTLINE-1                                        06962
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                 06963
         HEX   PRTLINE+30,4,PARMSLEN                                    06964
         MVC   PRTLINE+42(6),=C'Hex   '                                 06965
         PUT   PARMREPT,PRTLINE                                         06966
         MVC   PRTLINE,PRTLINE-1                                        06967
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                 06968
         HEX   PRTLINE+30,4,SAVMSLEN                                    06969
         MVC   PRTLINE+42(6),=C'Hex   '                                 06970
         PUT   PARMREPT,PRTLINE                                         06971
         MVC   PRTLINE,PRTLINE-1                                        06972
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                 06973
         HEX   PRTLINE+30,4,PARMSTRT                                    06974
         MVC   PRTLINE+42(6),=C'Hex   '                                 06975
         PUT   PARMREPT,PRTLINE                                         06976
         MVC   PRTLINE,PRTLINE-1                                        06977
         MVC   PRTLINE+4(22),=C'Last Character Count :'                 06978
         HEX   PRTLINE+30,4,PRMCHRCT                                    06979
         MVC   PRTLINE+42(6),=C'Hex   '                                 06980
         PUT   PARMREPT,PRTLINE                                         06981
         MVC   PRTLINE,PRTLINE-1                                        06982
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                 06983
         HEX   PRTLINE+30,4,SAVCHRCT                                    06984
         MVC   PRTLINE+42(6),=C'Hex   '                                 06985
         PUT   PARMREPT,PRTLINE                                         06986
         MVC   PRTLINE,PRTLINE-1                                        06987
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                 06988
         HEX   PRTLINE+30,4,TOTCHRCT                                    06989
         MVC   PRTLINE+42(6),=C'Hex   '                                 06990
         PUT   PARMREPT,PRTLINE                                         06991
         MVC   PRTLINE,PRTLINE-1                                        06992
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                 06993
         HEX   PRTLINE+30,4,SAVPHITS                                    06994
         MVC   PRTLINE+42(6),=C'Packed'                                 06995
         PUT   PARMREPT,PRTLINE                                         06996
         MVC   PRTLINE,PRTLINE-1                                        06997
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                 06998
         HEX   PRTLINE+30,4,PARMHITS                                    06999
         MVC   PRTLINE+42(6),=C'Packed'                                 07000
         PUT   PARMREPT,PRTLINE                                         07001
         MVC   PRTLINE,PRTLINE-1                                        07002
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                 07003
         HEX   PRTLINE+30,4,TOTMHITS                                    07004
         MVC   PRTLINE+42(6),=C'Packed'                                 07005
         PUT   PARMREPT,PRTLINE                                         07006
         MVC   PRTLINE,PRTLINE-1                                        07007
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                 07008
         HEX   PRTLINE+30,4,SAVELCNT                                    07009
         MVC   PRTLINE+42(6),=C'Packed'                                 07010
         PUT   PARMREPT,PRTLINE                                         07011
         MVC   PRTLINE,PRTLINE-1                                        07012
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                 07013
         HEX   PRTLINE+30,4,PARMLCNT                                    07014
         MVC   PRTLINE+42(6),=C'Packed'                                 07015
         PUT   PARMREPT,PRTLINE                                         07016
         MVC   PRTLINE,PRTLINE-1                                        07017
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                 07018
         HEX   PRTLINE+30,4,TOTMLCNT                                    07019
         MVC   PRTLINE+42(6),=C'Packed'                                 07020
         PUT   PARMREPT,PRTLINE                                         07021
         MVC   PRTLINE,PRTLINE-1                                        07022
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                 07023
         HEX   PRTLINE+30,20,PARMTENT                                   07024
         PUT   PARMREPT,PRTLINE                                         07025
SUMMREND DS    0H                                                       07026
         BR    R7                                                       07027
* --------------------------------------------------------- *           07028
* --------------------------------------------------------- *           07029
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                   07030
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                   07031
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                   07032
MVLTMNUM MVC   LTMWMSG+11(0),0(R1)   <<< EXECUTED >>>                   07033
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                   07034
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                   07035
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                   07036
MVLTMCHR MVC   LTMCHAR(0),0(R1)      <<< EXECUTED >>>                   07037
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                   07038
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                   07039
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                   07040
         LTORG                                                          07041
         EJECT                                                          07042
* --------------------------------------------------------- *           07043
WORKA    DC    D'0'                                                     07044
WORKL    DC    D'0'                                                     07045
WORKP    DC    D'0'                                                     07046
PL4NO3   DC    PL4'3'                                                   07047
FF       EQU   X'FF'                                                    07048
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N' 07049
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT' 07050
         DC    C'S.'                                                    07051
         DC    CL25' '                                                  07052
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 07053
         DC    C' IS TREATED AS NL.                                   ' 07054
         DC    CL27' '                                                  07055
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER' 07056
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  ' 07057
         DC    CL27' '                                                  07058
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER' 07059
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   ' 07060
         DC    CL27' '                                                  07061
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                07062
         DC    CL6'&HEXDFLM'                                            07063
         DC    C' RECORDS WILL'                                         07064
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in ' 07065
         DC    C'SYSIN.'                                                07066
         DC    CL17' '                                                  07067
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.    07068
* --------------------------------------------------------- *           07069
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS               07070
PARMFLG1 DC    X'00'                                                    07071
PARMFLG2 DC    X'00'                                                    07072
PARMFLG3 DC    X'00'                                                    07073
PARMFLG4 DC    X'00'                                                    07074
PARMFLG5 DC    X'00'                                                    07075
PARMFLG6 DC    X'00'                                                    07076
PARMFLG7 DC    X'00'                                                    07077
PARMFLG8 DC    X'00'                                                    07078
PARMFLG9 DC    X'00'                                                    07079
PARMFLGA DC    X'00'                                                    07080
PARMCOPY DS    XL10                Copy of options before correction    07081
* --------------------------------------------------------- *           07082
         DS    0F                                                       07083
STRTVALU DS    0CL(ENDVALUE)                                            07084
         DC    A(ENDVALUE)                                              07085
PARMSLEN DC    F'0'                LENGTH OF PARMS                      07086
*                                  Upon entry, this field contains      07087
*                                  the PARM address from COPYMODS,      07088
*                                  which gets overlaid by PARMCHEK.     07089
SAVMSLEN DC    F'0'                LENGTH OF PARMS                      07090
*                                  Upon entry, this field contains      07091
*                                  the PARM address from COPYMODS,      07092
*                                  which gets overlaid by PARMCHEK.     07093
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS              07094
*                                  Upon entry, this field contains      07095
*                                  the PARM length from COPYMODS,       07096
*                                  which gets overlaid by PARMCHEK.     07097
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            07098
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            07099
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH            07100
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                  07101
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                  07102
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                  07103
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 07104
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 07105
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                 07106
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                07107
         DC    CL7' '              FILLER                               07108
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES           07109
*  -----    User Stuff                                                  07110
LINLABEL DC    F'0'           LABEL LIMIT VALUE                         07111
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS 07112
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4     07113
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL        07114
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE        07115
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE        07116
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN      07117
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS      07118
TAPEOWN  DC    CL10' '                                                  07119
TAPEOEXT DC    CL4' '                                                   07120
TAPEOASC DC    CL14' '                                                  07121
OVERFLAG DC    X'00'                                                    07122
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL              07123
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                   07124
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN        07125
LIMCHAR  DC    CL10' '                                                  07126
LABCHAR  DC    CL10' '                                                  07127
PRTCHAR  DC    CL10' '                                                  07128
LTMCHAR  DC    CL10' '                                                  07129
ENDVALUE EQU   (*-PARMSLEN)+4                                           07130
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.    07131
* --------------------------------------------------------- *           07132
*              FORMAT OF PARM TABLE                                     07133
*              ONE ENTRY IS 20 BYTES                                    07134
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX              07135
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                07136
*                               X'00' SAYS TURN FLAG ON                 07137
*                               X'10' SET ENTRY AS A DEFAULT            07138
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED              07139
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,               07140
*                                WHICH ALLOWS FOR 80 PARMS              07141
*                                THAT DON'T HAVE TO BE                  07142
*                                SEPARATED BY A COMMA.                  07143
PBYTES   EQU   10               Number of bytes of parm switches        07144
PTELEN   EQU   20               Length of each table entry              07145
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes 07146
EFFS     DC    20X'FF'          X'FF' bytes for XORing                  07147
* --------------------------------------------------------- *           07148
PARMTABL CSECT                                                          07149
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'          07150
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'          07151
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'          07152
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'          07153
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'          07154
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'          07155
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'          07156
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'          07157
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'          07158
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'          07159
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'          07160
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'          07161
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'          07162
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'          07163
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'          07164
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'          07165
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'          07166
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'          07167
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'          07168
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space  07169
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'          07170
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'          07171
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'          07172
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'          07173
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'          07174
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'          07175
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'          07176
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'          07177
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'          07178
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'          07179
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'          07180
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'          07181
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'          07182
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'          07183
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'          07184
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'          07185
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'          07186
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'          07187
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'          07188
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'          07189
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'          07190
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'          07191
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'          07192
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'          07193
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'          07194
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'          07195
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'          07196
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'          07197
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'          07198
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'          07199
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'          07200
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'          07201
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'          07202
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'          07203
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'          07204
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'          07205
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'          07206
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'          07207
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'          07208
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'          07209
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'          07210
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'          07211
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'          07212
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'          07213
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'          07214
         DC    X'08',X'11',C'NOINITVO',X'00000100000000000000'          07215
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'          07216
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'          07217
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'          07218
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'          07219
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'          07220
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'          07221
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'          07222
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'          07223
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'          07224
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'          07225
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'          07226
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'          07227
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'          07228
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'          07229
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'          07230
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'          07231
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'          07232
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'          07233
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'          07234
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'          07235
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'          07236
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'          07237
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'          07238
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'          07239
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'          07240
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'          07241
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'          07242
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'          07243
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'          07244
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'          07245
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'          07246
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'          07247
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'          07248
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'          07249
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'          07250
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'          07251
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'          07252
         DC    X'08',X'00',C'ENABLTMW',X'00000000040000000000'          07253
         DC    X'08',X'01',C'NOENABLT',X'00000000040000000000'          07254
         DC    X'06',X'00',C'WRTLTM  ',X'00000000080000000000'          07255
         DC    X'08',X'11',C'NOWRTLTM',X'00000000080000000000'          07256
         DC    X'06',X'00',C'SECOFF  ',X'00000000001000000000'          07257
         DC    X'08',X'01',C'NOSECOFF',X'00000000001000000000'          07258
         DC    X'07',X'00',C'FOOTAGE ',X'00000000002000000000'          07259
         DC    X'08',X'01',C'NOFOOTAG',X'00000000002000000000'          07260
         DC    X'08',X'00',C'FOOTDIAG',X'00000000004000000000'          07261
         DC    X'08',X'11',C'NOFOOTDI',X'00000000004000000000'          07262
         DC    X'08',X'00',C'CODEDPRM',X'00000000008000000000'          07263
         DC    X'08',X'11',C'NOCODEDP',X'00000000008000000000'          07264
         DC    X'06',X'00',C'MINMAX  ',X'00000000000100000000'          07265
         DC    X'08',X'01',C'NOMINMAX',X'00000000000100000000'          07266
         DC    X'07',X'00',C'RECSIZE ',X'00000000000200000000'          07267
         DC    X'08',X'01',C'NORECSIZ',X'00000000000200000000'          07268
         DC    X'06',X'00',C'DGSTRI  ',X'00000000000400000000'          07269
         DC    X'08',X'11',C'NODGSTRI',X'00000000000400000000'          07270
         DC    X'06',X'00',C'KEEPVL  ',X'00000000000800000000'          07271
         DC    X'07',X'00',C'KEEPVOL ',X'00000000000800000000'          07272
         DC    X'08',X'11',C'NOKEEPVL',X'00000000000800000000'          07273
         DC    X'06',X'00',C'SHOOVL  ',X'00000000000010000000'          07271
         DC    X'08',X'11',C'NOSHOOVL',X'00000000000010000000'          07273
         DC    X'FFFFFFFFFFFFFFFF'                                      07274
* --------------------------------------------------------- *           07275
PARMCHEK CSECT                                                          07276
         SPACE 3                                                        07277
         LTORG                                                          07278
         SPACE 3                                                        07279
         DS    0D                                                       07280
* --------------------------------------------------------- *           07281
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR -07282
               COPYMODS LVL-085'                                        07283
* --------------------------------------------------------- *           07284
         SPACE 3                                                        07285
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X07286
               EODAD=SYSINEND                                           07287
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA    07288
* --------------------------------------------------------- *           07289
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     07290
HEX      DS    0H                                                       07291
         MVC   1(1,R15),0(R1)        Move byte                          07292
         UNPK  0(3,R15),1(2,R15)     Unpack                             07293
         TR    0(2,R15),HEXTAB-240                                      07294
         LA    R15,2(,R15)           Increment output pointer           07295
         LA    R1,1(,R1)             Increment input pointer            07296
         BCT   R0,HEX                Decrement length, then loop        07297
         MVI   0(R15),C' '           Blank the trailing byte            07298
         BR    R4                    Return to caller                   07299
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    07300
         SPACE                                                          07301
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     07302
HEXSAVE  DS    3F                    Register save for HEX macro        07303
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     07304
* --------------------------------------------------------- *           07305
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT            07306
*              X'01'          PARMREPT DD IS PRESENT                    07307
*              X'02'          SYSIN    DD IS PRESENT                    07308
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               07309
*              X'01'          PARMREPT DD IS OPEN                       07310
*              X'02'          SYSIN    DD IS OPEN                       07311
* --------------------------------------------------------- *           07312
         SPACE 3                                                        07313
PARMSAVE DC    F'0'                                                     07314
SAV4HEX  DC    F'0'                                                     07315
SAVE2TO3 DC    2F'0'                                                    07316
SAVE3REG DC    F'0'                                                     07317
SAVE7BA0 DC    F'0'                                                     07318
SAVE7BA1 DC    F'0'                                                     07319
PARMWORK DC    CL8' '                                                   07320
UPCASEOR DC    CL8' '                                                   07321
         DC    CL4' '                                                   07322
*    ------------------------ >   Constants for Date and Time - below   07323
SAVE1402 DS    6F                 Extra fullword for safety             07324
TIMED    DS    CL7                                                      07325
DATED    DS    CL9                                                      07326
DATETIME DS    4F                                                       07327
         ORG   DATETIME                                                 07328
TIME     DS    CL4                                                      07329
         DS    CL4                                                      07330
DATE     DS    CL5                                                      07331
         DS    CL3                                                      07332
HEADDLIT DS    0CL31              Literal for headings - date and time  07333
         DC    CL6'Today:'                                              07334
         DC    CL2' '                                                   07335
HEADDATE DC    CL23' '                                                  07336
LEVELLIT DS    0CL21              Level number display for headings     07337
         DC    CL6'Level '                                              07338
LEVELL   DC    CL4'&LLEV'                                               07339
         DC    CL2' ('                                                  07340
LEVDATE  DC    CL8' '             Assembly date for this program        07341
         DC    CL1')'                                                   07342
*    ------------------------ >   Constants for Date and Time - above   07343
*    --------------- >            Output line buffers - below           07344
PRMFDFLG DC    X'00'              Parm Found Flag                       07345
*              X'01'              Parm has been found in this record    07346
         DC    CL3' '                                                   07347
         DC    C' '                                                     07348
LINE     DC    CL133' '                                                 07349
         DC    C' '                                                     07350
CNTLINE  DC    CL133' '                                                 07351
         DC    C' '                                                     07352
OUTLINE  DC    CL133' '                                                 07353
         DC    C' '                                                     07354
PRTLINE  DC    CL133' '                                                 07355
         DC    CL80' '            Padding                               07356
*    --------------- >            Output line buffers - above           07357
*                                                                       07358
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                      07359
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                 07360
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                  07361
         END                                                            07362
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 03/13/05              07363
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                      07364
**************************************************************          07365
**************************************************************          07366
**                                                          **          07367
**                                                          **          07368
**  MODULE:   LABELCHK - Check tape files to see if they    **          07369
**                       are tape labels.                   **          07370
**                                                          **          07371
**  AUTHOR:   Sam Golob                                     **          07372
**                                                          **          07373
**  PURPOSE:  This is a subroutine for programs which read  **          07374
**            tapes under BLP, so that tape label files     **          07375
**            would appear as ordinary files to the calling **          07376
**            program.  As file contents are passed to      **          07377
**            this program, LABELCHK detects whether they   **          07378
**            are tape labels, and tells the caller what    **          07379
**            type of labels they are.  If labels need to   **          07380
**            be interpreted, the PRINTLBL program is       **          07381
**            called.                                       **          07382
**                                                          **          07383
**  METHOD:   Label headers (usually the first 4 bytes)     **          07384
**            are scanned, and if a match to a known label  **          07385
**            type is found, then that type of label is     **          07386
**            processed appropriately.                      **          07387
**                                                          **          07388
**  Flags Set:  The principal flag set by this routine is   **          07389
**            the ISLABEL byte:                             **          07390
**                                                          **          07391
**   Setting of ISLABEL:   X'01'  - record is an IBM        **          07392
**                                  standard label          **          07393
**                                                          **          07394
**                         X'02'  - record is an ANSI/ISO   **          07395
**                                  (ASCII) standard label  **          07396
**                                                          **          07397
**                         X'00'  - the tested record is    **          07398
**                                  not a tape label        **          07399
**                                                          **          07400
**   Other flags and quantities are also set by this        **          07401
**   routine.  They are passed back to the caller in the    **          07402
**   LCHKPASS user area, in register 2.  Sometimes the      **          07403
**   PARMFLGS are changed.  These are passed back to the    **          07404
**   caller in register 1.  Sometimes the INAREA (record    **          07405
**   input area, usually containing a label image) is       **          07406
**   changed.  The altered label image is passed back to    **          07407
**   the caller in register 3.  At present, 80 bytes are    **          07408
**   passed back in register 3.                             **          07409
**                                                          **          07410
**************************************************************          07411
         EJECT                                                          07412
**************************************************************          07413
**                                                          **          07414
**  CHANGE LOG:                                             **          07415
**                                                          **          07416
**    Version 1.0 - Base program to detect IBM tape labels. **          07417
**                                                          **          07418
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **          07419
**                                                          **          07420
**                                                          **          07421
**************************************************************          07422
**************************************************************          07423
         EJECT                                                          07424
**************************************************************          07425
*  ---------------------------------------------------------------  *   07426
*    This macro is used to display hex values in a printed report.      07427
*  ---------------------------------------------------------------  *   07428
         MACRO                                                          07429
&NAME    HEX   &TO,&LEN,&FROM                                           07430
&NAME    DS    0H                                                       07431
         ST    R4,SAV4HEX                                               07432
         STM   R15,R1,HEXSAVE                                           07433
         LA    R1,&FROM                                                 07434
         LA    R0,&LEN                                                  07435
         LA    R15,&TO                                                  07436
         BAL   R4,HEX                                                   07437
         L     R4,SAV4HEX                                               07438
         LM    R15,R1,HEXSAVE                                           07439
         MEND                                                           07440
         SPACE                                                          07441
**************************************************************          07442
         GBLC  &LLEV                                                    07443
&LLEV    SETC  '1.1 '                                                   07444
         YREGS                                                          07445
         ENTRY LABELCHK                                                 07446
LABELCHK CSECT                                                          07447
         USING *,R15                                                    07448
         B     EYECATCH                                                 07449
         DC    C'--- '            MAKE EYECATCHER VISIBLE               07450
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'        07451
         DC    C' - '                                                   07452
         DC    C'LEVEL '                                                07453
SYSLEV   DC    C'&LLEV'                                                 07454
         DC    C' - '                                                   07455
SYSDAT   DC    C'&SYSDATE'                                              07456
         DC    C'  ',C'&SYSTIME ',C'--- '                               07457
         DC    C'Copyright (c) 2003 by Sam Golob '                      07458
         DC    C'--- '              MAKE EYECATCHER VISIBLE             07459
SAVEAREA DC    18F'0'                                                   07460
EYECATCH DS    0D                   ENSURE ALIGNMENT                    07461
         SAVE  (14,12)                                                  07462
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM    07463
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  07464
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         07465
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        07466
         LR    R13,R1               NEW SAVE AREA ADDRESS               07467
         DROP  R15                                                      07468
* -----                             SET UP BASE REGISTERS               07469
         USING LABELCHK,R12,R11,R10,R9                                  07470
         LR    R12,R15                                                  07471
         LA    R11,4095(,R12)                                           07472
         LA    R11,1(,R11)                                              07473
         LA    R10,4095(,R11)                                           07474
         LA    R10,1(,R10)                                              07475
         LA    R9,4095(,R10)                                            07476
         LA    R9,1(,R9)                                                07477
         LR    R1,R5                RESTORE REGISTER 1 INPUT            07478
* ----------------------------------------------------------------- *   07479
         ST    R1,PARMSAVE          Address of parm flags in caller     07480
         ST    R2,USERSAVE          Address of user area in caller      07481
         ST    R3,INARSAVE          Address of INAREA in caller         07482
* ----------------------------------------------------------------- *   07483
*********************************************************************** 07484
* GET SYSTEM DATE AND TIME - A standard way to get date and time      * 07485
*********************************************************************** 07486
         STM   R14,R2,SAVE1402                                          07487
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY            07488
         OI    DATE+4,X'0F'                                             07489
         UNPK  DATED,DATE                                               07490
         OI    TIME+3,X'0F'                                             07491
         UNPK  TIMED,TIME                                               07492
*                          FILL HEADDATE AREA WITH INFO TO REUSE        07493
         MVC   HEADDATE(2),DATED                                        07494
         MVI   HEADDATE+2,C'/'                                          07495
         MVC   HEADDATE+3(2),DATED+2                                    07496
         MVI   HEADDATE+5,C'/'                                          07497
         MVC   HEADDATE+6(4),DATED+4                                    07498
         MVC   HEADDATE+12(2),TIMED                                     07499
         MVI   HEADDATE+14,C':'                                         07500
         MVC   HEADDATE+15(2),TIMED+2                                   07501
         MVI   HEADDATE+17,C':'                                         07502
         MVC   HEADDATE+18(2),TIMED+4                                   07503
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME        07504
         LM    R14,R2,SAVE1402                                          07505
*********************************************************************** 07506
         MVC   LEVDATE(8),SYSDAT                                        07507
*********************************************************************** 07508
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES     07509
* ----------------------------------------------------------------- *   07510
INITCONS DS    0H                    Initialize necessary quantities.   07511
         MVI   LINE-1,X'40'          Make sure the print line is blank. 07512
         MVC   LINE,LINE-1                                              07513
         L     R0,SYSPRINV           SYSPRINT DCB address in caller     07514
         ST    R0,SYSPRDCB             store for the program's use      07515
         L     R0,LABLDUMV           LABLDUMP DCB address in caller     07516
         ST    R0,LABLDDCB             store for the program's use      07517
         L     R0,LABADDIV           LABADDIN DCB address in caller     07518
         ST    R0,LABADDCB             store for the program's use      07519
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer   07520
         ST    R0,SAVTRTCS             store it for later use           07521
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm 07522
         ST    R0,PRTLBENT           Save entry point for calling later 07523
* ----------------------------------------------------------------*     07524
PROCESS  DS    0H                    First copy over passed areas.      07525
* ----------------------------------------------------------------*     07526
         L     R1,PARMSAVE              Point to caller's parm flags    07527
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.     07528
         L     R2,USERSAVE              Point to caller's user area.    07529
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.     07530
         L     R3,INARSAVE              Point to INAREA in caller.      07531
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.   07532
* ----------------------------------------------------------------*     07533
*   Then execute this entire program as a called subroutine.      *     07534
* ----------------------------------------------------------------*     07535
         BAL   R7,LABLCHEK                                              07536
* ----------------------------------------------------------------*     07537
*                                                                       07538
         B     THEEND                                                   07539
LBLINEND DS    0H                                                       07540
         OI    LBLINENF,X'01'                                           07541
THEEND   DS    0H                                                       07542
         L     R13,4(,R13)                                              07543
         MVC   16(4,R13),=F'0'          Return code 0     in R15        07544
* - - - - - - - - - - - - - Pass addresses of our passed areas back.    07545
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1   07546
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2  07547
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3     07548
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     07549
         LM    R14,R12,12(R13)                                          07550
         BR    R14                                                      07551
         EJECT                                                          07552
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     07553
*    BAL REGISTER IS R7.                                                07554
* --------------------------------------------------------- *           07555
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS             07556
*                         AND SET LABEL FLAGS, ACCORDINGLY,             07557
*                         IN THE LBLFLAG BYTE.                          07558
* --------------------------------------------------------- *           07559
*     The type of labels last seen on the input tape                    07560
*     are generally flagged by bits in the LBLFLAG byte.                07561
*     These bit settings are set by this program as                     07562
*     follows:   (These are for both IBM and ASCII labels)              07563
* --------------------------------------------------------- *           07564
*              X'01'    HDR1 HAS BEEN SEEN                              07565
*              X'02'    HDR2 HAS BEEN SEEN                              07566
*              X'04'    VOL1 HAS BEEN SEEN                              07567
*              X'08'    HDR1 IS FROM AN INITTED TAPE                    07568
*              X'10'    EOF1 HAS BEEN SEEN                              07569
*              X'20'    EOF2 HAS BEEN SEEN                              07570
*              X'40'    EOV1 HAS BEEN SEEN                              07571
*              X'80'    EOV2 HAS BEEN SEEN                              07572
* --------------------------------------------------------- *           07573
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *           07574
* -                                                       - *           07575
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *           07576
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *           07577
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *           07578
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *           07579
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *           07580
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *           07581
* --------------------------------------------------------- *           07582
*                                                           *           07583
*   Beginning of processing:                                *           07584
*                                                           *           07585
*     Check the input record (that has been copied to       *           07586
*     INAREA) for each possible type of label, and direct   *           07587
*     the processing to the appropriate routine, if a       *           07588
*     label type has been found.                            *           07589
*                                                           *           07590
*     If an input record does not fit any of these          *           07591
*     criteria, it is not considered a tape label.          *           07592
*                                                           *           07593
* --------------------------------------------------------- *           07594
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START     07595
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                    07596
         BE    CVOL1                PROCESS THE VOL1                    07597
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                    07598
         BE    CHDR1                PROCESS HDR1                        07599
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                       07600
         BE    CHDR2                PROCESS HDR2                        07601
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                      07602
         BE    CEOF1                PROCESS EOF1                        07603
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                      07604
         BE    CEOF2                PROCESS EOF2                        07605
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                      07606
         BE    CEOV1                PROCESS EOV1                        07607
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                      07608
         BE    CEOV2                PROCESS EOV2                        07609
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?           07610
         BE    CUHL                 PROCESS UHL                         07611
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?          07612
         BE    CUTL                 PROCESS UTL                         07613
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                        07614
         BE    ASC                     PROCESS ALL VOL TYPES            07615
         CLC   INAREA(3),=X'484452'   ASCII HDR?                        07616
         BE    ASC                     PROCESS ALL HDR TYPES            07617
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                        07618
         BE    ASC                     PROCESS ALL EOF TYPES            07619
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                        07620
         BE    ASC                     PROCESS ALL EOV TYPES            07621
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)    07622
         BE    ASC                     PROCESS ALL UVL TYPES            07623
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)    07624
         BE    ASC                     PROCESS ALL UHL TYPES            07625
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)   07626
         BE    ASC                     PROCESS ALL UTL TYPES            07627
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL  07628
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------            07629
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            07630
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG      07631
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW         07632
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  07633
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                   07634
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1     07635
CLRIDRCV DS    0H                                                       07636
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE         07637
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE           07638
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE            07639
* ---------------- LABEL ADDING CODE ---------------------- *           07640
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?               07641
         BZ    CVOLNPRB             NO. WE CAN GO ON.                   07642
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                  07643
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG             07644
         ST    R6,SAVER6                                                07645
         L     R6,SYSPRDCB                                              07646
         PUT   (6),LINE                                                 07647
         L     R6,SAVER6                                                07648
*        PUT   SYSPRINT,LINE        WRITE MSG                           07649
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                 07650
*        CLOSE (LABADDIN)                                               07651
         OI    LABADFLG,X'01'                                           07652
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM           07653
         OI    CLOSMFLG,X'01'                                           07654
         B     THEEND                                                   07655
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.         07656
* ---------------- LABEL ADDING CODE ---------------------- *           07657
* ---------------- LABEL DUMPING CODE --------------------- *           07658
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07659
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                07660
         ST    R7,SAVE7LDM          Save BAL register.                  07661
         LA    R4,INAREA            Point to area to be dumped.         07662
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07663
         L     R7,SAVE7LDM          Restore BAL register.               07664
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE           07665
* ---------------- LABEL DUMPING CODE --------------------- *           07666
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                      07667
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                   07668
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND            07669
*                                                                       07670
* ------ Call PRINTLBL routine to print this label.....   below         07671
         ST    R7,SAVE7BA2        Save BAL register.                    07672
         BAL   R7,PRNTLABL        Print the current label.              07673
         L     R7,SAVE7BA2                                              07674
* ------ Call PRINTLBL routine to print this label.....   above         07675
*                                                                       07676
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07677
         B     LABCHEND                                                 07678
CHDR1    DS    0H                                                       07679
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07680
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG     07681
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR      07682
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                      07683
* ---------------- LABEL DUMPING CODE --------------------- *           07684
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07685
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                07686
         ST    R7,SAVE7LDM          Save BAL register.                  07687
         LA    R4,INAREA            Point to area to be dumped.         07688
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07689
         L     R7,SAVE7LDM          Restore BAL register.               07690
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE           07691
* ---------------- LABEL DUMPING CODE --------------------- *           07692
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?             07693
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET            07694
* ---------------- LABEL DUMPING CODE --------------------- *           07695
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07696
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT     07697
         ST    R7,SAVE7LDM          Save BAL register.                  07698
         ST    R4,SAVE4LDM                                              07699
         LA    R4,LABELITI          Point to area to be dumped.         07700
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07701
         L     R4,SAVE4LDM                                              07702
         L     R7,SAVE7LDM          Restore BAL register.               07703
CHDR1NDM DS    0H                                                       07704
* ---------------- LABEL DUMPING CODE --------------------- *           07705
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE             07706
CHDR1A   DS    0H                                                       07707
*** --- >>  Security off?  -  below                                     07708
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 07709
         BZ    NOSECCH1             No. Don't affect these fields.      07710
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                07711
NOSECCH1 DS    0H                                                       07712
*** --- >>  Security off?  -  above                                     07713
         TM    PARMFLG1,X'02' DO WE PRINT LABELS?                       07714
         BZ    CHDR1Z         NO. DON'T PRINT.                          07715
*                                                                       07716
* ------ Call PRINTLBL routine to print this label.....   below         07717
         ST    R7,SAVE7BA2        Save BAL register.                    07718
         BAL   R7,PRNTLABL        Print the current label.              07719
         L     R7,SAVE7BA2                                              07720
* ------ Call PRINTLBL routine to print this label.....   above         07721
*                                                                       07722
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07723
         B     LABCHEND                                                 07724
CHDR2    DS    0H                                                       07725
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07726
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG     07727
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW         07728
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  07729
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                   07730
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            07731
         BNE   CLRIDRH2                                                 07732
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     07733
CLRIDRH2 DS    0H                                                       07734
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE         07735
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2           07736
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                      07737
* ---------------- LABEL DUMPING CODE --------------------- *           07738
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07739
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                07740
         ST    R7,SAVE7LDM          Save BAL register.                  07741
         LA    R4,INAREA            Point to area to be dumped.         07742
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07743
         L     R7,SAVE7LDM          Restore BAL register.               07744
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE          07745
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE           07746
* ---------------- LABEL DUMPING CODE --------------------- *           07747
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                     07748
         BZ    CHDR2Z           NO.                                     07749
*                                                                       07750
* ------ Call PRINTLBL routine to print this label.....   below         07751
         ST    R7,SAVE7BA2        Save BAL register.                    07752
         BAL   R7,PRNTLABL        Print the current label.              07753
         L     R7,SAVE7BA2                                              07754
* ------ Call PRINTLBL routine to print this label.....   above         07755
*                                                                       07756
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07757
         B     LABCHEND                                                 07758
CEOF1    DS    0H                                                       07759
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07760
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG     07761
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                07762
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                      07763
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           07764
BCTCEOF1 DS    0H                                                       07765
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         07766
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                 07767
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT        07768
         STM   R2,R3,SAVE2TO3                                           07769
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD    07770
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   07771
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                07772
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       07773
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             07774
         LM    R2,R3,SAVE2TO3                                           07775
BCTCEOFX DS    0H                                                       07776
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           07777
* ---------------- LABEL DUMPING CODE --------------------- *           07778
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07779
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                07780
         ST    R7,SAVE7LDM          Save BAL register.                  07781
         LA    R4,INAREA            Point to area to be dumped.         07782
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07783
         L     R7,SAVE7LDM          Restore BAL register.               07784
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE           07785
* ---------------- LABEL DUMPING CODE --------------------- *           07786
CEOF1A   DS    0H                                                       07787
*** --- >>  Security off?  -  below                                     07788
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 07789
         BZ    NOSECCF1             No. Don't affect these fields.      07790
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                07791
NOSECCF1 DS    0H                                                       07792
*** --- >>  Security off?  -  above                                     07793
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                     07794
         BZ    CEOF1Z           NO.                                     07795
*                                                                       07796
* ------ Call PRINTLBL routine to print this label.....   below         07797
         ST    R7,SAVE7BA2        Save BAL register.                    07798
         BAL   R7,PRNTLABL        Print the current label.              07799
         L     R7,SAVE7BA2                                              07800
* ------ Call PRINTLBL routine to print this label.....   above         07801
*                                                                       07802
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07803
         B     LABCHEND                                                 07804
CEOF2    DS    0H                                                       07805
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07806
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG     07807
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW         07808
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  07809
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                   07810
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            07811
         BNE   CLRIDRF2                                                 07812
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     07813
CLRIDRF2 DS    0H                                                       07814
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE         07815
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                07816
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                      07817
* ---------------- LABEL DUMPING CODE --------------------- *           07818
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07819
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                07820
         ST    R7,SAVE7LDM          Save BAL register.                  07821
         LA    R4,INAREA            Point to area to be dumped.         07822
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07823
         L     R7,SAVE7LDM          Restore BAL register.               07824
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          07825
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE           07826
* ---------------- LABEL DUMPING CODE --------------------- *           07827
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                     07828
         BZ    CEOF2Z           NO.                                     07829
*                                                                       07830
* ------ Call PRINTLBL routine to print this label.....   below         07831
         ST    R7,SAVE7BA2        Save BAL register.                    07832
         BAL   R7,PRNTLABL        Print the current label.              07833
         L     R7,SAVE7BA2                                              07834
* ------ Call PRINTLBL routine to print this label.....   above         07835
*                                                                       07836
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07837
         B     LABCHEND                                                 07838
CEOV1    DS    0H                                                       07839
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07840
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG     07841
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                07842
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        07843
         BZ    CEOVN1         NO, PROCESS ORDINARILY                    07844
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                   07845
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                           07846
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                07847
         MVI   LINE-1,C' '                                              07848
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          07849
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                       07850
         ST    R6,SAVER6                                                07851
         L     R6,SYSPRDCB                                              07852
         PUT   (6),LINE                                                 07853
         L     R6,SAVER6                                                07854
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.              07855
         B     CEOVY1                                                   07856
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                      07857
CEOVY1   DS    0H                                                       07858
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           07859
BCTCEOV1 DS    0H                                                       07860
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         07861
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                 07862
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT        07863
         STM   R2,R3,SAVE2TO3                                           07864
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD    07865
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT   07866
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                07867
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES       07868
         L     R7,SAVE7RG2             RESTORE BAL REGISTER             07869
         LM    R2,R3,SAVE2TO3                                           07870
BCTCEOVX DS    0H                                                       07871
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           07872
* ---------------- LABEL DUMPING CODE --------------------- *           07873
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07874
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                07875
         ST    R7,SAVE7LDM          Save BAL register.                  07876
         LA    R4,INAREA            Point to area to be dumped.         07877
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07878
         L     R7,SAVE7LDM          Restore BAL register.               07879
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE           07880
* ---------------- LABEL DUMPING CODE --------------------- *           07881
CEOV1A   DS    0H                                                       07882
*** --- >>  Security off?  -  below                                     07883
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 07884
         BZ    NOSECCV1             No. Don't affect these fields.      07885
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                07886
NOSECCV1 DS    0H                                                       07887
*** --- >>  Security off?  -  above                                     07888
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                     07889
         BZ    CEOV1Z           NO.                                     07890
*                                                                       07891
* ------ Call PRINTLBL routine to print this label.....   below         07892
         ST    R7,SAVE7BA2        Save BAL register.                    07893
         BAL   R7,PRNTLABL        Print the current label.              07894
         L     R7,SAVE7BA2                                              07895
* ------ Call PRINTLBL routine to print this label.....   above         07896
*                                                                       07897
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07898
         B     LABCHEND                                                 07899
CEOV2    DS    0H                                                       07900
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07901
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG     07902
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW         07903
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?  07904
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                   07905
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?            07906
         BNE   CLRIDRV2                                                 07907
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1     07908
CLRIDRV2 DS    0H                                                       07909
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE         07910
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                07911
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        07912
         BZ    CEOVN2         NO, PROCESS ORDINARILY                    07913
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                   07914
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                           07915
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                07916
         B     CEOVY2                                                   07917
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                      07918
CEOVY2   DS    0H                                                       07919
* ---------------- LABEL DUMPING CODE --------------------- *           07920
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07921
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                07922
         ST    R7,SAVE7LDM          Save BAL register.                  07923
         LA    R4,INAREA            Point to area to be dumped.         07924
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07925
         L     R7,SAVE7LDM          Restore BAL register.               07926
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                  07927
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2       07928
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE          07929
         B     CEOV2ND              AND GET OUT                         07930
CEOV2F   DS    0H                                                       07931
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          07932
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE           07933
* ---------------- LABEL DUMPING CODE --------------------- *           07934
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                     07935
         BZ    CEOV2Z           NO.                                     07936
*                                                                       07937
* ------ Call PRINTLBL routine to print this label.....   below         07938
         ST    R7,SAVE7BA2        Save BAL register.                    07939
         BAL   R7,PRNTLABL        Print the current label.              07940
         L     R7,SAVE7BA2                                              07941
* ------ Call PRINTLBL routine to print this label.....   above         07942
*                                                                       07943
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07944
         B     LABCHEND                                                 07945
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *           07946
CUHL     DS    0H             HANDLE USER HEADER LABELS                 07947
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07948
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG     07949
*                                                                       07950
* ------ Call PRINTLBL routine to print this label.....   below         07951
         ST    R7,SAVE7BA2        Save BAL register.                    07952
         BAL   R7,PRNTLABL        Print the current label.              07953
         L     R7,SAVE7BA2                                              07954
* ------ Call PRINTLBL routine to print this label.....   above         07955
*                                                                       07956
* ---------------- LABEL DUMPING CODE --------------------- *           07957
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07958
         BZ    CUHLEN               NO. SKIP PUTTING OUT                07959
         ST    R7,SAVE7LDM          Save BAL register.                  07960
         LA    R4,INAREA            Point to area to be dumped.         07961
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07962
         L     R7,SAVE7LDM          Restore BAL register.               07963
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE           07964
* ---------------- LABEL DUMPING CODE --------------------- *           07965
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07966
         B     LABCHEND                                                 07967
CUTL     DS    0H             HANDLE USER TRAILER LABELS                07968
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           07969
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG     07970
*                                                                       07971
* ------ Call PRINTLBL routine to print this label.....   below         07972
         ST    R7,SAVE7BA2        Save BAL register.                    07973
         BAL   R7,PRNTLABL        Print the current label.              07974
         L     R7,SAVE7BA2                                              07975
* ------ Call PRINTLBL routine to print this label.....   above         07976
*                                                                       07977
* ---------------- LABEL DUMPING CODE --------------------- *           07978
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              07979
         BZ    CUTLEN               NO. SKIP PUTTING OUT                07980
         ST    R7,SAVE7LDM          Save BAL register.                  07981
         LA    R4,INAREA            Point to area to be dumped.         07982
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 07983
         L     R7,SAVE7LDM          Restore BAL register.               07984
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE           07985
* ---------------- LABEL DUMPING CODE --------------------- *           07986
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL             07987
         B     LABCHEND                                                 07988
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *           07989
         EJECT                                                          07990
* ----------------  ASCII   Labels  ----------------------- *           07991
* --------------------------------------------------------- *           07992
*  ANSI/ISO label rules are a bit more relaxed than IBM     *           07993
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *           07994
*  UTLx are all considered labels, with a lot of latitude   *           07995
*  as to what the "x" is.  Therefore, for ASCII tape        *           07996
*  labels, we check the first 3 characters in each label    *           07997
*  category, and then further subdivide within that         *           07998
*  category if necessary.                                   *           07999
* --------------------------------------------------------- *           08000
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE     08001
*                                                                       08002
*        Common ASCII preparation routines......                        08003
*                                                                       08004
         OI    ASCIIFLG,X'01'       Say we're working in ASCII          08005
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation   08006
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label  08007
*                                   This is being done early for ASCII  08008
*                                                                       08009
* -- >  Make an EBCDIC version of this label in the INASCI field.       08010
         ST    R5,R5HXPRT              Save register.                   08011
         L     R5,SAVTRTCS             Point to translation table CSECT 08012
         USING TRTDSECT,R5                                              08013
         MVC   INASCI(80),INAREA       Move LABEL area to workarea      08014
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print    08015
         L     R5,R5HXPRT              Restore R5                       08016
         DROP  R5                                                       08017
* -- >                                                                  08018
* ----------------------------------------------------- *               08019
* --   Again pick which type of ASCII label we have     *               08020
* ----------------------------------------------------- *               08021
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                        08022
         BE    ASCVOL                  PROCESS ALL VOL TYPES            08023
         CLC   INAREA(3),=X'484452'   ASCII HDR?                        08024
         BE    ASCHDR                  PROCESS ALL HDR TYPES            08025
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                        08026
         BE    ASCEOF                  PROCESS ALL EOF TYPES            08027
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                        08028
         BE    ASCEOV                  PROCESS ALL EOV TYPES            08029
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)    08030
         BE    ASCUVL                  PROCESS ALL UVL TYPES            08031
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)    08032
         BE    ASCUHL                  PROCESS ALL UHL TYPES            08033
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)   08034
         BE    ASCUTL                  PROCESS ALL UTL TYPES            08035
* ----------------------------------                                    08036
ASCVOL   DS    0H                                                       08037
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08038
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG     08039
* ---------------- LABEL ADDING CODE ---------------------- *           08040
*       Forbid adding new labels to an already AL tape.     *           08041
* --------------------------------------------------------- *           08042
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?               08043
         BZ    ASCVOLNS             NO. WE CAN GO ON.                   08044
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                  08045
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG             08046
         ST    R6,SAVER6                                                08047
         L     R6,SYSPRDCB                                              08048
         PUT   (6),LINE                                                 08049
         L     R6,SAVER6                                                08050
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                 08051
*        CLOSE (LABADDIN)                                               08052
         OI    LABADFLG,X'01'                                           08053
         OI    CLOSMFLG,X'01'                                           08054
         B     THEEND                                                   08055
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.         08056
* ---------------- LABEL ADDING CODE ---------------------- *           08057
* ---------------- LABEL DUMPING CODE ------ below -------- *           08058
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08059
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                08060
         ST    R7,SAVE7LDM          Save BAL register.                  08061
         LA    R4,INAREA            Point to area to be dumped.         08062
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08063
         L     R7,SAVE7LDM          Restore BAL register.               08064
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE           08065
* ---------------- LABEL DUMPING CODE ------ above -------- *           08066
* --------------------------------------------------------- *           08067
*  At this point, we specifically check for a VOL1 label.   *           08068
* --------------------------------------------------------- *           08069
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?            08070
         BNE   ASCVOLLB             No. Just mark as an ASCII label.    08071
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                     08072
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there      08073
         MVC   INVOLUME(6),INASCI+4    Send to message too              08074
*** --- >>  Security off?  -  below                                     08075
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08076
         BZ    NOSECF01             No. Don't affect these fields.      08077
         MVI   INAREA+10,X'20'      Move in ASCII blank.                08078
NOSECF01 DS    0H                                                       08079
*** --- >>  Security off?  -  above                                     08080
* --- >>>    VOL1  Label Printing   -----   below                       08081
         TM    PARMFLG2,X'02'          Printing Volume Labels?          08082
         BZ    ASCVOLLB                No. Skip this code.              08083
*                                                                       08084
* ------ Call PRINTLBL routine to print this label.....   below         08085
         ST    R7,SAVE7BA2        Save BAL register.                    08086
         BAL   R7,PRNTLABL        Print the current label.              08087
         L     R7,SAVE7BA2                                              08088
* ------ Call PRINTLBL routine to print this label.....   above         08089
*                                                                       08090
* --- >>>    VOL1  Label Printing   -----   above                       08091
ASCVOLLB DS    0H                                                       08092
ASCVOLE  DS    0H                                                       08093
         B     LABCHEND                                                 08094
*                                                                       08095
ASCHDR   DS    0H                                                       08096
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?          08097
         BE    ASCHDR1                                                  08098
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?          08099
         BE    ASCHDR2                                                  08100
         B     ASCHDRO                                                  08101
ASCHDR1  DS    0H                   ASCII Header 1                      08102
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            08103
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.       08104
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR      08105
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                     08106
* ---------------- LABEL DUMPING CODE --------------------- *           08107
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08108
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                08109
         ST    R7,SAVE7LDM          Save BAL register.                  08110
         LA    R4,INAREA            Point to area to be dumped.         08111
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08112
         L     R7,SAVE7LDM          Restore BAL register.               08113
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE           08114
* ---------------- LABEL DUMPING CODE --------------------- *           08115
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?            08116
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET    08117
* ---------------- LABEL DUMPING CODE --------------------- *           08118
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08119
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT     08120
         ST    R7,SAVE7LDM          Save BAL register.                  08121
         ST    R4,SAVE4LDM                                              08122
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII. 08123
         LA    R4,LABELITI          Point to area to be dumped.         08124
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08125
         L     R4,SAVE4LDM                                              08126
         L     R7,SAVE7LDM          Restore BAL register.               08127
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                08128
CASC1NDM DS    0H                                                       08129
* ---------------- LABEL DUMPING CODE --------------------- *           08130
         OI    LBLFLAG,X'08'        Show initted header label found.    08131
CASC1A   DS    0H                                                       08132
*** --- >>  Security off?  -  below                                     08133
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08134
         BZ    NOSECAH1             No. Don't affect these fields.      08135
         MVI   INAREA+53,X'20'      Move in ASCII blank.                08136
NOSECAH1 DS    0H                                                       08137
*** --- >>  Security off?  -  above                                     08138
* --- >      Print  Labels     - -   below                              08139
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?              08140
         BZ    ASCHDR1Z                NO. DON'T PRINT.                 08141
*                                                                       08142
* ------ Call PRINTLBL routine to print this label.....   below         08143
         ST    R7,SAVE7BA2        Save BAL register.                    08144
         BAL   R7,PRNTLABL        Print the current label.              08145
         L     R7,SAVE7BA2                                              08146
* ------ Call PRINTLBL routine to print this label.....   above         08147
*                                                                       08148
ASCHDR1Z DS    0H                                                       08149
* --- >      Print  Labels     - -   above                              08150
         B     LABCHEND                                                 08151
ASCHDR2  DS    0H                   ASCII Header 2                      08152
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            08153
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.   08154
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2     08155
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                08156
* ---------------- LABEL DUMPING CODE --------------------- *           08157
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08158
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                08159
         ST    R7,SAVE7LDM          Save BAL register.                  08160
         LA    R4,INAREA            Point to area to be dumped.         08161
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08162
         L     R7,SAVE7LDM          Restore BAL register.               08163
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE          08164
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE           08165
* ---------------- LABEL DUMPING CODE --------------------- *           08166
ASCHDR2A DS    0H                                                       08167
* --- >      Print  Labels     - -   below                              08168
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?              08169
         BZ    ASCHDR2Z                NO. DON'T PRINT.                 08170
*                                                                       08171
* ------ Call PRINTLBL routine to print this label.....   below         08172
         ST    R7,SAVE7BA2        Save BAL register.                    08173
         BAL   R7,PRNTLABL        Print the current label.              08174
         L     R7,SAVE7BA2                                              08175
* ------ Call PRINTLBL routine to print this label.....   above         08176
*                                                                       08177
ASCHDR2Z DS    0H                                                       08178
* --- >      Print  Labels     - -   above                              08179
         B     LABCHEND                                                 08180
ASCHDRO  DS    0H                    ASCII Other header labels          08181
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08182
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED. 08183
*                                                                       08184
* ------ Call PRINTLBL routine to print this label.....   below         08185
         ST    R7,SAVE7BA2        Save BAL register.                    08186
         BAL   R7,PRNTLABL        Print the current label.              08187
         L     R7,SAVE7BA2                                              08188
* ------ Call PRINTLBL routine to print this label.....   above         08189
*                                                                       08190
* ---------------- LABEL DUMPING CODE --------------------- *           08191
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08192
         BZ    AHDROND              NO. SKIP PUTTING OUT                08193
         ST    R7,SAVE7LDM          Save BAL register.                  08194
         LA    R4,INAREA            Point to area to be dumped.         08195
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08196
         L     R7,SAVE7LDM          Restore BAL register.               08197
AHDROND  DS    0H                   END OF LABEL DUMPING CODE           08198
* ---------------- LABEL DUMPING CODE --------------------- *           08199
ASCHDRE  DS    0H                                                       08200
         B     LABCHEND                                                 08201
ASCEOF   DS    0H                                                       08202
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?         08203
         BE    ASCEOF1                                                  08204
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?         08205
         BE    ASCEOF2                                                  08206
         B     ASCEOFO                                                  08207
ASCEOF1  DS    0H                    ASCII EOF 1                        08208
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08209
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED. 08210
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1         08211
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                    08212
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08213
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         08214
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.       08215
         TM    PARMFLG1,X'01'          Is block count correction on?    08216
         BZ    NOTASCEF                No-don't plug in corrected value 08217
ASCBLKF1 DS    0H                                                       08218
         ST    R5,R5HXPRT              Save register.                   08219
         L     R5,SAVTRTCS             Point to translation table CSECT 08220
         USING TRTDSECT,R5                                              08221
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  08222
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         08223
         L     R5,R5HXPRT              Restore R5                       08224
         DROP  R5                                                       08225
         MVC   INAREA+54(6),BLKCNASC+4                                  08226
NOTASCEF DS    0H                                                       08227
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08228
* ---------------- LABEL DUMPING CODE --------------------- *           08229
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08230
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                08231
         ST    R7,SAVE7LDM          Save BAL register.                  08232
         LA    R4,INAREA            Point to area to be dumped.         08233
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08234
         L     R7,SAVE7LDM          Restore BAL register.               08235
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE           08236
* ---------------- LABEL DUMPING CODE --------------------- *           08237
*** --- >>  Security off?  -  below                                     08238
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08239
         BZ    NOSECAF1             No. Don't affect these fields.      08240
         MVI   INAREA+53,X'20'      Move in ASCII blank.                08241
NOSECAF1 DS    0H                                                       08242
*** --- >>  Security off?  -  above                                     08243
ASCEOF1A DS    0H                                                       08244
* --- >      Print  Labels     - -   below                              08245
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?              08246
         BZ    ASCEOF1Z                NO. DON'T PRINT.                 08247
*                                                                       08248
* ------ Call PRINTLBL routine to print this label.....   below         08249
         ST    R7,SAVE7BA2        Save BAL register.                    08250
         BAL   R7,PRNTLABL        Print the current label.              08251
         L     R7,SAVE7BA2                                              08252
* ------ Call PRINTLBL routine to print this label.....   above         08253
*                                                                       08254
ASCEOF1Z DS    0H                                                       08255
* --- >      Print  Labels     - -   above                              08256
         B     LABCHEND                                                 08257
ASCEOF2  DS    0H                   ASCII EOF 2                         08258
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?            08259
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG      08260
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2          08261
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                08262
* ---------------- LABEL DUMPING CODE --------------------- *           08263
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08264
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                08265
         ST    R7,SAVE7LDM          Save BAL register.                  08266
         LA    R4,INAREA            Point to area to be dumped.         08267
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08268
         L     R7,SAVE7LDM          Restore BAL register.               08269
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE          08270
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE           08271
* ---------------- LABEL DUMPING CODE --------------------- *           08272
ASCEOF2A DS    0H                                                       08273
* --- >      Print  Labels     - -   below                              08274
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?              08275
         BZ    ASCEOF2Z                NO. DON'T PRINT.                 08276
*                                                                       08277
* ------ Call PRINTLBL routine to print this label.....   below         08278
         ST    R7,SAVE7BA2        Save BAL register.                    08279
         BAL   R7,PRNTLABL        Print the current label.              08280
         L     R7,SAVE7BA2                                              08281
* ------ Call PRINTLBL routine to print this label.....   above         08282
*                                                                       08283
ASCEOF2Z DS    0H                                                       08284
* --- >      Print  Labels     - -   above                              08285
         B     LABCHEND                                                 08286
ASCEOFO  DS    0H                    ASCII Other EOF labels             08287
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08288
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED. 08289
*                                                                       08290
* ------ Call PRINTLBL routine to print this label.....   below         08291
         ST    R7,SAVE7BA2        Save BAL register.                    08292
         BAL   R7,PRNTLABL        Print the current label.              08293
         L     R7,SAVE7BA2                                              08294
* ------ Call PRINTLBL routine to print this label.....   above         08295
*                                                                       08296
* ---------------- LABEL DUMPING CODE --------------------- *           08297
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08298
         BZ    AEOFOND              NO. SKIP PUTTING OUT                08299
         ST    R7,SAVE7LDM          Save BAL register.                  08300
         LA    R4,INAREA            Point to area to be dumped.         08301
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08302
         L     R7,SAVE7LDM          Restore BAL register.               08303
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE           08304
* ---------------- LABEL DUMPING CODE --------------------- *           08305
ASCEOFE  DS    0H                                                       08306
         B     LABCHEND                                                 08307
ASCEOV   DS    0H                                                       08308
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?         08309
         BE    ASCEOV1                                                  08310
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?         08311
         BE    ASCEOV2                                                  08312
         B     ASCEOVO                                                  08313
ASCEOV1  DS    0H                    ASCII EOV 1                        08314
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08315
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG     08316
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                08317
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                        08318
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                    08319
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                   08320
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                        08321
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                  08322
         MVI   LINE-1,C' '                                              08323
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          08324
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                       08325
         ST    R6,SAVER6                                                08326
         L     R6,SYSPRDCB                                              08327
         PUT   (6),LINE                                                 08328
         L     R6,SAVER6                                                08329
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.              08330
         B     ASCEOVY1                                                 08331
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                      08332
ASCEOVY1 DS    0H                                                       08333
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08334
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?         08335
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.       08336
         TM    PARMFLG1,X'01'          Is block count correction on?    08337
         BZ    NOTASCEV                No-don't plug in corrected value 08338
ASCBLKV1 DS    0H                                                       08339
         ST    R5,R5HXPRT              Save register.                   08340
         L     R5,SAVTRTCS             Point to translation table CSECT 08341
         USING TRTDSECT,R5                                              08342
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area  08343
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII         08344
         L     R5,R5HXPRT              Restore R5                       08345
         DROP  R5                                                       08346
         MVC   INAREA+54(6),BLKCNASC+4                                  08347
NOTASCEV DS    0H                                                       08348
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *           08349
* ---------------- LABEL DUMPING CODE --------------------- *           08350
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08351
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                08352
         ST    R7,SAVE7LDM          Save BAL register.                  08353
         LA    R4,INAREA            Point to area to be dumped.         08354
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08355
         L     R7,SAVE7LDM          Restore BAL register.               08356
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE           08357
* ---------------- LABEL DUMPING CODE --------------------- *           08358
*** --- >>  Security off?  -  below                                     08359
         TM    PARMFLG6,X'10'       Turn off security indics in labels? 08360
         BZ    NOSECAV1             No. Don't affect these fields.      08361
         MVI   INAREA+53,X'20'      Move in ASCII blank.                08362
NOSECAV1 DS    0H                                                       08363
*** --- >>  Security off?  -  above                                     08364
* --- >      Print  Labels     - -   below                              08365
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?              08366
         BZ    ASCEOV1Z                NO. DON'T PRINT.                 08367
*                                                                       08368
* ------ Call PRINTLBL routine to print this label.....   below         08369
         ST    R7,SAVE7BA2        Save BAL register.                    08370
         BAL   R7,PRNTLABL        Print the current label.              08371
         L     R7,SAVE7BA2                                              08372
* ------ Call PRINTLBL routine to print this label.....   above         08373
*                                                                       08374
ASCEOV1Z DS    0H                                                       08375
* --- >      Print  Labels     - -   above                              08376
         B     LABCHEND                                                 08377
ASCEOV2  DS    0H                    ASCII EOV 2                        08378
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08379
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.   08380
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2         08381
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                 08382
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY             08383
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN            08384
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                        08385
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                 08386
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE         08387
         B     ASCEOVY2                                                 08388
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.               08389
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE         08390
ASCEOVY2 DS    0H                                                       08391
* ---------------- LABEL DUMPING CODE --------------------- *           08392
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08393
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                08394
         ST    R7,SAVE7LDM          Save BAL register.                  08395
         LA    R4,INAREA            Point to area to be dumped.         08396
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08397
         L     R7,SAVE7LDM          Restore BAL register.               08398
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE          08399
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE           08400
* ---------------- LABEL DUMPING CODE --------------------- *           08401
ASCEOV2N DS    0H                                                       08402
* --- >      Print  Labels     - -   below                              08403
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?              08404
         BZ    ASCEOV2Z                NO. DON'T PRINT.                 08405
*                                                                       08406
* ------ Call PRINTLBL routine to print this label.....   below         08407
         ST    R7,SAVE7BA2        Save BAL register.                    08408
         BAL   R7,PRNTLABL        Print the current label.              08409
         L     R7,SAVE7BA2                                              08410
* ------ Call PRINTLBL routine to print this label.....   above         08411
*                                                                       08412
ASCEOV2Z DS    0H                                                       08413
* --- >      Print  Labels     - -   above                              08414
         B     LABCHEND                                                 08415
ASCEOVO  DS    0H                    ASCII Other EOV labels             08416
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08417
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED. 08418
*                                                                       08419
* ------ Call PRINTLBL routine to print this label.....   below         08420
         ST    R7,SAVE7BA2        Save BAL register.                    08421
         BAL   R7,PRNTLABL        Print the current label.              08422
         L     R7,SAVE7BA2                                              08423
* ------ Call PRINTLBL routine to print this label.....   above         08424
*                                                                       08425
* ---------------- LABEL DUMPING CODE --------------------- *           08426
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08427
         BZ    AEOVOND              NO. SKIP PUTTING OUT                08428
         ST    R7,SAVE7LDM          Save BAL register.                  08429
         LA    R4,INAREA            Point to area to be dumped.         08430
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08431
         L     R7,SAVE7LDM          Restore BAL register.               08432
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE           08433
* ---------------- LABEL DUMPING CODE --------------------- *           08434
ASCEOVE  DS    0H                                                       08435
         B     LABCHEND                                                 08436
ASCUVL   DS    0H                                                       08437
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08438
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG     08439
*                                                                       08440
* ------ Call PRINTLBL routine to print this label.....   below         08441
         ST    R7,SAVE7BA2        Save BAL register.                    08442
         BAL   R7,PRNTLABL        Print the current label.              08443
         L     R7,SAVE7BA2                                              08444
* ------ Call PRINTLBL routine to print this label.....   above         08445
*                                                                       08446
* ---------------- LABEL DUMPING CODE --------------------- *           08447
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08448
         BZ    AUVLEND              NO. SKIP PUTTING OUT                08449
         ST    R7,SAVE7LDM          Save BAL register.                  08450
         LA    R4,INAREA            Point to area to be dumped.         08451
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08452
         L     R7,SAVE7LDM          Restore BAL register.               08453
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE           08454
* ---------------- LABEL DUMPING CODE --------------------- *           08455
ASCUVLE  DS    0H                                                       08456
         B     LABCHEND                                                 08457
ASCUHL   DS    0H                                                       08458
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08459
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG     08460
*                                                                       08461
* ------ Call PRINTLBL routine to print this label.....   below         08462
         ST    R7,SAVE7BA2        Save BAL register.                    08463
         BAL   R7,PRNTLABL        Print the current label.              08464
         L     R7,SAVE7BA2                                              08465
* ------ Call PRINTLBL routine to print this label.....   above         08466
*                                                                       08467
* ---------------- LABEL DUMPING CODE --------------------- *           08468
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08469
         BZ    AUHLEND              NO. SKIP PUTTING OUT                08470
         ST    R7,SAVE7LDM          Save BAL register.                  08471
         LA    R4,INAREA            Point to area to be dumped.         08472
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08473
         L     R7,SAVE7LDM          Restore BAL register.               08474
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE           08475
* ---------------- LABEL DUMPING CODE --------------------- *           08476
ASCUHLE  DS    0H                                                       08477
         B     LABCHEND                                                 08478
ASCUTL   DS    0H                                                       08479
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?           08480
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG     08481
*                                                                       08482
* ------ Call PRINTLBL routine to print this label.....   below         08483
         ST    R7,SAVE7BA2        Save BAL register.                    08484
         BAL   R7,PRNTLABL        Print the current label.              08485
         L     R7,SAVE7BA2                                              08486
* ------ Call PRINTLBL routine to print this label.....   above         08487
*                                                                       08488
* ---------------- LABEL DUMPING CODE --------------------- *           08489
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?              08490
         BZ    AUTLEND              NO. SKIP PUTTING OUT                08491
         ST    R7,SAVE7LDM          Save BAL register.                  08492
         LA    R4,INAREA            Point to area to be dumped.         08493
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD. 08494
         L     R7,SAVE7LDM          Restore BAL register.               08495
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE           08496
* ---------------- LABEL DUMPING CODE --------------------- *           08497
ASCUTLE  DS    0H                                                       08498
         B     LABCHEND                                                 08499
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG              08500
LABCHEND DS    0H                                                       08501
         BR    R7                                                       08502
* --------------------------------------------------------- *           08503
*    BAL REGISTER IS R7.                                                08504
* --------------------------------------------------------- *           08505
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.           08506
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76             08507
* --------------------------------------------------------- *           08508
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT         08509
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       08510
         BE    MOVEHI09                                                 08511
         MVC   0(4,R3),0(R2)                                            08512
         B     MOVEHIEN                                                 08513
         LA    R2,1(,R2)                                                08514
         LA    R3,1(,R3)                                                08515
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       08516
         BE    MOVEHI08                                                 08517
         MVC   0(3,R3),0(R2)                                            08518
         B     MOVEHIEN                                                 08519
         LA    R2,1(,R2)                                                08520
         LA    R3,1(,R3)                                                08521
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       08522
         BE    MOVEHI07                                                 08523
         MVC   0(2,R3),0(R2)                                            08524
         B     MOVEHIEN                                                 08525
         LA    R2,1(,R2)                                                08526
         LA    R3,1(,R3)                                                08527
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                       08528
         BE    MOVEHIEN                                                 08529
         MVC   0(1,R3),0(R2)                                            08530
MOVEHIEN BR    R7                                                       08531
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08532
*    BAL REGISTER IS R7.                                                08533
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08534
*              Upon entry, R4 points to the 80-byte record              08535
*              to be dumped into the LABLDUMP DD.                       08536
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08537
DUMLABRC DS    0H                                                       08538
         TM    PARMFLG2,X'10'       Are we dumping labels?              08539
         BZ    DUMLABRN             No. Skip putting out.               08540
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.        08541
         MVC   LLINE(80),0(R4)      Move in record info to line.        08542
         TM    ASCIIFLG,X'01'       Are we working in ASCII?            08543
         BZ    NOASCIID             No. Don't translate label bytes.    08544
         MVI   LLINE,X'20'                  Clear to ASCII blanks       08545
         MVC   LLINE+1(L'LLINE-1),LLINE                                 08546
         MVC   LLINE(80),0(R4)      Move in record info to line.        08547
         ST    R5,SAVE5LDM          Save register.                      08548
         L     R5,SAVTRTCS          Point to translation table CSECT    08549
         USING TRTDSECT,R5          Map it.                             08550
         TM    ATRNLFLG,X'01'       Is this record to be translated?    08551
         BZ    ANOTRANS             No. Dump it as is.                  08552
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII  08553
ANOTRANS DS    0H                                                       08554
         L     R5,SAVE5LDM          Restore register.                   08555
         DROP  R5                                                       08556
NOASCIID DS    0H                                                       08557
         ST    R6,SAVER6            Prepare to write record. Save reg.  08558
         L     R6,LABLDDCB          Point to LABLDUMP DCB.              08559
         PUT   (6),LLINE                                                08560
         L     R6,SAVER6            Restore register.                   08561
*        PUT   LABLDUMP,LLINE       Write out label info.               08562
DUMLABRN DS    0H                                                       08563
         BR    R7                                                       08564
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08565
*    BAL REGISTER IS R4.                                                08566
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08567
HEX      DS    0H                                                       08568
         MVC   1(1,R15),0(R1)        Move byte                          08569
         UNPK  0(3,R15),1(2,R15)     Unpack                             08570
         TR    0(2,R15),HEXTAB-240                                      08571
         LA    R15,2(,R15)           Increment output pointer           08572
         LA    R1,1(,R1)             Increment input pointer            08573
         BCT   R0,HEX                Decrement length, then loop        08574
         MVI   0(R15),C' '           Blank the trailing byte            08575
         BR    R4                    Return to caller                   08576
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                    08577
         SPACE                                                          08578
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08579
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08580
*    BAL REGISTER IS R7.                                                08581
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     08582
PRNTLABL DS    0H                                                       08583
*                                                                       08584
* ------ Call PRINTLBL routine to print this label.....   below         08585
         L     R15,PRTLBENT       Get entry point of called program     08586
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                      08587
         LA    R1,PARMFLGS        Point R1 to parm flags.               08588
         L     R3,=A(INAREA)      Point R3 to address of input area.    08589
         BALR  R14,R15                 Do CALL.                         08590
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.    08591
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA       08592
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                   08593
* ------ Call PRINTLBL routine to print this label.....   above         08594
*                                                                       08595
         BR    R7                                                       08596
* --------------------------------------------------------- *           08597
* ---        C O N S T A N T S                          --- *           08598
* --------------------------------------------------------- *           08599
*    ------------------------ >   Constants for Date and Time - below   08600
SAVE1402 DS    6F                 Extra fullword for safety             08601
TIMED    DS    CL7                                                      08602
DATED    DS    CL9                                                      08603
DATETIME DS    4F                                                       08604
         ORG   DATETIME                                                 08605
TIME     DS    CL4                                                      08606
         DS    CL4                                                      08607
DATE     DS    CL5                                                      08608
         DS    CL3                                                      08609
HEADDLIT DS    0CL31              Literal for headings - date and time  08610
         DC    CL6'Today:'                                              08611
         DC    CL2' '                                                   08612
HEADDATE DC    CL23' '                                                  08613
LEVELLIT DS    0CL21              Level number display for headings     08614
         DC    CL6'Level '                                              08615
LEVELL   DC    CL4'&LLEV'                                               08616
         DC    CL2' ('                                                  08617
LEVDATE  DC    CL8' '             Assembly date for this program        08618
         DC    CL1')'                                                   08619
*    ------------------------ >   Constants for Date and Time - above   08620
         LTORG                                                          08621
FF       EQU   X'FF'                                                    08622
LABELITH DC    CL80'----ENDOFLABELHEADER '                              08623
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           08624
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              08625
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           08626
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR-08627
               AM              '                                        08628
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '            08629
         DC    C'EOV2EOF PARM OR OPTION'                                08630
         DC    69C' '                                                   08631
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS ' 08632
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          ' 08633
         DC    C'                           '                           08634
         DC    C'0'                                                     08635
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                   08636
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1             08637
* --------------------------------------------------------- *           08638
         DC    C' '                                                     08639
LINE     DC    CL133' '                                                 08640
* ---------------------  Register Save Areas  ---------------->>>       08641
SYSPRINV DC    V(SYSPRINT)                                              08642
LABLDUMV DC    V(LABLDUMP)                                              08643
LABADDIV DC    V(LABADDIN)                                              08644
SAVTRTCS DC    F'0'                                                     08645
PRTLBENT DC    F'0'                                                     08646
PARMSAVE DC    F'0'                                                     08647
USERSAVE DC    F'0'                                                     08648
INARSAVE DC    F'0'                                                     08649
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro    08650
HEXSAVE  DS    3F                    Register save for HEX macro        08651
SAVE2TO3 DC    2F'0'                                                    08652
SAVER6   DC    F'0'                                                     08653
SAVE3REG DC    F'0'                                                     08654
SAVE7BA1 DC    F'0'                                                     08655
SAVE7BA2 DC    F'0'                                                     08656
SAVE7REG DC    F'0'                                                     08657
SAVE7BAL DC    F'0'                                                     08658
SAVE4LDM DC    F'0'                                                     08659
SAVE5LDM DC    F'0'                                                     08660
R5HXPRT  DC    F'0'                                                     08661
SAVE7LDM DC    F'0'                                                     08662
SAVE7RG1 DC    F'0'                                                     08663
SAVE7RG2 DC    F'0'                                                     08664
SAVE7RG3 DC    F'0'                                                     08665
SAVE7RG4 DC    F'0'                                                     08666
SAVE7RG5 DC    F'0'                                                     08667
SAVE13LC DC    3F'0'                                                    08668
* ---------- *           Save V(CON)s to DCBs                           08669
SYSPRDCB DC    F'0'                                                     08670
LABLDDCB DC    F'0'                                                     08671
LABADDCB DC    F'0'                                                     08672
* ---------- *                                                          08673
         DC    C' '          BLANK FOR CLEARING AREA                    08674
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                 08675
INASCI   DC    CL80' '       Read labels from here.                     08676
INAREA   DC    CL80' '       Read labels from here.                     08677
         DC    CL40' '       Padding for possible overflow.             08678
* ---------- *                                                          08679
**** ----------------------------------->>>>  Passed area, below        08680
* --------------------------------------------------------- *           08681
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS          08682
PARMFLG1 DC    X'00'                                                    08683
PARMFLG2 DC    X'00'                                                    08684
PARMFLG3 DC    X'00'                                                    08685
PARMFLG4 DC    X'00'                                                    08686
PARMFLG5 DC    X'00'                                                    08687
PARMFLG6 DC    X'00'                                                    08688
PARMFLG7 DC    X'00'                                                    08689
PARMFLG8 DC    X'00'                                                    08690
PARMFLG9 DC    X'00'                                                    08691
PARMFLGA DC    X'00'                                                    08692
PARMFLLN EQU   *-PARMFLGS                                               08693
PARMCOPY DS    XL10           Copy of options before correction         08694
* --------------------------------------------------------- *           08695
**** ----- LABELCHK -------------------->>>>  Passed area, below        08696
*                                                                       08697
LCHKPASS DS    0H                                                       08698
*                                                                       08699
INAREAX  DC    CL80' '        Read labels into here.                    08700
         DC    CL10' '        Padding for possible overflow.            08701
* --------------------------------------------------------- *           08702
*                                                                       08703
*                                                                       08704
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL      08705
*              X'00'          DATA IS NOT A LABEL                       08706
*              X'01'          DATA IS A LABEL                           08707
*              X'02'          DATA IS AN ASCII LABEL                    08708
*                                                                       08709
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST              08710
*              X'01'          BECAUSE OF LABLDUMP DD MISSING            08711
*              X'02'          BECAUSE OF SYSIN    DD MISSING            08712
*              X'04'          BECAUSE OF LABADDIN DD MISSING            08713
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN               08714
*              X'01'          LABLDUMP DD IS OPEN                       08715
*              X'02'          SYSIN    DD IS OPEN                       08716
*              X'04'          LABADDIN DD IS OPEN                       08717
L80FLAG  DC    X'00'                                                    08718
*              X'01'          LAST DATA WAS 80 BYTE RECORD              08719
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN   08720
*              X'01'          HDR1 HAS BEEN SEEN                        08721
*              X'02'          HDR2 HAS BEEN SEEN                        08722
*              X'04'          VOL1 HAS BEEN SEEN                        08723
*              X'08'          HDR1 IS FROM AN INITTED TAPE              08724
*              X'10'          EOF1 HAS BEEN SEEN                        08725
*              X'20'          EOF2 HAS BEEN SEEN                        08726
*              X'40'          EOV1 HAS BEEN SEEN                        08727
*              X'80'          EOV2 HAS BEEN SEEN                        08728
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                   08729
EXASCFLG DC    X'00'          External Label is ASCII if X'01'          08730
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK  08731
LABADFLG DC    X'00'          If X'01' then close LABADDIN file         08732
CLOSMFLG DC    X'00'          If X'01' then close all open files        08733
* --------------------------                                            08734
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP    08735
*              X'01'          WE ARE IN A HDR GROUP                     08736
*              X'02'          WE ARE IN A EOF GROUP                     08737
*              X'04'          WE ARE IN A EOV GROUP                     08738
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND   08739
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL   08740
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES      08741
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII    08742
* ---------- *                                                          08743
* --------------------------------------------------------- *           08744
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE       08745
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL          08746
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME          08747
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL          08748
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE            08749
VOLCHG   DC    C'      '                                                08750
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS       08751
VOLASC   DC    C'      '     ASCII VOLUME                               08752
LCHKPASE EQU   *-LCHKPASS                                               08753
**** ----- LABELCHK -------------------->>>>  Passed area, above        08754
** ---------------------------------------------------------------- **  08755
TRTDSECT DSECT                 Displacements must match TRTCSECT.       08756
TRTBL0   DS    256X                                                     08757
TRTBL1   DS    256X                                                     08758
TRTBL2   DS    256X                                                     08759
TRTE2A   DS    256X                                                     08760
TRTA2E   DS    256X                                                     08761
TRTASPRT DS    256X                                                     08762
** ---------------------------------------------------------------- **  08763
         END                                                            08764
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 03/13/05              08765
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'             08766
         GBLC  &LLEV                                                    08767
&LLEV    SETC  '1.1 '                                                   08768
         YREGS                                                          08769
         ENTRY PRINTLBL                                                 08770
PRINTLBL CSECT                                                          08771
         USING *,R15                                                    08772
         B     EYECATCH                                                 08773
         DC    C'--- '            MAKE EYECATCHER VISIBLE               08774
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'        08775
         DC    C' - '                                                   08776
         DC    C'LEVEL '                                                08777
SYSLEV   DC    C'&LLEV'                                                 08778
         DC    C' - '                                                   08779
SYSDAT   DC    C'&SYSDATE'                                              08780
         DC    C'  ',C'&SYSTIME ',C'--- '                               08781
         DC    C'Copyright (c) 2003 by Sam Golob '                      08782
         DC    C'--- '              MAKE EYECATCHER VISIBLE             08783
SAVEAREA DC    18F'0'                                                   08784
EYECATCH DS    0D                   ENSURE ALIGNMENT                    08785
         SAVE  (14,12)                                                  08786
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM    08787
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                  08788
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR         08789
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR        08790
         LR    R13,R1               NEW SAVE AREA ADDRESS               08791
         DROP  R15                                                      08792
* -----                             SET UP BASE REGISTERS               08793
         USING PRINTLBL,R12,R11,R10,R9                                  08794
         LR    R12,R15                                                  08795
         LA    R11,4095(,R12)                                           08796
         LA    R11,1(,R11)                                              08797
         LA    R10,4095(,R11)                                           08798
         LA    R10,1(,R10)                                              08799
         LA    R9,4095(,R10)                                            08800
         LA    R9,1(,R9)                                                08801
         LR    R1,R5                RESTORE REGISTER 1 INPUT            08802
* ----------------------------------------------------------------- *   08803
         ST    R1,PARMSAVE          Address of parm flags in caller     08804
         ST    R3,INARSAVE          Address of input area in caller     08805
* ----------------------------------------------------------------- *   08806
INITCONS DS    0H                    Initialize necessary quantities.   08807
         MVI   LINE-1,X'40'          Make sure the print line is blank. 08808
         MVC   LINE,LINE-1                                              08809
         L     R0,SYSPRINV           SYSPRINT DCB address in caller     08810
         ST    R0,SYSPRDCB             store for the program's use      08811
         L     R0,LABLDUMV           LABLDUMP DCB address in caller     08812
         ST    R0,LABLDDCB             store for the program's use      08813
         L     R0,LABADDIV           LABADDIN DCB address in caller     08814
         ST    R0,LABADDCB             store for the program's use      08815
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer   08816
         ST    R0,SAVTRTCS             store it for later use           08817
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.     08818
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.  08819
* ----------------------------------------------------------------- *   08820
WHATLBL  DS    0H                                                       08821
         CLC   EXTLBLIN(4),=C'VOL1'                                     08822
         BE    WHATLBLE                                                 08823
         CLC   EXTLBLIN(4),=C'HDR1'                                     08824
         BE    WHATLBLE                                                 08825
         CLC   EXTLBLIN(4),=C'EOF1'                                     08826
         BE    WHATLBLE                                                 08827
         CLC   EXTLBLIN(4),=C'EOV1'                                     08828
         BE    WHATLBLE                                                 08829
         CLC   EXTLBLIN(4),=C'HDR2'                                     08830
         BE    WHATLBLE                                                 08831
         CLC   EXTLBLIN(4),=C'EOF2'                                     08832
         BE    WHATLBLE                                                 08833
         CLC   EXTLBLIN(4),=C'EOV2'                                     08834
         BE    WHATLBLE                                                 08835
         CLC   EXTLBLIN(3),=C'UHL'                                      08836
         BE    WHATLBLE                                                 08837
         CLC   EXTLBLIN(3),=C'UTL'                                      08838
         BE    WHATLBLE                                                 08839
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                   08840
         BE    WHATLBLA                                                 08841
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                   08842
         BE    WHATLBLA                                                 08843
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                   08844
         BE    WHATLBLA                                                 08845
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                   08846
         BE    WHATLBLA                                                 08847
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                   08848
         BE    WHATLBLA                                                 08849
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                   08850
         BE    WHATLBLA                                                 08851
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                   08852
         BE    WHATLBLA                                                 08853
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                   08854
         BE    WHATLBLA                                                 08855
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                   08856
         BE    WHATLBLA                                                 08857
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                   08858
         BE    WHATLBLA                                                 08859
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                   08860
         BE    WHATLBLA                                                 08861
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                   08862
         BE    WHATLBLA                                                 08863
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                   08864
         BE    WHATLBLA                                                 08865
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                   08866
         BE    WHATLBLA                                                 08867
         B     NOPRTEXT                    Not a label format           08868
*                                                                       08869
WHATLBLE DS    0H                          EBCDIC Labels                08870
*                                          Go to appropriate routine    08871
         CLC   EXTLBLIN(4),=C'VOL1'                                     08872
         BE    PXTVOL1                                                  08873
         CLC   EXTLBLIN(4),=C'HDR1'                                     08874
         BE    PXT1PR                                                   08875
         CLC   EXTLBLIN(4),=C'EOF1'                                     08876
         BE    PXT1PR                                                   08877
         CLC   EXTLBLIN(4),=C'EOV1'                                     08878
         BE    PXT1PR                                                   08879
         CLC   EXTLBLIN(4),=C'HDR2'                                     08880
         BE    PXT2PR                                                   08881
         CLC   EXTLBLIN(4),=C'EOF2'                                     08882
         BE    PXT2PR                                                   08883
         CLC   EXTLBLIN(4),=C'EOV2'                                     08884
         BE    PXT2PR                                                   08885
         CLC   EXTLBLIN(3),=C'UHL'                                      08886
         BE    PXTUSE                                                   08887
         CLC   EXTLBLIN(3),=C'UTL'                                      08888
         BE    PXTUSE                                                   08889
         B     NOPRTEXT                    Not a label format           08890
WHATLBLA DS    0H                          ASCII  Labels                08891
*                                                                       08892
*        Common ASCII preparation routines......                        08893
*                                                                       08894
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation   08895
*                                                                       08896
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.     08897
         ST    R5,R5HXPRT              Save register.                   08898
         L     R5,SAVTRTCS             Point to translation table CSECT 08899
         USING TRTDSECT,R5                                              08900
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea      08901
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print    08902
         L     R5,R5HXPRT              Restore R5                       08903
         DROP  R5                                                       08904
* -- >                                                                  08905
*                                                                       08906
*        ASCII preparations done......                                  08907
*                                          Go to appropriate routine    08908
*                                                                       08909
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                   08910
         BE    PXTVOL1A                                                 08911
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                   08912
         BE    PXT1PRA                                                  08913
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                   08914
         BE    PXT1PRA                                                  08915
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                   08916
         BE    PXT1PRA                                                  08917
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                   08918
         BE    PXT2PRA                                                  08919
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                   08920
         BE    PXT2PRA                                                  08921
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                   08922
         BE    PXT2PRA                                                  08923
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                   08924
         BE    PXTUSEA                                                  08925
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                   08926
         BE    PXTUSEA                                                  08927
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                   08928
         BE    PXTUSEA                                                  08929
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                   08930
         BE    PXTUSEA                                                  08931
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                   08932
         BE    PXTUSEA                                                  08933
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                   08934
         BE    PXTUSEA                                                  08935
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                   08936
         BE    PXTUSEA                                                  08937
         B     NOPRTEXT                    Not a label format           08938
* ----------------------------------------------------------------- *   08939
*                                                                   *   08940
*   Various Label Printing Routines follow at this point.           *   08941
*                                                                   *   08942
* ----------------------------------------------------------------- *   08943
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label          08944
         MVI   LINE-1,C' '                                              08945
         MVC   LINE,LINE-1             CLEAR PRINT LINE                 08946
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS            08947
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL             08948
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS            08949
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION             08950
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND         08951
         ST    R6,SAVER6                                                08952
         L     R6,SYSPRDCB                                              08953
         PUT   (6),LINE                                                 08954
         L     R6,SAVER6                                                08955
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER        08956
         B     NOPRTEXT                                                 08957
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label          08958
         MVI   LINE-1,C' '                                              08959
         MVC   LINE,LINE-1             CLEAR PRINT LINE                 08960
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS            08961
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL             08962
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS            08963
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION             08964
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4    08965
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message       08966
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND         08967
         ST    R6,SAVER6                                                08968
         L     R6,SYSPRDCB                                              08969
         PUT   (6),LINE                                                 08970
         L     R6,SAVER6                                                08971
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER        08972
         B     NOPRTEXT                                                 08973
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label          08974
         ST    R3,SAVE3REG                                              08975
         LA    R3,EXTLBLIN                                              08976
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      08977
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT          08978
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     08979
         L     R3,SAVE3REG                                              08980
         B     NOPRTEXT                                                 08981
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label          08982
         ST    R3,SAVE3REG                                              08983
         LA    R3,EXTLBLWK             Point to label area to print     08984
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      08985
         BAL   R7,PRTXXX1              PRINT LABEL INFO                 08986
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     08987
         L     R3,SAVE3REG                                              08988
         B     NOPRTEXT                                                 08989
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label          08990
         ST    R3,SAVE3REG                                              08991
         LA    R3,EXTLBLIN             Point to label area to print     08992
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      08993
         BAL   R7,PRTXXX2              PRINT LABEL INFO                 08994
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     08995
         L     R3,SAVE3REG                                              08996
         B     NOPRTEXT                                                 08997
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label          08998
         ST    R3,SAVE3REG                                              08999
         LA    R3,EXTLBLWK             Point to label area to print     09000
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      09001
         BAL   R7,PRTAXX2              PRINT LABEL INFO                 09002
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     09003
         L     R3,SAVE3REG                                              09004
         B     NOPRTEXT                                                 09005
PXTUSE   DS    0H                      Print EBCDIC USER Label          09006
         ST    R3,SAVE3REG                                              09007
         LA    R3,EXTLBLIN             Point to label area to print     09008
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      09009
         BAL   R7,PRTUSER              PRINT LABEL INFO                 09010
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     09011
         L     R3,SAVE3REG                                              09012
         B     NOPRTEXT                                                 09013
PXTUSEA  DS    0H                      Print ASCII  USER Label          09014
         ST    R3,SAVE3REG                                              09015
         LA    R3,EXTLBLWK             Point to label area to print     09016
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER      09017
         BAL   R7,PRTUSER              PRINT LABEL INFO                 09018
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER     09019
         L     R3,SAVE3REG                                              09020
         B     NOPRTEXT                                                 09021
* ----------------------------------------------------------------- *   09022
NOPRTEXT DS    0H             Don't print external label on report      09023
* ----------------------------------------------------------------- *   09024
THEEND   DS    0H                                                       09025
         L     R13,4(,R13)                                              09026
         MVC   16(4,R13),=F'0'          Return code 0     in R15        09027
* - - - - - - - - - - - - - Pass addresses of our passed areas back.    09028
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1   09029
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3   09030
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *     09031
         LM    R14,R12,12(R13)                                          09032
         BR    R14                                                      09033
         EJECT                                                          09034
* --------------------------------------------------------- *           09035
*    BAL REGISTER IS R7.                                                09036
* --------------------------------------------------------- *           09037
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII    09038
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         09039
         MVI   LINE-1,C' '                                              09040
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          09041
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG           09042
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS              09043
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL               09044
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS              09045
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                       09046
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS              09047
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER            09048
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS              09049
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER             09050
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS              09051
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS             09052
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS              09053
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS        09054
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS              09055
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS             09056
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS              09057
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS             09058
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE               09059
         ST    R6,SAVER6                                                09060
         L     R6,SYSPRDCB                                              09061
         PUT   (6),LINE                                                 09062
         L     R6,SAVER6                                                09063
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 09064
PRTXXX1R BR    R7                                                       09065
* --------------------------------------------------------- *           09066
*    BAL REGISTER IS R7.                                                09067
* --------------------------------------------------------- *           09068
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC       09069
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         09070
         MVI   LINE-1,C' '                                              09071
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          09072
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG           09073
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS              09074
         MVC   XXX2RFM(1),4(R3)      RECFM                              09075
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                    09076
         MVC   XXX2RFM+2(1),36(R3)   Control Character                  09077
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS              09078
         CLC   =C'00000',5(R3)       Is Block Length 00000?             09079
         BNE   PRX2NLBI              No. No LBI. Print what's here.     09080
         CLI   70(R3),X'40'          Is first LBI field a blank?        09081
         BNE   PRX2NLBI              No LBI field either. Print zeros.  09082
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display  09083
         B     PRX2LBI               And not the old blksize field.     09084
PRX2NLBI DS    0H                                                       09085
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                       09086
PRX2LBI  DS    0H                                                       09087
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS              09088
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                      09089
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS              09090
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                       09091
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS              09092
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                     09093
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS              09094
         CLI   34(R3),C'P'           INDICATE IDRC?                     09095
         BNE   PRX2NOI               NO. SAY NO                         09096
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                  09097
         B     PRX2MOV                                                  09098
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                       09099
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE               09100
         ST    R6,SAVER6                                                09101
         L     R6,SYSPRDCB                                              09102
         PUT   (6),LINE                                                 09103
         L     R6,SAVER6                                                09104
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 09105
PRTXXX2R BR    R7                                                       09106
* --------------------------------------------------------- *           09107
*    BAL REGISTER IS R7.                                                09108
* --------------------------------------------------------- *           09109
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII        09110
*                                                                       09111
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.   09112
*                                                                       09113
         MVI   LINE-1,C' '                                              09114
         MVC   LINE,LINE-1           CLEAR PRINT LINE                   09115
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE         09116
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS              09117
         MVC   AXX2RFM(1),4(R3)      RECFM                              09118
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                    09119
         MVC   AXX2RFM+2(1),36(R3)   Control Character                  09120
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS              09121
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                       09122
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS              09123
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                      09124
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS              09125
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                       09126
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS              09127
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                     09128
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS              09129
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                  09130
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE            09131
         ST    R6,SAVER6                                                09132
         L     R6,SYSPRDCB                                              09133
         PUT   (6),LINE                                                 09134
         L     R6,SAVER6                                                09135
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL             09136
PRTAXX2R BR    R7                                                       09137
* --------------------------------------------------------- *           09138
*    BAL REGISTER IS R7.                                                09139
* --------------------------------------------------------- *           09140
PRTUSER  DS    0H                                                       09141
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                         09142
         MVI   LINE-1,C' '                                              09143
         MVC   LINE,LINE-1    CLEAR PRINT LINE                          09144
         MVI   USERLBL-1,C' '                                           09145
         MVC   USERLBL(133),USERLBL-1                                   09146
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE         09147
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE               09148
         ST    R6,SAVER6                                                09149
         L     R6,SYSPRDCB                                              09150
         PUT   (6),LINE                                                 09151
         L     R6,SAVER6                                                09152
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                 09153
PRTUSERR BR    R7                                                       09154
* ----------------------------------------------------------------- *   09155
* ---               C  O  N  S  T  A  N  T  S                   --- *   09156
* ----------------------------------------------------------------- *   09157
         LTORG                                                          09158
FF       EQU   X'FF'                                                    09159
LABELITH DC    CL80'----ENDOFLABELHEADER '                              09160
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                           09161
LABELITR DC    CL80'----ENDOFLABELTRAILER'                              09162
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                           09163
         DC    C'0'                                                     09164
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                   09165
         DC    X'30'                                                    09166
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1             09167
* --------------------------------------------------------- *           09168
         DC    C' '                                                     09169
LINE     DC    CL133' '                                                 09170
* ---------------------  Register Save Areas  ---------------->>>       09171
SYSPRINV DC    V(SYSPRINT)                                              09172
LABLDUMV DC    V(LABLDUMP)                                              09173
LABADDIV DC    V(LABADDIN)                                              09174
SAVTRTCS DC    F'0'                                                     09175
SYSPRDCB DC    F'0'                                                     09176
LABLDDCB DC    F'0'                                                     09177
LABADDCB DC    F'0'                                                     09178
SAVER6   DC    F'0'                                                     09179
SAVE3REG DC    F'0'                                                     09180
SAVE7BA1 DC    F'0'                                                     09181
SAVE7REG DC    F'0'                                                     09182
SAVE7BAL DC    F'0'                                                     09183
SAVE4LDM DC    F'0'                                                     09184
SAVE5LDM DC    F'0'                                                     09185
R5HXPRT  DC    F'0'                                                     09186
SAVE7LDM DC    F'0'                                                     09187
SAVE7RG1 DC    F'0'                                                     09188
SAVE7RG2 DC    F'0'                                                     09189
SAVE7RG3 DC    F'0'                                                     09190
SAVE7RG4 DC    F'0'                                                     09191
* ----------------------------------------------------------------- *   09192
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW   09193
VOL1LBL  DC    C'0VOL1 LABEL HAS BEEN DETECTED - VOLSER = '             09194
VOL1SER  DC    C'      '                                                09195
VOL1OWNT DC    C'     OWNER = '                                         09196
VOL1OWNR DC    C'          '                                            09197
VOL1OWNE DC    C'    '                                                  09198
VOL1BLNK DC    59C' '                                                   09199
         DC    C' '                                                     09200
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW   09201
USERLBL  DC    81C' '                                                   09202
         DC    52C' '                                                   09203
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW   09204
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                 09205
XXX1VOL  DC    C'      '                                                09206
XXX1DSNL DC    C' DSN='                                                 09207
XXX1DSN  DC    C'                 '                                     09208
XXX1DSQL DC    C' DS SEQ #: '                                           09209
XXX1DSQ  DC    C'    '                                                  09210
XXX1VSQL DC    C' VOL SEQ #: '                                          09211
XXX1VSQ  DC    C'    '                                                  09212
XXX1BLCL DC    C' BLK CNT: '                                            09213
XXX1BLCH DC    C'    '                                                  09214
XXX1BLC  DC    C'      '                                                09215
XXX1CRDL DC    C' CRDATE: '                                             09216
XXX1CRD  DC    C'      '                                                09217
XXX1EXDL DC    C' EXDATE: '                                             09218
XXX1EXD  DC    C'      '                                                09219
XXX1BLNK DC    30C' '                                                   09220
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW   09221
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                   09222
XXX2RFM  DC    C' '                                                     09223
XXX2BKLL DC    C'    BLOCK LENGTH: '                                    09224
XXX2BKLE DS    0CL10                                                    09225
XXX2BKL  DC    C'     '                                                 09226
         DC    C'     '                                                 09227
XXX2RCLL DC    C'   RECORD LENGTH: '                                    09228
XXX2RCL  DC    C'     '                                                 09229
XXX2TDNL DC    C'  TAPE DEN: '                                          09230
XXX2TDN  DC    C' '                                                     09231
XXX2JSTL DC    C'   JOB/JOB STEP: '                                     09232
XXX2JST  DC    C'                 '                                     09233
XXX2IDRL DC    C'   IDRC? '                                             09234
XXX2IDR  DC    C'   '                                                   09235
XXX2BLNK DC    8C' '                                                    09236
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW   09237
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                   09238
AXX2RFM  DC    C' '                                                     09239
AXX2BKLL DC    C'    BLOCK LENGTH: '                                    09240
AXX2BKLE DS    0CL10                                                    09241
AXX2BKL  DC    C'     '                                                 09242
         DC    C'     '                                                 09243
AXX2RCLL DC    C'   RECORD LENGTH: '                                    09244
AXX2RCL  DC    C'     '                                                 09245
AXX2TDNL DC    C'  TAPE DEN: '                                          09246
AXX2TDN  DC    C' '                                                     09247
AXX2JSTL DC    C'   JOB/JOB STEP: '                                     09248
AXX2JST  DC    C'                 '                                     09249
AXX2CCSL DC    C'   CCSID '                                             09250
AXX2CCS  DC    C'     '                                                 09251
AXX2BLNK DC    6C' '                                                    09252
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE   09253
* --------------------------------------------------------- *           09254
* ----------------------------------------------------------------- *   09255
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                         09256
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                     09257
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                09258
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA             * 09259
PARMSAVE DC    F'0'                                                     09260
USERSAVE DC    F'0'                                                     09261
INARSAVE DC    F'0'                                                     09262
** ---------------------------------------------------------------- **  09263
**** ----------------------------------->>>>  Passed area, below        09264
* --------------------------------------------------------- *           09265
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS          09266
PARMFLG1 DC    X'00'                                                    09267
PARMFLG2 DC    X'00'                                                    09268
PARMFLG3 DC    X'00'                                                    09269
PARMFLG4 DC    X'00'                                                    09270
PARMFLG5 DC    X'00'                                                    09271
PARMFLG6 DC    X'00'                                                    09272
PARMFLG7 DC    X'00'                                                    09273
PARMFLG8 DC    X'00'                                                    09274
PARMFLG9 DC    X'00'                                                    09275
PARMFLGA DC    X'00'                                                    09276
PARMFLLN EQU   *-PARMFLGS                                               09277
PARMCOPY DS    XL10           Copy of options before correction         09278
* --------------------------------------------------------- *           09279
TRTDSECT DSECT                 Displacements must match TRTCSECT.       09280
TRTBL0   DS    256X                                                     09281
TRTBL1   DS    256X                                                     09282
TRTBL2   DS    256X                                                     09283
TRTE2A   DS    256X                                                     09284
TRTA2E   DS    256X                                                     09285
TRTASPRT DS    256X                                                     09286
** ---------------------------------------------------------------- **  09287
         END                                                            09288
         TITLE 'FOOTAGE CALCULATION AS IF THE TAPE WERE 6250 BPI'       09289
         YREGS                                                          09290
*********************************************************************** 09291
*                                                                     * 09292
* NAME             FOOTAGE                                            * 09293
*                                                                     * 09294
* PURPOSE          Footage calculations on modern 3590 or 3490        * 09295
*                  cartridges don't mean much.  In order to give      * 09296
*                  us a much better idea of the true size of the      * 09297
*                  data on a tape, it would give us a better          * 09298
*                  picture to imagine that the data would reside      * 09299
*                  on a (very long) 6250 bpi tape reel.  Of course,   * 09300
*                  it might be too much data for an actual reel,      * 09301
*                  but we would get a good uniform picture of the     * 09302
*                  actual data size.                                  * 09303
*                                                                     * 09304
* FUNCTION         Calculate 6250 bpi footage for the last file       * 09305
*                  read, and accumulate total 6250 bpi footage        * 09306
*                  for the entire tape, up to the last file read.     * 09307
*                                                                     * 09308
* Calling FOOTAGE from COPYMODS -                                     * 09309
*                                                                     * 09310
*                  Register 1 passes the address of a workarea        * 09311
*                  within the COPYMODS program.  The FOOTWORK         * 09312
*                  DSECT describes the labels in this workarea.       * 09313
*                  The contents of the workarea contains all the      * 09314
*                  input information necessary for the FOOTAGE        * 09315
*                  routine.                                           * 09316
*                                                                     * 09317
*                  COPYMODS provides FOOTAGE with initial values,     * 09318
*                  in the workarea.  FOOTAGE uses these values,       * 09319
*                  and recalculates the footages (for the file, and   * 09320
*                  for the entire tape, up to here), based on block   * 09321
*                  sizes, etc. that were provided in the workarea.    * 09322
*                  FOOTAGE then changes the two footage measurement   * 09323
*                  values in the workarea, along with possibly other  * 09324
*                  workarea changes, and then returns control back    * 09325
*                  to COPYMODS.                                       * 09326
*                                                                     * 09327
* DESCRIPTION      FOOTAGE IS CALLED FROM THE COPYMODS READIN CODE    * 09328
*                  & IS PROVIDED WITH A WORK AREA.  THE FOOTAGE FOR   * 09329
*                  THE FILE (BASED ON BLKSIZE, NUMBER OF BLOCKS,      * 09330
*                  AND 6250 BPI TAPE DENSITY IS CALCULATED AND MOVED  * 09331
*                  INTO THE OUTPUT AREA.  TOTAL REEL LENGTH IS ALSO   * 09332
*                  CALCULATED AND MOVED INTO THE OUTPUT AREA.         * 09333
*                                                                     * 09334
* PARAMETERS       FOOTAGE IS PASSED THE ADDRESS OF A WORK AREA       * 09335
*                  WHICH CONTAINS INPUT DATA AND IS UPDATED BY        * 09336
*                  FOOTAGE.  THE WORK AREA INCLUDES -                 * 09337
*                                                                     * 09338
*                  TAPE LABEL TYPE INDICATOR (ALWAYS NON-LABELLED)    * 09339
*                  DENSITY CODE (ALWAYS 4)                            * 09340
*                  RECORD LENGTH                                      * 09341
*                  NUMBER OF RECORDS                                  * 09342
*                  NUMBER OF USER LABELS                              * 09343
*                  CUMULATIVE REEL COUNT   (UPDATED)                  * 09344
*                  FILE FOOTAGE IN EBCDIC  (UPDATED)                  * 09345
*                  REEL FOOTAGE IN EBCDIC  (UPDATED)                  * 09346
*                                                                     * 09347
* REGISTER USAGE   R0  - LINKAGE                                      * 09348
*                  R1  - LINKAGE                                      * 09349
*                  R2  - POINTER TO DENSITY CONSTANTS                 * 09350
*                  R3  - NOT USED                                     * 09351
*                  R4  - FOOTAGE CALCULATION WORK                     * 09352
*                  R5  - FOOTAGE CALCULATION WORK                     * 09353
*                  R6  - NOT USED                                     * 09354
*                  R7  - NOT USED                                     * 09355
*                  R8  - NOT USED                                     * 09356
*                  R9  - NOT USED                                     * 09357
*                  R10 - NOT USED                                     * 09358
*                  R11 - WORK AREA POINTER                            * 09359
*                  R12 - PROGRAM BASE                                 * 09360
*                  R13 - SAVE AREA                                    * 09361
*                  R14 - LINKAGE                                      * 09362
*                  R15 - LINKAGE                                      * 09363
*                                                                     * 09364
*********************************************************************** 09365
         TITLE 'ENTRY CODING'                                           09366
FOOTAGE  CSECT                                                          09367
         USING FOOTAGE,R15              DEFINE BASE REGISTER            09368
         B     JUMPID                   BRANCH AROUND ID                09369
         DC    AL1(28)                  IDENTIFIER LENGTH               09370
         DC    CL8'FOOTAGE'             CSECT NAME                      09371
         DC    CL1' '                   SPACER                          09372
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY                09373
         DC    CL1' '                   SPACER                          09374
         DC    CL8'&SYSTIME'            TIME OF ASSEMBLY                09375
         DC    CL1' '                   SPACER                          09376
JUMPID   DS    0H                                                       09377
         STM   R14,R12,12(R13)          SAVE REGISTERS                  09378
         LR    R12,R15                  LOAD BASE ADDRESS               09379
         DROP  R15                      DISCONTINUE R15 BASE            09380
         USING FOOTAGE,R12              DEFINE BASE REGISTERS           09381
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR          09382
         BAL   R13,JUMPSAVE             LOAD SAVEAREA ADDR              09383
         DC    18F'0'                   SAVE AREA                       09384
JUMPSAVE DS    0H                                                       09385
         ST    R15,4(,R13)              CHAIN SAVE AREAS                09386
         ST    R13,8(,R15)                                              09387
         LR    R11,R1                   LOAD WORK AREA ADDRESS          09388
         USING FOOTWORK,R11             WORK AREA ADDRESSABILITY        09389
         B     CALC6250        ONLY CALCULATE AS 6250 FOR ALL TAPES.    09390
         TITLE 'FOOTAGE CALCULATIONS FOR 6250 BPI, GCR'                 09391
*********************************************************************** 09392
*                                                                     * 09393
*        FOOTAGE CALCULATIONS FOR 6250 BPI, GCR                       * 09394
*                                                                     * 09395
*        FULL REEL COUNT = 260,409,600                                * 09396
*                                                                     * 09397
*********************************************************************** 09398
         SPACE                                                          09399
CALC6250 SR    R4,R4                   CLEAR FOR DIVIDE                 09400
         L     R5,BLKSZE               LOAD BLOCKSIZE                   09401
         D     R4,=F'1106'             DIVIDE BY 1106                   09402
         LR    R1,R4                   SAVE REMAINDER                   09403
         M     R4,=F'1600'             FOR EVERY 1106, 1580 + 20 RESYNC 09404
         SR    R0,R0                                                    09405
         D     R0,=F'7'                7 BYTE GROUPS                    09406
         LA    R1,1(R1)                ADD 1 TO QUOTIENT                09407
         MH    R1,=H'10'               FOR EVERY 7, YOU GET 10          09408
         AR    R5,R1                   ADD IT TO TOTAL                  09409
         A     R5,=F'2898'             ADD 2898 FOR IBG AND CONTROL     09410
         M     R4,NUMBLKS              MULTIPLY BY NUMBER OF BLOCKS     09411
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS         09412
         BNE   SAVE6250                                                 09413
         L     R1,USERLBLS             LOAD USER LABEL COUNT            09414
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS        09415
         MH    R1,=H'6036'             MULTIPLY BY 6036                 09416
         AR    R5,R1                   ADD TO TOTAL                     09417
         CLC   =H'1',FILENO            TEST FOR FIRST FILE              09418
         BNE   SAVE6250                                                 09419
         A     R5,=F'3018'             ADD 3018 FOR VOL LABEL           09420
SAVE6250 LA    R2,DATA6250             ADDRESS OF 6250 BPI CONSTANTS    09421
         TITLE 'CONVERT THE BIT COUNTS TO FEET AND EDIT'                09422
*********************************************************************** 09423
*                                                                     * 09424
*        CONVERT THE BIT COUNTS TO FEET AND EDIT                      * 09425
*                                                                     * 09426
*********************************************************************** 09427
         SPACE                                                          09428
FOOTEDIT LR    R1,R5                   COPY                             09429
         A     R1,CUMTOTAL             ADD PREVIOUS TOTAL               09430
         ST    R1,CUMTOTAL             STORE NEW TOTAL                  09431
         A     R5,0(,R2)               ROUND OFF                        09432
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12            09433
         CVD   R5,PACKDEC              CONVERT TO DECIMAL               09434
         MVC   FILEFT,=X'40402020202021204B20'  MOVE IN MASK            09435
         ED    FILEFT,PACKDEC+4        EDIT IT                          09436
         LR    R5,R1                   COPY CUMULATIVE TOTAL            09437
         SR    R4,R4                                                    09438
         A     R5,0(,R2)               ROUND OFF                        09439
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12            09440
         CVD   R5,PACKDEC              CONVERT TO DECIMAL               09441
         MVC   REELFT,=X'40402020202021204B20'  MOVE IN MASK            09442
         ED    REELFT,PACKDEC+4                                         09443
         DROP  R11                                                      09444
FOOTRTRN L     R13,4(,R13)              RESTORE OLD SAVEAREA            09445
         MVC   16(4,R13),=F'0'          RETURN CODE 0     IN R15        09446
         LM    R14,R12,12(R13)                                          09447
         BR    R14                      RETURN                          09448
         TITLE 'DATA AREAS'                                             09449
*********************************************************************** 09450
*                                                                     * 09451
*        DATA AREAS                                                   * 09452
*                                                                     * 09453
*********************************************************************** 09454
         SPACE                                                          09455
         LTORG                                                          09456
         SPACE                                                          09457
DATA6250 DC    F'5425'                                                  09458
         DC    F'10850'                9042/10*12 (BITS PER FOOT/10)    09459
PACKDEC  DS    D                                                        09460
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                   09461
*   THIS DSECT MUST MATCH THE LABELTYP WORK AREA IN COPYMODS.           09462
FOOTWORK DSECT                                                          09463
LABELTYP DS    C                       LABEL TYPE                       09464
DENSITY  DS    C                       DENSITY CODE                     09465
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY   09466
BLKSZE   DS    F                       BLOCK SIZE IN BINARY             09467
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY       09468
USERLBLS DS    F                       USER LABELS IN BINARY            09469
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL            09470
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC           09471
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC           09472
*--------END OF FOOTAGE ROUTINE PARAMETERS                              09473
         END                                                            09474
