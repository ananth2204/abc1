*          DATA SET CBT990     AT LEVEL 071 AS OF 11/04/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                      Revised by Sam Golob.               **           00009
**                                                          **           00010
**                                                          **           00011
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00012
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00013
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00014
**                                                          **           00015
**     This has been revised, with the many new functions   **           00016
**     that have been added to COPYMODS.  Besides copying   **           00017
**     tapes, COPYMODS can read and measure tapes, as well  **           00018
**     as altering the copied tapes in many ways, such as   **           00019
**     stripping the labels or leading tape marks off.      **           00020
**     The VOLSER and OWNER can be altered in the copied    **           00021
**     tapes, and all labels can also be altered, through   **           00022
**     a process of dumping the labels to a FB-80 file      **           00023
**     (LABLDUMP option), editing the labels, stripping     **           00024
**     the labels in a copy operation (STRIP option), and   **           00025
**     splicing all the labels back in another copy         **           00026
**     operation (LABADDIN option).  COPYMODS can also      **           00027
**     INIT tapes, as many as 16 at a time.  No input tape  **           00028
**     is needed for an INIT operation (INITVOLS option).   **           00029
**                                                          **           00030
**     The different COPYMODS parms or options can be used  **           00031
**     in combination with each other, as long as they      **           00032
**     don't contradict each other.  In certain cases, the  **           00033
**     use of one option will cause the automatic turn-off  **           00034
**     of one or more other options that contradict with    **           00035
**     it.  This "adjustment" is done by the COPYMODS       **           00036
**     program just after it receives the options settings  **           00037
**     back from the PARMCHEK program.  For example, if     **           00038
**     both LABLDUMP and LABADDIN (which contradict each    **           00039
**     other) are set, COPYMODS will make a judgment that   **           00040
**     LABADDIN takes precedence, so it will turn off both  **           00041
**     the LABLDUMP and READ (read only) options.  On the   **           00042
**     other hand, the STRIP and LABLDUMP options do not    **           00043
**     contradict each other.  So in that case, when STRIP  **           00044
**     and LABLDUMP are both set, COPYMODS will dump all    **           00045
**     the labels from the input tape to the LABLDUMP file, **           00046
**     while at the same time, it will strip them from the  **           00047
**     tape copies.  To get the exact effect you want from  **           00048
**     a COPYMODS run, just be very careful to code the     **           00049
**     correct combination of options.  Look at the OPTIONS **           00050
**     report before you mount the tapes.  (The OPTIONS     **           00051
**     report in //SYSPRINT will be complete before the     **           00052
**     tapes are mounted.)                                  **           00053
**                                                          **           00054
**     Up to 132 bytes of the beginning n records of each   **           00055
**     tape file can be dumped in Hex, similarly to the     **           00056
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **           00057
**     tion of the printables in this hex dump can be       **
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **
**     are COPYMODS PARM or SYSIN keywords also.            **
**                                                          **
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **
**     has been added.  COPYMODS can init ASCII tapes       **
**     with the INASC3 and INASC4 keywords.  Additionally,  **
**     the other functions of COPYMODS such as LABLDUMP,    **
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **
**     option with the ASCII keyword allows you to print    **
**     tape records in hex, with an ASCII interpretation    **
**     of the printables.  EOV2EOF works for ASCII tapes.   **
**                                                          **
**     See the "New Features" section below for some more   **           00059
**     details.  See the #MANUAL member of the install pds  **           00060
**     (CBT Tape File 229) for even more details.           **           00061
**                                                          **           00062
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **           00063
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00064
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00065
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00066
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00067
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00068
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00069
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00070
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00071
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00072
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00073
**    PARTICULAR OUTPUT TAPE.                               **           00074
**                                                          **           00075
**  COPYMODS has some optional DD's which will be used      **           00076
**    if they are present.  These following DD's are used   **           00077
**    by the PARMCHEK program, when COPYMODS is executed.   **           00078
**                                                          **           00079
**  //SYSIN    - Extra space to enter PARM keywords.        **           00080
**               Also, the only place to enter the          **           00081
**               "quantity" keywords, which start in        **           00082
**               column 1 of a SYSIN card.                  **           00083
**                                                          **           00084
**         OUTVOLALL=volser      (up to 6 characters)       **           00085
**         TAPEOWNER=owner name  (up to 10 characters)      **           00086
**         FILELIMIT=nnn         (numeric)                  **           00087
**         LABELIMIT=nnn         (numeric)                  **           00088
**         PRINTRCDS=nnn         (numeric)                  **           00089
**                                                          **           00090
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00091
**               program.  LRECL=133,RECFM=FBA.             **           00092
**                                                          **           00093
**    In addition, the COPYMODS program itself has some     **           00094
**    extra DD's, which are required if the appropriate     **           00095
**    options are set:                                      **           00096
**                                                          **           00097
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00098
**               receive the images of all tape labels      **           00099
**               read, together with some control cards     **           00100
**               that COPYMODS generates.  This DD name     **           00101
**               is necessary if the LABLDUMP option is     **           00102
**               in effect.                                 **           00103
**                                                          **           00104
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00105
**               contains the set of labels to be spliced   **           00106
**               into an NL tape to create an SL tape.      **           00107
**               This DD name is necessary if the LABADDIN  **           00108
**               option of COPYMODS is in effect.  Usually  **           00109
**               the LABADDIN file is a previous result of  **           00110
**               a LABLDUMP operation, or it is an altered  **           00111
**               or edited version of a previously created  **           00112
**               LABLDUMP file.                             **           00113
**                                                          **           00114
**  This program has to be assembled with PARM=BATCH in     **           00115
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00116
**    program has to be included in the assembly, because   **           00117
**    PARMCHEK has to be fitted to the current level of     **           00118
**    the COPYMODS program.                                 **           00119
**                                                          **           00120
**************************************************************           00121
**                                                          **           00122
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00123
**                                                          **           00124
**  //IN       -  Points to the Input Tape.  Only not       **           00125
**                required in a tape init operation, if     **           00126
**                the INITVOLS option is in effect.         **           00127
**                Otherwise, //IN is always required.       **           00128
**                                                          **           00129
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00130
**  //OUT16       These are for the output tapes.  These    **           00131
**                are not required if the READ (readonly)   **           00132
**                option is in effect.  Any one of these    **           00133
**                16 possible DD names may be coded, even   **           00134
**                if some numbers have been skipped.  For   **           00135
**                instance, if you have one output tape,    **           00136
**                it may be defined by //OUT13.  It is      **           00137
**                not necessary to code //OUT1.             **           00138
**                                                          **           00139
**  //SYSPRINT  - The output dataset to contain all the     **           00140
**                COPYMODS operation information that was   **           00141
**                called for by the various options set,    **           00142
**                including the OPTIONS display itself.     **           00143
**                This dataset should be LRECL=133,         **           00144
**                RECFM=FBA.                                **           00145
**                                                          **           00146
**************************************************************           00147
**                                                          **           00148
**  PROGRAM STRUCTURE:                                      **           00149
**                                                          **           00150
**  This program is no longer a single CSECT as it was in   **           00151
**    the old days.  There are now the following CSECTs,    **           00152
**    which should all be assembled together:               **           00153
**                                                          **           00154
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00155
**                                                          **           00156
**   COPYMODS - The main processing module, which contains  **           00157
**              most of the tape copy/reading processing.   **           00158
**                                                          **           00159
**   TRTCSECT - The translate tables for Hex printing of    **           00160
**              tape records.                               **           00161
**                                                          **           00162
**   COPYMOPT - The separate routine which reads the PARM   **           00163
**              bits that have been set, and which prints   **           00164
**              a report in SYSPRINT showing the options    **           00165
**              that are in effect.                         **           00166
**                                                          **           00167
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00168
**              done here.  PARM bits are passed back to    **           00169
**              COPYMODS in R1, the User Area is passed     **           00170
**              back to COPYMODS in R2.                     **           00171
**                                                          **           00172
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00173
**              program, this table contains all the option **           00174
**              bit meanings and their default settings.    **           00175
**                                                          **           00176
**   LABELCHK - Now a separate CSECT to check whether a     **           00177
**              record read by COPYMODS is part of a set    **           00178
**              of label records or not.                    **           00179
**                                                          **           00180
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00181
**  but they must be coordinated, and at the same level, so **           00182
**  to be safe, they should always be assembled together.   **           00183
**  The LABELCHK program has the same status.  It must be   **           00184
**  assembled together with the COPYMODS program.           **           00185
**                                                          **           00186
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00187
**                                                          **           00188
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00189
**  ------- ------- -- ------- -----                        **           00190
**                                                          **           00191
**  COPYMODS is the first program to get control.  The      **           00192
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00193
**  and the entry locations are stored in fullwords for     **           00194
**  later use.                                              **           00195
**                                                          **           00196
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00197
**  if that ddname is present.  If //PARMREPT is present,   **           00198
**  it is also used by the PARMCHEK program.                **           00199
**                                                          **           00200
**  After PARMCHEK has returned all parm bit settings to    **           00201
**  COPYMODS and all user-quantities, the settings are      **           00202
**  examined by COPYMODS and inconsistent settings are      **           00203
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00204
**  has to be turned off, because only one of these can be  **           00205
**  done in one run.  These inconsistencies are all fixed,  **           00206
**  and then COPYMODS processing starts.                    **           00207
**                                                          **           00208
**  COPYMOPT is called to display all the options that have **           00209
**  been set, if the OPTION parm has been set.  This is     **           00210
**  done to //SYSPRINT.  If any adjustments of options have **           00211
**  been made, you can see the final result in the SYSPRINT **           00212
**  report that has been produced by COPYMOPT.              **           00213
**                                                          **           00214
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **
**  and opened again by COPYMODS.                           **
**                                                          **
**  A significant note is, that the PARMREPT contains the   **           00215
**  options as they have been set by the PARMCHEK program,  **           00216
**  with no alteration.  The COPYMOPT call, which produces  **           00217
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00218
**  adjustments for inconsistent parm settings has been     **           00219
**  made by COPYMODS, so you can see the effect of those    **           00220
**  adjustments by comparing these two reports against      **           00221
**  each other.                                             **           00222
**                                                          **           00223
**  After that, COPYMODS does its things, depending on the  **           00224
**  options that have been set.  Most of the processing is  **           00225
**  done in the COPYMODS csect, except for the HEXPRT       **           00226
**  option, where the translation tables are in the         **           00227
**  TRTCSECT csect.                                         **           00228
**                                                          **           00229
**  The LABELCHK program is called whenever an 80-byte      **           00230
**  record is read, to see whether that record is part of   **           00231
**  a set of tape labels.                                   **           00232
**                                                          **           00233
**************************************************************           00234
**                                                          **           00235
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00236
**                                                          **           00237
**                                                          **           00238
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00239
**                                                          **           00240
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00241
**                                                          **           00242
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00243
**       BE CORRECTLY COPIED.                               **           00244
**                                                          **           00245
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00246
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00247
**       FOUND ON THE INPUT TAPE.                           **           00248
**                                                          **           00249
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00250
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00251
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00252
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00253
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00254
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00255
**       MAIN SOURCE CODE.                                  **           00256
**                                                          **           00257
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00258
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00259
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00260
**       INVOKE THIS ACTION.                                **           00261
**                                                          **           00262
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00263
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00264
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00265
**                                                          **           00266
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00267
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00268
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00269
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00270
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00271
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00272
**                                                          **           00273
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00274
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00275
**                                                          **           00276
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00277
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00278
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00279
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00280
**       SERVICE.                                           **           00281
**                                                          **           00282
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00283
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00284
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00285
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00286
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00287
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00288
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00289
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00290
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00291
**                                                          **           00292
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00293
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00294
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00295
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00296
**                                                          **           00297
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00298
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00299
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00300
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00301
**                                                          **           00302
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00303
**       TAPEOWNER=xxxxxxxxxx                               **           00304
**       FILELIMIT=nnnn                                     **           00305
**       LABELIMIT=nnnn                                     **           00306
**       PRINTRCDS=nnnn                                     **           00307
**         or                                               **           00308
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00309
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00310
**                                                          **           00311
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00312
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00313
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00314
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00315
**                                                          **           00316
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00317
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00318
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00319
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00320
**       IN THE EXTERNAL LABEL DATASET.                     **           00321
**                                                          **           00322
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00323
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00324
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00325
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00326
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00327
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00328
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00329
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00330
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00331
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00332
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00333
**                                                          **           00334
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00335
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00336
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00337
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00338
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00339
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00340
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00341
**       DATA FILE HAS BEEN WRITTEN.                        **           00342
**                                                          **           00343
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00344
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00345
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00346
**       EXTERNAL LABEL DATASET.                            **           00347
**                                                          **           00348
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00349
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00350
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00351
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00352
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00353
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00354
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00355
**       THE HDR2.                                          **           00356
**                                                          **           00357
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00358
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00359
**                                                          **           00360
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00361
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00362
**       IN A SYSIN CARD.                                   **           00363
**                                                          **           00364
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00365
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00366
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00367
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00368
**       INTERPRETED AS NL.                                 **           00369
**                                                          **           00370
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00371
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00372
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00373
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00374
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00375
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00376
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00377
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00378
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00379
**       BYTE TOTALS COMING FROM DATA FILES.                **           00380
**                                                          **           00381
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00382
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00383
**       TO PRINT THEM.)                                    **           00384
**                                                          **           00385
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00386
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00387
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00388
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00389
**                                                          **           00390
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00391
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00392
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00393
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00394
**       DATA BLOCKS ON THE TAPE.                           **           00395
**                                                          **           00396
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00397
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00398
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00399
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00400
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00401
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00402
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00403
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00404
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00405
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00406
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00407
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00408
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00409
**       INPUT TAPE.                                        **           00410
**                                                          **           00411
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00412
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00413
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00414
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00415
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00416
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00417
**                                                          **           00418
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00419
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00420
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00421
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00422
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00423
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00424
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00425
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00426
**                                                          **           00427
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00428
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00429
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00430
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00431
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00432
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00433
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00434
**                                                          **           00435
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00436
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00437
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00438
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00439
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00440
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00441
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00442
**                                                          **           00443
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **
**                                                          **
**************************************************************           00444
         EJECT                                                           00445
**************************************************************           00446
**  CHANGE LOG:                                             **           00447
**                                                          **           00448
** LEVEL 003                                                **           00449
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00450
**                                                          **           00451
** LEVEL 004                                                **           00452
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00453
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00454
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00455
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00456
**             COPYING FILES.                     SBG 03/00 **           00457
**                                                          **           00458
** LEVEL 005                                                **           00459
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00460
**             R12,R11.                           SBG 03/00 **           00461
**                                                          **           00462
** LEVEL 006                                                **           00463
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00464
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00465
**             OUT16.                             SBG 03/00 **           00466
**                                                          **           00467
** LEVEL 007 AND 008                                        **           00468
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00469
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00470
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00471
**                                                          **           00472
** LEVEL 009                                                **           00473
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00474
**                                                          **           00475
** LEVEL 010                                                **           00476
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00477
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00478
**                                                          **           00479
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00480
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00481
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00482
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00483
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00484
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00485
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00486
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00487
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00488
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00489
**                                                          **           00490
** LEVEL 011                                                **           00491
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00492
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00493
**             ONE TAPEMARK.                      SBG 03/00 **           00494
**                                                SBG 03/00 **           00495
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00496
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00497
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00498
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00499
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00500
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00501
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00502
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00503
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00504
**                                                          **           00505
** LEVEL 012                                                **           00506
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00507
**             HAVING ONLY ONE TAPE MARK AFTER              **           00508
**             THEM.                                        **           00509
**                                                          **           00510
** LEVEL 013                                                **           00511
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00512
**             LABEL TYPES, AND THE SETTING OF              **           00513
**             FLAGS TO INDICATE EACH TYPE.                 **           00514
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00515
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00516
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00517
**             EASY PRINTING OF LABEL CONTENTS,             **           00518
**             BUT NO EXTRA PRINTING IS DONE AT             **           00519
**             THIS LEVEL.                                  **           00520
**                                                          **           00521
** LEVEL 014                                                **           00522
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00523
**             PARM SCANNER THAT IS EASY TO                 **           00524
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00525
**             FOR THE PARMS.  ADDED SUPPORT,               **           00526
**             VIA THE LBLINFO PARM, TO PRINT               **           00527
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00528
**             EOV2 LABEL INFORMATION, IF IT IS             **           00529
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00530
**             IF THE INPUT TAPE IS SL.                     **           00531
**                                                          **           00532
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00533
**             SEE LABEL PARMTABL.                          **           00534
**                                                          **           00535
** LEVEL 015                                                **           00536
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00537
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00538
**             THE ABILITY TO TURN IT ON. INCREASED         **           00539
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00540
**             BYTE.                                        **           00541
**                                                          **           00542
** LEVEL 016                                                **           00543
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00544
**             TO SET ANY PARM SETTING AS A                 **           00545
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00546
**             ENTRY THAT IS LATER IN THE TABLE,            **           00547
**             WILL OVERRIDE A SETTING FOR A                **           00548
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00549
**             TABLE.  SETTING A PARM EXPLICITLY            **           00550
**             IN THE JCL, WILL OVERRIDE ANY                **           00551
**             DEFAULT SETTING FOR THAT PARM.               **           00552
**                                                          **           00553
** LEVEL 017                                                **           00554
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00555
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00556
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00557
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00558
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00559
**             OF THIS IS CODED IN PARMTABL AND             **           00560
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00561
**             PRTXXX2.                                     **           00562
**                                                          **           00563
** LEVEL 018                                                **           00564
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00565
**             VOLSER OF THE COPIED TAPES, TO               **           00566
**             MATCH THE VOLSER INDICATED IN THE            **           00567
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00568
**             THE CHGVOL PARM KEYWORD.  THIS               **           00569
**             ACTION ONLY OCCURS IF THE INPUT              **           00570
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00571
**             DETECTED.  THE COPIED VOL1 LABEL             **           00572
**             IS ALTERED BEFORE THE WRITE.                 **           00573
**                                                          **           00574
** LEVEL 019                                                **           00575
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00576
**             AND EOV2 LABELS THAT ARE IN THE              **           00577
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00578
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00579
**             CAN HAPPEN WHEN YOU COPY FILES               **           00580
**             WITH THE COPYFILE PROGRAM, FROM              **           00581
**             THE END OF ONE TAPE, TO THE                  **           00582
**             BEGINNING OR THE MIDDLE OF                   **           00583
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00584
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00585
**             COPIES THE EOV LABELS AS IS.  THIS           **           00586
**             NEW OPTION IS CALLED EOVCHG OR               **           00587
**             EOV2EOF; THE EOV LABELS ARE                  **           00588
**             CHANGED (IN THE COPIED TAPES) TO             **           00589
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00590
**             REPORTS THIS FACT.                           **           00591
**                                                          **           00592
** LEVEL 020                                                **           00593
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00594
**             TO ALLOW A RUN OF COPYMODS THAT              **           00595
**             JUST READS THE INPUT TAPE, AND DOES          **           00596
**             NOT MAKE COPIES.                             **           00597
**                                                          **           00598
** LEVEL 021                                                **           00599
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00600
**             IEHINITTED TAPES.                            **           00601
**                                                          **           00602
** LEVEL 022                                                **           00603
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00604
**             LABELS FROM A TAPE, TO AN FB-80              **           00605
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00606
**                                                          **           00607
** LEVEL 023                                      SBG 09/00 **           00608
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00609
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00610
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00611
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00612
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00613
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00614
**             TO CODE                                      **           00615
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00616
**             OF THE SYSIN CARD FILE.  IF THERE            **           00617
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00618
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00619
**             AS CODING CHGVOL.                            **           00620
**                                                          **           00621
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00622
**             DUMPED LABELS HAVE CONTROL CARDS             **           00623
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00624
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00625
**             CONTROL CARDS.                               **           00626
**                                                          **           00627
** LEVEL 024                                      SBG 09/00 **           00628
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00629
**             OUTPUT COPIES FROM NL INPUT AND A            **           00630
**             SET OF LABELS CREATED BY LABLDUMP.           **           00631
**             CHANGED THE DCB NAMES AND DD CARDS           **           00632
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00633
**             RESTORE.                                     **           00634
**                                                          **           00635
**             CHANGED PROGRAM INITIALIZATION TO            **           00636
**             A STANDARD FORM.  GOT RID OF PRIME           **           00637
**             AND TERME MACROS.  HAVE 5 BASE               **           00638
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00639
**                                                          **           00640
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00641
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00642
**             LABELS ON AN SL TAPE, AND WON'T              **           00643
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00644
**             TAPE IS SL, ACCIDENTALLY.                    **           00645
**                                                          **           00646
** LEVEL 025                                      SBG 09/00 **           00647
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00648
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00649
**                                                          **           00650
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00651
**             BE USED.                                     **           00652
**                                                          **           00653
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00654
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00655
**                TAPEOWNER=xxxxxxxxxx                      **           00656
**                FILELIMIT=nnnn                            **           00657
**                LABELIMIT=nnnn                            **           00658
**                PRINTRCDS=nnnn                            **           00659
**                  or                                      **           00660
**                OUTVOLALL=volser ,                        **           00661
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00662
**             AND ANY PARM THAT IS CODED IN THE            **           00663
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00664
**             AND IT WILL OVERRIDE THE PARM IN             **           00665
**             THE EXEC CARD (SINCE SYSIN IS                **           00666
**             SCANNED LATER IN THE PROCESSING).            **           00667
**                                                          **           00668
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00669
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00670
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00671
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00672
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00673
**                                                          **           00674
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00675
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00676
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00677
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00678
**             WHEN COPYING AN INPUT TAPE.                  **           00679
**                                                          **           00680
** LEVEL 026                                      SBG 09/00 **           00681
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00682
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00683
**                                                          **           00684
** LEVEL 027                                      SBG 09/00 **           00685
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00686
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00687
**                                                          **           00688
** LEVEL 028                                      SBG 09/00 **           00689
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00690
**             STANDARD USER LABEL SUPPORT.                 **           00691
**                                                          **           00692
** LEVEL 029                                      SBG 09/00 **           00693
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00694
**             STANDARD USER LABELS.                        **           00695
**                                                          **           00696
** LEVEL 030                                      SBG 09/00 **           00697
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00698
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00699
**             OUTPUT TAPES, DURING THE COPY.               **           00700
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00701
**                                                          **           00702
**             FIXED THE EYECATCHERS A BIT.                 **           00703
**                                                          **           00704
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00705
**                                                          **           00706
** LEVEL 031                                      SBG 09/00 **           00707
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00708
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00709
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00710
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00711
**                                                          **           00712
** LEVEL 032                                      SBG 10/00 **           00713
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00714
**             LABADDIN PROCESSING WHEN THERE ARE           **           00715
**             MORE LABELS IN THE EXTERNAL LABEL            **           00716
**             DATASET, THAN THERE ARE NL FILES             **           00717
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00718
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00719
**             SAYS TO STOP AT THE END OF NL FILES          **           00720
**             AND NOT WRITE NULL SL FILES TO               **           00721
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00722
**             LABELS.                                      **           00723
**                                                          **           00724
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00725
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00726
**             AND THEN BACKING OVER IT AND CLOSING.        **           00727
**                                                          **           00728
** LEVEL 033                                      SBG 10/00 **           00729
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00730
**             PROCESSING WHEN THE LAST LABEL SET           **           00731
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00732
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00733
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00734
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00735
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00736
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00737
**             AND THE DATA AND A TAPEMARK), AND IT         **           00738
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00739
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00740
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00741
**             FROM THE EXISTING HDR2 AND EOF IS            **           00742
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00743
**             THE END.                                     **           00744
**                                                          **           00745
** LEVEL 034                                      SBG 10/00 **           00746
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00747
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00748
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00749
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00750
**             THE REWIND, AND LEAVES THE WRITTEN           **           00751
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00752
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00753
**             NOT ERASED.                                  **           00754
**                                                          **           00755
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00756
**             CONDITION IS FLAGGED WITH A PROPER           **           00757
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00758
**             FOR THAT DRIVE IS BYPASSED.                  **           00759
**                                                          **           00760
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00761
**             FIRST VERSION OF THIS PROGRAM.               **           00762
**                                                          **           00763
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00764
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00765
**             THESE ARE THE OPENDFLG SETTINGS.             **           00766
**                                                          **           00767
** LEVEL 035                                      SBG 10/00 **           00768
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00769
**             TAPES, BY NOT REUSING THE WRITE              **           00770
**             IOB WITHOUT REFRESHING THE PARTS             **           00771
**             THAT ARE USED BY IOS.  THIS IS THE           **           00772
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00773
**                                                          **           00774
**             LABLDUMP OF AN IEHINITTED TAPE               **           00775
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00776
**             CARD, IN ANTICIPATION OF CREATING            **           00777
**             A TAPE INITIALIZATION ROUTINE FROM           **           00778
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00779
**             NEXT LEVEL, IS BETTER.)                      **           00780
**                                                          **           00781
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00782
**                                                          **           00783
** LEVEL 036                                      SBG 10/00 **           00784
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00785
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00786
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00787
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00788
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00789
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00790
**                                                          **           00791
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00792
**             USE A PARM OF INITVOLS.                      **           00793
**                                                          **           00794
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00795
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00796
**                                                          **           00797
**             CONSOLIDATED CHGVOL CODE INTO A              **           00798
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00799
**                                                          **           00800
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00801
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00802
**             STEPPING ON EACH OTHER.                      **           00803
**                                                          **           00804
** LEVEL 037                                      SBG 10/00 **           00805
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00806
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00807
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00808
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00809
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00810
**             VALUE IS USED.                               **           00811
**                                                          **           00812
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00813
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00814
**             VALUE, IF THERE IS ONE.                      **           00815
**                                                          **           00816
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00817
**             SETS THE PARM VALUE OF LIMFILE OR            **           00818
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00819
**             THE PROGRAM ACTION.                          **           00820
**                                                          **           00821
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00822
**             PROGRAM COUNTS BYTES READ FROM THE           **           00823
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00824
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00825
**             THIS ACTION.                                 **           00826
**                                                          **           00827
** LEVEL 038                                      SBG 11/00 **           00828
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00829
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00830
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00831
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00832
**             FILES.                                       **           00833
**                                                          **           00834
** LEVEL 039                                      SBG 11/00 **           00835
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00836
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00837
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00838
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00839
**                                                          **           00840
** LEVEL 040                                      SBG 11/00 **           00841
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00842
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00843
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00844
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00845
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00846
**             COUNT, SO A USER WILL BE ABLE TO             **           00847
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00848
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00849
**                                                          **           00850
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00851
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00852
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00853
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00854
**             WHAT TO DO.                                  **           00855
**                                                          **           00856
** LEVEL 041                                      SBG 11/00 **           00857
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00858
**             OF LABEL SETS IN THE LABADDIN FILE           **           00859
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00860
**             IF THE LABADDIN FILE CONTAINS MANY           **           00861
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00862
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00863
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00864
**                                                          **           00865
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00866
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00867
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00868
**             FILE TO END AFTER NNN OF THEM.               **           00869
**                                                          **           00870
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00871
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00872
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00873
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00874
**             WHEN EOV LABELS ARE PRESENT.                 **           00875
**                                                          **           00876
** LEVEL 042                                      SBG 11/00 **           00877
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00878
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00879
**             REGISTER.                                    **           00880
**                                                          **           00881
** LEVEL 043                                      SBG 11/00 **           00882
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00883
**             "OPTION" PARAMETER.  CALL IS TO A            **           00884
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00885
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00886
**             ASSEMBLED AND LINKEDITED WITH                **           00887
**             THE COPYMODS PROGRAM.                        **           00888
**                                                          **           00889
**             CHANGED THE WORDING OF SOME OF THE           **           00890
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00891
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00892
**                                                          **           00893
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00894
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00895
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00896
**             LABADDIN WAS IN EFFECT.                      **           00897
**                                                          **           00898
** LEVEL 044                                      SBG 12/00 **           00899
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00900
**                                                          **           00901
** LEVEL 045                                      SBG 12/00 **           00902
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00903
**             COMPLETION OF THE COPY. SUPPWTO.             **           00904
**                                                          **           00905
** LEVEL 046                                      SBG 12/00 **           00906
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00907
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00908
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00909
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00910
**             COUNT CORRECTION.                            **           00911
**                                                          **           00912
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00913
**                                                          **           00914
** LEVEL 047                                      SBG 12/00 **           00915
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00916
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00917
**             NUMBERS OF DATA RECORDS.  IF THE             **           00918
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00919
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00920
**                                                          **           00921
** LEVEL 048                                      SBG 05/02 **           00922
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00923
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00924
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00925
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00926
**                                                          **           00927
** LEVEL 049                                      SBG 05/02 **           00928
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00929
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00930
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00931
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00932
**                                                          **           00933
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00934
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00935
**             EACH LABEL.  IT DOES NOT MATTER              **           00936
**             WHERE THE LABELS ARE, IN THE INPUT           **           00937
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00938
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00939
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00940
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00941
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00942
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00943
**                                                          **           00944
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00945
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00946
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00947
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00948
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00949
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00950
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00951
**             WE CAN NOW FORCE THE nnn TO BE               **           00952
**             INTERPRETED AS NL USING THE NLLIM            **           00953
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00954
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00955
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00956
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00957
**             OTHER KEYWORD IS ALSO CODED.                 **           00958
**                                                          **           00959
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00960
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00961
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00962
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00963
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00964
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00965
**             DURING THE WRITE OF THE TAPE MARK.           **           00966
**                                                          **           00967
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00968
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00969
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00970
**             BEFORE ISSUING ABEND 069.                    **           00971
**                                                          **           00972
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00973
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00974
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00975
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00976
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00977
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00978
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00979
**             SYSPRINT DATASET.                            **           00980
**                                                          **           00981
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00982
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00983
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00984
**                                                          **           00985
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00986
**             OF THE MAIN CSECT.                           **           00987
**                                                          **           00988
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00989
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00990
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00991
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00992
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00993
**             PARM SCAN IN DETAIL.                         **           00994
**                                                          **           00995
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00996
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00997
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00998
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00999
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           01000
**                                                          **           01001
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           01002
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           01003
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           01004
**             PROGRAM AND NOT BY COPYMODS.                 **           01005
**                                                          **           01006
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           01007
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           01008
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           01009
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01010
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01011
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01012
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01013
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01014
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01015
**             PROGRAM.                                     **           01016
**                                                          **           01017
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01018
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01019
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01020
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01021
**             USER FIELD AREA.                             **           01022
**                                                          **           01023
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01024
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01025
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01026
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01027
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01028
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01029
**                                                          **           01030
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01031
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01032
**             POSSIBLE.                                    **           01033
**                                                          **           01034
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01035
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01036
**             IN ERROR.                                    **           01037
**                                                          **           01038
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01039
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01040
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01041
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01042
**                                                          **           01043
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01044
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01045
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01046
**                                                          **           01047
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01048
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01049
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01050
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01051
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01052
**             PROGRAM.                                     **           01053
**                                                          **           01054
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01055
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01056
**                                                          **           01057
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01058
**             TEN PARM BITS INSTEAD OF FIVE.               **           01059
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01060
**                                                          **           01061
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01062
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01063
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01064
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01065
**                                                          **           01066
** LEVEL 064 - Return Code adjustments.                     **           01067
**                                                          **           01068
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01069
**             processing.                                  **           01070
**             HEXPRT now works for INITVOLS.               **           01071
**             HEXPRT now prints the external labels in a   **           01072
**             LABADDIN operation.                          **           01073
**             TAPEOWNER= is now honored for an INITVOLS    **           01074
**             operation (this fixes a bug).                **           01075
**             Number for FILELIMIT=nnn is now filled in,   **           01076
**             in the message, when the EBCDIC value        **           01077
**             exists.                                      **           01078
**             Fix another bug--Tape Owner not altered--    **           01079
**             now use the value of tape owner passed from  **           01080
**             the PARMCHEK program.                        **           01081
**                                                          **           01082
** LEVEL 066 - Cosmetic changes.                            **           01083
**             Save original PARM pointer in COPYMODS       **           01084
**             csect itself.  (It got lost after PARMCHEK   **           01085
**             call.)                                       **           01086
**                                                          **           01087
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01088
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01089
**             INASC3 or INASC4 keywords.  You can control  **           01090
**             if the HEXPRT is interpreted in EBCDIC or    **           01091
**             ASCII using the ASCII or the EBCDIC          **           01092
**             keywords.  For an ASCII tape init, ASCII     **           01093
**             print interpretation is turned on by         **           01094
**             default.  If you are initting an ASCII       **           01095
**             tape using the INASCII keyword, a Level 3    **           01096
**             ASCII tape will be created.                  **           01097
**                                                          **           01098
**             ASCII Level 4 is only supported in MVS at    **           01099
**             the OS/390 2.4 level and higher.             **           01100
**                                                          **           01101
** LEVEL 068 - Split off label checking routine into a      **           01102
**             separate program, LABELCHK, which is         **           01103
**             assembled with COPYMODS together.            **           01104
**                                                          **           01105
** LEVEL 069 - More ASCII label detection support.          **           01102
**             LABLDUMP now works for ASCII tapes.  The     **           01105
**             control cards in the LABLDUMP DD name have   **
**             been translated into ASCII, the same as the  **
**             labels and the data.  PARM=STRIP now works   **
**             for ASCII tapes.                             **
**                                                          **
**             Fixed a bug where OUTVOLALL didn't work      **
**             for volumes other than VOLUME1.              **
**                                                          **
** LEVEL 070 - More ASCII label detection support.          **
**             LABADDIN works for ASCII tapes now.          **
**             BLKCNT option fixed to convert corrected     **
**             block counts to ASCII when necessary.        **
**             EOVTOEOF now works for ASCII and IBM tapes,  **
**             because a call to LABELCHK now returns the   **
**             altered copy of INAREA to the main program.  **
**             A parm of EOV2 now requires a space after    **
**             it, so as not to interfere with EOV2EOF.     **
**                                                          **
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **
**                                                          **
**             LBI support for XXX2 print of label          **
**             contents.  Big blocksizes are printed        **
**             in the XXX2 print message if they exist      **
**             in the labels.  This is for IBM labels.      **
**                                                          **
**             Support 14-character tape owner for          **
**             ANSI/ISO (ASCII) tapes.                      **
**                                                          **
**             Other cosmetic changes and many bug fixes.   **
**                                                          **
**************************************************************           01106
**************************************************************           01107
         MACRO                                                           01108
&NAME    HEX   &TO,&LEN,&FROM                                            01109
&NAME    DS    0H                                                        01110
         ST    R4,SAV4HEX                                                01111
         STM   15,1,HEXSAVE                                              01112
         LA    1,&FROM                                                   01113
         LA    0,&LEN                                                    01114
         LA    15,&TO                                                    01115
         BAL   4,HEX                                                     01116
         L     R4,SAV4HEX                                                01117
         LM    15,1,HEXSAVE                                              01118
         MEND                                                            01119
         EJECT                                                           01120
         YREGS                                                           01121
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01122
         GBLA  &HEXDFLA                                                  01123
* ------------------------------------------------------------------ *   01124
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01125
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01126
* ------------------------------------------------------------------ *   01127
&HEXDFLA SETA  4                                                         01128
&HEXDFLC SETC  '&HEXDFLA'                                                01129
COPYMODS CSECT                                                           01130
         USING *,R15                                          SBG 03/00  01131
         B     EYECATCH                                       SBG 03/00  01132
         DC    C'HEX DUMP '                                              01133
HEXDFLCC DC    C'&HEXDFLC'                                               01134
         DC    C' RECORDS '                                              01135
HEXDFLL  EQU   L'HEXDFLCC                                                01136
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01137
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01138
         DC    C'COPYMODS Level 071 '                         SBG 03/00  01139
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01140
         DC    C'SYSIN IN PARMCHEK PGM'                                  01141
SAVEAREA DC    18F'0'                                                    01142
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01143
         SAVE  (14,12)                                                   01144
         LR    R5,R1          SAVE PARM POINTER                          01145
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01146
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01147
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01148
         LR    R13,R1               NEW SAVE AREA ADDRESS                01149
         DROP  R15                                                       01150
* -----                       SET UP SIX BASE REGISTERS                  01151
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01152
         LR    R12,R15                                                   01153
         LA    R11,4095(,R12)                                            01154
         LA    R11,1(,R11)                                               01155
         LA    R10,4095(,R11)                                            01156
         LA    R10,1(,R10)                                               01157
         LA    R9,4095(,R10)                                             01158
         LA    R9,1(,R9)                                                 01159
         LA    R8,4095(,R9)                                              01160
         LA    R8,1(,R8)                                                 01161
         LA    R6,4095(,R8)                                              01162
         LA    R6,1(,R6)                                                 01163
         LR    R1,R5          RESTORE PARM POINTER                       01164
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01165
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01166
         ST    R1,PARMSAVE    And store the PARM pointer into this       01167
*                             program too, so it doesn't get lost.       01168
         L     R1,0(,R1)                                                 01169
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01170
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01171
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01172
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01173
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01174
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm  01175
         ST    R0,LABCHENT           Save entry point for calling later  01176
* ----------------------------------------------------------------- *    01177
*                                                                   *    01178
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01179
*                                                                   *    01180
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01181
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01182
*              FIELDS.                                              *    01183
*                                                                   *    01184
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01185
*              FILLED IN.                                           *    01186
*                                                                   *    01187
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01188
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01189
*              THE PARM SCAN.                                       *    01190
*                                                                   *    01191
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01192
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01193
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01194
*                                                                   *    01195
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01196
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01197
*                                                                   *    01198
* ------------------------------------------------------------------*    01199
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01200
* ------------------------------------------------------------------*    01201
         L     R0,=V(PARMCHEK)                                           01202
         ST    R0,ENTRYPT                                                01203
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01204
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01205
         BALR  R14,R15                 DO CALL                           01206
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01207
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01208
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01209
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01210
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name
* ----------------------------------------------------------------- *    01211
* ----------------------------------------------------------------- *    01212
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01213
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01214
* ----------------------------------------------------------------- *    01215
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01216
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  01217
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  01218
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  01219
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  01220
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  01221
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  01222
SKIPLTMS DS    0H                                             SBG 06/00  01223
* ------- >> ------- >>                                                  01224
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01225
         BZ    NOASCII4            NO. DON'T ADJUST.                     01226
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01227
NOASCII4 DS    0H                                                        01228
* ------- >> ------- >>                                                  01229
* ----- * ----- * ------                                                 01230
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01231
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01232
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01233
NONOEXNL DS    0H                                                        01234
* ----- * ----- * ------                                                 01235
* ----- * ----- * ------ *------                                         01236
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01237
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01238
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01239
NOCUMSEP DS    0H                                                        01240
* ----- * ----- * ------ *------                                         01241
* ----- * -----                                                          01242
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01243
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01244
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01245
NOCUMTOT DS    0H                                                        01246
* ----- * -----                                                          01247
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01248
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01249
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01250
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01251
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01252
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01253
*                                      BECAUSE WE'RE COPYING TO SL.      01254
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01255
CANLBDMP DS    0H                                                        01256
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01257
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01258
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01259
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01260
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01261
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01262
NOLBDQUI DS    0H                                                        01263
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01264
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01265
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01266
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01267
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01268
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01269
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01270
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01271
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01272
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF
NOSTRADJ DS    0H                  END of the STRIP adjustments          01273
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01274
* ----------------------------------------------------------------- *    01275
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01276
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01277
* ----------------------------------------------------------------- *    01278
* --                                                             -- *    01279
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01280
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01281
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01282
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01283
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01284
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01285
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01286
         BALR  R14,R15           CALL SUBPROGRAM                         01287
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01288
NOOPTRPT DS    0H                                                        01289
*  -------------------------------------------------------------- *      01290
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01291
         RDJFCB IN                                                       01292
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01293
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01294
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01295
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01296
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01297
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01298
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01299
         SPACE 3                                                         01300
OPENSYSP DS    0H                                                        01301
*                                                                        01302
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01303
*                                                                        01304
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01305
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01306
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01307
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01308
         L     R2,16          R2=CVT                                     01309
         L     R2,0(,R2)      R2=TCB WORDS                               01310
         L     R2,4(,R2)      R2=MY TCB                                  01311
         L     R2,12(,R2)     R2=TIOT                                    01312
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01313
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01314
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01315
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01316
         BNE   TIOT1          NO                                         01317
         OI    FLAG1,OP1      SHOW IT                                    01318
         STM   R14,R3,SAV14T03                                    TEST   01319
         RDJFCB OUT1                                                     01320
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01321
         MVC   VOLDD,DDOUT1                                              01322
         LM    R14,R3,SAV14T03                                    TEST   01323
         B     TIOTNEXT       CONTINUE                                   01324
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01325
         BNE   TIOT2          NO                                         01326
         OI    FLAG1,OP2      SHOW IT                                    01327
         STM   R14,R3,SAV14T03                                    TEST   01328
         RDJFCB OUT2                                                     01329
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01330
         MVC   VOLDD,DDOUT2                                              01331
         LM    R14,R3,SAV14T03                                    TEST   01332
         B     TIOTNEXT       CONTINUE                                   01333
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01334
         BNE   TIOT3          NO                                         01335
         OI    FLAG1,OP3      SHOW IT                                    01336
         STM   R14,R3,SAV14T03                                    TEST   01337
         RDJFCB OUT3                                                     01338
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01339
         MVC   VOLDD,DDOUT3                                              01340
         LM    R14,R3,SAV14T03                                    TEST   01341
         B     TIOTNEXT       CONTINUE                                   01342
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01343
         BNE   TIOT4          NO                                         01344
         OI    FLAG1,OP4      SHOW IT                                    01345
         STM   R14,R3,SAV14T03                                    TEST   01346
         RDJFCB OUT4                                                     01347
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01348
         MVC   VOLDD,DDOUT4                                              01349
         LM    R14,R3,SAV14T03                                    TEST   01350
         B     TIOTNEXT       CONTINUE                                   01351
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01352
         BNE   TIOT5          NO                                         01353
         OI    FLAG1,OP5      SHOW IT                                    01354
         STM   R14,R3,SAV14T03                                    TEST   01355
         RDJFCB OUT5                                                     01356
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01357
         MVC   VOLDD,DDOUT5                                              01358
         LM    R14,R3,SAV14T03                                    TEST   01359
         B     TIOTNEXT       CONTINUE                                   01360
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01361
         BNE   TIOT6          NO                                         01362
         OI    FLAG1,OP6      SHOW IT                                    01363
         STM   R14,R3,SAV14T03                                    TEST   01364
         RDJFCB OUT6                                                     01365
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01366
         MVC   VOLDD,DDOUT6                                              01367
         LM    R14,R3,SAV14T03                                    TEST   01368
         B     TIOTNEXT       CONTINUE                                   01369
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01370
         BNE   TIOT7          NO                                         01371
         OI    FLAG1,OP7      SHOW IT                                    01372
         STM   R14,R3,SAV14T03                                    TEST   01373
         RDJFCB OUT7                                                     01374
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01375
         MVC   VOLDD,DDOUT7                                              01376
         LM    R14,R3,SAV14T03                                    TEST   01377
         B     TIOTNEXT       CONTINUE                                   01378
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01379
         BNE   TIOT8          NO                                         01380
         OI    FLAG1,OP8      SHOW IT                                    01381
         STM   R14,R3,SAV14T03                                    TEST   01382
         RDJFCB OUT8                                                     01383
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01384
         MVC   VOLDD,DDOUT8                                              01385
         LM    R14,R3,SAV14T03                                    TEST   01386
         B     TIOTNEXT       CONTINUE                                   01387
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01388
         BNE   TIOT9          NO                                         01389
         OI    FLAG2,OP9      SHOW IT                                    01390
         STM   R14,R3,SAV14T03                                    TEST   01391
         RDJFCB OUT9                                                     01392
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01393
         MVC   VOLDD,DDOUT9                                              01394
         LM    R14,R3,SAV14T03                                    TEST   01395
         B     TIOTNEXT       CONTINUE                                   01396
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01397
         BNE   TIOT10         NO                                         01398
         OI    FLAG2,OP10     SHOW IT                                    01399
         STM   R14,R3,SAV14T03                                    TEST   01400
         RDJFCB OUT10                                                    01401
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01402
         MVC   VOLDD,DDOUT10                                             01403
         LM    R14,R3,SAV14T03                                    TEST   01404
         B     TIOTNEXT       CONTINUE                                   01405
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01406
         BNE   TIOT11         NO                                         01407
         OI    FLAG2,OP11     SHOW IT                                    01408
         STM   R14,R3,SAV14T03                                    TEST   01409
         RDJFCB OUT11                                                    01410
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01411
         MVC   VOLDD,DDOUT11                                             01412
         LM    R14,R3,SAV14T03                                    TEST   01413
         B     TIOTNEXT       CONTINUE                                   01414
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01415
         BNE   TIOT12         NO                                         01416
         OI    FLAG2,OP12     SHOW IT                                    01417
         STM   R14,R3,SAV14T03                                    TEST   01418
         RDJFCB OUT12                                                    01419
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01420
         MVC   VOLDD,DDOUT12                                             01421
         LM    R14,R3,SAV14T03                                    TEST   01422
         B     TIOTNEXT       CONTINUE                                   01423
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01424
         BNE   TIOT13         NO                                         01425
         OI    FLAG2,OP13     SHOW IT                                    01426
         STM   R14,R3,SAV14T03                                    TEST   01427
         RDJFCB OUT13                                                    01428
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01429
         MVC   VOLDD,DDOUT13                                             01430
         LM    R14,R3,SAV14T03                                    TEST   01431
         B     TIOTNEXT       CONTINUE                                   01432
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01433
         BNE   TIOT14         NO                                         01434
         OI    FLAG2,OP14     SHOW IT                                    01435
         STM   R14,R3,SAV14T03                                    TEST   01436
         RDJFCB OUT14                                                    01437
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01438
         MVC   VOLDD,DDOUT14                                             01439
         LM    R14,R3,SAV14T03                                    TEST   01440
         B     TIOTNEXT       CONTINUE                                   01441
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01442
         BNE   TIOT15         NO                                         01443
         OI    FLAG2,OP15     SHOW IT                                    01444
         STM   R14,R3,SAV14T03                                    TEST   01445
         RDJFCB OUT15                                                    01446
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01447
         MVC   VOLDD,DDOUT15                                             01448
         LM    R14,R3,SAV14T03                                    TEST   01449
         B     TIOTNEXT       CONTINUE                                   01450
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01451
         BNE   TIOTNEXT       NO                                         01452
         OI    FLAG2,OP16     SHOW IT                                    01453
         STM   R14,R3,SAV14T03                                    TEST   01454
         RDJFCB OUT16                                                    01455
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01456
         MVC   VOLDD,DDOUT16                                             01457
         LM    R14,R3,SAV14T03                                    TEST   01458
         B     TIOTNEXT       CONTINUE                                   01459
TIOTNEXT SR    R3,R3                                                     01460
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01461
         AR    R2,R3          R2=NEXT DD ENTRY                           01462
         B     TIOTLOOP       GO CHECK IT                                01463
*  ---------------------------------------------------------  SBG 09/00  01464
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01465
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01466
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01467
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01468
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01469
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER            01470
         MVC   VOLUME2(VOLALLLN-6),VOLUME1
NOVOLOV  DS    0H                                                        01471
*  ---------------------------------------------------------  SBG 09/00  01472
         SPACE 3                                                         01473
*  -----------------------------------------------------------------  *  01474
*                                                                        01475
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01476
*                                                                        01477
*  -----------------------------------------------------------------  *  01478
OPENS    DS    0H               START OPENING FILES                      01479
         OPEN  (SYSPRINT,OUTPUT)                                         01480
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01481
         BO    OPENMOVE                                                  01482
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01483
         BO    OPENMOVE                                                  01484
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01485
         BO    OPENMOVE                                                  01486
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01487
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01488
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01489
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01490
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01491
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01492
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01493
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01494
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01495
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01496
         PUT   SYSPRINT,LINE                                             01497
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01498
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01499
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01500
         OPEN  (LABADDIN,INPUT)                                          01501
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01502
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01503
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01504
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01505
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01506
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01507
         PUT   SYSPRINT,LINE                                             01508
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01509
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01510
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01511
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01512
         CLOSE (SYSPRINT)                                                01513
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01514
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01515
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01516
         CLOSE (LABLDUMP)                                                01517
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01518
         BZ    REALYEND         NO.  GET OUT.                            01519
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01520
         CLOSE (LABADDIN)                                                01521
REALYEND B     THEEND                                                    01522
         EJECT                                                           01523
OPENIN   OPEN  (IN,INPUT)                                                01524
         TM    IN+48,X'10'                                               01525
         BO    INISOPEN                                                  01526
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01527
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01528
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01529
*                                   BYPASS MESSAGE.                      01530
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01531
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01532
*                                   BYPASS MESSAGE.                      01533
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01534
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01535
*                                   BYPASS MESSAGE.                      01536
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01537
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01538
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01539
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01540
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01541
INISOPEN DS    0H                                                        01542
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01543
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01544
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01545
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01546
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01547
* ----                                                                   01548
OPENINCK DS    0H                                                        01549
         LA    R2,IN              POINT TO IN DCB                        01550
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01551
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01552
         EXCP  REWIOB                                                    01553
         WAIT  ECB=REWECB                                                01554
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01555
         EXCP  INIOB                                                     01556
         WAIT  ECB=INECB                                                 01557
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                   01558
         BE    OPENINSL                 Yes, turn on SL flag.
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?
         BE    OPENINSL                 Yes, turn on SL flag.
         B     RESETIN            No. Just rewind to reposition.         01559
OPENINSL DS    0H
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01560
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01561
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01562
****** ------ BELOW ------ SL FILE NUMBERS.                              01563
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01564
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01565
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01566
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01567
**** ----- >>>>>   Force file limiting by SL   - - -  below              01568
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01569
         BZ    NOSLFLIM              Not set, bypass code for it         01570
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01571
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01572
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01573
         MVC   LINE(133),LINE-1      Clear message line                  01574
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01575
         PUT   SYSPRINT,LINE         Write msg                           01576
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01577
         BNO   SLLIMRES              No. only SLLIM. So go on.           01578
         MVC   LINE(133),LINE-1      Clear message line                  01579
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01580
         PUT   SYSPRINT,LINE         Write msg                           01581
SLLIMRES DS    0H                                                        01582
         B     RESETIN                                                   01583
NOSLFLIM DS    0H                                                        01584
**** ----- >>>>>   Force file limiting by SL   - - -  above              01585
**** ----- >>>>>   Force file limiting by NL   - - -  below              01586
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01587
         BZ    NONLFLIM              Not set, bypass code for it         01588
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01589
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01590
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01591
         MVC   LINE(133),LINE-1      Clear message line                  01592
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01593
         PUT   SYSPRINT,LINE         Write msg                           01594
         B     RESETIN                                                   01595
NONLFLIM DS    0H                                                        01596
**** ----- >>>>>   Force file limiting by NL   - - -  above              01597
* -- > Strip test                                                        01598
         TM    PARMFLG4,X'02'        Are we stripping labels?            01599
         BZ    OPENINXW              No. Bypass this section.            01600
         TM    PARMFLG3,X'02'        Are we limiting files also?         01601
         BO    OPENINXW              Yes. Use SL number.                 01602
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01603
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01604
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01605
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01606
OPENINXW DS    0H                                                        01607
* -- > Strip test                                                        01608
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01609
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01610
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01611
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01612
OPENINXX DS    0H                                                        01613
****** ------ ABOVE ------ SL FILE NUMBERS.                              01614
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01615
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01616
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01617
         PUT   SYSPRINT,LINE      WRITE MSG                              01618
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01619
         BZ    RESETEND         NO.  GET OUT.                            01620
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01621
         CLOSE (LABADDIN)                                                01622
RESETEND CLOSE (IN)                                                      01623
         B     THEEND                                                    01624
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01625
RESETIN  DS    0H                                                        01626
         MVC   REWECB,=F'0'                                              01627
         EXCP  REWIOB                                                    01628
         WAIT  ECB=REWECB                                                01629
NOINITOP DS    0H                                                        01630
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01631
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01632
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01633
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01634
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01635
         BNZ   NOLBLDD                  IF NOT, FLAG                     01636
         ST    R7,SAVE7REG              SAVE R7                          01637
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01638
         USING JFCBLK,R7                MAP THE AREA                     01639
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01640
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01641
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01642
         MVC   LINE(133),LINE-1                                          01643
         MVC   LINE(133),LDMPOUTM                                        01644
         PUT   SYSPRINT,LINE                                             01645
         DROP  R7                                                        01646
         L     R7,SAVE7REG              RESTORE R7                       01647
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01648
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01649
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01650
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01651
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01652
         BNZ   NOLABIN                  IF NOT, FLAG                     01653
         ST    R7,SAVE7REG              SAVE R7                          01654
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01655
         USING JFCBLK,R7                MAP THE AREA                     01656
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01657
         MVC   LDMPINMS+89(8),JFCBELNM                                   01658
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01659
         MVC   LINE(133),LINE-1                                          01660
         MVC   LINE(133),LDMPINMS                                        01661
         PUT   SYSPRINT,LINE                                             01662
         DROP  R7                                                        01663
         L     R7,SAVE7REG              RESTORE R7                       01664
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01665
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01666
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01667
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01668
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01669
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01670
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01671
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01672
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01673
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01674
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01675
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01676
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01677
         PUT   SYSPRINT,LINE                                             01678
NOLIMFMR DS    0H                                                        01679
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01680
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01681
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01682
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01683
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01684
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01685
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01686
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01687
         B     N1LIMPRT             AND PRINT IT                         01688
N1LIMDEF DS    0H                                                        01689
         MVC   LIMPMSG+11(10),PRTCHAR                                    01690
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01691
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01692
N1LIMHEX DS    0H                                                        01693
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01694
         B     READIN                                         SBG 06/00  01695
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01696
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01697
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01698
*  ---------------------------------------------------------  SBG 03/00  01699
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01700
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01701
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01702
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01703
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01704
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01705
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01706
         B     NOLIMPRT             AND PRINT IT                         01707
NOLIMDEF DS    0H                                                        01708
         MVC   LIMPMSG+11(10),PRTCHAR                                    01709
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01710
NOLIMPRT PUT   SYSPRINT,LINE                                             01711
NOLIMHEX DS    0H                                                        01712
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01713
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01714
         BO    INITEBCD                                                  01715
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 01716
         BO    INITAS3                                                   01717
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 01718
         BO    INITAS4                                                   01719
         B     OPENOINT                                                  01720
INITEBCD MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01721
         B     NOCORPRT                                                  01722
INITAS3  MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          01723
         MVC   INITCOPD,INITCREA                                         01724
         B     NOCORPRT                                                  01725
INITAS4  MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          01726
         MVC   INITCOPD,INITCREA                                         01727
         B     NOCORPRT                                                  01728
OPENOINT DS    0H                                                        01729
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01730
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01731
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01732
         ST    R7,SAVE7REG                                               01733
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01734
         L     R7,SAVE7REG                                               01735
NOCORPRT DS    0H                                                        01736
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01737
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01738
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01739
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01740
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01741
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01742
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01743
         PUT   SYSPRINT,LINE                                             01744
NOLIMFMS DS    0H                                                        01745
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01746
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01747
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01748
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01749
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01750
         MVC   LIMLMSG+11(10),LABCHAR                                    01751
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01752
         PUT   SYSPRINT,LINE                                             01753
NOLIMLMR DS    0H                                                        01754
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01755
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01756
         TM    PARMFLG4,X'02'     Are labels being stripped?             01757
         BZ    NOSTRMSG                                                  01758
         MVC   LINE(133),LINE-1   Clear message line                     01759
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01760
         PUT   SYSPRINT,LINE                                             01761
NOSTRMSG DS    0H                                                        01762
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01763
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01764
         BZ    OPEN1          NO                                         01765
         OPEN  (OUT1,OUTPUT)                                             01766
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01767
         BZ    OPEN2          NO                                         01768
         OPEN  (OUT2,OUTPUT)                                             01769
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01770
         BZ    OPEN3          NO                                         01771
         OPEN  (OUT3,OUTPUT)                                             01772
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01773
         BZ    OPEN4          NO                                         01774
         OPEN  (OUT4,OUTPUT)                                             01775
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01776
         BZ    OPEN5          NO                                         01777
         OPEN  (OUT5,OUTPUT)                                             01778
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01779
         BZ    OPEN6          NO                                         01780
         OPEN  (OUT6,OUTPUT)                                             01781
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01782
         BZ    OPEN7          NO                                         01783
         OPEN  (OUT7,OUTPUT)                                             01784
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01785
         BZ    OPEN8          NO                                         01786
         OPEN  (OUT8,OUTPUT)                                             01787
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01788
         BZ    OPEN9          NO                                         01789
         OPEN  (OUT9,OUTPUT)                                             01790
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01791
         BZ    OPEN10         NO                                         01792
         OPEN  (OUT10,OUTPUT)                                            01793
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01794
         BZ    OPEN11         NO                                         01795
         OPEN  (OUT11,OUTPUT)                                            01796
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01797
         BZ    OPEN12         NO                                         01798
         OPEN  (OUT12,OUTPUT)                                            01799
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01800
         BZ    OPEN13         NO                                         01801
         OPEN  (OUT13,OUTPUT)                                            01802
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01803
         BZ    OPEN14         NO                                         01804
         OPEN  (OUT14,OUTPUT)                                            01805
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01806
         BZ    OPEN15         NO                                         01807
         OPEN  (OUT15,OUTPUT)                                            01808
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01809
         BZ    READIN         NO                                         01810
         OPEN  (OUT16,OUTPUT)                                            01811
         EJECT                                                           01812
* --------------------------------------------------------- *            01813
*                                                           *            01814
*  READ INPUT                                               *            01815
*                                                           *            01816
* --------------------------------------------------------- *            01817
*                                                           *            01818
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01819
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01820
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01821
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01822
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01823
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01824
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01825
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01826
*                                                           *            01827
* --------------------------------------------------------- *            01828
READIN   DS    0H                                                        01829
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01830
         BO    TLITWRIT                                                  01831
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           01832
         BO    TLITASCI                                                  01833
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           01834
         BO    TLITASCI                                                  01835
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01836
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01837
         MVI   INECB,X'00'    INITIALIZE ECB                             01838
* ------------------------------------------------------------------ *   01839
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01840
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01841
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01842
* ------------------------------------------------------------------ *   01843
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01844
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01845
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01846
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01847
NONLSL0  DS    0H                                                        01848
* ----------------------------------------------------------- SBG 09/00  01849
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01850
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01851
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01852
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01853
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01854
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01855
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01856
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01857
INOLIMIT DS    0H                                                        01858
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01859
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01860
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01861
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01862
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01863
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01864
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01865
         L     R7,SAVE7RG3        RESTORE R7                             01866
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01867
NOLBDADJ DS    0H                                                        01868
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01869
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01870
*                                                                        01871
*       Since there is a possibility that the WRITE will                 01872
*       not work for one of the output ddnames, we have                  01873
*       to save the total bytes successfully moved to the                01874
*       currently open output tapes.  Also file count for                01875
*       this tape, and block count for this file.                        01876
*                                                                        01877
         MVC   PRVBY,TOTBY        Total bytes before this READ           01878
         MVC   FILECNTP,FILECNT   Total file count before this READ      01879
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     01880
*                                                                        01881
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01882
         EXCP  INIOB          READ                                       01883
         WAIT  ECB=INECB      WAIT FOR READ                              01884
         TM    INCSW+4,X'01'  WAS TM READ?                               01885
         BO    READIN1        YES                                        01886
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01887
         BNE   INERR          NO -- ERROR                                01888
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01889
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01890
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01891
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01892
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01893
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01894
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01895
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01896
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01897
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01898
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         01899
         ST    R7,TOTB7REG        Save BAL Register                      01900
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01901
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER       01902
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK              01903
         L     R7,TOTB7REG        Restore BAL Register                   01904
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         01905
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01906
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01907
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01908
         ST    R7,R7HXPRT        SAVE R7.                                01909
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01910
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01911
         BCTR  R1,0              LOWER BY ONE                            01912
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01913
         L     R7,R7HXPRT        RESTORE R7.                             01914
NPRTHEX  DS    0H                                                        01915
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01916
**** ----  BYTE COUNTS ---- BELOW                                        01918
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01919
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01920
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01921
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01922
INNOBYTE DS    0H                                                        01923
**** ----  BYTE COUNTS ---- ABOVE                                        01924
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01926
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01927
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01928
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01929
* ------------------------------------------------------------------*    01930
*    Call the LABELCHK program and get the returns.                 *    01931
* ------------------------------------------------------------------*    01932
         L     R15,LABCHENT       Get entry point of called program      01933
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        01934
         LA    R1,PARMFLGS        Point R1 to parm flags.                01935
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    01936
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         01937
         BALR  R14,R15                 Do CALL.                          01938
         ST    R2,SAVELBCK             Address of returned user area     01939
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    01940
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.
*                                 A call to LABCHECK overlays INAREA,
*                                 so if a LABCHECK routine alters
*                                 a label, the alteration will be
*                                 written out to the output tapes.
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    01941
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   01942
         BO    CLOSMALL           Yes. Close all files and finish up.    01943
* ------------------------------------------------------------------*    01944
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01945
*                             FORMATS, AND SET FLAGS          SBG 04/00  01946
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01947
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01948
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01949
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01950
         BZ    LBLNOCNT                                                  01951
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?         01952
         BZ    LBLNOCNT                                                  01953
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01954
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01955
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01956
LBLNOCNT DS    0H                                                        01957
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01958
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01959
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01960
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01962
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01963
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01964
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01965
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01966
*                                                             SBG 04/00  01967
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01968
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01969
         BZ    READGO1            NO. WE CAN GO ON.                      01970
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?              01971
         BZ    READGO1            NO DON'T CHECK FOR SL                  01972
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01973
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01974
         PUT   SYSPRINT,LINE      WRITE MSG                              01975
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01976
         CLOSE (LABADDIN)                                                01977
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01978
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01979
         EJECT                                                           01980
*  ----------------------------------------------------------------  *   01981
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01982
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01983
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01984
*  ----------------------------------------------------------------  *   01985
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01986
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01987
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01988
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01989
         BZ    STILTAPE                                                  01990
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01991
         BZ    STILTAPE                                                  01992
         B     WRTTAPMK                                                  01993
STILTAPE DS    0H                                                        01994
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01995
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01996
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01997
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01998
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01999
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          02000
DOTHEGET DS    0H                                                        02001
*** ---                                                                  02002
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              02003
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   02004
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               02005
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 02006
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   02007
DOGETALW DS    0H                                                        02008
*** ---                                                                  02009
         GET   LABADDIN,EXTLBLIN                                         02010
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    02011
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     02012
*------------------------------------> Hex Print Limit - Below           02013
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02014
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            02015
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?
         BE    NOHXPRAX                          Yes. Reset count.
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      02016
         BNE   NOHXPREX                        No. Don't reset count.    02017
NOHXPRAX DS    0H
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02018
NOHXPREX DS    0H                                                        02019
*------------------------------------> Hex Print Limit - Above           02020
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        02021
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        02022
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        02023
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           02024
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER
* ---------------------------------  EOV2EOF  BELOW  ------------- *     02025
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     02026
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            02027
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          02028
TRAIXEOV DS    0H
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     02029
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               02030
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02031
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02032
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02033
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02034
NTRALEOV DS    0H                                                        02035
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02036
*                                                                        02037
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02038
*                                                                        02039
* ------     Hex Print records from External Labels    ----  below       02040
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02041
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02042
         ST    R7,R7HXPRT           SAVE R7.                             02043
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02044
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02045
         BCTR  R1,0                 LOWER BY ONE                         02046
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02047
         L     R7,R7HXPRT           RESTORE R7.                          02048
EXTNOPRT DS    0H                                                        02049
* ------     Hex Print records from External Labels    ----  above       02050
* -- >
ASCIITST DS    0H
         CLI   EXTLBLIN,X'56'              ASCII V
         BE    ISASCIIG
         CLI   EXTLBLIN,X'45'              ASCII E
         BE    ISASCIIG
         CLI   EXTLBLIN,X'48'              ASCII H
         BE    ISASCIIG
         CLI   EXTLBLIN,X'55'              ASCII U
         BE    ISASCIIG
         B     ISNTASCI
ISASCIIG DS    0H
         OI    ASCIIFLG,X'01'              ASSUME ASCII
         OI    EXASCFLG,X'01'              ASSUME ASCII
         B     ASCIITSE
ISNTASCI DS    0H
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC
ASCIITSE DS    0H
* -- >
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?
         BE    NASCVOL1                    YES. TREAT AS A VOL1.
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02051
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02052
NASCVOL1 DS    0H
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02053
         B     GOTVOL01             PROCESS THE VOL1                     02054
NLABVOL1 DS    0H                                                        02055
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02056
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?
         BE    NASCHDR1                    YES. TREAT AS A HDR1.
         CLC   EXTLBLIN(4),=C'HDR1'                                      02057
         BNE   NLABHDR1                                                  02058
NASCHDR1 DS    0H
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02059
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02060
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02061
         B     ENDIBMSL                                                  02062
NLABHDR1 DS    0H                                                        02063
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?
         BE    NASCHDR2                    YES. TREAT AS A HDR2.
         CLC   EXTLBLIN(4),=C'HDR2'                                      02064
         BNE   NLABHDR2                                                  02065
NASCHDR2 DS    0H
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02066
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02067
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02068
         B     ENDIBMSL                                                  02069
NLABHDR2 DS    0H                                                        02070
***** ----- *****                                                        02071
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?
         BE    NASCEOF1                    YES. TREAT AS A EOF1.
         CLC   EXTLBLIN(4),=C'EOF1'                                      02072
         BNE   NLABEOF1                                                  02073
NASCEOF1 DS    0H
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02074
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02075
         B     ENDIBMSL                                                  02076
NLABEOF1 DS    0H                                                        02077
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?
         BE    NASCEOF2                    YES. TREAT AS A EOF2.
         CLC   EXTLBLIN(4),=C'EOF2'                                      02078
         BNE   NLABEOF2                                                  02079
NASCEOF2 DS    0H
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02080
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02081
         B     ENDIBMSL                                                  02082
NLABEOF2 DS    0H                                                        02083
***** ----- *****                                                        02084
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?
         BE    NASCEOV1                    YES. TREAT AS A EOV1.
         CLC   EXTLBLIN(4),=C'EOV1'                                      02085
         BNE   NLABEOV1                                                  02086
NASCEOV1 DS    0H
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02087
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02088
         B     ENDIBMSL                                                  02089
NLABEOV1 DS    0H                                                        02090
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?
         BE    NASCEOV2                    YES. TREAT AS A EOV2.
         CLC   EXTLBLIN(4),=C'EOV2'                                      02091
         BNE   NLABEOV2                                                  02092
NASCEOV2 DS    0H
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02093
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02094
         B     ENDIBMSL                                                  02095
NLABEOV2 DS    0H                                                        02096
ENDIBMSL DS    0H                                                        02097
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02098
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02099
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02100
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR
* -------------- EOV2EOF BELOW ----------------- *                       02101
ISITEOV  DS    0H                                                        02102
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?
         BE    ISASCEOV                   TREAT AS ASCII EOV
         CLC   EXTLBLIN(3),=C'EOV'                                       02103
         BNE   NOEOF2V                                                   02104
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02105
         BZ    NOEOF2V                                                   02106
         MVC   EXTLBLIN(3),=C'EOF'                                       02107
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1    CLEAR PRINT LINE
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE
         PUT   SYSPRINT,LINE
         B     NOEOF2V
ISASCEOV DS    0H
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?
         BZ    NOEOF2V
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1    CLEAR PRINT LINE
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE
         PUT   SYSPRINT,LINE
NOEOF2V  DS    0H                                                        02108
* -------------- EOV2EOF ABOVE ----------------- *                       02109
* ----------                                                             02110
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02111
         BZ    BLNOCORR             NO. SKIP THIS.                       02112
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02113
         BE    CORBLKCT                                                  02114
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1
         BE    CORBLKCT
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02115
         BE    CORBLKCT                                                  02116
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1
         BE    CORBLKCT
BLNOCORR B     EOFOREOV                                                  02117
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02118
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02119
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02120
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02121
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02122
         MVC   EXTLBLIN(80),HDR2SAV                                      02124
         CLC   EXTLBLIN(3),=X'484452'
         BNE   MAKEEOF2
         MVC   EXTLBLIN(3),=X'454F46'
         B     NOMKEOF2
MAKEEOF2 DS    0H                                                        02123
         MVC   EXTLBLIN(3),=C'EOF'                                       02125
NOMKEOF2 DS    0H                                                        02126
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02127
* ----------                                                             02128
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02129
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02130
         CLC   EXTLBLIN(2),=X'454F'
         BE    WRTLABEL
**** ---- ****                                                           02131
         CLC   EXTLBLIN(3),=X'55484C'
         BE    ISASUHL
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02132
         BNE   NOTLUHL                                                   02133
ISASUHL  DS    0H
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02134
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02135
NOTLUHL  DS    0H                                                        02136
**** ---- ****                                                           02137
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02138
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02139
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.
         BE    WRTLABEL
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02140
ENDHEADR DS    0H                                                        02141
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02142
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02143
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02144
*** -----                                                                02145
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02146
         BZ    NOEODFL1                                                  02147
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02148
         B     ENDTRAIL                                                  02149
NOEODFL1 DS    0H                                                        02150
*** -----                                                                02151
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02152
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02153
ENDTRAIL DS    0H                                                        02154
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02155
         A     R0,=F'1'         ADD 1 TO COUNT                           02156
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02157
*** ---                                                                  02158
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02159
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02160
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02161
         BL    ENDNOLIM             NOT YET. GET OUT.                    02162
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02163
ENDNOLIM DS    0H                                                        02164
*** ---                                                                  02165
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02166
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02167
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02168
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02169
         B     WRTTAPMK                                                  02170
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02171
CORBLKCT DS    0H                                                        02172
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02173
         BZ    NOCORBLK          NO. BYPASS.                             02174
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02175
         BZ    NOCORBLK          NO. BYPASS.                             02176
*** ---  FIXING LABELS  --- ***                                          02177
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02178
         BZ    NOFIXL1           NO. DON'T FIX.                          02179
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02180
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02181
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02182
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?
         BNE   NOTASCHD
         MVC   EXTLBLIN(3),=X'454F46'     MOVE IN ASCII EOF
NOTASCHD DS    0H
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02183
NOFIXL1  DS    0H                                                        02184
*** ---  FIXING LABELS  --- ***                                          02185
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?
         BE    NOFIXL1A
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?
         BNE   NOFIXL1B
NOFIXL1A DS    0H
         ST    R5,R5HXPRT              Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTCSECT,R5
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
         MVC   EXTLBLIN+54(6),BLKCNASC+4
         B     NOFIXL2                      AND NOT THE EBCDIC ONE
NOFIXL1B DS    0H
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02186
NOFIXL2  DS    0H
         STM   R2,R3,SAVE2TO3                                            02187
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02188
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02189
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02190
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02191
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02192
         LM    R2,R3,SAVE2TO3                                            02193
NOCORBLK B     EOFOREOV                                                  02194
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02195
GOTVOL01 DS    0H                                                        02196
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02197
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02198
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02199
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02200
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02201
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS   02202
NOOVLALL DS    0H                                                        02203
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02204
         B     WRTLABEL                                                  02205
WRTLABEL OI    WRLBLFLG,X'01'                                            02206
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM
WHATLBL  DS    0H
         CLC   EXTLBLIN(4),=C'VOL1'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'HDR1'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'EOF1'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'EOV1'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'HDR2'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'EOF2'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=C'EOV2'
         BE    WHATLBLE
         CLC   EXTLBLIN(3),=C'UHL'
         BE    WHATLBLE
         CLC   EXTLBLIN(3),=C'UTL'
         BE    WHATLBLE
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2
         BE    WHATLBLA
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx
         BE    WHATLBLA
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx
         BE    WHATLBLA
         B     NOPRTEXT                    Not a label format
*
WHATLBLE DS    0H                          EBCDIC Labels
*                                          Go to appropriate routine
         CLC   EXTLBLIN(4),=C'VOL1'
         BE    PXTVOL1
         CLC   EXTLBLIN(4),=C'HDR1'
         BE    PXT1PR
         CLC   EXTLBLIN(4),=C'EOF1'
         BE    PXT1PR
         CLC   EXTLBLIN(4),=C'EOV1'
         BE    PXT1PR
         CLC   EXTLBLIN(4),=C'HDR2'
         BE    PXT2PR
         CLC   EXTLBLIN(4),=C'EOF2'
         BE    PXT2PR
         CLC   EXTLBLIN(4),=C'EOV2'
         BE    PXT2PR
         CLC   EXTLBLIN(3),=C'UHL'
         BE    PXTUSE
         CLC   EXTLBLIN(3),=C'UTL'
         BE    PXTUSE
         B     NOPRTEXT                    Not a label format
WHATLBLA DS    0H                          ASCII  Labels
*
*        Common ASCII preparation routines......
*
         OI    ASCIIFLG,X'01'       Say we're working in ASCII
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation
*
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.
         ST    R5,R5HXPRT              Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTCSECT,R5
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print
         L     R5,R5HXPRT              Restore R5
         DROP  R5
* -- >
*
*        ASCII preparations done......
*                                          Go to appropriate routine
*
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1
         BE    PXTVOL1A
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1
         BE    PXT1PRA
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1
         BE    PXT1PRA
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1
         BE    PXT1PRA
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2
         BE    PXT2PRA
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2
         BE    PXT2PRA
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2
         BE    PXT2PRA
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx
         BE    PXTUSEA
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx
         BE    PXTUSEA
         B     NOPRTEXT                    Not a label format
* ----------------------------------------------------------------- *
*                                                                   *
*   Various Label Printing Routines follow at this point.           *
*                                                                   *
* ----------------------------------------------------------------- *
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1             CLEAR PRINT LINE
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND
         PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER
         B     NOPRTEXT
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1             CLEAR PRINT LINE
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND
         PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER
         B     NOPRTEXT
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLIN
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLWK             Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX1              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLIN             Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX2              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLWK             Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTAXX2              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
PXTUSE   DS    0H                      Print EBCDIC USER Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLIN             Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTUSER              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
PXTUSEA  DS    0H                      Print ASCII  USER Label
         ST    R3,SAVE3REG
         LA    R3,EXTLBLWK             Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTUSER              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
         B     NOPRTEXT
* ----------------------------------------------------------------- *
NOPRTEXT DS    0H             Don't print external label on report
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02258
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02259
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02260
         B     WRITE1         WRITE LABEL RECORD                         02261
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02262
WRTTAPMK DS    0H                                                        02263
*** ----------------                                                     02264
         TM    INEODFLG,X'02'                                            02265
         BZ    NOEODNOW                                                  02266
         TM    WRLBLFLG,X'04'                                            02267
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02268
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02269
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02270
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02271
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02272
NOEODNOW DS    0H                                                        02273
*** ----------------                                                     02274
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02275
         B     WRITE1         WRITE TAPE MARK                            02276
* ------------------ SPECIAL ROUTINES ------------------------------- *  02277
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02278
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02279
         B     READIN             AND GO BACK WHERE YOU STARTED          02280
* ------------------ SPECIAL ROUTINES ------------------------------- *  02281
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02282
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02283
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02284
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02285
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02286
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02287
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02288
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02289
         B     CLOSMALL          FINISHED, GET OUT.                      02290
NOFIXLBL DS    0H                                                        02291
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02292
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02293
         B     READIN2        WRITE OUTPUTS AND FINISH                   02294
* ------------------------------------------------------------------- *  02295
*                                                                        02296
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02297
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02298
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02299
*      ALREADY.                                                          02300
*                                                                        02301
* ------------------ SPECIAL ROUTINES ------------------------------- *  02302
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02303
         EJECT                                                           02304
READGO1  DS    0H                                                        02305
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02306
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02307
         BZ    READNCNT                                                  02308
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                        02309
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02310
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02311
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02312
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02313
READNCNT DS    0H                                                        02314
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02315
**---->            LABEL STRIPPING CODE          BELOW                   02316
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02317
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02318
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02319
         BZ    RDNOSTRP           NO IT WASN'T                           02320
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02321
RDNOSTRP DS    0H                                                        02322
**---->            LABEL STRIPPING CODE          ABOVE                   02323
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02324
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02325
         ST    R7,STOR7REG                                               02326
         L     R7,BLOKCNT                                                02327
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02328
         ST    R7,BLOKCNT                                                02329
         L     R7,STOR7REG                                               02330
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02331
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02332
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02333
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.
NOINITT1 DS    0H                                                        02335
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02336
         B     WRITE1           CONTINUE                                 02337
*                                                             SBG 04/00  02338
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02339
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02340
* ------------------------- ADD LABEL TO NL CODE ----------- *           02341
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02342
         BZ    NONLSL1          NO.  BYPASS.                             02343
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02344
*** ---                                                                  02345
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02346
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02347
*                               DO NOT COLLECT 200 DOLLARS.              02348
*** ---                                                                  02349
NONLSL1  DS    0H                                                        02350
* ------------------------- ADD LABEL TO NL CODE ----------- *           02351
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02352
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02353
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02354
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        02355
         BO    WRCTLHDR         YES. PUT IT OUT.                         02356
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        02357
         BO    WRCTLEOF         YES. PUT IT OUT.                         02358
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        02359
         BO    WRCTLEOV         YES. PUT IT OUT.                         02360
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       02361
WRCTLHDR DS    0H                                                        02362
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02363
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  02364
         TM    ASCIIFLG,X'01'       Are we working in ASCII?
         BZ    WRCTLAS1         No. Don't translate the control card.
         ST    R5,R5HXPRT       Yes.   Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTCSECT,R5
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02365
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02366
WRCTLEOF DS    0H                                                        02367
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02368
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  02369
         TM    ASCIIFLG,X'01'       Are we working in ASCII?
         BZ    WRCTLAS2         No. Don't translate the control card.
         ST    R5,R5HXPRT       Yes.   Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTCSECT,R5
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02370
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02371
WRCTLEOV DS    0H                                                        02372
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02373
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  02374
         TM    ASCIIFLG,X'01'       Are we working in ASCII?
         BZ    WRCTLAS4         No. Don't translate the control card.
         ST    R5,R5HXPRT       Yes.   Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTCSECT,R5
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02375
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          02376
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          02377
NOCNTLWR DS    0H                                                        02378
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02379
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  02380
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  02381
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  02382
         BNE   RDNOSKIP                                       SBG 03/00  02383
         MVI   LINE-1,C' '                                    SBG 03/00  02384
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02385
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  02386
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02387
         B     READIN         DO ANOTHER READ                 SBG 03/00  02388
RDNOSKIP DS    0H                                             SBG 03/00  02389
         MVI   LINE-1,C' '                                    SBG 03/00  02390
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02391
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  02392
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  02393
         B     MARKFILE                                       SBG 03/00  02394
READINGO DS    0H                                             SBG 04/00  02395
*------------------------------------> HEX PRINT LIMIT - BELOW           02396
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02397
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            02398
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02399
NOHXPRST DS    0H                                                        02400
*------------------------------------> HEX PRINT LIMIT - ABOVE           02401
         ST    R7,STOR7REG                                               02402
         L     R7,FILECNT                                                02403
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  02404
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02405
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              02406
         ST    R7,FILECNT                                                02407
         L     R7,BLOKCNT                                                02408
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             02409
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         02410
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             02411
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            02412
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    02413
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02414
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02415
         BZ    MARKNCNT           NO-SKIP ROUTINE                        02416
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   02417
         MVC   FILECONT,=C'CONTAINING'                                   02418
         L     R4,DBINH           LOAD REG WITH HI ORDER                 02419
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             02420
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           02421
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  02422
         L     R4,DBINL           LOAD REG WITH LOW ORDER                02423
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            02424
         AP    QWORD,DWORD        AND ADD IT IN                          02425
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  02426
** ----                                                                  02427
         LM    R4,R5,TOTBYTES                                            02428
         A     R5,DBINL            LOW ORDER COUNT                       02429
         BNO   MARKNOVR            B IF NO OVERFLOW                      02430
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02431
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02432
MARKNOVR DS    0H                                                        02433
         A     R4,DBINH            HIGH ORDER                            02434
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               02435
** ----                                                                  02436
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02437
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  02438
         LM    R4,R5,LABBYTES                                            02439
         A     R5,LABINL           LOW ORDER COUNT                       02440
         BNO   MARKNOVL            B IF NO OVERFLOW                      02441
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02442
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02443
MARKNOVL DS    0H                                                        02444
         A     R4,LABINH           HIGH ORDER                            02445
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               02446
* - >                                                                    02447
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02448
         BZ    NOSEPLBL                                                  02449
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02450
         MVC   FILECUMT,=C'CUM LABEL:'                                   02451
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   02452
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02453
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02454
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02455
         CVD   R5,DWORD          LOW ORDER WORD                          02456
         AP    QWORD,DWORD       AND ADD IT IN                           02457
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02458
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02459
NOSEPLBL DS    0H                                                        02460
* - >                                                                    02461
         B     MARKNOLB                                                  02462
MARKISNL DS    0H                                                        02463
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             02464
         BO    MARKNOLB                                                  02465
         LM    R4,R5,FILBYTES                                            02466
         A     R5,DBINFL           LOW ORDER COUNT                       02467
         BNO   MARKNOVF            B IF NO OVERFLOW                      02468
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02469
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02470
MARKNOVF DS    0H                                                        02471
         A     R4,DBINFH           HIGH ORDER                            02472
         STM   R4,R5,FILBYTES                                            02473
* - >                                                                    02474
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02475
         BZ    NOSEPDAT                                                  02476
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02477
         MVC   FILECUMT,=C'CUM DATA :'                                   02478
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02479
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02480
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02481
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02482
         CVD   R5,DWORD          LOW ORDER WORD                          02483
         AP    QWORD,DWORD       AND ADD IT IN                           02484
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02485
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02486
NOSEPDAT DS    0H                                                        02487
* - >                                                                    02488
MARKNOLB DS    0H                                                        02489
** ----                                                                  02490
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02491
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02492
* - >                                                                    02493
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02494
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02495
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02496
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02497
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02498
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02499
         CVD   R5,DWORD          LOW ORDER WORD                          02500
         AP    QWORD,DWORD       AND ADD IT IN                           02501
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02502
* - >                                                                    02503
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02504
MARKNCNT DS    0H                                                        02505
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02506
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02507
MARKNCNE DS    0H                                                        02508
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02509
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02510
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02511
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02512
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02513
         MVC   FILECONT,=C'          '                                   02514
         MVC   FILECUMT,=C'          '                                   02515
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02516
         ST    R4,DBINH            ZERO BYTE COUNT                       02517
         ST    R4,DBINL            ZERO BYTE COUNT                       02518
         ST    R4,LABINH           ZERO BYTE COUNT                       02519
         ST    R4,LABINL           ZERO BYTE COUNT                       02520
         ST    R4,DBINFH           ZERO BYTE COUNT                       02521
         ST    R4,DBINFL           ZERO BYTE COUNT                       02522
MARKNTOT DS    0H                                                        02523
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02524
MARKFILE DS    0H                                                        02525
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02526
         ST    R7,BLOKCNT                                                02527
         L     R7,FILECNT                                                02528
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02529
         ST    R7,FILECNT                                                02530
         L     R7,STOR7REG                                               02531
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02532
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02533
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02534
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02535
         BZ    MARKFILA          NO - SKIP THIS CODE                     02536
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02537
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02538
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02539
MARKFILA DS    0H                                                        02540
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02541
         TM    PARMFLG4,X'02'   Stripping labels?                        02542
         BZ    MARKSTRX         no - bypass strip-related code           02543
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02544
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02545
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02546
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02547
MARKSTRX DS    0H                                                        02548
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02549
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02550
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02551
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02552
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02553
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02554
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02555
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02556
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02557
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02558
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02559
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02560
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02561
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02562
*                                                             SBG 04/00  02563
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02564
INEODATA DS    0H                                                        02565
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02566
*                                                                        02567
READIN2  DS    0H                                                        02568
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02569
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02570
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02571
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02572
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02573
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02574
         BZ    NOEXTMK           NO                                      02575
         B     WRTTAPMK                                                  02576
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02577
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02578
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02579
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02580
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02581
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02582
READ2STP DS    0H                                                        02583
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02584
READ2GO  DS    0H                                                        02585
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02586
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                   02587
* --- >>>  ------------------ below -------- Skip writing last T.M.      02588
* -------------------------------------------------------------- *       02589
*            When stripping labels, somehow an extra             *       02590
*            tape mark gets written.  This is a kludge           *       02591
*            to correct that.....                                *       02592
* -------------------------------------------------------------- *       02593
         TM    PARMFLG4,X'02'    Stripping Labels?                       02594
         BZ    READ2GNS          No. don't skip writing last t.m.        02595
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02596
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02597
*        PUT   SYSPRINT,LINE                                             02598
         B     WRITE17           Do not write the extra tape mark        02599
READ2GNS DS    0H                                                        02600
* --- >>>  ------------------ above -------- Skip writing last T.M.      02601
         B     WRITE1                                                    02602
         SPACE 3                                                         02603
* -------------------- Code for Initting Tapes ---------->>>>> below     02604
TLITWRIT DS    0H                                                        02605
         TM    PARMFLG3,X'01'                                            02606
         BZ    TLITWRIE                                                  02607
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02608
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02609
         BO    TLITREW2                YES. SET WRITE CCW BACK.          02610
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02611
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02612
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02613
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           02614
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02615
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02616
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02617
TLITSKP1 DS    0H                                                        02618
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02619
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02620
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02621
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02622
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02623
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02624
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02625
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       02626
* --> Hex printing - below                                               02627
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02628
         BZ    NPRHINT1                No. Bypass it.                    02629
         ST    R7,R7HXPRT              Save BAL register.                02630
         BAL   R7,HEXPRNEX             Hex print from external labels.   02631
         L     R7,R7HXPRT              Restore BAL register.             02632
NPRHINT1 DS    0H                                                        02633
* --> Hex printing - above                                               02634
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02635
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02636
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02637
TLITSKP2 DS    0H                                                        02638
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02639
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02640
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02641
* --> Hex printing - below                                               02642
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02643
         BZ    NPRHINT2                No. Bypass it.                    02644
         ST    R7,R7HXPRT              Save BAL register.                02645
         BAL   R7,HEXPRNEX             Hex print from external labels.   02646
         L     R7,R7HXPRT              Restore BAL register.             02647
NPRHINT2 DS    0H                                                        02648
* --> Hex printing - above                                               02649
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02650
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02651
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02652
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02653
TLITWRIE DS    0H                                                        02654
* -------------------- Code for Initting Tapes ---------->>>>> above     02655
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     02656
TLITASCI DS    0H               INIT ASCII TAPES.                        02657
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  02658
         BZ    TLITASCE         No. Bypass this code.                    02659
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    02660
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         02661
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          02662
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        02663
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               02664
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    02665
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           02666
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  02667
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02668
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          02669
TLITSKA1 DS    0H                                                        02670
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02671
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        02672
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02673
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02674
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02675
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02676
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    02677
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any       02678
* --> Hex printing - below                                               02679
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02680
         BZ    NPRHINA1                No. Bypass it.                    02681
*           Temporary ASCII translation is done here.           *        02682
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02683
         ST    R5,R5HXPRT              Save register.                    02684
         L     R5,SAVTRTCS             Point to translation table CSECT  02685
         USING TRTCSECT,R5                                               02686
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02687
         ST    R7,R7HXPRT              Save BAL register.                02688
         BAL   R7,HEXPRNEX             Hex print from external labels.   02689
         L     R7,R7HXPRT              Restore BAL register.             02690
         L     R5,R5HXPRT              Restore R5                        02691
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02692
         DROP  R5                                                        02693
NPRHINA1 DS    0H                                                        02694
* --> Hex printing - above                                               02695
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02696
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02697
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02698
TLITSKA2 DS    0H                                                        02699
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02700
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02701
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    02702
* --------------------------------------------------------------*        02703
*           Note:  The real ASCII translation is                *        02704
*                  done in the CHANGVOL routine that            *        02705
*                  gets executed just before each               *        02706
*                  output write.  Please note that              *        02707
*                  INASC3 and INASC4 imply CHGVOL.              *        02708
* --------------------------------------------------------------*        02709
* --> Hex printing - below                                               02710
         TM    PARMFLG5,X'20'          Is Hex Printing On?               02711
         BZ    NPRHINA2                No. Bypass it.                    02712
*           Temporary ASCII translation is done here.           *        02713
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           02714
         ST    R5,R5HXPRT              Save register.                    02715
         L     R5,SAVTRTCS             Point to translation table CSECT  02716
         USING TRTCSECT,R5                                               02717
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  02718
         ST    R7,R7HXPRT              Save BAL register.                02719
         BAL   R7,HEXPRNEX             Hex print from external labels.   02720
         L     R7,R7HXPRT              Restore BAL register.             02721
         L     R5,R5HXPRT              Restore R5                        02722
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       02723
         DROP  R5                                                        02724
NPRHINA2 DS    0H                                                        02725
* --> Hex printing - above                                               02726
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02727
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02728
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02729
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02730
TLITASCE DS    0H                                                        02731
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     02732
*                                                                        02733
*  WRITE TO OUTPUT TAPES                                                 02734
*                                                                        02735
WRITE1   DS    0H                                             SBG 06/00  02736
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02737
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02738
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02739
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02740
WRNOTPMK DS    0H                                                        02741
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02742
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02743
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02744
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02745
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02746
         BZ    WRITE2         NO                                         02747
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02748
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02749
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02750
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02751
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02752
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02753
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02754
         EXCP  OUTIOB         WRITE IT                                   02755
         WAIT  ECB=OUTECB     WAIT FOR IT                                02756
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02757
         BNE   OUTERR         NO - ERROR                                 02758
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02759
         BZ    WRITE3         NO                                         02760
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02761
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02762
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02763
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02764
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02765
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02766
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02767
         EXCP  OUTIOB         WRITE IT                                   02768
         WAIT  ECB=OUTECB     WAIT FOR IT                                02769
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02770
         BNE   OUTERR         NO - ERROR                                 02771
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02772
         BZ    WRITE4         NO                                         02773
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02774
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02775
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02776
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02777
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02778
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02779
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02780
         EXCP  OUTIOB         WRITE IT                                   02781
         WAIT  ECB=OUTECB     WAIT FOR IT                                02782
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02783
         BNE   OUTERR         NO - ERROR                                 02784
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02785
         BZ    WRITE5         NO                                         02786
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02787
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02788
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02789
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02790
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02791
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02792
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02793
         EXCP  OUTIOB         WRITE IT                                   02794
         WAIT  ECB=OUTECB     WAIT FOR IT                                02795
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02796
         BNE   OUTERR         NO - ERROR                                 02797
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02798
         BZ    WRITE6         NO                                         02799
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02800
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02801
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02802
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02803
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02804
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02805
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02806
         EXCP  OUTIOB         WRITE IT                                   02807
         WAIT  ECB=OUTECB     WAIT FOR IT                                02808
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02809
         BNE   OUTERR         NO - ERROR                                 02810
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02811
         BZ    WRITE7         NO                                         02812
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02813
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02814
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02815
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02816
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02817
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02818
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02819
         EXCP  OUTIOB         WRITE IT                                   02820
         WAIT  ECB=OUTECB     WAIT FOR IT                                02821
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02822
         BNE   OUTERR         NO - ERROR                                 02823
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02824
         BZ    WRITE8         NO                                         02825
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02826
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02827
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02828
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02829
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02830
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02831
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02832
         EXCP  OUTIOB         WRITE IT                                   02833
         WAIT  ECB=OUTECB     WAIT FOR IT                                02834
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02835
         BNE   OUTERR         NO - ERROR                                 02836
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02837
         BZ    WRITE9         NO                                         02838
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02839
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02840
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02841
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02842
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02843
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02844
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02845
         EXCP  OUTIOB         WRITE IT                                   02846
         WAIT  ECB=OUTECB     WAIT FOR IT                                02847
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02848
         BNE   OUTERR         NO - ERROR                                 02849
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02850
         BZ    WRITE10        NO                                         02851
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02852
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02853
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02854
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02855
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02856
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02857
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02858
         EXCP  OUTIOB         WRITE IT                                   02859
         WAIT  ECB=OUTECB     WAIT FOR IT                                02860
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02861
         BNE   OUTERR         NO - ERROR                                 02862
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02863
         BZ    WRITE11        NO                                         02864
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02865
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02866
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02867
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02868
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02869
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02870
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02871
         EXCP  OUTIOB         WRITE IT                                   02872
         WAIT  ECB=OUTECB     WAIT FOR IT                                02873
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02874
         BNE   OUTERR         NO - ERROR                                 02875
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02876
         BZ    WRITE12        NO                                         02877
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02878
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02879
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02880
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02881
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02882
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02883
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02884
         EXCP  OUTIOB         WRITE IT                                   02885
         WAIT  ECB=OUTECB     WAIT FOR IT                                02886
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02887
         BNE   OUTERR         NO - ERROR                                 02888
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02889
         BZ    WRITE13        NO                                         02890
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02891
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02892
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02893
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02894
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02895
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02896
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02897
         EXCP  OUTIOB         WRITE IT                                   02898
         WAIT  ECB=OUTECB     WAIT FOR IT                                02899
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02900
         BNE   OUTERR         NO - ERROR                                 02901
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02902
         BZ    WRITE14        NO                                         02903
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02904
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02905
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02906
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02907
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02908
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02909
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02910
         EXCP  OUTIOB         WRITE IT                                   02911
         WAIT  ECB=OUTECB     WAIT FOR IT                                02912
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02913
         BNE   OUTERR         NO - ERROR                                 02914
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02915
         BZ    WRITE15        NO                                         02916
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02917
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02918
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02919
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02920
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02921
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02922
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02923
         EXCP  OUTIOB         WRITE IT                                   02924
         WAIT  ECB=OUTECB     WAIT FOR IT                                02925
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02926
         BNE   OUTERR         NO - ERROR                                 02927
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02928
         BZ    WRITE16        NO                                         02929
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02930
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02931
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02932
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02933
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02934
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02935
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02936
         EXCP  OUTIOB         WRITE IT                                   02937
         WAIT  ECB=OUTECB     WAIT FOR IT                                02938
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02939
         BNE   OUTERR         NO - ERROR                                 02940
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02941
         BZ    WRITE17        NO                                         02942
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02943
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02944
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02945
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02946
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02947
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02948
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02949
         EXCP  OUTIOB         WRITE IT                                   02950
         WAIT  ECB=OUTECB     WAIT FOR IT                                02951
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02952
         BNE   OUTERR         NO - ERROR                                 02953
WRITE17  DS    0H                                                        02954
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02955
         BNE   WR17NTPM       No. Don't correct bytes moved field        02956
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02957
WR17NTPM DS    0H                                                        02958
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02959
         BO    ENDINPUT       YES. CLOSE.                                02960
         TM    FLAG2A,EOV     END OF INPUT?                              02961
         BO    ENDINPUT       YES - QUIT                                 02962
         B     READIN         NO - LOOP                                  02963
         SPACE 3                                                         02964
*                                                                        02965
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02966
*                                                                        02967
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02968
         BZ    INERR1         NO - ASSUME DATA CHECK                     02969
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02970
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02971
         B     INERR2         CONTINUE                                   02972
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02973
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02974
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02975
         MVI   INECB,X'00'    RESET ECB                                  02976
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02977
               6,INECB,ROUTCDE=(3)                                       02978
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02979
*                             WHO CARES WHAT THE REPLY IS                02980
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02981
         B     CLOSMALL                                                  02982
*        ABEND 69             QUIT                                       02983
         SPACE 3                                                         02984
*                                                                        02985
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02986
*                                                                        02987
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02988
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      02989
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02990
         BO    OUTERUC        YES. HANDLE IT.                            02991
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02992
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02993
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02994
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02995
         B     OUTERR2            GO FILL IN REST OF THE INFO            02996
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02997
         B     OUTERR2        CONTINUE                                   02998
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02999
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             03000
         L     R5,16          R5=CVT                                     03001
         L     R5,0(,R5)      R5=TCB WORDS                               03002
         L     R5,4(,R5)      R5=MY TCB                                  03003
         L     R5,12(,R5)     R5=TIOT                                    03004
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              03005
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  03006
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             03007
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     03008
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           03009
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                03010
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     03011
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 03012
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          03013
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       03014
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 03015
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       03016
         MVC   SAVELINE(133),LINE                                        03017
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03018
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      03019
         MVC   LINE(133),LINE-1      CLEAR LINE                          03020
         MVC   LINE(133),OUTCOUNT    How much was copied?                03021
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   03022
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              03023
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        03024
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              03025
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        03026
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      03027
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  03028
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03029
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 03030
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03031
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03032
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03033
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03034
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03035
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03036
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03037
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03038
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03039
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03040
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03041
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03042
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03043
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03044
         AP    QWORD,DWORD        AND ADD IT IN                          03045
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03046
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03047
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03048
* ---- >    WTO on a Unit Exception   < ---- Below                       03049
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03050
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03051
* ---- >    WTO on a Unit Exception   < ---- Above                       03052
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03053
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03054
*                               THIS IS A SEMI-NORMAL CONDITION          03055
*                               AND WHY INVOLVE THE OPERATOR?            03056
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03057
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03058
OUTERR4  DS    0H                                                        03059
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03060
         WTOR  '                                                       X 03061
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03062
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03063
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03064
         BNE   OUTERR3        NO - TRY AGAIN                             03065
* ------------------------------------------------------------------- *  03066
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03067
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03068
* ------------------------------------------------------------------- *  03069
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03070
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03071
*                             DON'T BOTHER WAITING FOR REWIND            03072
* ------------------------------------------------------------------- *  03073
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03074
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03075
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03076
         BNE   OUTERR5        NO                                         03077
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03078
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03079
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03080
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03081
         BNE   OUTERR6        NO                                         03082
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03083
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03084
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03085
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03086
         BNE   OUTERR7        NO                                         03087
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03088
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03089
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03090
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03091
         BNE   OUTERR8        NO                                         03092
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03093
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03094
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03095
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03096
         BNE   OUTERR9        NO                                         03097
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03098
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03099
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03100
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03101
         BNE   OUTERR10       NO                                         03102
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03103
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03104
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03105
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03106
         BNE   OUTERR11       NO                                         03107
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03108
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03109
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03110
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03111
         BNE   OUTERR12       NO                                         03112
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03113
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03114
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03115
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03116
         BNE   OUTERR13       NO                                         03117
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03118
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03119
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03120
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03121
         BNE   OUTERR14       NO                                         03122
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03123
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03124
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03125
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03126
         BNE   OUTERR15       NO                                         03127
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03128
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03129
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03130
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03131
         BNE   OUTERR16       NO                                         03132
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03133
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03134
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03135
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03136
         BNE   OUTERR17       NO                                         03137
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03138
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03139
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03140
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03141
         BNE   OUTERR18       NO                                         03142
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03143
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03144
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03145
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03146
         BNE   OUTERR19       NO                                         03147
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03148
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03149
*                             THEN IT MUST BE OUTPUT 16                  03150
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03151
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03152
         SPACE 3                                                         03153
*                                                                        03154
*  END OF INPUT -- FINISH UP                                             03155
*                                                                        03156
ENDINPUT DS    0H                                                        03157
         SPACE 3                                                         03158
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03159
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03160
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03161
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03162
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03163
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03164
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03165
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03166
         BO    ENDIN1         YES - CONTINUE                             03167
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03168
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03169
         BO    ENDIN2         YES - CONTINUE                             03170
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03171
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03172
         BO    ENDIN3         YES - CONTINUE                             03173
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03174
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03175
         BO    ENDIN4         YES - CONTINUE                             03176
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03177
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03178
         BO    ENDIN5         YES - CONTINUE                             03179
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03180
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03181
         BO    ENDIN6         YES - CONTINUE                             03182
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03183
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03184
         BO    ENDIN7         YES - CONTINUE                             03185
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03186
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03187
         BO    ENDIN8         YES - CONTINUE                             03188
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03189
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03190
         BO    ENDIN9         YES - CONTINUE                             03191
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03192
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03193
         BO    ENDIN10        YES - CONTINUE                             03194
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03195
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03196
         BO    ENDIN11        YES - CONTINUE                             03197
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03198
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03199
         BO    ENDIN12        YES - CONTINUE                             03200
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03201
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03202
         BO    ENDIN13        YES - CONTINUE                             03203
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   03204
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        03205
         BO    ENDIN14        YES - CONTINUE                             03206
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   03207
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        03208
         BO    ENDIN15        YES - CONTINUE                             03209
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   03210
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        03211
         BO    ENDIN16        YES - CONTINUE                             03212
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  03213
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   03214
         SPACE 3                                                         03215
*                                                                        03216
*  CLOSE ALL FILES                                                       03217
*                                                                        03218
CLOSMALL DS    0H                                                        03219
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    03220
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              03221
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         03222
         BZ    ENDINTOT          NO - SKIP ROUTINE                       03223
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               03224
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03225
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03226
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03227
         CVD   R5,DWORD          LOW ORDER WORD                          03228
         AP    QWORD,DWORD       AND ADD IT IN                           03229
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03230
         PUT   SYSPRINT,TOTBLINE                                         03231
         MVI   LINE,C' '                                                 03232
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03233
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     03234
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03235
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03236
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03237
         CVD   R5,DWORD          LOW ORDER WORD                          03238
         AP    QWORD,DWORD       AND ADD IT IN                           03239
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03240
         PUT   SYSPRINT,TOTLLINE                                         03241
         MVI   LINE,C' '                                                 03242
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03243
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      03244
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03245
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03246
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03247
         CVD   R5,DWORD          LOW ORDER WORD                          03248
         AP    QWORD,DWORD       AND ADD IT IN                           03249
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              03250
         PUT   SYSPRINT,TOTWLINE                                         03251
         MVI   LINE,C' '                                                 03252
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          03253
ENDINTOT DS    0H                                                        03254
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              03255
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  03256
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?     03257
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.       03258
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE
         MVI   LINE-1,C' '                                               03259
         MVC   LINE,LINE-1           CLEAR PRINT LINE                    03260
         MVC   INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1            03261
         MVC   LINE(133),INITMSG     MSG-WE'RE DOING INITTED TAPE        03262
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03263
NOINITT3 DS    0H                                                        03264
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  03265
         TM    PARMFLG3,X'01'   INIT ONLY?                               03266
         BO    NOCLOSIN                                                  03267
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      03268
         BO    NOCLOSIN                                                  03269
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      03270
         BO    NOCLOSIN                                                  03271
         CLOSE (IN)                                                      03272
NOCLOSIN DS    0H                                                        03273
         CLOSE (SYSPRINT)                                                03274
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  03275
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  03276
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    03277
         CLOSE (LABLDUMP)                                                03278
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            03279
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        03280
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     03281
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        03282
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     03283
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    03284
         CLOSE (LABADDIN)                                                03285
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        03286
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03287
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03288
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  03289
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03290
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             03291
         BZ    CLOSE1         NO                                         03292
         CLOSE (OUT1)         CLOSE OUTPUT 1                             03293
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             03294
         BZ    CLOSE2         NO                                         03295
         CLOSE (OUT2)         CLOSE OUTPUT 2                             03296
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             03297
         BZ    CLOSE3         NO                                         03298
         CLOSE (OUT3)         CLOSE OUTPUT 3                             03299
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             03300
         BZ    CLOSE4         NO                                         03301
         CLOSE (OUT4)         CLOSE OUTPUT 4                             03302
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             03303
         BZ    CLOSE5         NO                                         03304
         CLOSE (OUT5)         CLOSE OUTPUT 5                             03305
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             03306
         BZ    CLOSE6         NO                                         03307
         CLOSE (OUT6)         CLOSE OUTPUT 6                             03308
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             03309
         BZ    CLOSE7         NO                                         03310
         CLOSE (OUT7)         CLOSE OUTPUT 7                             03311
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             03312
         BZ    CLOSE8         NO                                         03313
         CLOSE (OUT8)         CLOSE OUTPUT 8                             03314
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             03315
         BZ    CLOSE9         NO                                         03316
         CLOSE (OUT9)         CLOSE OUTPUT 9                             03317
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            03318
         BZ    CLOSE10        NO                                         03319
         CLOSE (OUT10)        CLOSE OUTPUT 10                            03320
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            03321
         BZ    CLOSE11        NO                                         03322
         CLOSE (OUT11)        CLOSE OUTPUT 11                            03323
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            03324
         BZ    CLOSE12        NO                                         03325
         CLOSE (OUT12)        CLOSE OUTPUT 12                            03326
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            03327
         BZ    CLOSE13        NO                                         03328
         CLOSE (OUT13)        CLOSE OUTPUT 13                            03329
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            03330
         BZ    CLOSE14        NO                                         03331
         CLOSE (OUT14)        CLOSE OUTPUT 14                            03332
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            03333
         BZ    CLOSE15        NO                                         03334
         CLOSE (OUT15)        CLOSE OUTPUT 15                            03335
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            03336
         BZ    THEEND         NO                                         03337
         CLOSE (OUT16)        CLOSE OUTPUT 16                            03338
         SPACE 3                                                         03339
*                                                                        03340
*  Test for ABEND 069 first.  Did we come from an Input Error?           03341
*                                                                        03342
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       03343
         BZ    THEEND            No.  End normally.                      03344
         ABEND 69                QUIT                                    03345
*                                                                        03346
*  THE END                                                               03347
*                                                                        03348
THEEND   DS    0H                                                        03349
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 03350
         BO    THEEND0           YES WE DO.  Issue RC = 0.               03351
         MVC   WTOCBT+16(41),FILEDONE                                    03352
WTOCBT   WTO   'CBT990                                              '    03353
THEENDS  DS    0H                                                        03354
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               03355
         BO    THEEND16         Yes, issue RC = 16                       03356
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      03357
         BO    THEEND8          Yes, issue RC = 8                        03358
         B     THEEND0          Otherwise, issue RC = 0                  03359
THEEND16 DS    0H                                                        03360
         L     R13,4(,R13)                                               03361
         MVC   16(4,R13),=F'16'         Return code 16    in R15         03362
         B     THEEND2                                                   03363
THEEND8  DS    0H                                                        03364
         L     R13,4(,R13)                                               03365
         MVC   16(4,R13),=F'8'          Return code 8     in R15         03366
         B     THEEND2                                                   03367
THEEND0  DS    0H                                                        03368
         L     R13,4(,R13)                                               03369
         MVC   16(4,R13),=F'0'          Return code 0     in R15         03370
THEEND2  DS    0H                                                        03371
         LM    R14,R12,12(R13)                                           03372
         BR    R14                                                       03373
         EJECT                                                           03374
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      03375
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03376
*    BAL REGISTER IS R4.                                                 03377
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      03378
HEX      DS    0H                                                        03379
         MVC   1(1,R15),0(R1)        Move byte                           03380
         UNPK  0(3,R15),1(2,R15)     Unpack                              03381
         TR    0(2,R15),HEXTAB-240                                       03382
         LA    R15,2(,R15)           Increment output pointer            03383
         LA    R1,1(,R1)             Increment input pointer             03384
         BCT   R0,HEX                Decrement length, then loop         03385
         MVI   0(R15),C' '           Blank the trailing byte             03386
         BR    R4                    Return to caller                    03387
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     03388
         SPACE                                                           03389
* --------------------------------------------------------- * SBG 05/00  03390
*    BAL REGISTER IS R7.                                      SBG 05/00  03391
* --------------------------------------------------------- * SBG 05/00  03392
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03393
*                         ALTERED.                                       03394
         MVI   LINE-1,C' '                                               03395
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03396
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03397
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03398
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03399
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03400
* ----                                                                   03401
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03402
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03403
         MVC   VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG        03404
INDVVOLS DS    0H                                                        03405
* ----                                                                   03406
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03407
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03408
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03409
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03410
         BR    R7                    RETURN TO CALLER                    03411
* --------------------------------------------------------- * SBG 04/00  03412
*    BAL REGISTER IS R7.                                      SBG 04/00  03413
* --------------------------------------------------------- * SBG 04/00  03414
PRTXXX1  DS    0H                                             SBG 05/00  03415
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03416
         MVI   LINE-1,C' '                                    SBG 05/00  03417
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03418
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03419
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03420
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03421
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03422
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03423
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03424
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03425
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03426
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03427
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03428
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03429
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03430
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03431
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03432
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03433
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03434
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03435
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03436
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03437
PRTXXX1R BR    R7                                             SBG 05/00  03438
* --------------------------------------------------------- * SBG 04/00  03439
*    BAL REGISTER IS R7.                                      SBG 04/00  03440
* --------------------------------------------------------- * SBG 04/00  03441
PRTXXX2  DS    0H                                             SBG 05/00  03442
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03443
         MVI   LINE-1,C' '                                    SBG 05/00  03444
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03445
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03446
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03447
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03448
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute
         MVC   XXX2RFM+2(1),36(R3)   Control Character
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS
         CLC   =C'00000',5(R3)       Is Block Length 00000?
         BNE   PRX2NLBI              No. No LBI. Print what's here.
         CLI   70(R3),X'40'          Is first LBI field a blank?
         BNE   PRX2NLBI              No LBI field either. Print zeros.
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display
         B     PRX2LBI               And not the old blksize field.
PRX2NLBI DS    0H
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH
PRX2LBI  DS    0H
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03451
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03452
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03453
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03454
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03455
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03456
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03457
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03458
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03459
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03460
         B     PRX2MOV                                        SBG 04/00  03461
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03462
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03463
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03464
PRTXXX2R BR    R7                                             SBG 05/00  03465
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
PRTAXX2  DS    0H                    Print ASCII XXX2 Labels.
*
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.
*
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1           CLEAR PRINT LINE
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2RFM(1),4(R3)      RECFM
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute
         MVC   AXX2RFM+2(1),36(R3)   Control Character
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE
         PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL
PRTAXX2R BR    R7
* --------------------------------------------------------- * SBG 04/00  03466
*    BAL REGISTER IS R7.                                      SBG 04/00  03467
* --------------------------------------------------------- * SBG 04/00  03468
PRTUSER  DS    0H                                             SBG 05/00  03469
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03470
         MVI   LINE-1,C' '                                    SBG 05/00  03471
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03472
         MVI   USERLBL-1,C' '                                            03473
         MVC   USERLBL(133),USERLBL-1                                    03474
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03475
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03476
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03477
PRTUSERR BR    R7                                                        03478
* --------------------------------------------------------- *            03479
*    BAL REGISTER IS R7.                                                 03480
* --------------------------------------------------------- *            03481
PRTBLCNT DS    0H                                                        03482
         MVI   LINE-1,C' '                                               03483
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03484
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03485
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03486
PRTBLCNE BR    R7                                                        03487
* --------------------------------------------------------- *            03488
*    BAL REGISTER IS R7.                                                 03489
* --------------------------------------------------------- *            03490
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03491
         ST    R7,SAVE7REG                                               03492
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03493
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03494
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03495
BACKEXT1 L     R7,SAVE7REG                                               03496
BACKEXTE BR    R7                                                        03497
* --------------------------------------------------------- *            03498
*    BAL REGISTER IS R7.                                                 03499
* --------------------------------------------------------- *            03500
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03501
         ST    R7,SAVE7REG                                               03502
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03503
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03504
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03505
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03506
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03507
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03508
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03509
CLEARSV1 L     R7,SAVE7REG                                               03510
CLEARSVE BR    R7                                                        03511
* --------------------------------------------------------- *            03512
*    BAL REGISTER IS R7.                                                 03513
* --------------------------------------------------------- *            03514
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03515
         ST    R7,SAVE7REG                                               03516
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03517
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03518
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03519
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03520
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03521
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03522
         BZ    FIXALL3                                                   03523
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03524
         BZ    FIXLAST2                                                  03525
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03526
         BZ    FIXLAST1                                                  03527
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03528
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03529
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03530
         L     R7,SAVE7REG                                               03531
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03532
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03533
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03534
         L     R7,SAVE7REG                                               03535
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03536
FIXLAST1 DS    0H               REPLACE EOF2                             03537
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03538
         L     R7,SAVE7REG                                               03539
         B     ADDEOF2          CREATE THE EOF2                          03540
FIXEXTL1 DS    0H                                                        03541
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03542
         L     R7,SAVE7REG                                               03543
FIXEXTLE BR    R7                                                        03544
* --------------------------------------------------------- *            03545
*    BAL REGISTER IS R7.                                                 03546
* --------------------------------------------------------- *            03547
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03548
*                             IOS USES DURING EXCP PROCESSING.           03549
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03550
* ------------------------------------------------------------------- *  03551
         MVC   OUTIOB(4),IOB01                                           03552
         MVC   OUTCSW(8),FUL2ZERO                                        03553
         MVC   OUTDCBPT(4),FUL2ZERO                                      03554
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03555
         MVC   OUTDCBPT+8(4),IOB02                                       03556
CLEARIOE BR    R7                                                        03557
* --------------------------------------------------------- *            03558
*    BAL REGISTER IS R7.                                                 03559
* --------------------------------------------------------- *            03560
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03561
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03562
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03563
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03564
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03565
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03566
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03567
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03568
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03569
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03570
* -- >>
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?
         BZ    CHEBCVID             NO. NO TRANSLATION OF VOLSER
         ST    R5,R5HXPRT           Save register.
         L     R5,SAVTRTCS          Point to translation table CSECT.
         USING TRTCSECT,R5
         MVC   VOLASC(6),VOLCHG
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.
         DROP  R5
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace
         B     CHASCVID             And not the EBCDIC one.
CHEBCVID MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03571
CHASCVID DS    0H
* -- >>
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03572
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03573
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 03574
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03575
* -- >>
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?
         BZ    CHEBCTOW             NO. NO TRANSLATION OF VOLSER
         ST    R5,R5HXPRT           Save register.
         L     R5,SAVTRTCS          Point to translation table CSECT.
         USING TRTCSECT,R5
         MVC   TAPEOASC(14),TAPEOWN
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.
         DROP  R5
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace
         B     CHASCTOW                  And not the EBCDIC one.
CHEBCTOW DS    0H                                                        03571
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner          03576
CHASCTOW DS    0H
* -- >>
         MVC   LINE(133),LINE-1                                          03577
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     03578
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03579
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03580
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03581
         MVC   LINE(133),OWNRMSG                                         03582
         PUT   SYSPRINT,LINE                                             03583
CHNOTOWN DS    0H                                                        03584
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03585
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03586
CHEXTLAB DS    0H                                                        03587
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          03588
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            03589
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           03590
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03591
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03592
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03593
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03594
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03595
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03596
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03597
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03598
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03599
         BZ    CHNOZAPV            NO. BYPASS.                           03600
* -- >>
         TM    ASCIIFLG,X'01'
         BO    CHASCVE1
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER
CHASCVE1 DS    0H
         ST    R5,R5HXPRT           Save register.
         L     R5,SAVTRTCS          Point to translation table CSECT.
         USING TRTCSECT,R5
         MVC   VOLASC(6),VOLCHG
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.
         DROP  R5
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace
         B     CHASCVEX             And not the EBCDIC one.
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL
CHASCVEX DS    0H
* -- >>
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03602
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03603
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03604
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03605
* -- >>
         TM    ASCIIFLG,X'01'
         BO    CHASCVE2
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER
CHASCVE2 DS    0H
         ST    R5,R5HXPRT           Save register.
         L     R5,SAVTRTCS          Point to translation table CSECT.
         USING TRTCSECT,R5
         MVC   TAPEOASC(14),TAPEOWN
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.
         DROP  R5
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace
         B     CHASCTEX                  And not the EBCDIC one.
CHEBCTEX DS    0H                                                        03571
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner          03576
CHASCTEX DS    0H
* -- >>
         MVC   LINE(133),LINE-1                                          03607
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     03608
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03609
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03610
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03611
         MVC   LINE(133),OWNRMSG                                         03612
         PUT   SYSPRINT,LINE                                             03613
CHNOZAPV DS    0H                                                        03614
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03615
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03616
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03617
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03618
         BO    CHGPRINT            YES, PRINT.                           03619
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03620
         BO    CHGPRINT            YES, PRINT                            03621
         B     CHGWRIT                                                   03622
CHGPRINT DS    0H                                                        03623
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03624
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03625
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03626
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03627
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03628
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03629
         TM    EXASCFLG,X'01'
         BZ    CHGPRANT
         ST    R5,R5HXPRT        Save register.
         L     R5,SAVTRTCS       Point to translation table CSECT.
         USING TRTCSECT,R5
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC
         ST    R7,SAVE7RG1                                               03630
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03631
         L     R7,SAVE7RG1                                               03632
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII
         L     R5,R5HXPRT        Restore register.
         DROP  R5
         B     CHGWRIT
CHGPRANT DS    0H
         ST    R7,SAVE7RG1                                               03630
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03631
         L     R7,SAVE7RG1                                               03632
CHGWRIT  DS    0H                                             SBG 05/00  03633
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03634
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03635
         SPACE 3                                                         03636
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   03637
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03638
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        03639
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03640
CHASCLAB DS    0H                                                        03641
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03642
         BO    CHNOASCV            YES, SKIP SECOND WRITE                03643
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03644
         MVC   EXTLBLIN(4),AVOL1LIT                                      03645
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               03646
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          03647
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         03648
CHASCLX1 DS    0H                                                        03649
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   03650
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              03651
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    03652
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       03653
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           03654
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO          03655
         MVC   LINE(133),LINE-1                                          03656
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     03657
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        03658
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03659
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03660
         MVC   LINE(133),OWNRMSG                                         03661
         PUT   SYSPRINT,LINE                                             03662
CHNOASCV DS    0H                                                        03663
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       03664
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03665
         BO    CHGWRASX            YES, SKIP SECOND WRITE                03666
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03667
         BO    CHGASPRT            YES, PRINT.                           03668
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03669
         BO    CHGASPRT            YES, PRINT                            03670
         B     CHGWRAS                                                   03671
CHGASPRT DS    0H                                                        03672
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03673
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        03674
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03675
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        03676
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03677
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03678
         ST    R7,SAVE7RG1                                               03679
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     03680
         L     R7,SAVE7RG1                                               03681
         B     CHGWRAS                                                   03682
CHGWRASX DS    0H                                                        03683
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       03684
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    03685
CHGWRAS  DS    0H                                                        03686
         ST    R5,R5HXPRT        Save register.                          03687
         L     R5,SAVTRTCS       Point to translation table CSECT.       03688
         USING TRTCSECT,R5                                               03689
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    03690
         DROP  R5                                                        03691
         L     R5,R5HXPRT        Restore register.                       03692
CHASCEND BR    R7                  END OF ROUTINE - RETURN               03693
         SPACE 3                                                         03694
* --------------------------------------------------------- *            03695
*    BAL REGISTER IS R7.                                                 03696
* --------------------------------------------------------- *            03697
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03698
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03699
* --------------------------------------------------------- *            03700
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03701
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03702
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03703
         AR    R5,R2               ADD TO BYTE COUNT                     03704
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03705
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03706
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03707
ADDCNOOV DS    0H                                                        03708
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03709
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03710
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03711
* --------------------------------------------------------- *            03712
*    BAL REGISTER IS R7.                                                 03713
* --------------------------------------------------------- *            03714
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03715
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03716
* --------------------------------------------------------- *            03717
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03718
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03719
         BE    MOVEHI09                                                  03720
         MVC   0(4,R3),0(R2)                                             03721
         B     MOVEHIEN                                                  03722
         LA    R2,1(,R2)                                                 03723
         LA    R3,1(,R3)                                                 03724
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03725
         BE    MOVEHI08                                                  03726
         MVC   0(3,R3),0(R2)                                             03727
         B     MOVEHIEN                                                  03728
         LA    R2,1(,R2)                                                 03729
         LA    R3,1(,R3)                                                 03730
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03731
         BE    MOVEHI07                                                  03732
         MVC   0(2,R3),0(R2)                                             03733
         B     MOVEHIEN                                                  03734
         LA    R2,1(,R2)                                                 03735
         LA    R3,1(,R3)                                                 03736
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03737
         BE    MOVEHIEN                                                  03738
         MVC   0(1,R3),0(R2)                                             03739
MOVEHIEN BR    R7                                                        03740
* --------------------------------------------------------- *            03741
*    BAL REGISTER IS R7.                                                 03742
* --------------------------------------------------------- *            03743
****                                                                     03744
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03745
****                                                                     03746
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03747
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03748
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03749
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03750
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03751
****                                                                     03752
* --------------------------------------------------------- *            03753
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03754
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03755
         EXCP  INIOB          READ                                       03756
         WAIT  ECB=INECB      WAIT FOR READ                              03757
         TM    INCSW+4,X'01'  WAS TM READ?                               03758
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03759
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03760
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03761
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03762
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03763
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03764
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03765
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03766
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03767
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03768
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS            03769
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03770
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03771
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03772
* ------------------------------------------------------------------*    03773
*    Call the LABELCHK program and get the returns.                 *    03774
* ------------------------------------------------------------------*    03775
         L     R15,LABCHENT       Get entry point of called program      03776
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        03777
         LA    R1,PARMFLGS        Point R1 to parm flags.                03778
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    03779
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         03780
         BALR  R14,R15                 Do CALL.                          03781
         ST    R2,SAVELBCK             Address of returned user area     03782
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    03783
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.
*                                 A call to LABCHECK overlays INAREA,
*                                 so if a LABCHECK routine alters
*                                 a label, the alteration will be
*                                 written out to the output tapes.
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    03784
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   03785
         BO    CLOSMALL           Yes. Close all files and finish up.    03786
* ------------------------------------------------------------------*    03787
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03788
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03789
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03790
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03791
         TM    ISLBLFLG,X'02'
         BO    LBDQLABL
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03792
*                             BUT IF IT IS A DATA FILE,                  03793
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03794
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03795
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03796
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03797
         EXCP  INIOB          DO THIS EXCP                               03798
         WAIT  ECB=INECB      WAIT FOR READ                              03799
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03800
         BNE   LBDQINER       NO -- ERROR                                03801
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03802
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03803
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             03804
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     03805
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         03806
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03807
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      03808
         EXCP  INIOB          DO THIS EXCP                               03809
         WAIT  ECB=INECB      WAIT FOR READ                              03810
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03811
         BNE   LBDQINER       NO -- ERROR                                03812
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03813
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03814
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          03815
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03816
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     03817
         EXCP  INIOB          DO THIS EXCP                               03818
         WAIT  ECB=INECB      WAIT FOR READ                              03819
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03820
         BNE   LBDQINER       NO -- ERROR                                03821
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03822
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03823
LBDQREND BR    R7                                                        03824
* --------------------------------------------------------- *            03825
*    BAL REGISTER IS R7.                                                 03826
* --------------------------------------------------------- *            03827
****                                                                     03828
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        03829
****                                                                     03830
* --------------------------------------------------------- *            03831
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       03832
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 03833
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 03834
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     03835
         ST    R5,R5HXPRT        Save register.                          03836
         L     R5,SAVTRTCS       Point to translation table CSECT.       03837
         USING TRTCSECT,R5                                               03838
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               03839
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            03840
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        03841
         B     HEXPRNXX          Bypass Hex Print from external labels   03842
*                                                                        03843
HEXPRNEX DS    0H                Hex Print from External Label Input     03844
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 03845
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 03846
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      03847
         ST    R5,R5HXPRT        Save register.                          03848
         L     R5,SAVTRTCS       Point to translation table CSECT.       03849
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               03850
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            03851
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        03852
         L     R2,=F'80'         We know to print exactly 80 bytes.      03853
         B     MOVESIZ1          Now go print them.                      03854
*                                                                        03855
HEXPRNXX DS    0H                                                        03856
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      03857
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           03858
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           03859
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   03860
MOVESIZ1 DS    0H                                                        03861
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                03862
         BCTR  R2,0                ONE LESS FOR EXECUTE                  03863
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03864
         EX    R2,MOVRULER         PUT IN HEX RULER                      03865
         PUT   SYSPRINT,LINE                                             03866
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03867
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   03868
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     03869
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03870
         B     HEXEN000            and continue to print.                03871
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              03872
HEXEN000 DS    0H                                                        03873
         TM    PARMFLG5,X'80'      Is ASCII on?                          03874
         BZ    HEXEN001            No. Use EBCDIC printables.            03875
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            03876
         B     HEXENSK1                                                  03877
HEXEN001 DS    0H                                                        03878
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      03879
HEXENSK1 DS    0H                                                        03880
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03881
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        03882
         PUT   SYSPRINT,LINE                                             03883
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   03884
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     03885
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03886
         B     HEXEN002            and continue to print.                03887
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              03888
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       03889
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03890
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        03891
         PUT   SYSPRINT,LINE                                             03892
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   03893
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     03894
         EX    R2,MOVDATIN         No. Move the record from INAREA.      03895
         B     HEXEN003            and continue to print.                03896
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              03897
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        03898
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03899
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        03900
         PUT   SYSPRINT,LINE                                             03901
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      03902
         B     HEXPREND                                                  03903
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             03904
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             03905
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             03906
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             03907
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             03908
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             03909
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             03910
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             03911
HEXPREND DS    0H                                                        03912
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              03913
NOHEXPRO DS    0H                                                        03914
         L     R5,R5HXPRT                                                03915
         DROP  R5                                                        03916
         BR    R7             RETURN TO CALLER                           03917
* --------------------------------------------------------- *            03918
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  03919
         EJECT                                                           03920
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  03921
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            03922
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           03923
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  03924
FUL2ZERO DC    2F'0'                                                     03925
IOB01    DC    X'02000000'                                               03926
IOB02    DC    X'00010000'                                               03927
PL4NO3   DC    PL4'3'                                                    03928
BLOKCNTP DC    F'0'                                                      03929
FILECNTP DC    F'1'                                                      03930
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       03931
TOTBYH   DC    F'0'                                                      03932
TOTBYL   DC    F'0'                                                      03933
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  03934
PRVBYH   DC    F'0'                                                      03935
PRVBYL   DC    F'0'                                                      03936
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        03937
DBINFH   DC    F'0'                                                      03938
DBINFL   DC    F'0'                                                      03939
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       03940
DBINH    DC    F'0'                                                      03941
DBINL    DC    F'0'                                                      03942
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      03943
LABINH   DC    F'0'                                                      03944
LABINL   DC    F'0'                                                      03945
WORKA    DC    D'0'                                                      03946
WORKL    DC    D'0'                                                      03947
WORKP    DC    D'0'                                                      03948
SAV01MLT DC    D'0'                                                      03949
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     03950
HEXSAVE  DS    3F                    Register save for HEX macro         03951
BLOKCNT  DC    F'0'                                                      03952
FILECNT  DC    F'1'                                                      03953
LABELCNT DC    F'0'                                                      03954
SAVUNIT  DC    CL4' '                                                    03955
         DC    CL1' '         Need this to absorb blank from HEX macro   03956
SAVDDN   DC    CL5' '                                                    03957
SAVVOLSR DC    CL6' '                                                    03958
SAVBYTES DC    X'0000'                                                   03959
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       03960
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      03961
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     03962
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        03963
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  03964
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  03965
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             03966
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         03967
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       03968
*              X'01'          TAPE IS SL                                 03969
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  03970
*              X'01'          Hex printing from EXTLBLIN.                03971
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      03972
*              X'00'          WE ARE NOW WRITING DATA FROM THE           03973
*                             INPUT TAPE. X'01' IS OFF.                  03974
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         03975
*                             EXTERNAL FILE                              03976
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          03977
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            03978
*              X'08'          WE CAME FROM THE LBLINEND LABEL            03979
*                             THIS MEANS EOF OF THE LABADDIN FILE        03980
*              X'10'          FINISHED FIXING LABELS                     03981
**** ----- LABELCHK -------------------->>>>  Passed area, below         06856
*                                                                        06857
LCHKPASS DS    0H                                                        06858
*                                                                        06859
INAREAX  DC    CL80' '        Read labels into here.                     06860
         DC    CL40' '        Padding for possible overflow.             06861
* --------------------------------------------------------- *            06862
*                                                                        06863
*                                                                        06864
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       06865
*              X'00'          DATA IS NOT A LABEL                        06866
*              X'01'          DATA IS A LABEL                            06867
*              X'02'          DATA IS AN ASCII LABEL                     06867
*                                                                        06868
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               06869
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             06870
*              X'02'          BECAUSE OF SYSIN    DD MISSING             06871
*              X'04'          BECAUSE OF LABADDIN DD MISSING             06872
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06873
*              X'01'          LABLDUMP DD IS OPEN                        06874
*              X'02'          SYSIN    DD IS OPEN                        06875
*              X'04'          LABADDIN DD IS OPEN                        06876
L80FLAG  DC    X'00'                                                     06877
*              X'01'          LAST DATA WAS 80 BYTE RECORD               06878
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    06879
*              X'01'          HDR1 HAS BEEN SEEN                         06880
*              X'02'          HDR2 HAS BEEN SEEN                         06881
*              X'04'          VOL1 HAS BEEN SEEN                         06882
*              X'08'          HDR1 IS FROM AN INITTED TAPE               06883
*              X'10'          EOF1 HAS BEEN SEEN                         06884
*              X'20'          EOF2 HAS BEEN SEEN                         06885
*              X'40'          EOV1 HAS BEEN SEEN                         06886
*              X'80'          EOV2 HAS BEEN SEEN                         06887
ASCIIFLG DC    X'00'          Label is ASCII if X'01'
EXASCFLG DC    X'00'          External Label is ASCII if X'01'
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   06888
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          06889
CLOSMFLG DC    X'00'          If X'01' then close all open files         06890
* --------------------------                                             06891
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     06892
*              X'01'          WE ARE IN A HDR GROUP                      06893
*              X'02'          WE ARE IN A EOF GROUP                      06894
*              X'04'          WE ARE IN A EOV GROUP                      06895
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    06896
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       06897
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII
* ---------- *                                                           06898
* --------------------------------------------------------- *            06899
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        06900
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           06901
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           06902
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           06903
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             06904
VOLCHG   DC    C'      '                                                 06905
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        06906
VOLASC   DC    C'      '     ASCII VOLUME
LCHKPASE EQU   *-LCHKPASS                                                06907
**** ----- LABELCHK -------------------->>>>  Passed area, above         06908
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04036
*              X'01'          ERROR WAS PRESENT                          04037
OUTBYT   DS    0F                                                        04038
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04039
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04040
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04041
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04042
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04043
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04044
         DC    C'      '                                                 04045
         DC    C'0'                                                      04046
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04047
         DC    C'      '                                                 04048
DWORD    DC    D'0'                                                      04049
QWORD    DS    PL16                                                      04050
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04051
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1             04051
         CNOP  0,8                                                       04052
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                         04053
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                         04054
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                         04055
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04056
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES   04057
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE  04058
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04059
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04060
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04061
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04062
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE      04063
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.      04064
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04065
INECB    DC    F'0'                                                      04066
INIOB    DC    X'02000000'                                               04067
         DC    A(INECB)                                                  04068
INCSW    DC    2F'0'                                                     04069
INCCWPT  DC    A(INCCW)                                                  04070
         DC    A(IN)                                                     04071
         DC    F'0'                                                      04072
         DC    X'00010000'                                               04073
OUTECB   DC    F'0'                                                      04074
OUTIOB   DC    X'02000000'                                               04075
         DC    A(OUTECB)                                                 04076
OUTCSW   DC    2F'0'                                                     04077
OUTCCWPT DC    A(OUTCCW)                                                 04078
OUTDCBPT DC    A(OUT1)                                                   04079
         DC    F'0'                                                      04080
         DC    X'00010000'                                               04081
REWECB   DC    F'0'                                                      04082
REWIOB   DC    X'02000000'                                               04083
         DC    A(REWECB)                                                 04084
REWCSW   DC    2F'0'                                                     04085
REWCCWPT DC    A(REWCCW)                                                 04086
REWDCBPT DC    A(OUT1)                                                   04087
         DC    F'0'                                                      04088
         DC    X'00010000'                                               04089
         SPACE 3                                                         04090
DDOCHG   DC    C'     '                                                  04091
DDOUT1   DC    C'OUT1 '                                                  04092
DDOUT2   DC    C'OUT2 '                                                  04093
DDOUT3   DC    C'OUT3 '                                                  04094
DDOUT4   DC    C'OUT4 '                                                  04095
DDOUT5   DC    C'OUT5 '                                                  04096
DDOUT6   DC    C'OUT6 '                                                  04097
DDOUT7   DC    C'OUT7 '                                                  04098
DDOUT8   DC    C'OUT8 '                                                  04099
DDOUT9   DC    C'OUT9 '                                                  04100
DDOUT10  DC    C'OUT10'                                                  04101
DDOUT11  DC    C'OUT11'                                                  04102
DDOUT12  DC    C'OUT12'                                                  04103
DDOUT13  DC    C'OUT13'                                                  04104
DDOUT14  DC    C'OUT14'                                                  04105
DDOUT15  DC    C'OUT15'                                                  04106
DDOUT16  DC    C'OUT16'                                                  04107
FLAGLIT  DC    C' - FLAGS - '                                            04108
* --------------------------                                             04109
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04110
FLAG1    DC    X'00'                                                     04111
OP1      EQU   X'80'                                                     04112
OP2      EQU   X'40'                                                     04113
OP3      EQU   X'20'                                                     04114
OP4      EQU   X'10'                                                     04115
OP5      EQU   X'08'                                                     04116
OP6      EQU   X'04'                                                     04117
OP7      EQU   X'02'                                                     04118
OP8      EQU   X'01'                                                     04119
FLAG2    DC    X'00'                                                     04120
OP9      EQU   X'80'                                                     04121
OP10     EQU   X'40'                                                     04122
OP11     EQU   X'20'                                                     04123
OP12     EQU   X'10'                                                     04124
OP13     EQU   X'08'                                                     04125
OP14     EQU   X'04'                                                     04126
OP15     EQU   X'02'                                                     04127
OP16     EQU   X'01'                                                     04128
FLAG2A   DC    X'00'                                          SBG 03/00  04129
ERR      EQU   X'02'                                                     04130
EOV      EQU   X'01'                                                     04131
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.
FF       EQU   X'FF'                                                     04132
FLAG3    DC    X'00'                                                     04133
FLAG4    DC    X'00'                                                     04134
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04135
* ---------- *                                                           04136
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04137
*              x'01'    Yes.                                             04138
* ---------- *                                                           04139
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04140
*              X'01'    HDR1 HAS BEEN READ IN                            04141
*              X'02'    HDR2 HAS BEEN READ IN                            04142
*              X'04'    VOL1 HAS BEEN READ IN                            04143
*              X'08'    UHL  HAS BEEN READ IN                            04144
*              X'10'    EOF1 HAS BEEN READ IN                            04145
*              X'20'    EOF2 HAS BEEN READ IN                            04146
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04147
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04148
* ---------- *                                                           04149
STRIPFLG DC    X'00'                                                     04150
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04151
DATFLAG  DC    X'00'                                          SBG 03/00  04152
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04153
* --------------------------------------------------------- * SBG 04/00  04154
VOLDD    DC    C'     '                                                  04155
STOR7REG DS    F                                                         04156
TOTB7REG DS    F                                                         04157
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04158
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04159
SAVE13LC DC    3F'0'                                                     04160
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04161
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        04162
         SPACE 3                                                         04163
LABELITH DC    CL80'----ENDOFLABELHEADER '                               04164
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            04165
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               04166
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            04167
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   04168
VOL1LABL DS    0CL80                                                     04169
VOL1LIT  DC    CL4'VOL1'                                                 04170
VOL1SERL DC    CL6' '                                                    04171
VOL1FIL1 DC    CL31' '                                                   04172
VOL1ONER DC    CL10' '                                                   04173
VOL1FIL2 DC    CL29' '                                                   04174
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   04175
HDR1INIT DS    0CL80                                                     04176
HDR1ILIT DC    CL4'HDR1'                                                 04177
HDR1IFIL DC    76C'0'                                                    04178
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04179
AVOL1LAB DS    0CL80                                                     04180
AVOL1LIT DC    CL4'VOL1'                                                 04181
AVOL1SER DC    CL6' '                                                    04182
AVOL1ACC DC    CL1' '                                                    04183
AVOL1RS1 DC    CL13' '                                                   04184
AVOL1IMP DC    CL13' '                                                   04185
AVOL1OWN DC    CL14' '                                                   04186
AVOL1RS2 DC    CL28' '                                                   04187
AVOL1LVL DC    CL1'3'                                                    04188
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   04189
AHDR1INI DS    0CL80                                                     04190
AHDR1LIT DC    CL4'HDR1'                                                 04191
AHDR1ID1 DC    23C'0'                                                    04192
AHDR1FSN DC    CL4'0001'                                                 04193
AHDR1FSQ DC    CL4'0001'                                                 04194
AHDR1GNM DC    CL4'0001'                                                 04195
AHDR1VNM DC    CL2'00'                                                   04196
AHDR1CRD DC    CL6' 00000'                                               04197
AHDR1EXD DC    CL6' 00000'                                               04198
AHDR1ACC DC    CL1' '                                                    04199
AHDR1BKC DC    CL6'000000'                                               04200
AHDR1OSC DC    CL20'IBMZLA '                                             04201
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   04202
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          04203
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04204
         DC    CL78' '                                                   04205
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          04206
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04207
         DC    CL78' '                                                   04208
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          04209
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   04210
         DC    CL78' '                                                   04211
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  04212
         DC    C'R TAPE COPY OPERATION '                                 04213
         DC    CL58' '                                                   04214
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  04215
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  04216
         DC    C'A PARM OF INITVOLS.'                                    04217
         DC    CL8' '                                                    04218
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  04219
         DC    C'                             MEMBER=         VOLUME= '  04220
         DC    C'                          '                             04221
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  04222
         DC    C'                             MEMBER=         VOLUME= '  04223
         DC    C'                          '                             04224
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  04225
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04226
         DC    C' MULTIPLE OF 80           '                             04227
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04228
         DC    C' IS TREATED AS NL.                                   '  04229
         DC    CL27' '                                                   04230
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  04231
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  04232
         DC    CL27' '                                                   04233
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  04234
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  04235
         DC    CL27' '                                                   04236
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 04237
         DC    CL6'&HEXDFLM'                                             04238
         DC    C' RECORDS WILL'                                          04239
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  04240
         DC    C'SYSIN.'                                                 04241
         DC    CL17' '                                                   04242
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  04243
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  04244
         DC    C'UT TAPES.                 '                             04245
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  04246
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  04247
         DC    C' MULTIPLE OF 80           '                             04248
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  04249
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  04250
         DC    C'IMAGES.                   '                             04251
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  04252
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  04253
         DC    C'                           '                            04254
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  04255
         DC    C'ing a Tape Mark right now.                           '  04256
         DC    C'                          '                             04257
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  04258
         DC    C'.  Divide by 3 for the SL file number ***            '  04259
         DC    C'                          '                             04260
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  04261
         DC    C'.  Multiply by 3 for the NL file number ***          '  04262
         DC    C'                          '                             04263
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  04264
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  04265
         DC    C't code PARM=SLLIM.        '                             04266
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         04267
         DC    C'TERMINATED '                                            04268
         DC    76C'*'                                                    04269
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    04270
         DC    82C'*'                                                    04271
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  04272
         DC    C' FOR DDNAME '                                           04273
VOLDDN   DC    C'     '                                                  04274
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  04275
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 04276
OWNRTID  DC    C'          '                                             04277
OWNRTIDE DC    C'    '
OWNRLIT1 DC    C' FOR DDNAME '                                           04278
OWNRDDO  DC    C'     '                                                  04279
OWNRFIL2 DC    64C' '                                                    04280
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  04281
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  04282
         DC    103C' '                                        SBG 03/00  04283
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  04284
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  04285
         DC    69C' '                                         SBG 06/00  04286
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                04287
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                04288
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           04289
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                04290
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           04291
INITSER  DC    C'      '                                      SBG 03/00  04292
INITBLNK DC    76C' '                                         SBG 03/00  04293
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  04294
VOL1SER  DC    C'      '                                      SBG 03/00  04295
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  04296
VOL1OWNR DC    C'          '                                  SBG 04/00  04297
VOL1OWNE DC    C'    '
VOL1BLNK DC    59C' '
         DC    C' '                                                      04299
USERLBL  DC    81C' '                                         SBG 03/00  04300
         DC    52C' '                                                    04301
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  04302
XXX1VOL  DC    C'      '                                      SBG 05/00  04303
XXX1DSNL DC    C' DSN='                                       SBG 05/00  04304
XXX1DSN  DC    C'                 '                           SBG 05/00  04305
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  04306
XXX1DSQ  DC    C'    '                                        SBG 05/00  04307
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  04308
XXX1VSQ  DC    C'    '                                        SBG 05/00  04309
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  04310
XXX1BLCH DC    C'    '                                        SBG 05/00  04311
XXX1BLC  DC    C'      '                                      SBG 05/00  04312
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  04313
XXX1CRD  DC    C'      '                                      SBG 05/00  04314
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  04315
XXX1EXD  DC    C'      '                                      SBG 05/00  04316
XXX1BLNK DC    30C' '                                         SBG 03/00  04317
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                         SBG 05/00  04318
XXX2RFM  DC    C' '                                           SBG 05/00  04319
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     04320
XXX2BKLE DS    0CL10
XXX2BKL  DC    C'     '
         DC    C'     '
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  04322
XXX2RCL  DC    C'     '                                       SBG 05/00  04323
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  04324
XXX2TDN  DC    C' '                                           SBG 05/00  04325
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  04326
XXX2JST  DC    C'                 '                           SBG 05/00  04327
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  04328
XXX2IDR  DC    C'   '                                         SBG 05/00  04329
XXX2BLNK DC    8C' '                                          SBG 03/00  04330
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW
AXX2LBL  DC    C' XXX2 LABEL: RECFM='
AXX2RFM  DC    C' '
AXX2BKLL DC    C'    BLOCK LENGTH: '
AXX2BKLE DS    0CL10
AXX2BKL  DC    C'     '
         DC    C'     '
AXX2RCLL DC    C'   RECORD LENGTH: '
AXX2RCL  DC    C'     '
AXX2TDNL DC    C'  TAPE DEN: '
AXX2TDN  DC    C' '
AXX2JSTL DC    C'   JOB/JOB STEP: '
AXX2JST  DC    C'                 '
AXX2CCSL DC    C'   CCSID '
AXX2CCS  DC    C'     '
AXX2BLNK DC    6C' '
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        04331
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               04332
OUTCFCNT DC    C'XXXXXXXXXX'                                             04333
         DC    C'  Bytes:'                                               04334
OUTCBCNT DC    CL26' '                                                   04335
         DC    C' '                                                      04336
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        04337
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04338
         DC    40C'*'                                                    04339
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        04340
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04341
         DC    40C'*'                                                    04342
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        04343
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         04344
         DC    40C'*'                                                    04345
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               04346
FILEPBYT DS    0CL44                                                     04347
FILEDFL1 DC    C' '                                                      04348
FILECONT DC    C'          '                                             04349
FILEDFL2 DC    C' '                                                      04350
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             04351
         DC    C' BYTES'                                                 04352
FILETBYT DS    0CL44                                                     04353
FILEDFL3 DC    C'    '                                                   04354
FILECUMT DC    C'          '                                             04355
FILEDFL4 DC    C' '                                                      04356
FILETBYE DC    C' 9,999,999,999,999,999,999'                             04357
         DC    8C' '                                                     04358
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     04359
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     04360
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      04361
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  04362
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 04363
               LSER: XXXXXX '                                 SBG 06/00  04364
         DC    66C' '                                         SBG 06/00  04365
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 04366
               ERIAL XXXXXX '                                 SBG 06/00  04367
         DC    66C' '                                         SBG 06/00  04368
         DC    C' '                                                      04369
HEXPRTWK DC    CL133' '                                                  04370
         DC    C' '                                                      04371
LINE     DC    CL133' '                                                  04372
         DC    C' '                                                      04373
SAVELINE DC    CL133' '                                                  04374
LINE44   DC    CL44' '                                                   04375
RULERHEX DS    0CL132                                                    04376
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   04377
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  04378
         DC    C'----1----+----2----+----3----+----4'                    04379
REPLY    DC    C'      '                                                 04380
COPIED   DC    C'COPIED '                                     SBG 03/00  04381
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  04382
FULLWORK DS    0F                                             SBG 03/00  04383
         DC    H'0'                                           SBG 03/00  04384
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  04385
         DC    2F'0'               FILLER                     SBG 05/00  04386
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     04387
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    04388
* --------------------------------------------------------- * SBG 05/00  04389
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                04390
PARMFLG1 DC    X'00'                                                     04391
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                04392
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               04393
PARMFLG2 DC    X'00'                                                     04394
PARMFLG3 DC    X'00'                                                     04395
PARMFLG4 DC    X'00'                                                     04396
PARMFLG5 DC    X'00'                                                     04397
PARMFLG6 DC    X'00'                                                     04398
PARMFLG7 DC    X'00'                                                     04399
PARMFLG8 DC    X'00'                                                     04400
PARMFLG9 DC    X'00'                                                     04401
PARMFLGA DC    X'00'                                                     04402
PARMFLLN EQU   *-PARMFLGS                                                04403
* --------------------------------------------------------- * SBG 05/00  04404
         DS    0F                                                        04405
STRTVALU DS    0CL(ENDVALUE)                                             04406
         DC    A(ENDVALUE)                                               04407
PARMSLEN DC    F'0'                LENGTH OF PARMS                       04408
*                                  Upon entry to PARMCHEK, contains      04409
*                                  the PARM address from COPYMODS,       04410
*                                  which gets overlaid.                  04411
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       04412
*                                  Upon entry to PARMCHEK, contains      04413
*                                  the PARM address from COPYMODS,       04414
*                                  which gets overlaid.                  04415
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               04416
*                                  Upon entry to PARMCHEK, contains      04417
*                                  the PARM length from COPYMODS,        04418
*                                  which gets overlaid.                  04419
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04420
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04421
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             04422
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   04423
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04424
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   04425
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04426
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04427
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  04428
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 04429
         DC    CL7' '              FILLER                                04430
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            04431
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04432
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          04433
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  04434
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      04435
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         04436
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         04437
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         04438
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       04439
TAPEOWN  DC    CL10' '                                                   04440
TAPEOEXT DC    CL4' '                                                    04441
TAPEOASC DC    CL14' '
OVERFLAG DC    X'00'                                                     04442
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               04443
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    04444
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         04445
LIMCHAR  DC    CL10' '                                                   04446
LABCHAR  DC    CL10' '                                                   04447
PRTCHAR  DC    CL10' '                                                   04448
ENDVALUE EQU   (*-PARMSLEN)+4                                            04449
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     04450
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    04451
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     04452
* --------------------------------------------------------- *            04453
*              FORMAT OF PARM TABLE                                      04454
*              ONE ENTRY IS 20 BYTES                                     04455
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               04456
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 04457
*                               X'00' SAYS TURN FLAG ON                  04458
*                               X'10' SET ENTRY AS A DEFAULT             04459
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               04460
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                04461
*                                WHICH ALLOWS FOR 80 PARMS               04462
*                                THAT DON'T HAVE TO BE                   04463
*                                SEPARATED BY A COMMA.                   04464
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              04465
* --------------------------------------------------------- *            04466
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               04467
* --------------------------------------------------------- *            04468
         SPACE 3                                                         04469
         LTORG                                                           04470
         SPACE 3                                                         04471
         DS    0D                                             SBG 09/00  04472
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        04473
LBNJFCB  DC    44F'0'                                                    04474
         DS    0D                                             SBG 09/00  04475
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        04476
LBLJFCB  DC    44F'0'                                                    04477
         DS    0D                                             SBG 05/00  04478
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        04479
OUTJFCB  DC    44F'0'                                                    04480
         DS    0D                                             SBG 06/00  04481
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  04482
INJFCB   DC    44F'0'                                         SBG 06/00  04483
         SPACE 3                                                         04484
VOLALL   DS    0CL96         16 X 6                                      04485
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04486
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04487
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04488
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04489
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04490
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04491
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04492
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04493
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04494
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04495
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04496
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04497
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04498
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04499
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04500
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04501
VOLALLLN EQU   *-VOLALL
* --------------------------------------------------------- * SBG 05/00  04502
         SPACE 3                                                         04503
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04504
               EXLST=INEXLST                                             04505
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04506
               EXLST=OUTEXLST                                            04507
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04508
               EXLST=OUTEXLST                                            04509
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04510
               EXLST=OUTEXLST                                            04511
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04512
               EXLST=OUTEXLST                                            04513
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04514
               EXLST=OUTEXLST                                            04515
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04516
               EXLST=OUTEXLST                                            04517
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04518
               EXLST=OUTEXLST                                            04519
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04520
               EXLST=OUTEXLST                                            04521
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04522
               EXLST=OUTEXLST                                            04523
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04524
               EXLST=OUTEXLST                                            04525
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04526
               EXLST=OUTEXLST                                            04527
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04528
               EXLST=OUTEXLST                                            04529
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04530
               EXLST=OUTEXLST                                            04531
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04532
               EXLST=OUTEXLST                                            04533
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04534
               EXLST=OUTEXLST                                            04535
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04536
               EXLST=OUTEXLST                                            04537
         ENTRY SYSPRINT                                                  04538
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04539
               BLKSIZE=133                                               04540
         ENTRY LABLDUMP                                                  04541
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04542
               EXLST=LBLEXLST                                            04543
         ENTRY LABADDIN                                                  04544
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04545
               EXLST=LBNEXLST,EODAD=LBLINEND                             04546
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04547
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04548
SAVE2TO3 DC    2F'0'                                                     04549
SAVE3REG DC    F'0'                                                      04550
SAVE7BA1 DC    F'0'                                                      04551
SAVE7REG DC    F'0'                                                      04552
SAVE7BAL DC    F'0'                                                      04553
SAVE7RG1 DC    F'0'                                                      04554
SAVE7RG2 DC    F'0'                                                      04555
SAVE7RG3 DC    F'0'                                                      04556
SAVE7RG4 DC    F'0'                                                      04557
R5HXPRT  DC    F'0'                                                      04558
R7HXPRT  DC    F'0'                                                      04559
SAVTRTCS DC    F'0'                                                      04560
ENTRYPT  DC    F'0'                                                      04561
LABCHENT DC    F'0'                                                      04562
PARMSAVE DC    F'0'                                                      04563
PARMADDR DC    F'0'                                                      04564
USERSAVE DC    F'0'                                                      04565
SAVELBCK DC    F'0'                                                      04566
         DC    CL4' '                                                    04567
HDR1SAV  DC    CL80' '                                                   04568
HDR2SAV  DC    CL80' '                                                   04569
UHL1SAV  DC    CL80' '                                                   04570
UHL2SAV  DC    CL80' '                                                   04571
UHL3SAV  DC    CL80' '                                                   04572
UHL4SAV  DC    CL80' '                                                   04573
UHL5SAV  DC    CL80' '                                                   04574
UHL6SAV  DC    CL80' '                                                   04575
UHL7SAV  DC    CL80' '                                                   04576
UHL8SAV  DC    CL80' '                                                   04577
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04578
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      04579
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04580
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04581
TRTCSECT CSECT                                                           04582
* ------------------------------------------------------------------- *
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    *
*   (and possibly other places) in synchronization with this CSECT.   *
* ------------------------------------------------------------------- *
TRTBL0   DS    0D                                                        04583
         DC    XL16'40404040404040404040404040404040'                    04584
         DC    XL16'40404040404040404040404040404040'                    04585
         DC    XL16'40404040404040404040404040404040'                    04586
         DC    XL16'40404040404040404040404040404040'                    04587
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04588
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04589
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04590
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04591
         DC    XL16'40818283848586878889404040404040'                    04592
         DC    XL16'40919293949596979899404040404040'                    04593
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04594
         DC    XL16'40404040404040404040404040404040'                    04595
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04596
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04597
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04598
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04599
TRTBL1   DS    0D                                                        04600
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04601
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04602
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04603
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04604
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04605
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04606
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04607
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04608
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04609
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04610
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04611
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04612
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04613
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04614
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04615
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04616
TRTBL2   DS    0D                                                        04617
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04618
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04619
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04620
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04621
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04622
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04623
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04624
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04625
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04626
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04627
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04628
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04629
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04630
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04631
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04632
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04633
TRTE2A   DS    0D                                                        04634
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04635
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04636
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    04637
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    04638
         DC    XL16'20414243444546474849A22E3C282B7C'                    04639
         DC    XL16'2651525354555657585921242A293B5E'                    04640
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    04641
         DC    XL16'707172737475767778603A2340273D22'                    04642
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    04643
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    04644
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    04645
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    04646
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    04647
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    04648
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    04649
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    04650
TRTA2E   DS    0D                                                        04651
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    04652
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    04653
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04654
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04655
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04656
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04657
         DC    XL16'79818283848586878889919293949596'                    04658
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    04659
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    04660
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    04661
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    04662
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    04663
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    04664
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    04665
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    04666
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    04667
TRTASPRT DS    0D                                                        04668
         DC    XL16'40404040404040404040404040404040'                    04669
         DC    XL16'40404040404040404040404040404040'                    04670
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    04671
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    04672
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    04673
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    04674
         DC    XL16'40818283848586878889919293949596'                    04675
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    04676
         DC    XL16'40404040404040404040404040404040'                    04677
         DC    XL16'40404040404040404040404040404040'                    04678
         DC    XL16'40404040404040404040404040404040'                    04679
         DC    XL16'40404040404040404040404040404040'                    04680
         DC    XL16'40404040404040404040404040404040'                    04681
         DC    XL16'40404040404040404040404040404040'                    04682
         DC    XL16'40404040404040404040404040404040'                    04683
         DC    XL16'40404040404040404040404040404040'                    04684
         EJECT                                                           04685
JFCBLK   DSECT                                                           04686
         IEFJFCBN LIST=YES                                               04687
COPYMODS CSECT                                                           04688
INAREA   DS    CL65535                                        SBG 03/00  04689
#PAN$AUD CSECT                                                           04690
$PAN#AUD DC    CL30'LEVEL 071 COPYMODS  11/04/03 '                       04691
         END                                                             04692
*          DATA SET COPYMOPT   AT LEVEL 071 AS OF 11/04/03               04693
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04694
**************************************************************           04695
**************************************************************           04696
**                                                          **           04697
**                                                          **           04698
**  MODULE: COPYMOPT                                        **           04699
**                                                          **           04700
**                                                          **           04701
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04702
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04703
**            PROGRAM.                                      **           04704
**                                                          **           04705
**                                                          **           04706
**************************************************************           04707
**************************************************************           04708
         EJECT                                                           04709
         YREGS                                                           04710
COPYMOPT CSECT                                                           04711
         USING *,R15                                          SBG 03/00  04712
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04713
         B     EYECATCH                                       SBG 03/00  04714
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04715
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04716
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04717
SAVEAREA DC    18F'0'                                                    04718
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04719
         SAVE  (14,12)                                                   04720
         LR    R5,R1          SAVE PASSED QUANTITY                       04721
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04722
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04723
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04724
         LR    R13,R1               NEW SAVE AREA ADDRESS                04725
         DROP  R15                                                       04726
* -----                       SET UP TWO BASE REGISTERS                  04727
         USING COPYMOPT,R12,R11                                          04728
         LR    R12,R15                                                   04729
         LA    R11,4095(,R12)                                            04730
         LA    R11,1(,R11)                                               04731
         LR    R1,R5          RESTORE PARM POINTER                       04732
OPTMOVE  DS    0H                                                        04733
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           04734
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04735
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04736
         OPEN  (SYSPRINT,OUTPUT)                                         04737
         MVC   LINE(133),LINE-1       CLEAR LINE                         04738
         MVC   LINE(133),DISPLINH                                        04739
         PUT   SYSPRINT,LINE                                             04740
         MVC   LINE(133),LINE-1       CLEAR LINE                         04741
         MVC   LINE(133),DISPLINO                                        04742
         PUT   SYSPRINT,LINE                                             04743
         MVC   LINE(133),LINE-1       CLEAR LINE                         04744
         PUT   SYSPRINT,LINE                                             04745
         BAL   R7,FILLOPTS                                               04746
         MVC   LINE(133),LINE-1       CLEAR LINE                         04747
         MVC   LINE(133),DISPOP02                                        04748
         PUT   SYSPRINT,LINE                                             04749
         MVC   LINE(133),LINE-1       CLEAR LINE                         04750
         MVC   LINE(133),DISPOP01                                        04751
         PUT   SYSPRINT,LINE                                             04752
         MVC   LINE(133),LINE-1       CLEAR LINE                         04753
         MVC   LINE(133),DISPOP03                                        04754
         PUT   SYSPRINT,LINE                                             04755
         MVC   LINE(133),LINE-1       CLEAR LINE                         04753
         MVC   LINE(133),DISPHEXM                                        04754
         PUT   SYSPRINT,LINE                                             04755
         MVC   LINE(133),LINE-1       CLEAR LINE                         04756
         PUT   SYSPRINT,LINE                                             04757
         CLOSE (SYSPRINT)                                                04758
* ----------------------------------------------------------------- *    04759
THEEND   EQU   *                                                         04760
THEEND1  DS    0H                                                        04761
         L     R13,4(,R13)                                               04762
         RETURN (14,12),RC=0                                             04763
         EJECT                                                           04764
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04765
* ----------------------------------------------------------------- *    04766
*    BAL REGISTER IS R7.                                            *    04767
* ------------------------------------------------------------------*    04768
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04769
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04770
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04771
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04772
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04773
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04774
         BE    FILOPEND                                                  04775
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            04776
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                04777
         BZ    FILLZER                                                   04778
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    04779
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04780
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04781
         BCT   R4,FILLOOP             LOOP BACK                          04782
         B     FILNEXTB                                                  04783
FILLZER  DS    0H                                                        04784
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04785
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04786
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04787
         BCT   R4,FILLOOP             LOOP BACK                          04788
FILNEXTB DS    0H                                                        04789
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04790
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04791
         PUT   SYSPRINT,LINE                                             04792
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04793
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04794
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04795
FILOPEND BR    R7                                                        04796
* ----------------------------------------------------------------- *    04797
* ----------  CONSTANTS  ------------------------------------------ *    04798
         LTORG                                                           04799
         DS    0F                                                        04800
PARMTBIN DC    X'00000000000000000000'                                   04801
PARMWORK DC    X'00000000000000000000'                                   04802
PARMZERO DC    X'00000000000000000000'                                   04803
OPTABLE  DS    0D                                                        04804
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       04805
OPTENTLN EQU   *-OPTABLE                                                 04806
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       04807
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       04808
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       04809
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       04810
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       04811
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       04812
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       04813
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       04814
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       04815
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       04816
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       04817
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       04818
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       04819
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       04820
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       04821
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       04822
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       04823
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       04824
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       04825
         DC    X'00000100000000000000',C'INITVOLS  ',C'          '       04826
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       04827
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       04828
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       04829
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       04830
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       04831
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       04832
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       04833
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       04834
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       04835
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       04836
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       04837
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       04838
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       04839
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       04840
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       04841
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       04842
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       04843
         DC    X'00000000040000000000',C'          ',C'          '       04844
         DC    X'00000000080000000000',C'          ',C'          '       04845
         DC    X'00000000001000000000',C'          ',C'          '       04846
         DC    X'00000000002000000000',C'          ',C'          '       04847
         DC    X'00000000004000000000',C'          ',C'          '       04848
         DC    X'00000000008000000000',C'          ',C'          '       04849
         DC    X'00000000000100000000',C'          ',C'          '       04850
         DC    X'00000000000200000000',C'          ',C'          '       04851
         DC    X'00000000000400000000',C'          ',C'          '       04852
         DC    X'00000000000800000000',C'          ',C'          '       04853
         DC    X'00000000000010000000',C'          ',C'          '       04854
         DC    X'00000000000020000000',C'          ',C'          '       04855
         DC    X'00000000000040000000',C'          ',C'          '       04856
         DC    X'00000000000080000000',C'          ',C'          '       04857
         DC    X'00000000000001000000',C'          ',C'          '       04858
         DC    X'00000000000002000000',C'          ',C'          '       04859
         DC    X'00000000000004000000',C'          ',C'          '       04860
         DC    X'00000000000008000000',C'          ',C'          '       04861
         DC    X'00000000000000100000',C'          ',C'          '       04862
         DC    X'00000000000000200000',C'          ',C'          '       04863
         DC    X'00000000000000400000',C'          ',C'          '       04864
         DC    X'00000000000000800000',C'          ',C'          '       04865
         DC    X'00000000000000010000',C'          ',C'          '       04866
         DC    X'00000000000000020000',C'          ',C'          '       04867
         DC    X'00000000000000040000',C'          ',C'          '       04868
         DC    X'00000000000000080000',C'          ',C'          '       04869
         DC    X'00000000000000001000',C'          ',C'          '       04870
         DC    X'00000000000000002000',C'          ',C'          '       04871
         DC    X'00000000000000004000',C'          ',C'          '       04872
         DC    X'00000000000000008000',C'          ',C'          '       04873
         DC    X'00000000000000000100',C'          ',C'          '       04874
         DC    X'00000000000000000200',C'          ',C'          '       04875
         DC    X'00000000000000000400',C'          ',C'          '       04876
         DC    X'00000000000000000800',C'          ',C'          '       04877
         DC    X'00000000000000000010',C'          ',C'          '       04878
         DC    X'00000000000000000020',C'          ',C'          '       04879
         DC    X'00000000000000000040',C'          ',C'          '       04880
         DC    X'00000000000000000080',C'          ',C'          '       04881
         DC    X'00000000000000000001',C'          ',C'          '       04882
         DC    X'00000000000000000002',C'          ',C'          '       04883
         DC    X'00000000000000000004',C'          ',C'          '       04884
         DC    X'00000000000000000008',C'          ',C'          '       04885
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   04886
*  -----                                                                 04887
DISPAREA DS    0D                                                        04888
DISPLINH DS    0CL133                                                    04889
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  04890
         DC    C'LEVEL 071 - OPTIONS DISPLAY                          '  04891
         DC    27C' '                                                    04892
DISPLINO DS    0CL133                                                    04893
         DC    C'-    OPTIONS IN EFFECT:                              '  04894
         DC    C'                                                     '  04895
         DC    27C' '                                                    04896
DISPOP01 DS    0CL133                                                    04897
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  04898
         DC    C'LIMIT=   SYSIN CARD                                  '  04899
         DC    27C' '                                                    04900
DISPOP02 DS    0CL133                                                    04901
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  04902
         DC    C'LIMIT=   SYSIN CARD                                  '  04903
         DC    27C' '                                                    04904
DISPOP03 DS    0CL133                                                    04905
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  04906
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  04907
         DC    27C' '                                                    04908
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco'
         DC    C'rds before they have been changed by the COPYMODS pro'
         DC    C'gram.                     '
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04909
               BLKSIZE=133                                               04910
         DC    C' '                                                      04911
LINE     DS    CL133                                                     04912
DISPLIN1 DS    0CL133                                                    04913
         DC    C'0    '                                                  04914
DISPL1A  DC    8CL12' '                                                  04915
         DC    32C' '                                                    04916
DISPLIN2 DS    0CL133                                                    04917
         DC    C'     '                                                  04918
DISPL2A  DC    8CL12' '                                                  04919
         DC    32C' '                                                    04920
DISPLIN3 DS    0CL133                                                    04921
         DC    C'     '                                                  04922
DISPL3A  DC    8CL12' '                                                  04923
         DC    32C' '                                                    04924
DISPLIN4 DS    0CL133                                                    04925
         DC    C'     '                                                  04926
DISPL4A  DC    8CL12' '                                                  04927
         DC    32C' '                                                    04928
DISPLIN5 DS    0CL133                                                    04929
         DC    C'     '                                                  04930
DISPL5A  DC    8CL12' '                                                  04931
         DC    32C' '                                                    04932
DISPLIN6 DS    0CL133                                                    04933
         DC    C'     '                                                  04934
DISPL6A  DC    8CL12' '                                                  04935
         DC    32C' '                                                    04936
DISPLIN7 DS    0CL133                                                    04937
         DC    C'     '                                                  04938
DISPL7A  DC    8CL12' '                                                  04939
         DC    32C' '                                                    04940
DISPLIN8 DS    0CL133                                                    04941
         DC    C'     '                                                  04942
DISPL8A  DC    8CL12' '                                                  04943
         DC    32C' '                                                    04944
DISPLIN9 DS    0CL133                                                    04945
         DC    C'     '                                                  04946
DISPL9A  DC    8CL12' '                                                  04947
         DC    32C' '                                                    04948
DISPLINA DS    0CL133                                                    04949
         DC    C'     '                                                  04950
DISPLAA  DC    8CL12' '                                                  04951
         DC    32C' '                                                    04952
         SPACE 3                                                         04953
         EJECT                                                           04954
@PAN$AUD CSECT                                                           04955
$PAN#AUD DC    CL30'LEVEL 071 COPYMOPT  11/04/03 '                       04956
         END                                                             04957
*          PARM CHECKER        AT LEVEL 1.6 AS OF 11/04/03               04958
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       04959
**************************************************************           04960
**************************************************************           04961
**                                                          **           04962
**                                                          **           04963
**  MODULE:   PARMCHEK - Set option bits, based on          **           04964
**                       keywords coded in PARM and/or      **           04965
**                       SYSIN.                             **           04966
**                                                          **           04967
**  AUTHOR:   Sam Golob                                     **           04968
**                                                          **           04969
**  PURPOSE:  This program converts keywords in a PARM      **           04970
**            field or in SYSIN, into bit settings that     **           04971
**            a program can use, to control options in      **           04972
**            its execution.                                **           04973
**                                                          **           04974
**            This program can be run as a subroutine       **           04975
**            which is called, to set up to 10 bytes of     **           04976
**            bits, up to 80 bits in all, based on the      **           04977
**            settings of keywords in a table.              **           04978
**                                                          **           04979
**            This routine makes it easy to put a lot of    **           04980
**            options into a program.  If you want to       **           04981
**            add options, or use other words in PARM or    **           04982
**            SYSIN to call the same options, all you       **           04983
**            have to do, is to change or add entries in    **           04984
**            a table.  There is no extra coding to be      **           04985
**            done.                                         **           04986
**                                                          **           04987
**            Keywords in the PARM or SYSIN areas do not    **           04988
**            have to be delimited by commas or spaces or   **           04989
**            anything else.  Although for clarity, I'd     **           04990
**            certainly recommend that you put commas or    **           04991
**            spaces between the PARM field keywords.       **           04992
**            Therefore, I'd also advise that when you      **           04993
**            design keywords to put into the table to      **           04994
**            designate options, that you make them         **           04995
**            significantly different from each other.      **           04996
**            There is a length field in the table,         **           04997
**            however, which gives you some more control    **           04998
**            in this area.                                 **           04999
**                                                          **           05000
**            From a calling program, it would be possible  **           05001
**            to call PARMCHEK twice, against two different **           05002
**            tables, to set 20 bytes of options, instead   **           05003
**            of 10 bytes of options, and so forth...       **           05004
**                                                          **           05005
**            This gives you the opportunity of having      **           05006
**            a tremendous number of options, set by        **           05007
**            keywords, in your program, without using      **           05008
**            up valuable "base register space" for such    **           05009
**            coding.                                       **           05010
**                                                          **           05011
**                                                          **           05012
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05013
**            from a table, based on assembled defaults.    **           05014
**            These default settings are then overridden    **           05015
**            from a scan of words in the PARM field of     **           05016
**            the EXEC card.                                **           05017
**                                                          **           05018
**            If a SYSIN DD card is present, its cards      **           05019
**            are scanned against the table entries, to     **           05020
**            further override the bit settings which       **           05021
**            have already been done by the defaults and    **           05022
**            the PARM field.                               **           05023
**                                                          **           05024
**            The main purpose of this routine is to set    **           05025
**            bits from words.  However, if you need some   **           05026
**            keywords with values, such as (for example)   **           05027
**            FILELIMIT=69  in your program, you may use    **           05028
**            the "user code" section of this program       **           05029
**            to code that stuff in, so that these special  **           05030
**            keywords can be coded in SYSIN.               **           05031
**                                                          **           05032
**            Two sample keywords expecting number values:  **           05033
**            FILELIMIT=nnn  or                             **           05034
**            LABELIMIT=mmm                                 **           05035
**            have been coded here, just to illustrate      **           05036
**            how the user coding might work.               **           05037
**                                                          **           05038
**            Search order is:  Defaults, then PARM in      **           05039
**            the EXEC card, then SYSIN.                    **           05040
**                                                          **           05041
**            As coded here, the FILELIMIT= and             **           05042
**            LABELIMIT= keywords in SYSIN have to be in    **           05043
**            column 1 of the SYSIN cards, and if these     **           05044
**            "special keywords" are present in a card,     **           05045
**            the rest of that card is not scanned for      **           05046
**            the table keywords.                           **           05047
**                                                          **           05048
**            As coded here, the PARMTABL is a separate     **           05049
**            CSECT, addressable by V-CONs from the         **           05050
**            PARMCHEK CSECT.                               **           05051
**                                                          **           05052
**            It would probably be best to invoke the       **           05053
**            PARMCHEK program as a separate CSECT which    **           05054
**            is linkedited with the calling program,       **           05055
**            but it may be LOADed and BALR 14,15 'ed to,   **           05056
**            and run as a separate program.  (See the      **           05057
**            PARMDRVR program that is included in this     **           05058
**            package, as a sample.)                        **           05059
**                                                          **           05060
**    Input:  A fullword containing the address of the      **           05061
**            saved Register 1 from the calling program,    **           05062
**            which points to its parms.                    **           05063
**                                                          **           05064
**            A table containing parms, which is coded      **           05065
**            according to the following rules, and which   **           05066
**            has entries of 20 bytes apiece.               **           05067
**                                                          **           05068
**      FORMAT OF THE PARM TABLE                            **           05069
**                                                          **           05070
**        ONE ENTRY IS 20 BYTES                             **           05071
**                                                          **           05072
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           05073
**                         (This is the word which          **           05074
**                          controls the bit settings.)     **           05075
**                         (up to and including 8 bytes)    **           05076
**                                                          **           05077
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           05078
**                         X'00' says turn bit flag(s) ON   **           05079
**                         X'10' set entry as a DEFAULT     **           05080
**                                                          **           05081
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           05082
**                         (This is the word searched on,   **           05083
**                          in the EXEC PARM and SYSIN      **           05084
**                          areas.)                         **           05085
**                                                          **           05086
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           05087
**                          this keyword.                   **           05088
**                                                          **           05089
**                         These are the bits which the     **           05090
**                          keyword will flip on (or off).  **           05091
**                                                          **           05092
**                         You may control multiple bits    **           05093
**                          using one keyword.  All bits    **           05094
**                          controlled by this keyword      **           05095
**                          are coded in this entry field.  **           05096
**                                                          **           05097
**          The table is ended by an entry of X'FF's.       **           05098
**                                                          **           05099
**                                                          **           05100
**    Output:  R1 points to a 10-byte area containing the   **           05101
**             80 switch settings.                          **           05102
**                                                          **           05103
**             Sample code to use PARMCHEK output:          **           05104
**                                                          **           05105
**                      ST    R1,PARMADDR                   **           05106
**                      USING PARMFLGS,R1                   **           05107
**             *                                            **           05108
**             PARMFLGS DSECT                               **           05109
**             PARMFLG1 DS    X                             **           05110
**             PARMFLG2 DS    X                             **           05111
**             PARMFLG3 DS    X                             **           05112
**             PARMFLG4 DS    X                             **           05113
**             PARMFLG5 DS    X                             **           05114
**             PARMFLG6 DS    X                             **           05115
**             PARMFLG7 DS    X                             **           05116
**             PARMFLG8 DS    X                             **           05117
**             PARMFLG9 DS    X                             **           05118
**             PARMFLGA DS    X                             **           05119
**                                                          **           05120
**               then ....                                  **           05121
**                                                          **           05122
**                      TM    PARMFLG2,X'04'                **           05123
**                      BZ    some location                 **           05124
**                        ....                              **           05125
**                                                          **           05126
**             R2 points to the address of a data area      **           05127
**             containing values generated by this          **           05128
**             program.  It's address is at label STRTVALU  **           05129
**             and its length is in the first fullword      **           05130
**             at STRTVALU.                                 **           05131
**                                                          **           05132
**             R2 is accessed in a similar manner to R1.    **           05133
**             See the PARMDRVR program for an example      **           05134
**             illustrating one way in which PARMCHEK       **           05135
**             may be called.                               **           05136
**                                                          **           05137
**                                                          **           05138
**************************************************************           05139
         EJECT                                                           05140
**************************************************************           05141
**                                                          **           05142
**  CHANGE LOG:                                             **           05143
**                                                          **           05144
**    Version 1.1 - Separate Parm Table into different      **           05145
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           05146
**                                                          **           05147
**    Version 1.2 - Uppercase keyword before comparing      **           05148
**       against the table entries.  This assumes you       **           05149
**       will code your table with all uppercase keyword    **           05150
**       entries.                                           **           05151
**                                                          **           05152
**    Version 1.3 - Option for requiring commas or spaces   **           05153
**       as delimiters between parms.  Comment out one      **           05154
**       instruction to require delimiters.                 **           05155
**                                                          **           05156
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           05157
**                                                          **           05158
**    Version 1.5 - Fitted to COPYMODS Level 071.           **           05159
**                  Ten parm bits instead of five.          **           05160
**                                                          **           05161
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **           05159
**                                                          **           05161
**                                                          **           05161
**************************************************************           05162
**************************************************************           05163
         EJECT                                                           05164
**************************************************************           05165
*  ---------------------------------------------------------------  *    05166
*    This macro is used to display hex values in a printed report.       05167
*  ---------------------------------------------------------------  *    05168
         MACRO                                                           05169
&NAME    HEX   &TO,&LEN,&FROM                                            05170
&NAME    DS    0H                                                        05171
         ST    R4,SAV4HEX                                                05172
         STM   15,1,HEXSAVE                                              05173
         LA    1,&FROM                                                   05174
         LA    0,&LEN                                                    05175
         LA    15,&TO                                                    05176
         BAL   4,HEX                                                     05177
         L     R4,SAV4HEX                                                05178
         LM    15,1,HEXSAVE                                              05179
         MEND                                                            05180
         SPACE                                                           05181
**************************************************************           05182
         GBLC  &LLEV                                                     05183
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                05184
         GBLA  &HEXDFLA                                                  05185
&LLEV    SETC  '1.6 '                                                    05186
         YREGS                                                           05187
* ------------------------------------------------------------------ *   05188
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   05189
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   05190
* ------------------------------------------------------------------ *   05191
         ENTRY CARDREAD                                                  05192
         ENTRY PARMCHEK                                                  05193
&HEXDFLA SETA  4                                                         05194
&HEXDFLC SETC  '&HEXDFLA'                                                05195
PARMCHEK CSECT                                                           05196
         USING *,R15                                                     05197
         B     EYECATCH                                                  05198
         DC    C'HEX DUMP '                                              05199
HEXDFLCC DC    C'&HEXDFLC'                                               05200
         DC    C' RECORDS '                                              05201
HEXDFLL  EQU   L'HEXDFLCC                                                05202
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 05203
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05204
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                05205
         DC    C' - '                                                    05206
         DC    C'PARM INPUT IN SYSIN '                                   05207
         DC    C' - '                                                    05208
         DC    C'LEVEL '                                                 05209
SYSLEV   DC    C'&LLEV'                                                  05210
         DC    C' - '                                                    05211
SYSDAT   DC    C'&SYSDATE'                                               05212
         DC    C'  ',C'&SYSTIME ',C'--- '                                05213
         DC    C'--- '            MAKE EYECATCHER VISIBLE                05214
SAVEAREA DC    18F'0'                                                    05215
EYECATCH DS    0D             ENSURE ALIGNMENT                           05216
         SAVE  (14,12)                                                   05217
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05218
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05219
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05220
         LR    R13,R1               NEW SAVE AREA ADDRESS                05221
         DROP  R15                                                       05222
* -----                       SET UP BASE REGISTERS                      05223
         USING PARMCHEK,R12,R11,R10                                      05224
         LR    R12,R15                                                   05225
         LA    R11,4095(,R12)                                            05226
         LA    R11,1(,R11)                                               05227
         LA    R10,4095(,R11)                                            05228
         LA    R10,1(,R10)                                               05229
*                                                                        05230
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      05231
*                                                                        05232
         LR    R6,R2          SAVE USER AREA POINTER                     05233
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          05234
         LR    R1,R6          RESTORE PARM POINTER                       05235
         ST    R1,PARMSAVE                                               05236
* ----------------------------------------------------------------- *    05237
TIOTSCAN DS    0H             Determine the presence of Optional         05238
*                             DDNAMES:  SYSIN AND PARMREPT.              05239
* ----->                      OPEN them if there is JCL for them.        05240
* ----------------------------------------------------------------- *    05241
         L     R5,16          R5=CVT                                     05242
         L     R5,0(,R5)      R5=TCB WORDS                               05243
         L     R5,4(,R5)      R5=MY TCB                                  05244
         L     R5,12(,R5)     R5=TIOT                                    05245
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          05246
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             05247
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        05248
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               05249
         BNE   TIOTSYSN       NO                                         05250
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         05251
         B     TIOTNEXT       CONTINUE                                   05252
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          05253
         BNE   TIOTNEXT                                                  05254
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         05255
         B     TIOTNEXT                                                  05256
TIOTNEXT SR    R3,R3                                                     05257
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      05258
         AR    R5,R3          R5=NEXT DD ENTRY                           05259
         B     TIOTLOOP       GO CHECK IT                                05260
TIOTSEND DS    0H                                                        05261
***********************************************************************  05262
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  05263
***********************************************************************  05264
         STM   R14,R2,SAVE1402                                           05265
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             05266
         OI    DATE+4,X'0F'                                              05267
         UNPK  DATED,DATE                                                05268
         OI    TIME+3,X'0F'                                              05269
         UNPK  TIMED,TIME                                                05270
*                          FILL HEADDATE AREA WITH INFO TO REUSE         05271
         MVC   HEADDATE(2),DATED                                         05272
         MVI   HEADDATE+2,C'/'                                           05273
         MVC   HEADDATE+3(2),DATED+2                                     05274
         MVI   HEADDATE+5,C'/'                                           05275
         MVC   HEADDATE+6(4),DATED+4                                     05276
         MVC   HEADDATE+12(2),TIMED                                      05277
         MVI   HEADDATE+14,C':'                                          05278
         MVC   HEADDATE+15(2),TIMED+2                                    05279
         MVI   HEADDATE+17,C':'                                          05280
         MVC   HEADDATE+18(2),TIMED+4                                    05281
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         05282
         LM    R14,R2,SAVE1402                                           05283
***********************************************************************  05284
         MVC   LEVDATE(8),SYSDAT                                         05285
***********************************************************************  05286
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             05287
* ----------------------------------------------------------------- *    05288
INITCONS DS    0H                                                        05289
         ZAP   TOTMLCNT,=P'0'                                            05290
* ----------------------------------------------------------------- *    05291
CHEKPRNT DS    0H                                                        05292
         TM    FLAGSYST,X'01'                                            05293
         BZ    CHEKPREN                                                  05294
         OPEN  (PARMREPT,OUTPUT)                                         05295
         OI    OPENDFLG,X'01'                                            05296
         MVC   PRTLINE,PRTLINE-1                                         05297
         MVC   PRTLINE,MESSAGE1                                          05298
         PUT   PARMREPT,MESSAGE1                                         05299
         MVC   PRTLINE,PRTLINE-1                                         05300
         PUT   PARMREPT,PRTLINE                                          05301
CHEKPREN DS    0H                                                        05302
* ----------------------------------------------------------------- *    05303
* --------------------------------------------------------- *            05304
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     05305
*                         PRESENCE OR ABSENCE.                           05306
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  05307
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         05308
         L     R1,0(,R1)      Get PARM field                             05309
         LH    R5,0(,R1)      SAVE PARM LENGTH                           05310
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       05311
         MVC   SAVMSLEN,PARMSLEN                                         05312
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05313
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                05314
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               05315
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              05316
* -----------------------------------------------------------            05317
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               05318
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               05319
* -----------------------------------------------------------            05320
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               05321
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         05322
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            05323
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   05324
         BO    PARMDSET       YES, GO SET IT.                            05325
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05326
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 05327
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  05328
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                05329
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        05330
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05331
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  05332
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            05333
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              05334
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        05335
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               05336
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             05337
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               05338
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 05339
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               05340
* ----------------------------------------------------------------- *    05341
SCANPARM DS    0H                                                        05342
         ST    R7,SAVE7BA0                                               05343
         ZAP   PARMLCNT,=P'0'                                            05344
         ZAP   PARMHITS,=P'0'                                            05345
         MVC   PARMSLEN,SAVMSLEN                                         05346
         BAL   R7,PARMLOOP      Now check the PARM field                 05347
         MVC   SAVPHITS,PARMHITS                                         05348
         MVC   SAVCHRCT,PRMCHRCT                                         05349
         MVC   SAVELCNT,PARMLCNT                                         05350
         AP    TOTMHITS,PARMHITS                                         05351
         AP    TOTMLCNT,PARMLCNT                                         05352
         L     R7,SAVE7BA0                                               05353
* ----------------------------------------------------------------- *    05354
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   05355
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             05356
         OPEN  (SYSIN,INPUT)                                             05357
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   05358
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               05359
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                05360
         B     OPNSYSNE           AND CONTINUE PROCESSING.               05361
NOSYSIN  DS    0H                                                        05362
         B     CARDREND                                                  05363
OPNSYSNE DS    0H                                                        05364
* ----------------------------------------------------------------- *    05365
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               05366
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         05367
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        05368
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       05369
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        05370
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05371
*              Insert User Code Here for Keywords                        05372
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05373
         GET   SYSIN,CARDIN                                              05374
*                                                                        05375
* -- >>              <-- Intercept any keywords you want in SYSIN -->    05376
* -- >>              <--    before you start the table scan       -->    05377
*                                                                        05378
* ----------------------------------------------------------------- *
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS
         MVC   CARDWORK+1(79),CARDWORK
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA
         OC    CARDWORK(80),CARDBLNK    UPPERCASE
* ----------------------------------------------------------------- *
*      CARDWORK now contains an uppercased version of CARDIN.
* ----------------------------------------------------------------- *
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05379
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           05380
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05381
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           05382
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05383
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           05384
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05385
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           05386
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    05387
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           05388
         CLC   =C'/*',CARDIN                                             05389
         BE    SYSINEND                                                  05390
*                                                                        05391
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05392
* ----         Resume Checking SYSIN in PARM Table                       05393
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05394
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        05395
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         05396
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    05397
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             05398
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        05399
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  05400
         L     R1,TOTCHRCT                                               05401
         A     R1,PRMCHRCT                                               05402
         ST    R1,TOTCHRCT                                               05403
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          05404
         ZAP   PARMHITS,=P'0'                                            05405
         ZAP   PARMLCNT,=P'0'                                            05406
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 05407
         AP    TOTMHITS,PARMHITS                                         05408
         AP    TOTMLCNT,PARMLCNT                                         05409
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      05410
         B     CARDREAD        GET ANOTHER CARD                          05411
* ----                                                                   05412
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05413
*              Handle User Code Here for Keywords                        05414
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05415
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        05416
         BE    CARDREAD                 YES. IGNORE CARD                 05417
         MVC   VOLSTG1(6),CARDIN+10                                      05418
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05419
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   05420
         B     CARDREAD          GET ANOTHER CARD                        05421
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        05422
         BE    CARDREAD                 YES. IGNORE CARD                 05423
         MVC   TAPEOWN(14),CARDIN+10                                     05424
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      05425
         B     CARDREAD                                                  05426
FILELGET DS    0H                                                        05427
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05428
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05429
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05430
         BL    CARDREAD          YES. IGNORE.                            05431
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05432
         BH    CARDREAD          YES. IGNORE.                            05433
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                05434
         LA    R15,CARDIN+10     STARTING ADDRESS                        05435
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05436
FILELNUM DS    0H                                                        05437
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05438
         C     R15,=A(CARDIN+71) END OF CARD?                            05439
         BH    FILELGNM          YES, GET NUMBER                         05440
         CLI   0(R15),C' '       BLANK HERE?                             05441
         BE    FILELGNM          YES, GET NUMBER                         05442
         B     FILELNUM          NO. STEP UP ONE PLACE                   05443
FILELGNM DS    0H                                                        05444
         SR    R15,R1            HOW BIG IS THE NUMBER                   05445
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05446
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            05447
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         05448
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       05449
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05450
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           05451
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               05452
         CVB   R0,WORKA          CONVERT IT TO BINARY                    05453
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           05454
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       05455
FILELCLG DS    0H                                                        05456
         B     CARDREAD                                                  05457
LABELGET DS    0H                                                        05458
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05459
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05460
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05461
         BL    CARDREAD          YES. IGNORE.                            05462
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05463
         BH    CARDREAD          YES. IGNORE.                            05464
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               05465
         LA    R15,CARDIN+10     STARTING ADDRESS                        05466
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05467
LABELNUM DS    0H                                                        05468
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05469
         C     R15,=A(CARDIN+71) END OF CARD?                            05470
         BH    LABELGNM          YES, GET NUMBER                         05471
         CLI   0(R15),C' '       BLANK HERE?                             05472
         BE    LABELGNM          YES, GET NUMBER                         05473
         B     LABELNUM          NO. STEP UP ONE PLACE                   05474
LABELGNM DS    0H                                                        05475
         SR    R15,R1            HOW BIG IS THE NUMBER                   05476
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05477
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            05478
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         05479
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            05480
         CVB   R0,WORKL          CONVERT IT TO BINARY                    05481
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           05482
LABELCLG DS    0H                                                        05483
         B     CARDREAD                                                  05484
PRINTGET DS    0H                                                        05485
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            05486
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 05487
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      05488
         BL    CARDREAD          YES. IGNORE.                            05489
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          05490
         BH    CARDREAD          YES. IGNORE.                            05491
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         05492
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    05493
         LA    R15,CARDIN+10     STARTING ADDRESS                        05494
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               05495
PRINTNUM DS    0H                                                        05496
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  05497
         C     R15,=A(CARDIN+71) END OF CARD?                            05498
         BH    PRINTGNM          YES, GET NUMBER                         05499
         CLI   0(R15),C' '       BLANK HERE?                             05500
         BE    PRINTGNM          YES, GET NUMBER                         05501
         B     PRINTNUM          NO. STEP UP ONE PLACE                   05502
PRINTGNM DS    0H                                                        05503
         SR    R15,R1            HOW BIG IS THE NUMBER                   05504
         BCTR  R15,0             LOWER IT FOR EXECUTE                    05505
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            05506
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         05507
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            05508
         CVB   R0,WORKP          CONVERT IT TO BINARY                    05509
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           05510
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            05511
PRINTCLG DS    0H                                                        05512
         B     CARDREAD                                                  05513
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05514
*              End of User Code Here for Keywords                        05515
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    05516
CHECKEND DS    0H                                                        05517
* -----------------------------------------------------------            05518
SYSINEND DS    0H                                                        05519
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     05520
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            05521
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05522
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             05523
* ------- Correct Error - SYSIN not shown if not coded explicitly.       05524
         L     R1,TOTCHRCT                                               05525
         A     R1,PRMCHRCT         Final totals for last card            05526
         ST    R1,TOTCHRCT                                               05527
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             05528
         CLOSE (SYSIN)                                                   05529
         B     CARDREND                                                  05530
CARNOSYS DS    0H                                                        05531
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         05532
CARDREND DS    0H                                                        05533
         BAL   R7,SUMMREPT                                               05534
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     05535
         BZ    PARMRPEN         NO.  GET OUT.                            05536
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             05537
         CLOSE (PARMREPT)                                                05538
PARMRPEN DS    0H                                                        05539
THEEND   DS    0H                                                        05540
         L     R13,4(,R13)                                               05541
         MVC   16(4,R13),=F'0'          Return code 0     in R15         05542
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          05543
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          05544
         LM    R14,R12,12(R13)                                           05545
         BR    R14                                                       05546
* -----------------------------------------------------------            05547
*        S U B R O U T I N E S                                           05548
* -----------------------------------------------------------            05549
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              05550
* -----------------------------------------------------------            05551
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     05552
         BNL   PARMFIN        YES - GET OUT                              05553
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         05554
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            05555
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         05556
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   05557
*        ------------------------------------------------------------    05558
*--->                    code to require a delimiter (space, etc)        05559
*                        to enable, comment out the next instruction     05560
*        ------------------------------------------------------------    05561
         B     PRMNODLM         comment this line to require delimiter   05562
         TM    PRMFDFLG,X'01'                                            05563
         BO    PRMNFND                                                   05564
PRMNODLM DS    0H                                                        05565
*--->                                                                    05566
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              05567
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 05568
         BCTR  R5,0           ONE LESS FOR EXECUTE                       05569
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       05570
*                                                                        05571
*   If you want to require parm comparisons as case sensitive,           05572
*    then comment out the following instruction....                      05573
*                                                                        05574
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       05575
*                                                                        05576
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     05577
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                05578
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          05579
         B     BOPPTBL        INNER LOOP                                 05580
*                                                                        05581
PRMNFND  DS    0H                                                        05582
*--->                 below - Parm Found flagging to require delimiter   05583
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   05584
         BE    PRMFDOFF                                                  05585
         CLI   0(R4),C','                                                05586
         BE    PRMFDOFF                                                  05587
         B     PRMFDEND                                                  05588
PRMFDOFF DS    0H                                                        05589
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         05590
PRMFDEND DS    0H                                                        05591
*--->                 above - Parm Found flagging to require delimiter   05592
*                                                                        05593
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       05594
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  05595
*                                                                        05596
         B     PARMLOOP       TRY AGAIN                                  05597
*                                                                        05598
PRMFOUND DS    0H                                                        05599
*                                                                        05600
*--->                 below - Parm Found flagging to require delimiter   05601
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 05602
*--->                 above - Parm Found flagging to require delimiter   05603
PRMNOSEP DS    0H                                                        05604
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         05605
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            05606
         TM    1(R2),X'01'         PARM ON OR OFF?                       05607
         BO    PARMOFF             OFF                                   05608
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     05609
         B     PARMGO                        AND GO ON                   05610
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           05611
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              05612
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        05613
PARMGO   DS    0H                                                        05614
         XR    R5,R5          Clear Work Reg befor IC                    05615
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             05616
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  05617
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   05618
         B     PARMLOOP       LOOK FOR MORE PARMS                        05619
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05620
*                             COUNT FOR DEBUGGING                        05621
PRMCHEND DS    0H                                                        05622
         BR    R7                                                        05623
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05624
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05625
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05626
* --------------------------------------------------------- *            05627
SUMMREPT DS    0H                  Print details of PARMREPT             05628
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05629
         BZ    SUMMREND            No. Bypass this routine.              05630
         MVC   PRTLINE,PRTLINE-1                                         05631
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05632
         HEX   PRTLINE+27,1,PARMFLG1                                     05633
         HEX   PRTLINE+30,1,PARMFLG2                                     05634
         HEX   PRTLINE+33,1,PARMFLG3                                     05635
         HEX   PRTLINE+36,1,PARMFLG4                                     05636
         HEX   PRTLINE+39,1,PARMFLG5                                     05637
         HEX   PRTLINE+42,1,PARMFLG6                                     05638
         HEX   PRTLINE+45,1,PARMFLG7                                     05639
         HEX   PRTLINE+48,1,PARMFLG8                                     05640
         HEX   PRTLINE+51,1,PARMFLG9                                     05641
         HEX   PRTLINE+54,1,PARMFLGA                                     05642
         PUT   PARMREPT,PRTLINE                                          05643
         MVC   PRTLINE,PRTLINE-1                                         05644
         PUT   PARMREPT,PRTLINE                                          05645
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05646
         MVC   PRTLINE+4(12),=C'User Area : '                            05647
         HEX   PRTLINE+16,48,STRTVALU                                    05648
         PUT   PARMREPT,PRTLINE                                          05649
         MVC   PRTLINE,PRTLINE-1                                         05650
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05651
         HEX   PRTLINE+16,48,STRTVALU+48                                 05652
         PUT   PARMREPT,PRTLINE                                          05653
         MVC   PRTLINE,PRTLINE-1                                         05654
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05655
         HEX   PRTLINE+16,48,STRTVALU+96                                 05656
         PUT   PARMREPT,PRTLINE                                          05657
         MVC   PRTLINE,PRTLINE-1                                         05658
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          05659
         HEX   PRTLINE+16,24,STRTVALU+144                                05660
         PUT   PARMREPT,PRTLINE                                          05661
         MVC   PRTLINE,PRTLINE-1                                         05662
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05663
         HEX   PRTLINE+30,4,STRTVALU                                     05664
         MVC   PRTLINE+42(6),=C'Hex   '                                  05665
         PUT   PARMREPT,PRTLINE                                          05666
         MVC   PRTLINE,PRTLINE-1                                         05667
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05668
         HEX   PRTLINE+30,4,PARMSLEN                                     05669
         MVC   PRTLINE+42(6),=C'Hex   '                                  05670
         PUT   PARMREPT,PRTLINE                                          05671
         MVC   PRTLINE,PRTLINE-1                                         05672
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05673
         HEX   PRTLINE+30,4,SAVMSLEN                                     05674
         MVC   PRTLINE+42(6),=C'Hex   '                                  05675
         PUT   PARMREPT,PRTLINE                                          05676
         MVC   PRTLINE,PRTLINE-1                                         05677
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05678
         HEX   PRTLINE+30,4,PARMSTRT                                     05679
         MVC   PRTLINE+42(6),=C'Hex   '                                  05680
         PUT   PARMREPT,PRTLINE                                          05681
         MVC   PRTLINE,PRTLINE-1                                         05682
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05683
         HEX   PRTLINE+30,4,PRMCHRCT                                     05684
         MVC   PRTLINE+42(6),=C'Hex   '                                  05685
         PUT   PARMREPT,PRTLINE                                          05686
         MVC   PRTLINE,PRTLINE-1                                         05687
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05688
         HEX   PRTLINE+30,4,SAVCHRCT                                     05689
         MVC   PRTLINE+42(6),=C'Hex   '                                  05690
         PUT   PARMREPT,PRTLINE                                          05691
         MVC   PRTLINE,PRTLINE-1                                         05692
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05693
         HEX   PRTLINE+30,4,TOTCHRCT                                     05694
         MVC   PRTLINE+42(6),=C'Hex   '                                  05695
         PUT   PARMREPT,PRTLINE                                          05696
         MVC   PRTLINE,PRTLINE-1                                         05697
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05698
         HEX   PRTLINE+30,4,SAVPHITS                                     05699
         MVC   PRTLINE+42(6),=C'Packed'                                  05700
         PUT   PARMREPT,PRTLINE                                          05701
         MVC   PRTLINE,PRTLINE-1                                         05702
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05703
         HEX   PRTLINE+30,4,PARMHITS                                     05704
         MVC   PRTLINE+42(6),=C'Packed'                                  05705
         PUT   PARMREPT,PRTLINE                                          05706
         MVC   PRTLINE,PRTLINE-1                                         05707
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05708
         HEX   PRTLINE+30,4,TOTMHITS                                     05709
         MVC   PRTLINE+42(6),=C'Packed'                                  05710
         PUT   PARMREPT,PRTLINE                                          05711
         MVC   PRTLINE,PRTLINE-1                                         05712
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05713
         HEX   PRTLINE+30,4,SAVELCNT                                     05714
         MVC   PRTLINE+42(6),=C'Packed'                                  05715
         PUT   PARMREPT,PRTLINE                                          05716
         MVC   PRTLINE,PRTLINE-1                                         05717
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05718
         HEX   PRTLINE+30,4,PARMLCNT                                     05719
         MVC   PRTLINE+42(6),=C'Packed'                                  05720
         PUT   PARMREPT,PRTLINE                                          05721
         MVC   PRTLINE,PRTLINE-1                                         05722
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05723
         HEX   PRTLINE+30,4,TOTMLCNT                                     05724
         MVC   PRTLINE+42(6),=C'Packed'                                  05725
         PUT   PARMREPT,PRTLINE                                          05726
         MVC   PRTLINE,PRTLINE-1                                         05727
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05728
         HEX   PRTLINE+30,20,PARMTENT                                    05729
         PUT   PARMREPT,PRTLINE                                          05730
SUMMREND DS    0H                                                        05731
         BR    R7                                                        05732
* --------------------------------------------------------- *            05733
* --------------------------------------------------------- *            05734
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05735
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05736
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05737
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05738
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05739
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05740
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05741
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05742
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05743
         LTORG
         EJECT                                                           05744
* --------------------------------------------------------- *            05745
WORKA    DC    D'0'                                                      05746
WORKL    DC    D'0'                                                      05747
WORKP    DC    D'0'                                                      05748
PL4NO3   DC    PL4'3'                                                    05749
FF       EQU   X'FF'                                                     05750
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05751
         DC    C' IS TREATED AS NL.                                   '  05752
         DC    CL27' '                                                   05753
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05754
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05755
         DC    CL27' '                                                   05756
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05757
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05758
         DC    CL27' '                                                   05759
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05760
         DC    CL6'&HEXDFLM'                                             05761
         DC    C' RECORDS WILL'                                          05762
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05763
         DC    C'SYSIN.'                                                 05764
         DC    CL17' '                                                   05765
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05766
* --------------------------------------------------------- *            05767
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05768
PARMFLG1 DC    X'00'                                                     05769
PARMFLG2 DC    X'00'                                                     05770
PARMFLG3 DC    X'00'                                                     05771
PARMFLG4 DC    X'00'                                                     05772
PARMFLG5 DC    X'00'                                                     05773
PARMFLG6 DC    X'00'                                                     05774
PARMFLG7 DC    X'00'                                                     05775
PARMFLG8 DC    X'00'                                                     05776
PARMFLG9 DC    X'00'                                                     05777
PARMFLGA DC    X'00'                                                     05778
* --------------------------------------------------------- *            05779
         DS    0F                                                        05780
STRTVALU DS    0CL(ENDVALUE)                                             05781
         DC    A(ENDVALUE)                                               05782
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05783
*                                  Upon entry, this field contains       05784
*                                  the PARM address from COPYMODS,       05785
*                                  which gets overlaid by PARMCHEK.      05786
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05787
*                                  Upon entry, this field contains       05788
*                                  the PARM address from COPYMODS,       05789
*                                  which gets overlaid by PARMCHEK.      05790
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05791
*                                  Upon entry, this field contains       05792
*                                  the PARM length from COPYMODS,        05793
*                                  which gets overlaid by PARMCHEK.      05794
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05795
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05796
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05797
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05798
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05799
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05800
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05801
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05802
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05803
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05804
         DC    CL7' '              FILLER                                05805
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05806
*  -----    User Stuff                                                   05807
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05808
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05809
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05810
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05811
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05812
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05813
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05814
TAPEOWN  DC    CL10' '                                                   05815
TAPEOEXT DC    CL4' '                                                    05816
TAPEOASC DC    CL14' '
OVERFLAG DC    X'00'                                                     05817
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05818
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05819
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05820
LIMCHAR  DC    CL10' '                                                   05821
LABCHAR  DC    CL10' '                                                   05822
PRTCHAR  DC    CL10' '                                                   05823
ENDVALUE EQU   (*-PARMSLEN)+4                                            05824
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05825
* --------------------------------------------------------- *            05826
*              FORMAT OF PARM TABLE                                      05827
*              ONE ENTRY IS 20 BYTES                                     05828
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05829
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05830
*                               X'00' SAYS TURN FLAG ON                  05831
*                               X'10' SET ENTRY AS A DEFAULT             05832
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05833
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05834
*                                WHICH ALLOWS FOR 80 PARMS               05835
*                                THAT DON'T HAVE TO BE                   05836
*                                SEPARATED BY A COMMA.                   05837
PBYTES   EQU   10               Number of bytes of parm switches         05838
PTELEN   EQU   20               Length of each table entry               05839
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  05840
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   05841
* --------------------------------------------------------- *            05842
PARMTABL CSECT                                                           05843
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           05844
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           05845
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           05846
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           05847
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           05848
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           05849
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           05850
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           05851
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           05852
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           05853
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           05854
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           05855
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           05856
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           05857
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           05858
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           05859
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           05860
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           05861
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           05862
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space   05863
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           05864
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           05865
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           05866
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           05867
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           05868
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           05869
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           05870
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           05871
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           05872
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           05873
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           05874
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           05875
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           05876
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           05877
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           05878
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           05879
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           05880
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           05881
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           05882
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           05883
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           05884
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           05885
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           05886
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           05887
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           05888
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           05889
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           05890
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           05891
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'           05892
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           05893
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           05894
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           05895
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           05896
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           05897
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           05898
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'           05899
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           05900
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           05901
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           05902
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           05903
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           05904
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           05905
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           05906
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           05907
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           05908
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           05909
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           05910
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           05911
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           05912
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           05913
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           05914
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           05915
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           05916
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           05917
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           05918
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           05919
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           05920
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           05921
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           05922
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           05923
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           05924
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           05925
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           05926
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           05927
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           05928
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           05929
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           05930
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           05931
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           05932
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           05933
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           05934
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           05935
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           05936
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           05937
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           05938
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           05939
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           05940
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           05941
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           05942
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           05943
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           05944
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           05945
         DC    X'FFFFFFFFFFFFFFFF'                                       05946
* --------------------------------------------------------- *            05947
PARMCHEK CSECT                                                           05948
         SPACE 3                                                         05949
         LTORG                                                           05950
         SPACE 3                                                         05951
         DS    0D                                                        05952
* --------------------------------------------------------- *            05953
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 05954
               COPYMODS LVL-071'                                         05955
* --------------------------------------------------------- *            05956
         SPACE 3                                                         05957
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 05958
               EODAD=SYSINEND                                            05959
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     05960
* --------------------------------------------------------- *            05961
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05962
HEX      DS    0H                                                        05963
         MVC   1(1,R15),0(R1)        Move byte                           05964
         UNPK  0(3,R15),1(2,R15)     Unpack                              05965
         TR    0(2,R15),HEXTAB-240                                       05966
         LA    R15,2(,R15)           Increment output pointer            05967
         LA    R1,1(,R1)             Increment input pointer             05968
         BCT   R0,HEX                Decrement length, then loop         05969
         MVI   0(R15),C' '           Blank the trailing byte             05970
         BR    R4                    Return to caller                    05971
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05972
         SPACE                                                           05973
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05974
HEXSAVE  DS    3F                    Register save for HEX macro         05975
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05976
* --------------------------------------------------------- *            05977
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             05978
*              X'01'          PARMREPT DD IS PRESENT                     05979
*              X'02'          SYSIN    DD IS PRESENT                     05980
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                05981
*              X'01'          PARMREPT DD IS OPEN                        05982
*              X'02'          SYSIN    DD IS OPEN                        05983
* --------------------------------------------------------- *            05984
         SPACE 3                                                         05985
PARMSAVE DC    F'0'                                                      05986
SAV4HEX  DC    F'0'                                                      05987
SAVE2TO3 DC    2F'0'                                                     05988
SAVE3REG DC    F'0'                                                      05989
SAVE7BA0 DC    F'0'                                                      05990
SAVE7BA1 DC    F'0'                                                      05991
PARMWORK DC    CL8' '                                                    05992
UPCASEOR DC    CL8' '                                                    05993
         DC    CL4' '                                                    05994
*    ------------------------ >   Constants for Date and Time - below    05995
SAVE1402 DS    6F                 Extra fullword for safety              05996
TIMED    DS    CL7                                                       05997
DATED    DS    CL9                                                       05998
DATETIME DS    4F                                                        05999
         ORG   DATETIME                                                  06000
TIME     DS    CL4                                                       06001
         DS    CL4                                                       06002
DATE     DS    CL5                                                       06003
         DS    CL3                                                       06004
HEADDLIT DS    0CL31              Literal for headings - date and time   06005
         DC    CL6'Today:'                                               06006
         DC    CL2' '                                                    06007
HEADDATE DC    CL23' '                                                   06008
LEVELLIT DS    0CL21              Level number display for headings      06009
         DC    CL6'Level '                                               06010
LEVELL   DC    CL4'&LLEV'                                                06011
         DC    CL2' ('                                                   06012
LEVDATE  DC    CL8' '             Assembly date for this program         06013
         DC    CL1')'                                                    06014
*    ------------------------ >   Constants for Date and Time - above    06015
*    --------------- >            Output line buffers - below            06016
PRMFDFLG DC    X'00'              Parm Found Flag                        06017
*              X'01'              Parm has been found in this record     06018
         DC    CL3' '                                                    06019
         DC    C' '                                                      06020
LINE     DC    CL133' '                                                  06021
         DC    C' '                                                      06022
CNTLINE  DC    CL133' '                                                  06023
         DC    C' '                                                      06024
OUTLINE  DC    CL133' '                                                  06025
         DC    C' '                                                      06026
PRTLINE  DC    CL133' '                                                  06027
         DC    CL80' '            Padding                                06028
*    --------------- >            Output line buffers - above            06029
*                                                                        06030
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                       06031
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  06031
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                   06031
         END                                                             06032
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 11/04/03               06033
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                       06034
**************************************************************           06035
**************************************************************           06036
**                                                          **           06037
**                                                          **           06038
**  MODULE:   LABELCHK - Check tape files to see if they    **           06039
**                       are tape labels.                   **           06040
**                                                          **           06041
**  AUTHOR:   Sam Golob                                     **           06042
**                                                          **           06043
**  PURPOSE:  This is a subroutine for programs which read  **           06044
**            tapes under BLP, so that tape label files     **           06045
**            would appear as ordinary files to the calling **           06046
**            program.  As file contents are passed to      **           06047
**            this program, LABELCHK detects whether they   **           06048
**            are tape labels, and tells the caller what    **           06049
**            type of labels they are.                      **           06050
**                                                          **           06051
**                                                          **           06052
**  METHOD:   Label headers (usually the first 4 bytes)     **           06053
**            are scanned, and if a match to a known label  **           06054
**            type is found, then that type of label is     **           06055
**            processed appropriately.                      **           06056
**                                                          **           06057
**  Flags Set:  The principal flag set by this routine is   **
**            the ISLABEL byte:                             **
**                                                          **
**   Setting of ISLABEL:   X'01'  - record is an IBM        **
**                                  standard label          **
**                                                          **
**                         X'02'  - record is an ANSI/ISO   **
**                                  (ASCII) standard label  **
**                                                          **
**                         X'00'  - the tested record is    **
**                                  not a tape label        **
**                                                          **
**   Other flags and quantities are also set by this        **
**   routine.  They are passed back to the caller in the    **
**   LCHKPASS user area, in register 2.  Sometimes the      **
**   PARMFLGS are changed.  These are passed back to the    **
**   caller in register 1.  Sometimes the INAREA (record    **
**   input area, usually containing a label image) is       **
**   changed.  The altered label image is passed back to    **
**   the caller in register 3.  At present, 80 bytes are    **
**   passed back in register 3.                             **
**                                                          **
**************************************************************           06061
         EJECT                                                           06062
**************************************************************           06063
**                                                          **           06064
**  CHANGE LOG:                                             **           06065
**                                                          **           06066
**    Version 1.0 - Base program to detect IBM tape labels. **           06067
**                                                          **           06068
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **           06069
**                                                          **           06070
**                                                          **           06071
**************************************************************           06072
**************************************************************           06073
         EJECT                                                           06074
**************************************************************           06075
*  ---------------------------------------------------------------  *    06076
*    This macro is used to display hex values in a printed report.       06077
*  ---------------------------------------------------------------  *    06078
         MACRO                                                           06079
&NAME    HEX   &TO,&LEN,&FROM                                            06080
&NAME    DS    0H                                                        06081
         ST    R4,SAV4HEX                                                06082
         STM   15,1,HEXSAVE                                              06083
         LA    1,&FROM                                                   06084
         LA    0,&LEN                                                    06085
         LA    15,&TO                                                    06086
         BAL   4,HEX                                                     06087
         L     R4,SAV4HEX                                                06088
         LM    15,1,HEXSAVE                                              06089
         MEND                                                            06090
         SPACE                                                           06091
**************************************************************           06092
         GBLC  &LLEV                                                     06093
&LLEV    SETC  '1.1 '                                                    06094
         YREGS                                                           06095
         ENTRY LABELCHK                                                  06096
LABELCHK CSECT                                                           06097
         USING *,R15                                                     06098
         B     EYECATCH                                                  06099
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06100
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'         06101
         DC    C' - '                                                    06102
         DC    C'PARM INPUT IN SYSIN '                                   06103
         DC    C' - '                                                    06104
         DC    C'LEVEL '                                                 06105
SYSLEV   DC    C'&LLEV'                                                  06106
         DC    C' - '                                                    06107
SYSDAT   DC    C'&SYSDATE'                                               06108
         DC    C'  ',C'&SYSTIME ',C'--- '                                06109
         DC    C'Copyright (c) 2003 by Sam Golob '                       06110
         DC    C'--- '              MAKE EYECATCHER VISIBLE              06111
SAVEAREA DC    18F'0'                                                    06112
EYECATCH DS    0D                   ENSURE ALIGNMENT                     06113
         SAVE  (14,12)                                                   06114
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     06115
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   06116
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          06117
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         06118
         LR    R13,R1               NEW SAVE AREA ADDRESS                06119
         DROP  R15                                                       06120
* -----                             SET UP BASE REGISTERS                06121
         USING LABELCHK,R12,R11,R10,R9                                   06122
         LR    R12,R15                                                   06123
         LA    R11,4095(,R12)                                            06124
         LA    R11,1(,R11)                                               06125
         LA    R10,4095(,R11)                                            06126
         LA    R10,1(,R10)                                               06127
         LA    R9,4095(,R10)                                             06128
         LA    R9,1(,R9)                                                 06129
         LR    R1,R5                RESTORE REGISTER 1 INPUT             06130
* ----------------------------------------------------------------- *
         ST    R1,PARMSAVE          Address of parm flags in caller      06131
         ST    R2,USERSAVE          Address of user area in caller       06132
         ST    R3,INARSAVE          Address of INAREA in caller          06133
* ----------------------------------------------------------------- *    06134
***********************************************************************  06135
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  06136
***********************************************************************  06137
         STM   R14,R2,SAVE1402                                           06138
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             06139
         OI    DATE+4,X'0F'                                              06140
         UNPK  DATED,DATE                                                06141
         OI    TIME+3,X'0F'                                              06142
         UNPK  TIMED,TIME                                                06143
*                          FILL HEADDATE AREA WITH INFO TO REUSE         06144
         MVC   HEADDATE(2),DATED                                         06145
         MVI   HEADDATE+2,C'/'                                           06146
         MVC   HEADDATE+3(2),DATED+2                                     06147
         MVI   HEADDATE+5,C'/'                                           06148
         MVC   HEADDATE+6(4),DATED+4                                     06149
         MVC   HEADDATE+12(2),TIMED                                      06150
         MVI   HEADDATE+14,C':'                                          06151
         MVC   HEADDATE+15(2),TIMED+2                                    06152
         MVI   HEADDATE+17,C':'                                          06153
         MVC   HEADDATE+18(2),TIMED+4                                    06154
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         06155
         LM    R14,R2,SAVE1402                                           06156
***********************************************************************  06157
         MVC   LEVDATE(8),SYSDAT                                         06158
***********************************************************************  06159
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES      06160
* ----------------------------------------------------------------- *    06161
INITCONS DS    0H                    Initialize necessary quantities.    06162
         MVI   LINE-1,X'40'          Make sure the print line is blank.  06163
         MVC   LINE,LINE-1                                               06164
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      06165
         ST    R0,SYSPRDCB             store for the program's use       06166
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      06167
         ST    R0,LABLDDCB             store for the program's use       06168
         L     R0,LABADDIV           LABADDIN DCB address in caller      06169
         ST    R0,LABADDCB             store for the program's use       06170
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer
         ST    R0,SAVTRTCS             store it for later use
* ----------------------------------------------------------------*
PROCESS  DS    0H                    First copy over passed areas.
* ----------------------------------------------------------------*
         L     R1,PARMSAVE              Point to caller's parm flags     06174
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.      06175
         L     R2,USERSAVE              Point to caller's user area.     06176
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.      06177
         L     R3,INARSAVE              Point to INAREA in caller.       06178
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.    06179
* ----------------------------------------------------------------*
*   Then execute this entire program as a called subroutine.      *
* ----------------------------------------------------------------*
         BAL   R7,LABLCHEK                                               06180
* ----------------------------------------------------------------*
*
         B     THEEND                                                    06181
LBLINEND DS    0H                                                        06182
         OI    LBLINENF,X'01'                                            06183
THEEND   DS    0H                                                        06184
         L     R13,4(,R13)                                               06185
         MVC   16(4,R13),=F'0'          Return code 0     in R15         06186
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     06187
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    06188
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2   06189
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3      06190
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06191
         LM    R14,R12,12(R13)                                           06192
         BR    R14                                                       06193
         EJECT
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06194
*    BAL REGISTER IS R7.                                                 06195
* --------------------------------------------------------- *            06196
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS              06197
*                         AND SET LABEL FLAGS, ACCORDINGLY,              06198
*                         IN THE LBLFLAG BYTE.                           06199
* --------------------------------------------------------- *            06200
*     The type of labels last seen on the input tape
*     are generally flagged by bits in the LBLFLAG byte.
*     These bit settings are set by this program as
*     follows:   (These are for both IBM and ASCII labels)
* --------------------------------------------------------- *            06200
*              X'01'    HDR1 HAS BEEN SEEN                               06201
*              X'02'    HDR2 HAS BEEN SEEN                               06202
*              X'04'    VOL1 HAS BEEN SEEN                               06203
*              X'08'    HDR1 IS FROM AN INITTED TAPE                     06204
*              X'10'    EOF1 HAS BEEN SEEN                               06205
*              X'20'    EOF2 HAS BEEN SEEN                               06206
*              X'40'    EOV1 HAS BEEN SEEN                               06207
*              X'80'    EOV2 HAS BEEN SEEN                               06208
* --------------------------------------------------------- *            06209
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            06210
* -                                                       - *            06211
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            06212
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            06213
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            06214
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            06215
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            06216
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            06217
* --------------------------------------------------------- *            06218
*                                                           *
*   Beginning of processing:                                *
*                                                           *
*     Check the input record (that has been copied to       *
*     INAREA) for each possible type of label, and direct   *
*     the processing to the appropriate routine, if a       *
*     label type has been found.                            *
*                                                           *
*     If an input record does not fit any of these          *
*     criteria, it is not considered a tape label.          *
*                                                           *
* --------------------------------------------------------- *
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START      06219
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                     06220
         BE    CVOL1                PROCESS THE VOL1                     06221
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                     06222
         BE    CHDR1                PROCESS HDR1                         06223
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                        06224
         BE    CHDR2                PROCESS HDR2                         06225
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                       06226
         BE    CEOF1                PROCESS EOF1                         06227
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                       06228
         BE    CEOF2                PROCESS EOF2                         06229
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                       06230
         BE    CEOV1                PROCESS EOV1                         06231
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                       06232
         BE    CEOV2                PROCESS EOV2                         06233
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?            06234
         BE    CUHL                 PROCESS UHL                          06235
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?           06236
         BE    CUTL                 PROCESS UTL                          06237
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?
         BE    ASC                     PROCESS ALL VOL TYPES
         CLC   INAREA(3),=X'484452'   ASCII HDR?
         BE    ASC                     PROCESS ALL HDR TYPES
         CLC   INAREA(3),=X'454F46'   ASCII EOF?
         BE    ASC                     PROCESS ALL EOF TYPES
         CLC   INAREA(3),=X'454F56'   ASCII EOV?
         BE    ASC                     PROCESS ALL EOV TYPES
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)
         BE    ASC                     PROCESS ALL UVL TYPES
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)
         BE    ASC                     PROCESS ALL UHL TYPES
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)
         BE    ASC                     PROCESS ALL UTL TYPES
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL   06238
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------             06239
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             06240
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG       06241
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          06242
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06243
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    06244
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      06245
CLRIDRCV DS    0H                                                        06246
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          06247
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE            06248
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE             06249
* ---------------- LABEL ADDING CODE ---------------------- *            06250
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                06251
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    06252
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   06253
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              06254
         ST    R6,SAVER6                                                 06255
         L     R6,SYSPRDCB                                               06256
         PUT   (6),LINE                                                  06257
         L     R6,SAVER6                                                 06258
*        PUT   SYSPRINT,LINE        WRITE MSG                            06259
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  06260
*        CLOSE (LABADDIN)                                                06261
         OI    LABADFLG,X'01'                                            06262
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM            06263
         OI    CLOSMFLG,X'01'                                            06264
         B     THEEND                                                    06265
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          06266
* ---------------- LABEL ADDING CODE ---------------------- *            06267
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                       06280
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                    06281
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND             06282
         MVI   LINE-1,C' '                                               06283
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06284
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS               06285
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL                06286
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS               06287
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION                06288
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND               06289
         ST    R6,SAVER6                                                 06290
         L     R6,SYSPRDCB                                               06291
         PUT   (6),LINE                                                  06292
         L     R6,SAVER6                                                 06293
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  06294
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06295
         B     LABCHEND                                                  06296
CHDR1    DS    0H                                                        06297
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06298
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      06299
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR       06300
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                       06301
* ---------------- LABEL DUMPING CODE --------------------- *            06302
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06303
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                 06304
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            06312
* ---------------- LABEL DUMPING CODE --------------------- *            06313
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?              06314
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET             06315
* ---------------- LABEL DUMPING CODE --------------------- *            06316
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06317
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      06318
         ST    R7,SAVE7LDM          Save BAL register.
         ST    R4,SAVE4LDM
         LA    R4,LABELITI          Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R4,SAVE4LDM
         L     R7,SAVE7LDM          Restore BAL register.
CHDR1NDM DS    0H                                                        06326
* ---------------- LABEL DUMPING CODE --------------------- *            06327
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE              06328
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?                        06330
         BZ    CHDR1Z         NO. DON'T PRINT.                           06331
         ST    R3,SAVE3REG                                               06332
         LA    R3,INAREA      Point to label area to print               06333
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06334
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           06335
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06336
         L     R3,SAVE3REG                                               06337
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06338
         B     LABCHEND                                                  06339
CHDR2    DS    0H                                                        06340
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06341
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      06342
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          06343
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06344
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    06345
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06346
         BNE   CLRIDRH2                                                  06347
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06348
CLRIDRH2 DS    0H                                                        06349
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          06350
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2            06351
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                       06352
* ---------------- LABEL DUMPING CODE --------------------- *            06353
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06354
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                 06355
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           06363
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            06364
* ---------------- LABEL DUMPING CODE --------------------- *            06365
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                      06366
         BZ    CHDR2Z           NO.                                      06367
         ST    R3,SAVE3REG                                               06368
         LA    R3,INAREA      Point to label area to print               06369
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06370
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           06371
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06372
         L     R3,SAVE3REG                                               06373
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06374
         B     LABCHEND                                                  06375
CEOF1    DS    0H                                                        06376
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06377
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      06378
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                 06379
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                       06380
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06381
BCTCEOF1 DS    0H                                                        06382
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06383
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  06384
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06385
         STM   R2,R3,SAVE2TO3                                            06386
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06387
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06388
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06389
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06390
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06391
         LM    R2,R3,SAVE2TO3                                            06392
BCTCEOFX DS    0H                                                        06393
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06394
* ---------------- LABEL DUMPING CODE --------------------- *            06395
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06396
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                 06397
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            06405
* ---------------- LABEL DUMPING CODE --------------------- *            06406
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                      06407
         BZ    CEOF1Z           NO.                                      06408
         ST    R3,SAVE3REG                                               06409
         LA    R3,INAREA      Point to label area to print               06410
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06411
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           06412
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06413
         L     R3,SAVE3REG                                               06414
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06415
         B     LABCHEND                                                  06416
CEOF2    DS    0H                                                        06417
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06418
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      06419
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06420
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06421
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    06422
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06423
         BNE   CLRIDRF2                                                  06424
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06425
CLRIDRF2 DS    0H                                                        06426
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06427
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                 06428
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                       06429
* ---------------- LABEL DUMPING CODE --------------------- *            06430
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06431
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                 06432
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06440
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            06441
* ---------------- LABEL DUMPING CODE --------------------- *            06442
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                      06443
         BZ    CEOF2Z           NO.                                      06444
         ST    R3,SAVE3REG                                               06445
         LA    R3,INAREA      Point to label area to print               06446
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06447
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           06448
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06449
         L     R3,SAVE3REG                                               06450
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06451
         B     LABCHEND                                                  06452
CEOV1    DS    0H                                                        06453
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06454
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      06455
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 06456
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06457
         BZ    CEOVN1         NO, PROCESS ORDINARILY                     06458
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    06459
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            06460
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06461
         MVI   LINE-1,C' '                                               06462
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06463
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        06464
         ST    R6,SAVER6                                                 06465
         L     R6,SYSPRDCB                                               06466
         PUT   (6),LINE                                                  06467
         L     R6,SAVER6                                                 06468
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               06469
         B     CEOVY1                                                    06470
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       06471
CEOVY1   DS    0H                                                        06472
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06473
BCTCEOV1 DS    0H                                                        06474
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          06475
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  06476
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         06477
         STM   R2,R3,SAVE2TO3                                            06478
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     06479
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    06480
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 06481
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        06482
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              06483
         LM    R2,R3,SAVE2TO3                                            06484
BCTCEOVX DS    0H                                                        06485
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06486
* ---------------- LABEL DUMPING CODE --------------------- *            06487
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06488
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                 06489
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            06497
* ---------------- LABEL DUMPING CODE --------------------- *            06498
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                      06499
         BZ    CEOV1Z           NO.                                      06500
         ST    R3,SAVE3REG                                               06501
         LA    R3,INAREA      Point to label area to print               06502
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06503
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           06504
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06505
         L     R3,SAVE3REG                                               06506
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06507
         B     LABCHEND                                                  06508
CEOV2    DS    0H                                                        06509
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06510
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      06511
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          06512
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   06513
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    06514
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             06515
         BNE   CLRIDRV2                                                  06516
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      06517
CLRIDRV2 DS    0H                                                        06518
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          06519
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                 06520
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         06521
         BZ    CEOVN2         NO, PROCESS ORDINARILY                     06522
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                    06523
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            06524
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 06525
         B     CEOVY2                                                    06526
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                       06527
CEOVY2   DS    0H                                                        06528
* ---------------- LABEL DUMPING CODE --------------------- *            06529
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06530
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                 06531
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   06539
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        06540
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           06541
         B     CEOV2ND              AND GET OUT                          06542
CEOV2F   DS    0H                                                        06543
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           06544
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            06545
* ---------------- LABEL DUMPING CODE --------------------- *            06546
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                      06547
         BZ    CEOV2Z           NO.                                      06548
         ST    R3,SAVE3REG                                               06549
         LA    R3,INAREA      Point to label area to print               06550
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06551
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           06552
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06553
         L     R3,SAVE3REG                                               06554
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06555
         B     LABCHEND                                                  06556
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            06557
CUHL     DS    0H             HANDLE USER HEADER LABELS                  06558
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06559
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      06560
         ST    R3,SAVE3REG                                               06561
         LA    R3,INAREA      Point to label area to print               06562
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06563
         BAL   R7,PRTUSER     PRINT LABEL INFO                           06564
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06565
         L     R3,SAVE3REG                                               06566
* ---------------- LABEL DUMPING CODE --------------------- *            06567
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06568
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 06569
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            06577
* ---------------- LABEL DUMPING CODE --------------------- *            06578
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06579
         B     LABCHEND                                                  06580
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 06581
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            06582
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      06583
         ST    R3,SAVE3REG                                               06584
         LA    R3,INAREA      Point to label area to print               06585
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                06586
         BAL   R7,PRTUSER     PRINT LABEL INFO                           06587
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               06588
         L     R3,SAVE3REG                                               06589
* ---------------- LABEL DUMPING CODE --------------------- *            06590
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06591
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 06592
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            06600
* ---------------- LABEL DUMPING CODE --------------------- *            06601
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              06602
         B     LABCHEND                                                  06603
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            06604
         EJECT
* ----------------  ASCII   Labels  ----------------------- *
* --------------------------------------------------------- *
*  ANSI/ISO label rules are a bit more relaxed than IBM     *
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *
*  UTLx are all considered labels, with a lot of latitude   *
*  as to what the "x" is.  Therefore, for ASCII tape        *
*  labels, we check the first 3 characters in each label    *
*  category, and then further subdivide within that         *
*  category if necessary.                                   *
* --------------------------------------------------------- *
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE
*
*        Common ASCII preparation routines......
*
         OI    ASCIIFLG,X'01'       Say we're working in ASCII
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label
*                                   This is being done early for ASCII
*
* -- >  Make an EBCDIC version of this label in the INASCI field.
         ST    R5,R5HXPRT              Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTDSECT,R5
         MVC   INASCI(80),INAREA       Move LABEL area to workarea
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print
         L     R5,R5HXPRT              Restore R5
         DROP  R5
* -- >
* ----------------------------------------------------- *
* --   Again pick which type of ASCII label we have     *
* ----------------------------------------------------- *
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?
         BE    ASCVOL                  PROCESS ALL VOL TYPES
         CLC   INAREA(3),=X'484452'   ASCII HDR?
         BE    ASCHDR                  PROCESS ALL HDR TYPES
         CLC   INAREA(3),=X'454F46'   ASCII EOF?
         BE    ASCEOF                  PROCESS ALL EOF TYPES
         CLC   INAREA(3),=X'454F56'   ASCII EOV?
         BE    ASCEOV                  PROCESS ALL EOV TYPES
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)
         BE    ASCUVL                  PROCESS ALL UVL TYPES
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)
         BE    ASCUHL                  PROCESS ALL UHL TYPES
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)
         BE    ASCUTL                  PROCESS ALL UTL TYPES
* ----------------------------------
ASCVOL   DS    0H
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG
* ---------------- LABEL ADDING CODE ---------------------- *
*       Forbid adding new labels to an already AL tape.     *
* --------------------------------------------------------- *
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?
         BZ    ASCVOLNS             NO. WE CAN GO ON.
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG
         ST    R6,SAVER6
         L     R6,SYSPRDCB
         PUT   (6),LINE
         L     R6,SAVER6
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED
*        CLOSE (LABADDIN)
         OI    LABADFLG,X'01'
         OI    CLOSMFLG,X'01'
         B     THEEND
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.
* ---------------- LABEL ADDING CODE ---------------------- *
* ---------------- LABEL DUMPING CODE ------ below -------- *
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?
         BZ    AVOL1ND              NO. SKIP PUTTING OUT
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE
* ---------------- LABEL DUMPING CODE ------ above -------- *
* --------------------------------------------------------- *
*  At this point, we specifically check for a VOL1 label.   *
* --------------------------------------------------------- *
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?
         BNE   ASCVOLLB             No. Just mark as an ASCII label.
         OI    LBLFLAG,X'04'        Flag VOL1 seen.
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there
         MVC   INVOLUME(6),INASCI+4    Send to message too
* --- >>>    VOL1  Label Printing   -----   below
         TM    PARMFLG2,X'02'          Printing Volume Labels?
         BZ    ASCVOLLB                No. Skip this code.
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1             CLEAR PRINT LINE
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS
         MVC   VOL1SER(6),INASCI+4     REPORT VOLUME SERIAL
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS
         MVC   VOL1OWNR(14),INASCI+37     OWNER INFORMATION
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4
         MVC   VOL1LBL+93(1),INASCI+79    Copy Level into message
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND
         ST    R6,SAVER6               Write message with VOLSER
         L     R6,SYSPRDCB
         PUT   (6),LINE
         L     R6,SAVER6
* --- >>>    VOL1  Label Printing   -----   above
ASCVOLLB DS    0H
ASCVOLE  DS    0H
         B     LABCHEND
*
ASCHDR   DS    0H
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?
         BE    ASCHDR1
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?
         BE    ASCHDR2
         B     ASCHDRO
ASCHDR1  DS    0H                   ASCII Header 1
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06313
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?             06314
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET     06315
* ---------------- LABEL DUMPING CODE --------------------- *            06316
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06317
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      06318
         ST    R7,SAVE7LDM          Save BAL register.
         ST    R4,SAVE4LDM
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII.
         LA    R4,LABELITI          Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R4,SAVE4LDM
         L     R7,SAVE7LDM          Restore BAL register.
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.
CASC1NDM DS    0H
* ---------------- LABEL DUMPING CODE --------------------- *
         OI    LBLFLAG,X'08'        Show initted header label found.
CASC1A   DS    0H
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?
         BZ    ASCHDR1Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX1              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCHDR1Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCHDR2  DS    0H                   ASCII Header 2
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCHDR2A DS    0H
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?
         BZ    ASCHDR2Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTAXX2              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCHDR2Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCHDRO  DS    0H                    ASCII Other header labels
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AHDROND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AHDROND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCHDRE  DS    0H
         B     LABCHEND
ASCEOF   DS    0H
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?
         BE    ASCEOF1
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?
         BE    ASCEOF2
         B     ASCEOFO
ASCEOF1  DS    0H                    ASCII EOF 1
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED.
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06473
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.
         TM    PARMFLG1,X'01'          Is block count correction on?
         BZ    NOTASCEF                No-don't plug in corrected value
ASCBLKF1 DS    0H
         ST    R5,R5HXPRT              Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTDSECT,R5
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
         MVC   INAREA+54(6),BLKCNASC+4
NOTASCEF DS    0H
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06473
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCEOF1A DS    0H
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?
         BZ    ASCEOF1Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX1              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCEOF1Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCEOF2  DS    0H                   ASCII EOF 2
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCEOF2A DS    0H
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?
         BZ    ASCEOF2Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTAXX2              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCEOF2Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCEOFO  DS    0H                    ASCII Other EOF labels
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOFOND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCEOFE  DS    0H
         B     LABCHEND
ASCEOV   DS    0H
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?
         BE    ASCEOV1
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?
         BE    ASCEOV2
         B     ASCEOVO
ASCEOV1  DS    0H                    ASCII EOV 1
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1    CLEAR PRINT LINE
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE
         ST    R6,SAVER6
         L     R6,SYSPRDCB
         PUT   (6),LINE
         L     R6,SAVER6
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.
         B     ASCEOVY1
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.
ASCEOVY1 DS    0H
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.
         TM    PARMFLG1,X'01'          Is block count correction on?
         BZ    NOTASCEV                No-don't plug in corrected value
ASCBLKV1 DS    0H
         ST    R5,R5HXPRT              Save register.
         L     R5,SAVTRTCS             Point to translation table CSECT
         USING TRTDSECT,R5
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII
         L     R5,R5HXPRT              Restore R5
         DROP  R5
         MVC   INAREA+54(6),BLKCNASC+4
NOTASCEV DS    0H
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            06473
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?
         BZ    ASCEOV1Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTXXX1              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCEOV1Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCEOV2  DS    0H                    ASCII EOV 2
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE          06544
         B     ASCEOVY2
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE          06541
ASCEOVY2 DS    0H
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCEOV2N DS    0H
* --- >      Print  Labels     - -   below
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?
         BZ    ASCEOV2Z                NO. DON'T PRINT.
         ST    R3,SAVE3REG
         LA    R3,INASCI               Point to label area to print
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTAXX2              PRINT LABEL INFO
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCEOV2Z DS    0H
* --- >      Print  Labels     - -   above
         B     LABCHEND
ASCEOVO  DS    0H                    ASCII Other EOV labels
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED.
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AEOVOND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
ASCEOVE  DS    0H
         B     LABCHEND
ASCUVL   DS    0H
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AUVLEND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
         ST    R3,SAVE3REG
         LA    R3,INASCI      Point to label area to print
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTUSER     PRINT LABEL INFO
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCUVLE  DS    0H
         B     LABCHEND
ASCUHL   DS    0H
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AUHLEND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
         ST    R3,SAVE3REG
         LA    R3,INASCI      Point to label area to print
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTUSER     PRINT LABEL INFO
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCUHLE  DS    0H
         B     LABCHEND
ASCUTL   DS    0H
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG
* ---------------- LABEL DUMPING CODE --------------------- *            06268
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               06269
         BZ    AUTLEND              NO. SKIP PUTTING OUT                 06270
         ST    R7,SAVE7LDM          Save BAL register.
         LA    R4,INAREA            Point to area to be dumped.
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.
         L     R7,SAVE7LDM          Restore BAL register.
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE            06278
* ---------------- LABEL DUMPING CODE --------------------- *            06279
         ST    R3,SAVE3REG
         LA    R3,INASCI      Point to label area to print
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER
         BAL   R7,PRTUSER     PRINT LABEL INFO
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER
         L     R3,SAVE3REG
ASCUTLE  DS    0H
         B     LABCHEND
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG               06605
LABCHEND DS    0H                                                        06606
         BR    R7                                                        06606
* --------------------------------------------------------- *            06607
*    BAL REGISTER IS R7.                                                 06608
* --------------------------------------------------------- *            06609
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII     06610
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          06611
         MVI   LINE-1,C' '                                               06612
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06613
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            06614
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS               06615
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL                06616
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS               06617
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                        06618
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS               06619
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER             06620
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS               06621
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER              06622
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS               06623
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS              06624
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               06625
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         06626
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS               06627
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS              06628
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS               06629
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS              06630
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE                06631
         ST    R6,SAVER6                                                 06632
         L     R6,SYSPRDCB                                               06633
         PUT   (6),LINE                                                  06634
         L     R6,SAVER6                                                 06635
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  06636
PRTXXX1R BR    R7                                                        06637
* --------------------------------------------------------- *            06638
*    BAL REGISTER IS R7.                                                 06639
* --------------------------------------------------------- *            06640
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC        06641
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          06642
         MVI   LINE-1,C' '                                               06643
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06644
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            06645
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               06646
         MVC   XXX2RFM(1),4(R3)      RECFM                               06647
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute
         MVC   XXX2RFM+2(1),36(R3)   Control Character
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS
         CLC   =C'00000',5(R3)       Is Block Length 00000?
         BNE   PRX2NLBI              No. No LBI. Print what's here.
         CLI   70(R3),X'40'          Is first LBI field a blank?
         BNE   PRX2NLBI              No LBI field either. Print zeros.
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display
         B     PRX2LBI               And not the old blksize field.
PRX2NLBI DS    0H
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH
PRX2LBI  DS    0H
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               06650
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                       06651
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               06652
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                        06653
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS               06654
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                      06655
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS               06656
         CLI   34(R3),C'P'           INDICATE IDRC?                      06657
         BNE   PRX2NOI               NO. SAY NO                          06658
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                   06659
         B     PRX2MOV                                                   06660
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                        06661
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE                06662
         ST    R6,SAVER6                                                 06663
         L     R6,SYSPRDCB                                               06664
         PUT   (6),LINE                                                  06665
         L     R6,SAVER6                                                 06666
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  06667
PRTXXX2R BR    R7                                                        06668
* --------------------------------------------------------- *
*    BAL REGISTER IS R7.
* --------------------------------------------------------- *
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII
*
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.
*
         MVI   LINE-1,C' '
         MVC   LINE,LINE-1           CLEAR PRINT LINE
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2RFM(1),4(R3)      RECFM
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute
         MVC   AXX2RFM+2(1),36(R3)   Control Character
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE
         ST    R6,SAVER6
         L     R6,SYSPRDCB
         PUT   (6),LINE
         L     R6,SAVER6
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL
PRTAXX2R BR    R7
* --------------------------------------------------------- *            06669
*    BAL REGISTER IS R7.                                                 06670
* --------------------------------------------------------- *            06671
PRTUSER  DS    0H                                                        06672
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          06673
         MVI   LINE-1,C' '                                               06674
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           06675
         MVI   USERLBL-1,C' '                                            06676
         MVC   USERLBL(133),USERLBL-1                                    06677
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          06678
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                06679
         ST    R6,SAVER6                                                 06680
         L     R6,SYSPRDCB                                               06681
         PUT   (6),LINE                                                  06682
         L     R6,SAVER6                                                 06683
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  06684
PRTUSERR BR    R7                                                        06685
* --------------------------------------------------------- *            06686
*    BAL REGISTER IS R7.                                                 06687
* --------------------------------------------------------- *            06688
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            06689
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              06690
* --------------------------------------------------------- *            06691
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          06692
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        06693
         BE    MOVEHI09                                                  06694
         MVC   0(4,R3),0(R2)                                             06695
         B     MOVEHIEN                                                  06696
         LA    R2,1(,R2)                                                 06697
         LA    R3,1(,R3)                                                 06698
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        06699
         BE    MOVEHI08                                                  06700
         MVC   0(3,R3),0(R2)                                             06701
         B     MOVEHIEN                                                  06702
         LA    R2,1(,R2)                                                 06703
         LA    R3,1(,R3)                                                 06704
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        06705
         BE    MOVEHI07                                                  06706
         MVC   0(2,R3),0(R2)                                             06707
         B     MOVEHIEN                                                  06708
         LA    R2,1(,R2)                                                 06709
         LA    R3,1(,R3)                                                 06710
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        06711
         BE    MOVEHIEN                                                  06712
         MVC   0(1,R3),0(R2)                                             06713
MOVEHIEN BR    R7                                                        06714
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06715
*    BAL REGISTER IS R7.                                                 06716
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06717
*              Upon entry, R4 points to the 80-byte record
*              to be dumped into the LABLDUMP DD.
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *
DUMLABRC DS    0H
         TM    PARMFLG2,X'10'       Are we dumping labels?               06269
         BZ    DUMLABRN             No. Skip putting out.                06270
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.         06271
         MVC   LLINE(80),0(R4)      Move in record info to line.         06272
         TM    ASCIIFLG,X'01'       Are we working in ASCII?
         BZ    NOASCIID             No. Don't translate label bytes.
         MVI   LLINE,X'20'                  Clear to ASCII blanks
         MVC   LLINE+1(L'LLINE-1),LLINE
         MVC   LLINE(80),0(R4)      Move in record info to line.         06272
         ST    R5,SAVE5LDM          Save register.
         L     R5,SAVTRTCS          Point to translation table CSECT
         USING TRTDSECT,R5          Map it.
         TM    ATRNLFLG,X'01'       Is this record to be translated?
         BZ    ANOTRANS             No. Dump it as is.
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII
ANOTRANS DS    0H
         L     R5,SAVE5LDM          Restore register.
         DROP  R5
NOASCIID DS    0H
         ST    R6,SAVER6            Prepare to write record. Save reg.
         L     R6,LABLDDCB          Point to LABLDUMP DCB.
         PUT   (6),LLINE
         L     R6,SAVER6            Restore register.
*        PUT   LABLDUMP,LLINE       Write out label info.
DUMLABRN DS    0H
         BR    R7
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06715
*    BAL REGISTER IS R4.                                                 06716
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06717
HEX      DS    0H                                                        06718
         MVC   1(1,R15),0(R1)        Move byte                           06719
         UNPK  0(3,R15),1(2,R15)     Unpack                              06720
         TR    0(2,R15),HEXTAB-240                                       06721
         LA    R15,2(,R15)           Increment output pointer            06722
         LA    R1,1(,R1)             Increment input pointer             06723
         BCT   R0,HEX                Decrement length, then loop         06724
         MVI   0(R15),C' '           Blank the trailing byte             06725
         BR    R4                    Return to caller                    06726
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     06727
         SPACE                                                           06728
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06729
* --------------------------------------------------------- *            06730
* ---        C O N S T A N T S                          --- *            06731
* --------------------------------------------------------- *            06732
INITBLNK DC    76C' '                                                    06733
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '              06734
VOL1SER  DC    C'      '                                                 06735
VOL1OWNT DC    C'     OWNER = '                                          06736
VOL1OWNR DC    C'          '                                             06737
VOL1OWNE DC    C'    '
VOL1BLNK DC    59C' '
         DC    C' '                                                      06739
USERLBL  DC    81C' '                                                    06740
         DC    52C' '                                                    06741
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                  06742
XXX1VOL  DC    C'      '                                                 06743
XXX1DSNL DC    C' DSN='                                                  06744
XXX1DSN  DC    C'                 '                                      06745
XXX1DSQL DC    C' DS SEQ #: '                                            06746
XXX1DSQ  DC    C'    '                                                   06747
XXX1VSQL DC    C' VOL SEQ #: '                                           06748
XXX1VSQ  DC    C'    '                                                   06749
XXX1BLCL DC    C' BLK CNT: '                                             06750
XXX1BLCH DC    C'    '                                                   06751
XXX1BLC  DC    C'      '                                                 06752
XXX1CRDL DC    C' CRDATE: '                                              06753
XXX1CRD  DC    C'      '                                                 06754
XXX1EXDL DC    C' EXDATE: '                                              06755
XXX1EXD  DC    C'      '                                                 06756
XXX1BLNK DC    30C' '                                                    06757
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    06758
XXX2RFM  DC    C' '                                                      06759
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     06760
XXX2BKLE DS    0CL10
XXX2BKL  DC    C'     '
         DC    C'     '
XXX2RCLL DC    C'   RECORD LENGTH: '                                     06762
XXX2RCL  DC    C'     '                                                  06763
XXX2TDNL DC    C'  TAPE DEN: '                                           06764
XXX2TDN  DC    C' '                                                      06765
XXX2JSTL DC    C'   JOB/JOB STEP: '                                      06766
XXX2JST  DC    C'                 '                                      06767
XXX2IDRL DC    C'   IDRC? '                                              06768
XXX2IDR  DC    C'   '                                                    06769
XXX2BLNK DC    8C' '                                                     06770
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW
AXX2LBL  DC    C' XXX2 LABEL: RECFM='
AXX2RFM  DC    C' '
AXX2BKLL DC    C'    BLOCK LENGTH: '
AXX2BKLE DS    0CL10
AXX2BKL  DC    C'     '
         DC    C'     '
AXX2RCLL DC    C'   RECORD LENGTH: '
AXX2RCL  DC    C'     '
AXX2TDNL DC    C'  TAPE DEN: '
AXX2TDN  DC    C' '
AXX2JSTL DC    C'   JOB/JOB STEP: '
AXX2JST  DC    C'                 '
AXX2CCSL DC    C'   CCSID '
AXX2CCS  DC    C'     '
AXX2BLNK DC    6C' '
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE
* --------------------------------------------------------- *            06771
*    ------------------------ >   Constants for Date and Time - below    06772
SAVE1402 DS    6F                 Extra fullword for safety              06773
TIMED    DS    CL7                                                       06774
DATED    DS    CL9                                                       06775
DATETIME DS    4F                                                        06776
         ORG   DATETIME                                                  06777
TIME     DS    CL4                                                       06778
         DS    CL4                                                       06779
DATE     DS    CL5                                                       06780
         DS    CL3                                                       06781
HEADDLIT DS    0CL31              Literal for headings - date and time   06782
         DC    CL6'Today:'                                               06783
         DC    CL2' '                                                    06784
HEADDATE DC    CL23' '                                                   06785
LEVELLIT DS    0CL21              Level number display for headings      06786
         DC    CL6'Level '                                               06787
LEVELL   DC    CL4'&LLEV'                                                06788
         DC    CL2' ('                                                   06789
LEVDATE  DC    CL8' '             Assembly date for this program         06790
         DC    CL1')'                                                    06791
*    ------------------------ >   Constants for Date and Time - above    06792
         LTORG                                                           06793
FF       EQU   X'FF'                                                     06794
LABELITH DC    CL80'----ENDOFLABELHEADER '                               06795
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            06796
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               06797
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            06798
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR- 06799
               AM              '                                         06800
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '             06801
         DC    C'EOV2EOF PARM OR OPTION'                                 06802
         DC    69C' '                                                    06803
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  06804
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  06805
         DC    C'                           '                            06806
         DC    C'0'                                                      06807
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    06808
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              04051
* --------------------------------------------------------- *            06809
         DC    C' '                                                      06810
LINE     DC    CL133' '                                                  06811
* ---------------------  Register Save Areas  ---------------->>>        06812
SYSPRINV DC    V(SYSPRINT)                                               06813
LABLDUMV DC    V(LABLDUMP)                                               06814
LABADDIV DC    V(LABADDIN)                                               06815
PARMSAVE DC    F'0'                                                      06816
USERSAVE DC    F'0'                                                      06817
INARSAVE DC    F'0'                                                      06818
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     06819
HEXSAVE  DS    3F                    Register save for HEX macro         06820
SAVE2TO3 DC    2F'0'                                                     06821
SAVER6   DC    F'0'                                                      06822
SAVE3REG DC    F'0'                                                      06823
SAVE7BA1 DC    F'0'                                                      06824
SAVE7REG DC    F'0'                                                      06825
SAVE7BAL DC    F'0'                                                      06826
SAVE4LDM DC    F'0'                                                      06826
SAVE5LDM DC    F'0'                                                      06826
R5HXPRT  DC    F'0'                                                      06826
SAVE7LDM DC    F'0'                                                      06826
SAVE7RG1 DC    F'0'                                                      06827
SAVE7RG2 DC    F'0'                                                      06828
SAVE7RG3 DC    F'0'                                                      06829
SAVE7RG4 DC    F'0'                                                      06830
SAVTRTCS DC    F'0'                                                      06830
* ---------- *           Save V(CON)s to DCBs                            06831
SYSPRDCB DC    F'0'                                                      06832
LABLDDCB DC    F'0'                                                      06833
LABADDCB DC    F'0'                                                      06834
* ---------- *                                                           06835
         DC    C' '          BLANK FOR CLEARING AREA                     06836
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                  06837
INASCI   DC    CL80' '       Read labels from here.                      06838
INAREA   DC    CL80' '       Read labels from here.                      06838
         DC    CL40' '       Padding for possible overflow.              06839
* ---------- *                                                           06840
**** ----------------------------------->>>>  Passed area, below         06841
* --------------------------------------------------------- *            06842
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           06843
PARMFLG1 DC    X'00'                                                     06844
PARMFLG2 DC    X'00'                                                     06845
PARMFLG3 DC    X'00'                                                     06846
PARMFLG4 DC    X'00'                                                     06847
PARMFLG5 DC    X'00'                                                     06848
PARMFLG6 DC    X'00'                                                     06849
PARMFLG7 DC    X'00'                                                     06850
PARMFLG8 DC    X'00'                                                     06851
PARMFLG9 DC    X'00'                                                     06852
PARMFLGA DC    X'00'                                                     06853
PARMFLLN EQU   *-PARMFLGS                                                06854
* --------------------------------------------------------- *            06855
**** ----- LABELCHK -------------------->>>>  Passed area, below         06856
*                                                                        06857
LCHKPASS DS    0H                                                        06858
*                                                                        06859
INAREAX  DC    CL80' '        Read labels into here.                     06860
         DC    CL40' '        Padding for possible overflow.             06861
* --------------------------------------------------------- *            06862
*                                                                        06863
*                                                                        06864
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       06865
*              X'00'          DATA IS NOT A LABEL                        06866
*              X'01'          DATA IS A LABEL                            06867
*              X'02'          DATA IS AN ASCII LABEL                     06867
*                                                                        06868
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               06869
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             06870
*              X'02'          BECAUSE OF SYSIN    DD MISSING             06871
*              X'04'          BECAUSE OF LABADDIN DD MISSING             06872
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06873
*              X'01'          LABLDUMP DD IS OPEN                        06874
*              X'02'          SYSIN    DD IS OPEN                        06875
*              X'04'          LABADDIN DD IS OPEN                        06876
L80FLAG  DC    X'00'                                                     06877
*              X'01'          LAST DATA WAS 80 BYTE RECORD               06878
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    06879
*              X'01'          HDR1 HAS BEEN SEEN                         06880
*              X'02'          HDR2 HAS BEEN SEEN                         06881
*              X'04'          VOL1 HAS BEEN SEEN                         06882
*              X'08'          HDR1 IS FROM AN INITTED TAPE               06883
*              X'10'          EOF1 HAS BEEN SEEN                         06884
*              X'20'          EOF2 HAS BEEN SEEN                         06885
*              X'40'          EOV1 HAS BEEN SEEN                         06886
*              X'80'          EOV2 HAS BEEN SEEN                         06887
ASCIIFLG DC    X'00'          Label is ASCII if X'01'
EXASCFLG DC    X'00'          External Label is ASCII if X'01'
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   06888
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          06889
CLOSMFLG DC    X'00'          If X'01' then close all open files         06890
* --------------------------                                             06891
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     06892
*              X'01'          WE ARE IN A HDR GROUP                      06893
*              X'02'          WE ARE IN A EOF GROUP                      06894
*              X'04'          WE ARE IN A EOV GROUP                      06895
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    06896
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       06897
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII
* ---------- *                                                           06898
* --------------------------------------------------------- *            06899
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        06900
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           06901
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           06902
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           06903
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             06904
VOLCHG   DC    C'      '                                                 06905
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        06906
VOLASC   DC    C'      '     ASCII VOLUME
LCHKPASE EQU   *-LCHKPASS                                                06907
**** ----- LABELCHK -------------------->>>>  Passed area, above         06908
** ---------------------------------------------------------------- **   04685
TRTDSECT DSECT                 Displacements must match TRTCSECT.        04582
TRTBL0   DS    256X                                                      04583
TRTBL1   DS    256X                                                      04600
TRTBL2   DS    256X                                                      04617
TRTE2A   DS    256X                                                      04634
TRTA2E   DS    256X                                                      04651
TRTASPRT DS    256X                                                      04668
** ---------------------------------------------------------------- **   04685
         END                                                             06909
