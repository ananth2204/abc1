*          DATA SET CBT990     AT LEVEL 079 AS OF 07/07/04               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**           Extensively revised by Sam Golob.              **           00009
**                                                          **           00010
**      (See the documentation in the code, below.)         **           00011
**                                                          **           00012
**  ** ================================================ **  **           00013
**  **  Defaults have purposely been left, so the       **  **           00014
**  **  output will resemble that of the original       **  **           00015
**  **  program version.  And all of your original JCL  **  **           00016
**  **  will still work.  However the list of "options  **  **           00017
**  **  in effect" will be printed in //SYSPRINT by     **  **           00018
**  **  default.  It will give you an idea about what   **  **           00019
**  **  kind of things are really possible to do,       **  **           00020
**  **  using this program.  IBM SL, and ASCII SL,      **  **           00021
**  **  are extensively supported.  So are 64K blocks.  **  **           00022
**  ** ================================================ **  **           00023
**  **  Options in COPYMODS may be coded in the PARM    **  **           00024
**  **  of the EXEC card or, more conveniently, in      **  **           00025
**  **  a separate //SYSIN DD card, which is automati-  **  **           00026
**  **  cally recognized if it is present in the JCL.   **  **           00027
**  ** ================================================ **  **           00028
**  **  Assembly time defaults can be changed by        **  **           00029
**  **  altering the (extremely flexible) PARMTABL.     **  **           00030
**  ** ================================================ **  **           00031
**                                                          **           00032
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00033
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00034
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **           00035
**                                                          **           00036
**     This has been revised, with the many new functions   **           00037
**     that have been added to COPYMODS.  Besides copying   **           00038
**     tapes, COPYMODS can read and measure tapes, as well  **           00039
**     as altering the copied tapes in many ways, such as   **           00040
**     stripping the labels or leading tape marks off.      **           00041
**     The VOLSER and OWNER can be altered in the copied    **           00042
**     tapes, and all labels can also be altered, through   **           00043
**     a process of dumping the labels to a FB-80 file      **           00044
**     (LABLDUMP option), editing the labels, stripping     **           00045
**     the labels in a copy operation (STRIP option), and   **           00046
**     splicing all the labels back in another copy         **           00047
**     operation (LABADDIN option).  COPYMODS can also      **           00048
**     INIT tapes, as many as 16 at a time.  No input tape  **           00049
**     is needed for an INIT operation (INITVOLS option).   **           00050
**                                                          **           00051
**     To see all the COPYMODS options, look at label       **           00052
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **           00053
**     parms for SYSIN, see the code a few lines after the  **           00054
**     label CARDREAD in the PARMCHEK CSECT.                **           00055
**                                                          **           00056
**     The different COPYMODS parms or options can be used  **           00057
**     in combination with each other, as long as they      **           00058
**     don't contradict each other.  In certain cases, the  **           00059
**     use of one option will cause the automatic turn-off  **           00060
**     of one or more other options that contradict with    **           00061
**     it.  This "adjustment" is done by the COPYMODS       **           00062
**     program just after it receives the options settings  **           00063
**     back from the PARMCHEK program.  For example, if     **           00064
**     both LABLDUMP and LABADDIN (which contradict each    **           00065
**     other) are set, COPYMODS will make a judgment that   **           00066
**     LABADDIN takes precedence, so it will turn off both  **           00067
**     the LABLDUMP and READ (read only) options.  On the   **           00068
**     other hand, the STRIP and LABLDUMP options do not    **           00069
**     contradict each other.  So in that case, when STRIP  **           00070
**     and LABLDUMP are both set, COPYMODS will dump all    **           00071
**     the labels from the input tape to the LABLDUMP file, **           00072
**     while at the same time, it will strip them from the  **           00073
**     tape copies.  To get the exact effect you want from  **           00074
**     a COPYMODS run, just be very careful to code the     **           00075
**     correct combination of options.  Look at the OPTIONS **           00076
**     report before you mount the tapes.  (The OPTIONS     **           00077
**     report in //SYSPRINT will be complete before the     **           00078
**     tapes are mounted.)  To see the exact effect of      **           00079
**     the COPYMODS option correction, code the CODEDPRM    **           00080
**     option to obtain a comparison report of the options  **           00081
**     before COPYMODS correction has been done.            **           00082
**                                                          **           00083
**     Up to 132 bytes of the beginning n records of each   **           00084
**     tape file can be dumped in Hex, similarly to the     **           00085
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **           00086
**     tion of the printables in this hex dump can be       **           00087
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **           00088
**     are COPYMODS PARM or SYSIN keywords also.            **           00089
**                                                          **           00090
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **           00091
**     has been added.  COPYMODS can init ASCII tapes       **           00092
**     with the INASC3 and INASC4 keywords.  Additionally,  **           00093
**     the other functions of COPYMODS such as LABLDUMP,    **           00094
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **           00095
**     option with the ASCII keyword allows you to print    **           00096
**     tape records in hex, with an ASCII interpretation    **           00097
**     of the printables.  EOV2EOF works for ASCII tapes.   **           00098
**                                                          **           00099
**     COPYMODS will automatically read past any number     **           00100
**     of leading tape marks on a tape, and will copy       **           00101
**     any real data that is after them.  The leading       **           00102
**     tape marks can be included in the copied tapes       **           00103
**     (option LTMCOPY - default) or they can be skipped    **           00104
**     from the copied tapes and left off, so the real      **           00105
**     data will be at the beginning of the copied tapes    **           00106
**     (option LTMSKIP).                                    **           00107
**                                                          **           00108
**     See the "New Features" section below for some more   **           00109
**     details.  See the #MANUAL member of the install pds  **           00110
**     (CBT Tape File 229) for even more details.           **           00111
**                                                          **           00112
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **           00113
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **           00114
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **           00115
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **           00116
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **           00117
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00118
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **           00119
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **           00120
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **           00121
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **           00122
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **           00123
**    PARTICULAR OUTPUT TAPE.                               **           00124
**                                                          **           00125
**    Any output DD names from //OUT1 thru //OUT16 may be   **           00126
**    coded in the execution JCL for COPYMODS, so that up   **           00127
**    to 16 output tapes may be created.  But, if none      **           00128
**    of these DD names is present, COPYMODS will force     **           00129
**    PARM=READ automatically, and it will issue a          **           00130
**    special message to //SYSPRINT saying that it did so.  **           00131
**                                                          **           00132
**  COPYMODS has some optional DD's which will be used      **           00133
**    if they are present.  These following DD's are used   **           00134
**    by the PARMCHEK program, when COPYMODS is executed.   **           00135
**                                                          **           00136
**  //SYSIN    - Extra space to enter PARM keywords.        **           00137
**               Also, the only place to enter the          **           00138
**               "quantity" keywords, which start in        **           00139
**               column 1 of a SYSIN card.                  **           00140
**                                                          **           00141
**         OUTVOLALL=volser      (up to 6 characters)       **           00142
**         TAPEOWNER=owner name  (up to 10 characters)      **           00143
**         FILELIMIT=nnn         (numeric)                  **           00144
**         LABELIMIT=nnn         (numeric)                  **           00145
**         PRINTRCDS=nnn         (numeric)                  **           00146
**                                                          **           00147
**  //PARMREPT - Diagnostic output from the PARMCHEK        **           00148
**               program.  LRECL=133,RECFM=FBA.             **           00149
**                                                          **           00150
**    In addition, the COPYMODS program itself has some     **           00151
**    extra DD's, which are required if the appropriate     **           00152
**    options are set:                                      **           00153
**                                                          **           00154
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **           00155
**               receive the images of all tape labels      **           00156
**               read, together with some control cards     **           00157
**               that COPYMODS generates.  This DD name     **           00158
**               is necessary if the LABLDUMP option is     **           00159
**               in effect.                                 **           00160
**                                                          **           00161
**  //LABADDIN - An FB-80 file, or member of a pds, which   **           00162
**               contains the set of labels to be spliced   **           00163
**               into an NL tape to create an SL tape.      **           00164
**               This DD name is necessary if the LABADDIN  **           00165
**               option of COPYMODS is in effect.  Usually  **           00166
**               the LABADDIN file is a previous result of  **           00167
**               a LABLDUMP operation, or it is an altered  **           00168
**               or edited version of a previously created  **           00169
**               LABLDUMP file.                             **           00170
**                                                          **           00171
**  This program has to be assembled with PARM=BATCH in     **           00172
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00173
**    program has to be included in the assembly, because   **           00174
**    PARMCHEK has to be fitted to the current level of     **           00175
**    the COPYMODS program.                                 **           00176
**                                                          **           00177
**************************************************************           00178
**                                                          **           00179
**  REQUIRED DD NAMES (used by the COPYMODS program):       **           00180
**                                                          **           00181
**  //IN       -  Points to the Input Tape.  Only not       **           00182
**                required in a tape init operation, if     **           00183
**                the INITVOLS option is in effect.         **           00184
**                Otherwise, //IN is always required.       **           00185
**                                                          **           00186
**  //OUT1 thru - Any of these 16 DD names can be coded.    **           00187
**  //OUT16       These are for the output tapes.  These    **           00188
**                are not required if the READ (readonly)   **           00189
**                option is in effect.  Any one of these    **           00190
**                16 possible DD names may be coded, even   **           00191
**                if some numbers have been skipped.  For   **           00192
**                instance, if you have one output tape,    **           00193
**                it may be defined by //OUT13.  It is      **           00194
**                not necessary to code //OUT1.             **           00195
**                                                          **           00196
**  //SYSPRINT  - The output dataset to contain all the     **           00197
**                COPYMODS operation information that was   **           00198
**                called for by the various options set,    **           00199
**                including the OPTIONS display itself.     **           00200
**                This dataset should be LRECL=133,         **           00201
**                RECFM=FBA.                                **           00202
**                                                          **           00203
**************************************************************           00204
**                                                          **           00205
**  PROGRAM STRUCTURE:                                      **           00206
**                                                          **           00207
**  This program is no longer a single CSECT as it was in   **           00208
**    the old days.  There are now the following CSECTs,    **           00209
**    which should all be assembled together:               **           00210
**                                                          **           00211
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **           00212
**                                                          **           00213
**   COPYMODS - The main processing module, which contains  **           00214
**              most of the tape copy/reading processing.   **           00215
**                                                          **           00216
**   TRTCSECT - The translate tables for Hex printing of    **           00217
**              tape records, and for ASCII translation.    **           00218
**                                                          **           00219
**   COPYMOPT - The separate routine which reads the PARM   **           00220
**              bits that have been set, and which prints   **           00221
**              a report in SYSPRINT showing the options    **           00222
**              that are in effect.                         **           00223
**                                                          **           00224
**   PARMCHEK - All the PARM and SYSIN input processing is  **           00225
**              done here.  PARM bits are passed back to    **           00226
**              COPYMODS in R1, the User Area is passed     **           00227
**              back to COPYMODS in R2.                     **           00228
**                                                          **           00229
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **           00230
**              program, this table contains all the option **           00231
**              bit meanings and their default settings.    **           00232
**                                                          **           00233
**   LABELCHK - Now a separate CSECT to check whether a     **           00234
**              record read by COPYMODS is part of a set    **           00235
**              of label records or not.                    **           00236
**                                                          **           00237
**   PRINTLBL - A separate CSECT to interpret all tape      **           00238
**              label contents in a report line.            **           00239
**                                                          **           00240
**   MSGCSECT - Contains all the texts of the messages      **           00241
**              used by the COPYMODS CSECT.  Addressed      **           00242
**              by two new macros:  MVFMS which does        **           00243
**              operations on fields in the messages, and   **           00244
**              PTMS, which prints a message to SYSPRINT.   **           00245
**                                                          **           00246
**              Two new macros, ADRSMS and DROPMS, now can  **           00247
**              be used to address this area, and save      **           00248
**              a lot of addressability space, because      **           00249
**              normal assembler instructions can be used   **           00250
**              in between them, and the addressability     **           00251
**              will not be redundantly repeated.  The      **           00252
**              new PTMSN macro is PTMS without the         **           00253
**              addressability built in, to put in between  **           00254
**              ADRSMS and DROPMS.                          **           00255
**                                                          **           00256
**   FOOTAGE  - Code to calculate footage on a tape, as     **           00257
**              though the data were on a 6250 bpi reel.    **           00258
**              This code came from Florida Power Company   **           00259
**              SS0104 Tapemap program.  Used by the        **           00260
**              FOOTAGE keyword.                            **           00261
**                                                          **           00262
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **           00263
**  but they must be coordinated, and at the same level, so **           00264
**  to be safe, they should always be assembled together.   **           00265
**  The LABELCHK program has the same status.  It must be   **           00266
**  assembled together with the COPYMODS program.  Same     **           00267
**  with the PRINTLBL program and the FOOTAGE program.      **           00268
**                                                          **           00269
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **           00270
**                                                          **           00271
**  GENERAL OUTLINE OF PROGRAM CALLS                        **           00272
**  ------- ------- -- ------- -----                        **           00273
**                                                          **           00274
**  COPYMODS is the first program to get control.  The      **           00275
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **           00276
**  and the entry locations are stored in fullwords for     **           00277
**  later use.  Same for PRINTLBL and FOOTAGE entry points. **           00278
**                                                          **           00279
**  PARMCHEK is immediately called, and it opens //SYSIN    **           00280
**  if that ddname is present.  If //PARMREPT is present,   **           00281
**  it is also used by the PARMCHEK program.                **           00282
**                                                          **           00283
**  After PARMCHEK has returned all parm bit settings to    **           00284
**  COPYMODS and all user-quantities, the settings are      **           00285
**  examined by COPYMODS and inconsistent settings are      **           00286
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **           00287
**  has to be turned off, because only one of these can be  **           00288
**  done in one run.  These inconsistencies are all fixed,  **           00289
**  and then COPYMODS processing starts.                    **           00290
**                                                          **           00291
**  (To examine the effect of the COPYMODS parm correction, **           00292
**  code the CODEDPRM option to obtain a "before and after" **           00293
**  option comparison report.)                              **           00294
**                                                          **           00295
**  COPYMOPT is called to display all the options that have **           00296
**  been set, if the OPTION parm has been set.  This is     **           00297
**  done to //SYSPRINT.  If any adjustments of options have **           00298
**  been made, you can see the final result in the SYSPRINT **           00299
**  report that has been produced by COPYMOPT.              **           00300
**                                                          **           00301
**  A PARM of CODEDPRM causes COPYMOPT to be called twice,  **
**  once with the corrected parm bits, and the second time, **
**  using the saved original parm bits, as returned by the  **
**  PARMCHEK program.                                       **
**                                                          **
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **           00302
**  and opened again by COPYMODS.  This allows SYSPRINT     **           00303
**  to be viewed under SDSF before the tapes are mounted,   **
**  so you can see the OPTIONS report(s) there.             **
**                                                          **           00304
**  A significant note is, that the PARMREPT contains the   **           00305
**  options as they have been set by the PARMCHEK program,  **           00306
**  with no alteration.  The COPYMOPT call, which produces  **           00307
**  the OPTIONS display in //SYSPRINT, occurs after the     **           00308
**  adjustments for inconsistent parm settings has been     **           00309
**  made by COPYMODS.  If you want to see the effect of     **           00310
**  these adjustments, code the CODEDPRM keyword to obtain  **           00311
**  a comparison report showing the original options as     **           00312
**  originally coded.                                       **           00313
**                                                          **           00314
**  After that, COPYMODS does its things, depending on the  **           00315
**  options that have been set.  Most of the processing is  **           00316
**  done in the COPYMODS csect, except for the HEXPRT       **           00317
**  option, where the translation tables are in the         **           00318
**  TRTCSECT csect.                                         **           00319
**                                                          **           00320
**  The LABELCHK program is called whenever an 80-byte      **           00321
**  record is read, to see whether that record is part of   **           00322
**  a set of tape labels.                                   **           00323
**                                                          **           00324
**  Whenver a label is to be interpreted to SYSPRINT, the   **           00325
**  PRINTLBL program is called.                             **           00326
**                                                          **           00327
**  If the FOOTAGE keyword is used, the FOOTAGE program     **           00328
**  is called at approximately the end of each file read    **           00329
**  from the input tape.  FOOTAGE is driven by the contents **
**  of fields in a workarea, which, in the COPYMODS CSECT,  **
**  is at label LABELTYP.  Most of the fields in this       **           00330
**  workarea are fed from the end-of-file routine, after    **           00331
**  label MARKFILE, and from the EXCP READs, near label     **
**  INFROMIN, and the BYTESCOP field of number of bytes     **
**  moved by the latest EXCP READ.                          **
**                                                          **           00332
**************************************************************           00333
**                                                          **           00334
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00335
**                                                          **           00336
**  (Also please see the individual Level nnn changes, as   **           00337
**   listed in this code, below, for more information.)     **           00338
**                                                          **           00339
**   It is recommended that you view the PARMTABL entries   **           00340
**   and look at the supplied #MANUAL member in the         **           00341
**   distribution pds, CBT File 229, for even more info.    **           00342
**                                                          **           00343
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00344
**                                                          **           00345
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00346
**                                                          **           00347
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00348
**       BE CORRECTLY COPIED.                               **           00349
**                                                          **           00350
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00351
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00352
**       FOUND ON THE INPUT TAPE.                           **           00353
**                                                          **           00354
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00355
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00356
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00357
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00358
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00359
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00360
**       MAIN SOURCE CODE.                                  **           00361
**                                                          **           00362
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00363
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00364
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00365
**       INVOKE THIS ACTION.                                **           00366
**                                                          **           00367
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00368
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00369
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00370
**                                                          **           00371
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00372
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00373
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00374
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00375
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00376
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00377
**                                                          **           00378
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00379
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00380
**                                                          **           00381
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00382
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00383
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00384
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00385
**       SERVICE.                                           **           00386
**                                                          **           00387
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00388
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00389
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00390
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00391
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00392
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00393
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00394
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00395
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00396
**                                                          **           00397
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00398
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00399
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00400
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00401
**                                                          **           00402
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00403
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00404
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00405
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00406
**                                                          **           00407
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00408
**       TAPEOWNER=xxxxxxxxxx                               **           00409
**       FILELIMIT=nnnn                                     **           00410
**       LABELIMIT=nnnn                                     **           00411
**       PRINTRCDS=nnnn                                     **           00412
**         or                                               **           00413
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00414
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00415
**                                                          **           00416
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00417
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00418
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00419
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00420
**                                                          **           00421
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00422
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00423
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00424
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00425
**       IN THE EXTERNAL LABEL DATASET.                     **           00426
**                                                          **           00427
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00428
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00429
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00430
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00431
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00432
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00433
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00434
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00435
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00436
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00437
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00438
**                                                          **           00439
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00440
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00441
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00442
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00443
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00444
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00445
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00446
**       DATA FILE HAS BEEN WRITTEN.                        **           00447
**                                                          **           00448
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00449
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00450
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00451
**       EXTERNAL LABEL DATASET.                            **           00452
**                                                          **           00453
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00454
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00455
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00456
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00457
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00458
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00459
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00460
**       THE HDR2.                                          **           00461
**                                                          **           00462
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00463
**       INPUT TAPE.  USE A PARM OF INITVOLS.  ASCII TAPES  **           00464
**       ARE INITTED WITH A PARM OF EITHER INASC3 OR        **
**       INASC4, FOR ASCII LEVEL 3 AND ASCII LEVEL 4        **
**       RESPECTIVELY.  A PARM OF INASCII DEFAULTS TO       **
**       ASCII LEVEL 3.                                     **
**                                                          **           00465
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00466
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00467
**       IN A SYSIN CARD.  14 CHARACTER TAPE OWNERS ARE     **           00468
**       SUPPORTED FOR ASCII TAPES.  IBM SL TAPES HAVE      **
**       10 CHARACTERS IN THE TAPE OWNER FIELD.             **
**                                                          **           00469
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00470
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00471
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00472
**       IS INTERPRETED AS SL FILES, AND MULTIPLIED BY 3.   **           00473
**       IF NOT, THEN IT IS INTERPRETED AS NL.  SL          **
**       INTERPRETATION OF FILE NUMBERS CAN BE FORCED,      **           00474
**       USING THE SLLIM PARM KEYWORD.  NL INTERPRETATION   **
**       IS FORCED USING THE NLLIM PARM KEYWORD.            **
**                                                          **           00475
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00476
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00477
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00478
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00479
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00480
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00481
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00482
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00483
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00484
**       BYTE TOTALS COMING FROM DATA FILES.                **           00485
**                                                          **           00486
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00487
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00488
**       TO PRINT THEM.)                                    **           00489
**                                                          **
**       IF YOU ARE CONFUSED THAT THE OPTION REPORT DOES    **
**       NOT SEEM TO REFLECT THE OPTION KEYWORDS YOU ARE    **
**       CODING IN YOUR JCL, PLEASE BE AWARE THAT COPYMODS  **
**       DOES SOME OPTION ADJUSTMENTS TO RESOLVE APPARENT   **
**       INCONSISTENCIES WITH THE PARM SETTINGS.  TO GET    **
**       A "BEFORE AND AFTER" REPORT FOR THIS ACTION, CODE  **
**       THE "CODEDPRM" PARM KEYWORD.                       **
**                                                          **           00490
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00491
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00492
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00493
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).  IF A TAPE      **           00494
**       FILE (EBCDIC SL TAPES ONLY) HAS MORE THAN 1        **
**       MILLION BLOCKS IN IT, THEN THIS FIELD IS USED.     **
**       OTHERWISE IT IS BLANKS.                            **
**                                                          **           00495
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00496
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00497
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00498
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00499
**       DATA BLOCKS ON THE TAPE.                           **           00500
**                                                          **           00501
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00502
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00503
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00504
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00505
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00506
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00507
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00508
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00509
**       THESE WILL STILL BE CORRECTLY STRIPPED OFF.  IF    **           00510
**       FILE LIMITING IS IN EFFECT, THEN THE INPUT TAPE    **           00511
**       IS ASSUMED TO BE SL, AND THE NUMBER CODED IN THE   **           00512
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00513
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00514
**       INPUT TAPE.                                        **           00515
**                                                          **
**       FOR PARM=STRIP OPERATIONS, COPYMODS USES THE       **
**       LABELCHK ROUTINE TO DETERMINE IF A TAPE FILE IS    **
**       REALLY A LABEL, SO IT WILL STRIP OFF A LABEL FILE  **
**       WHEREVER IT OCCURS.  THIS IS NOT LIKE THE COPYSLNL **
**       PROGRAM, WHICH ASSUMES THAT EACH DATA FILE IS      **
**       SANDWICHED BETWEEN TWO LABEL FILES, AND WHICH      **
**       DOES THE STRIPPING BY "COUNTING" AND NOT BY        **
**       "FEELING".                                         **
**                                                          **           00516
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00517
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00518
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00519
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00520
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00521
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00522
**                                                          **           00523
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00524
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00525
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00526
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00527
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00528
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00529
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00530
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00531
**                                                          **           00532
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00533
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00534
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00535
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00536
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00537
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00538
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00539
**                                                          **           00540
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00541
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00542
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00543
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00544
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00545
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00546
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00547
**                                                          **           00548
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **           00549
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **           00550
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **           00551
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **           00552
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **           00553
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **           00554
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **           00555
**                                                          **           00556
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **           00557
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **           00558
**       THESE INDICATORS (TURNED OFF) ARE:                 **           00559
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **           00560
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **           00561
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **           00562
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **           00563
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **           00564
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **           00565
**                                                          **           00566
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **           00567
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **           00568
**       COMPLETELY TURN THEM OFF AT THE TAPE LABEL LEVEL.  **
**       THE NOSECOFF KEYWORD NULLIFIES THE EFFECT OF THE   **           00569
**       SECOFF KEYWORD.                                    **           00570
**                                                          **           00571
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **           00572
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **           00573
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **           00574
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **           00575
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **           00576
**       MORE EXTENSIVE "LTM SERVICE" HAS BEEN BUILT INTO   **
**       THIS PROGRAM.                                      **
**                                                          **           00577
**  31.  COPYMODS CAN DISPLAY 6250 BPI FOOTAGES FOR THE     **           00578
**       FILES ON THE TAPE, USING THE FOOTAGE KEYWORD.      **           00579
**       FOOTAGE CALCULATIONS FOR EACH FILE, AS WELL AS     **           00580
**       FOOTAGE FOR THE ENTIRE TAPE, UP TO THE CURRENT     **           00581
**       FILE, ARE DISPLAYED.                               **           00582
**                                                          **           00583
**  32.  COPYMODS WILL DISPLAY MINIMUM AND MAXIMUM BLOCK    **           00584
**       SIZES FOR EACH TAPE FILE READ, WHEN THE MINMAX     **           00585
**       OPTION IS CODED.                                   **           00586
**                                                          **           00587
**************************************************************           00588
         EJECT                                                           00589
**************************************************************           00590
**  CHANGE LOG:                                             **           00591
**                                                          **           00592
** LEVEL 003                                                **           00593
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00594
**                                                          **           00595
** LEVEL 004                                                **           00596
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00597
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00598
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00599
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00600
**             COPYING FILES.                     SBG 03/00 **           00601
**                                                          **           00602
** LEVEL 005                                                **           00603
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00604
**             R12,R11.                           SBG 03/00 **           00605
**                                                          **           00606
** LEVEL 006                                                **           00607
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00608
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00609
**             OUT16.                             SBG 03/00 **           00610
**                                                          **           00611
** LEVEL 007 AND 008                                        **           00612
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00613
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00614
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00615
**                                                          **           00616
** LEVEL 009                                                **           00617
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00618
**                                                          **           00619
** LEVEL 010                                                **           00620
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00621
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00622
**                                                          **           00623
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00624
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00625
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00626
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00627
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00628
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00629
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00630
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00631
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00632
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00633
**                                                          **           00634
** LEVEL 011                                                **           00635
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00636
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00637
**             ONE TAPEMARK.                      SBG 03/00 **           00638
**                                                SBG 03/00 **           00639
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00640
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00641
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00642
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00643
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00644
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00645
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00646
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00647
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00648
**                                                          **           00649
** LEVEL 012                                                **           00650
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00651
**             HAVING ONLY ONE TAPE MARK AFTER              **           00652
**             THEM.                                        **           00653
**                                                          **           00654
** LEVEL 013                                                **           00655
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00656
**             LABEL TYPES, AND THE SETTING OF              **           00657
**             FLAGS TO INDICATE EACH TYPE.                 **           00658
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00659
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00660
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00661
**             EASY PRINTING OF LABEL CONTENTS,             **           00662
**             BUT NO EXTRA PRINTING IS DONE AT             **           00663
**             THIS LEVEL.                                  **           00664
**                                                          **           00665
** LEVEL 014                                                **           00666
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00667
**             PARM SCANNER THAT IS EASY TO                 **           00668
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00669
**             FOR THE PARMS.  ADDED SUPPORT,               **           00670
**             VIA THE LBLINFO PARM, TO PRINT               **           00671
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00672
**             EOV2 LABEL INFORMATION, IF IT IS             **           00673
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00674
**             IF THE INPUT TAPE IS SL.                     **           00675
**                                                          **           00676
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00677
**             SEE LABEL PARMTABL.                          **           00678
**                                                          **           00679
** LEVEL 015                                                **           00680
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00681
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00682
**             THE ABILITY TO TURN IT ON. INCREASED         **           00683
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00684
**             BYTE.                                        **           00685
**                                                          **           00686
** LEVEL 016                                                **           00687
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00688
**             TO SET ANY PARM SETTING AS A                 **           00689
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00690
**             ENTRY THAT IS LATER IN THE TABLE,            **           00691
**             WILL OVERRIDE A SETTING FOR A                **           00692
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00693
**             TABLE.  SETTING A PARM EXPLICITLY            **           00694
**             IN THE JCL, WILL OVERRIDE ANY                **           00695
**             DEFAULT SETTING FOR THAT PARM.               **           00696
**                                                          **           00697
** LEVEL 017                                                **           00698
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00699
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00700
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00701
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00702
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00703
**             OF THIS IS CODED IN PARMTABL AND             **           00704
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00705
**             PRTXXX2.                                     **           00706
**                                                          **           00707
** LEVEL 018                                                **           00708
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00709
**             VOLSER OF THE COPIED TAPES, TO               **           00710
**             MATCH THE VOLSER INDICATED IN THE            **           00711
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00712
**             THE CHGVOL PARM KEYWORD.  THIS               **           00713
**             ACTION ONLY OCCURS IF THE INPUT              **           00714
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00715
**             DETECTED.  THE COPIED VOL1 LABEL             **           00716
**             IS ALTERED BEFORE THE WRITE.                 **           00717
**                                                          **           00718
** LEVEL 019                                                **           00719
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00720
**             AND EOV2 LABELS THAT ARE IN THE              **           00721
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00722
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00723
**             CAN HAPPEN WHEN YOU COPY FILES               **           00724
**             WITH THE COPYFILE PROGRAM, FROM              **           00725
**             THE END OF ONE TAPE, TO THE                  **           00726
**             BEGINNING OR THE MIDDLE OF                   **           00727
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00728
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00729
**             COPIES THE EOV LABELS AS IS.  THIS           **           00730
**             NEW OPTION IS CALLED EOVCHG OR               **           00731
**             EOV2EOF; THE EOV LABELS ARE                  **           00732
**             CHANGED (IN THE COPIED TAPES) TO             **           00733
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00734
**             REPORTS THIS FACT.                           **           00735
**                                                          **           00736
** LEVEL 020                                                **           00737
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00738
**             TO ALLOW A RUN OF COPYMODS THAT              **           00739
**             JUST READS THE INPUT TAPE, AND DOES          **           00740
**             NOT MAKE COPIES.                             **           00741
**                                                          **           00742
** LEVEL 021                                                **           00743
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00744
**             IEHINITTED TAPES.                            **           00745
**                                                          **           00746
** LEVEL 022                                                **           00747
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00748
**             LABELS FROM A TAPE, TO AN FB-80              **           00749
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00750
**                                                          **           00751
** LEVEL 023                                      SBG 09/00 **           00752
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00753
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00754
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00755
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00756
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00757
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00758
**             TO CODE                                      **           00759
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00760
**             OF THE SYSIN CARD FILE.  IF THERE            **           00761
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00762
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00763
**             AS CODING CHGVOL.                            **           00764
**                                                          **           00765
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00766
**             DUMPED LABELS HAVE CONTROL CARDS             **           00767
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00768
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00769
**             CONTROL CARDS.                               **           00770
**                                                          **           00771
** LEVEL 024                                      SBG 09/00 **           00772
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00773
**             OUTPUT COPIES FROM NL INPUT AND A            **           00774
**             SET OF LABELS CREATED BY LABLDUMP.           **           00775
**             CHANGED THE DCB NAMES AND DD CARDS           **           00776
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00777
**             RESTORE.                                     **           00778
**                                                          **           00779
**             CHANGED PROGRAM INITIALIZATION TO            **           00780
**             A STANDARD FORM.  GOT RID OF PRIME           **           00781
**             AND TERME MACROS.  HAVE 5 BASE               **           00782
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00783
**                                                          **           00784
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00785
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00786
**             LABELS ON AN SL TAPE, AND WON'T              **           00787
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00788
**             TAPE IS SL, ACCIDENTALLY.                    **           00789
**                                                          **           00790
** LEVEL 025                                      SBG 09/00 **           00791
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00792
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00793
**                                                          **           00794
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00795
**             BE USED.                                     **           00796
**                                                          **           00797
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00798
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00799
**                TAPEOWNER=xxxxxxxxxx                      **           00800
**                FILELIMIT=nnnn                            **           00801
**                LABELIMIT=nnnn                            **           00802
**                PRINTRCDS=nnnn                            **           00803
**                  or                                      **           00804
**                OUTVOLALL=volser ,                        **           00805
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00806
**             AND ANY PARM THAT IS CODED IN THE            **           00807
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00808
**             AND IT WILL OVERRIDE THE PARM IN             **           00809
**             THE EXEC CARD (SINCE SYSIN IS                **           00810
**             SCANNED LATER IN THE PROCESSING).            **           00811
**                                                          **           00812
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00813
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00814
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00815
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00816
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00817
**                                                          **           00818
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00819
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00820
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00821
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00822
**             WHEN COPYING AN INPUT TAPE.                  **           00823
**                                                          **           00824
** LEVEL 026                                      SBG 09/00 **           00825
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00826
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00827
**                                                          **           00828
** LEVEL 027                                      SBG 09/00 **           00829
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00830
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00831
**                                                          **           00832
** LEVEL 028                                      SBG 09/00 **           00833
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00834
**             STANDARD USER LABEL SUPPORT.                 **           00835
**                                                          **           00836
** LEVEL 029                                      SBG 09/00 **           00837
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00838
**             STANDARD USER LABELS.                        **           00839
**                                                          **           00840
** LEVEL 030                                      SBG 09/00 **           00841
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00842
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00843
**             OUTPUT TAPES, DURING THE COPY.               **           00844
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00845
**                                                          **           00846
**             FIXED THE EYECATCHERS A BIT.                 **           00847
**                                                          **           00848
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00849
**                                                          **           00850
** LEVEL 031                                      SBG 09/00 **           00851
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00852
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00853
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00854
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00855
**                                                          **           00856
** LEVEL 032                                      SBG 10/00 **           00857
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00858
**             LABADDIN PROCESSING WHEN THERE ARE           **           00859
**             MORE LABELS IN THE EXTERNAL LABEL            **           00860
**             DATASET, THAN THERE ARE NL FILES             **           00861
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00862
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00863
**             SAYS TO STOP AT THE END OF NL FILES          **           00864
**             AND NOT WRITE NULL SL FILES TO               **           00865
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00866
**             LABELS.                                      **           00867
**                                                          **           00868
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00869
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00870
**             AND THEN BACKING OVER IT AND CLOSING.        **           00871
**                                                          **           00872
** LEVEL 033                                      SBG 10/00 **           00873
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00874
**             PROCESSING WHEN THE LAST LABEL SET           **           00875
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00876
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00877
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00878
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00879
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00880
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00881
**             AND THE DATA AND A TAPEMARK), AND IT         **           00882
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00883
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00884
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00885
**             FROM THE EXISTING HDR2 AND EOF IS            **           00886
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00887
**             THE END.                                     **           00888
**                                                          **           00889
** LEVEL 034                                      SBG 10/00 **           00890
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00891
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00892
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00893
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00894
**             THE REWIND, AND LEAVES THE WRITTEN           **           00895
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00896
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00897
**             NOT ERASED.                                  **           00898
**                                                          **           00899
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00900
**             CONDITION IS FLAGGED WITH A PROPER           **           00901
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00902
**             FOR THAT DRIVE IS BYPASSED.                  **           00903
**                                                          **           00904
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00905
**             FIRST VERSION OF THIS PROGRAM.               **           00906
**                                                          **           00907
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00908
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00909
**             THESE ARE THE OPENDFLG SETTINGS.             **           00910
**                                                          **           00911
** LEVEL 035                                      SBG 10/00 **           00912
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00913
**             TAPES, BY NOT REUSING THE WRITE              **           00914
**             IOB WITHOUT REFRESHING THE PARTS             **           00915
**             THAT ARE USED BY IOS.  THIS IS THE           **           00916
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00917
**                                                          **           00918
**             LABLDUMP OF AN IEHINITTED TAPE               **           00919
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00920
**             CARD, IN ANTICIPATION OF CREATING            **           00921
**             A TAPE INITIALIZATION ROUTINE FROM           **           00922
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00923
**             NEXT LEVEL, IS BETTER.)                      **           00924
**                                                          **           00925
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00926
**                                                          **           00927
** LEVEL 036                                      SBG 10/00 **           00928
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00929
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00930
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00931
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00932
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00933
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00934
**                                                          **           00935
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00936
**             USE A PARM OF INITVOLS.                      **           00937
**                                                          **           00938
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00939
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00940
**                                                          **           00941
**             CONSOLIDATED CHGVOL CODE INTO A              **           00942
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00943
**                                                          **           00944
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00945
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00946
**             STEPPING ON EACH OTHER.                      **           00947
**                                                          **           00948
** LEVEL 037                                      SBG 10/00 **           00949
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00950
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00951
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00952
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00953
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00954
**             VALUE IS USED.                               **           00955
**                                                          **           00956
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00957
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00958
**             VALUE, IF THERE IS ONE.                      **           00959
**                                                          **           00960
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00961
**             SETS THE PARM VALUE OF LIMFILE OR            **           00962
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00963
**             THE PROGRAM ACTION.                          **           00964
**                                                          **           00965
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00966
**             PROGRAM COUNTS BYTES READ FROM THE           **           00967
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00968
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00969
**             THIS ACTION.                                 **           00970
**                                                          **           00971
** LEVEL 038                                      SBG 11/00 **           00972
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00973
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00974
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00975
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00976
**             FILES.                                       **           00977
**                                                          **           00978
** LEVEL 039                                      SBG 11/00 **           00979
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00980
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00981
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00982
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00983
**                                                          **           00984
** LEVEL 040                                      SBG 11/00 **           00985
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00986
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00987
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00988
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00989
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00990
**             COUNT, SO A USER WILL BE ABLE TO             **           00991
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00992
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00993
**                                                          **           00994
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00995
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00996
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00997
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00998
**             WHAT TO DO.                                  **           00999
**                                                          **           01000
** LEVEL 041                                      SBG 11/00 **           01001
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           01002
**             OF LABEL SETS IN THE LABADDIN FILE           **           01003
**             THAT COPYMODS WILL PROCESS.  EVEN            **           01004
**             IF THE LABADDIN FILE CONTAINS MANY           **           01005
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           01006
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           01007
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           01008
**                                                          **           01009
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           01010
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           01011
**             THE LABADDIN FILE, AND CONSIDERS THE         **           01012
**             FILE TO END AFTER NNN OF THEM.               **           01013
**                                                          **           01014
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           01015
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           01016
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           01017
**             THIS CHOPS PROCESSING OFF TOO SOON           **           01018
**             WHEN EOV LABELS ARE PRESENT.                 **           01019
**                                                          **           01020
** LEVEL 042                                      SBG 11/00 **           01021
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           01022
**             BAL R7, AND USED R6 AS SIXTH BASE            **           01023
**             REGISTER.                                    **           01024
**                                                          **           01025
** LEVEL 043                                      SBG 11/00 **           01026
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           01027
**             "OPTION" PARAMETER.  CALL IS TO A            **           01028
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           01029
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           01030
**             ASSEMBLED AND LINKEDITED WITH                **           01031
**             THE COPYMODS PROGRAM.                        **           01032
**                                                          **           01033
**             CHANGED THE WORDING OF SOME OF THE           **           01034
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           01035
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           01036
**                                                          **           01037
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           01038
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           01039
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           01040
**             LABADDIN WAS IN EFFECT.                      **           01041
**                                                          **           01042
** LEVEL 044                                      SBG 12/00 **           01043
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           01044
**                                                          **           01045
** LEVEL 045                                      SBG 12/00 **           01046
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           01047
**             COMPLETION OF THE COPY. SUPPWTO.             **           01048
**                                                          **           01049
** LEVEL 046                                      SBG 12/00 **           01050
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           01051
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           01052
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           01053
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           01054
**             COUNT CORRECTION.                            **           01055
**                                                          **           01056
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           01057
**                                                          **           01058
** LEVEL 047                                      SBG 12/00 **           01059
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           01060
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           01061
**             NUMBERS OF DATA RECORDS.  IF THE             **           01062
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           01063
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           01064
**                                                          **           01065
** LEVEL 048                                      SBG 05/02 **           01066
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           01067
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           01068
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           01069
**             IS THERE IN THE JCL, THEN OPEN IT.           **           01070
**                                                          **           01071
** LEVEL 049                                      SBG 05/02 **           01072
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           01073
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           01074
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           01075
**             INSTEAD OF TOTAL BYTE COUNTS.                **           01076
**                                                          **           01077
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           01078
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           01079
**             EACH LABEL.  IT DOES NOT MATTER              **           01080
**             WHERE THE LABELS ARE, IN THE INPUT           **           01081
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           01082
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           01083
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           01084
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           01085
**             COPYING IS CUT OFF AFTER 3*nnn,              **           01086
**             TREATED AS BLP, ON THE INPUT TAPE.           **           01087
**                                                          **           01088
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           01089
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           01090
**             COPYMODS TRIES TO DETECT WHETHER THE         **           01091
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           01092
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           01093
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           01094
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           01095
**             WE CAN NOW FORCE THE nnn TO BE               **           01096
**             INTERPRETED AS NL USING THE NLLIM            **           01097
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           01098
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           01099
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           01100
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           01101
**             OTHER KEYWORD IS ALSO CODED.                 **           01102
**                                                          **           01103
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           01104
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           01105
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           01106
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           01107
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           01108
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           01109
**             DURING THE WRITE OF THE TAPE MARK.           **           01110
**                                                          **           01111
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           01112
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           01113
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           01114
**             BEFORE ISSUING ABEND 069.                    **           01115
**                                                          **           01116
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           01117
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           01118
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           01119
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           01120
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           01121
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           01122
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           01123
**             SYSPRINT DATASET.                            **           01124
**                                                          **           01125
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           01126
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           01127
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           01128
**                                                          **           01129
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           01130
**             OF THE MAIN CSECT.                           **           01131
**                                                          **           01132
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           01133
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           01134
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           01135
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           01136
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           01137
**             PARM SCAN IN DETAIL.                         **           01138
**                                                          **           01139
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           01140
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           01141
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           01142
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           01143
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           01144
**                                                          **           01145
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           01146
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           01147
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           01148
**             PROGRAM AND NOT BY COPYMODS.                 **           01149
**                                                          **           01150
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **           01151
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **           01152
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **           01153
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **           01154
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **           01155
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **           01156
**             COPIES THIS DATA INTO THE CORRESPONDING      **           01157
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **           01158
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **           01159
**             PROGRAM.                                     **           01160
**                                                          **           01161
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **           01162
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **           01163
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **           01164
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **           01165
**             USER FIELD AREA.                             **           01166
**                                                          **           01167
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           01168
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           01169
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           01170
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           01171
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           01172
**             TAPES--TO FIGURE OUT HOW SHORT....           **           01173
**                                                          **           01174
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           01175
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           01176
**             POSSIBLE.                                    **           01177
**                                                          **           01178
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           01179
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           01180
**             IN ERROR.                                    **           01181
**                                                          **           01182
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **           01183
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **           01184
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **           01185
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **           01186
**                                                          **           01187
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **           01188
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **           01189
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **           01190
**                                                          **           01191
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **           01192
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **           01193
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **           01194
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **           01195
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **           01196
**             PROGRAM.                                     **           01197
**                                                          **           01198
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **           01199
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **           01200
**                                                          **           01201
** LEVEL 062 - FIX DOC A BIT MORE.                          **           01202
**             TEN PARM BITS INSTEAD OF FIVE.               **           01203
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **           01204
**                                                          **           01205
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **           01206
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **           01207
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **           01208
**             OCCURRED, WITHOUT ISSUING A WTOR.            **           01209
**                                                          **           01210
** LEVEL 064 - Return Code adjustments.                     **           01211
**                                                          **           01212
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **           01213
**             processing.                                  **           01214
**             HEXPRT now works for INITVOLS.               **           01215
**             HEXPRT now prints the external labels in a   **           01216
**             LABADDIN operation.                          **           01217
**             TAPEOWNER= is now honored for an INITVOLS    **           01218
**             operation (this fixes a bug).                **           01219
**             Number for FILELIMIT=nnn is now filled in,   **           01220
**             in the message, when the EBCDIC value        **           01221
**             exists.                                      **           01222
**             Fix another bug--Tape Owner not altered--    **           01223
**             now use the value of tape owner passed from  **           01224
**             the PARMCHEK program.                        **           01225
**                                                          **           01226
** LEVEL 066 - Cosmetic changes.                            **           01227
**             Save original PARM pointer in COPYMODS       **           01228
**             csect itself.  (It got lost after PARMCHEK   **           01229
**             call.)                                       **           01230
**                                                          **           01231
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **           01232
**             (ISO/ANSI) Level 3 or Level 4, with the      **           01233
**             INASC3 or INASC4 keywords.  You can control  **           01234
**             if the HEXPRT is interpreted in EBCDIC or    **           01235
**             ASCII using the ASCII or the EBCDIC          **           01236
**             keywords.  For an ASCII tape init, ASCII     **           01237
**             print interpretation is turned on by         **           01238
**             default.  If you are initting an ASCII       **           01239
**             tape using the INASCII keyword, a Level 3    **           01240
**             ASCII tape will be created.                  **           01241
**                                                          **           01242
**             ASCII Level 4 is only supported in MVS at    **           01243
**             the OS/390 2.4 level and higher.             **           01244
**                                                          **           01245
** LEVEL 068 - Split off label checking routine into a      **           01246
**             separate program, LABELCHK, which is         **           01247
**             assembled with COPYMODS together.            **           01248
**                                                          **           01249
** LEVEL 069 - More ASCII label detection support.          **           01250
**             LABLDUMP now works for ASCII tapes.  The     **           01251
**             control cards in the LABLDUMP DD name have   **           01252
**             been translated into ASCII, the same as the  **           01253
**             labels and the data.  PARM=STRIP now works   **           01254
**             for ASCII tapes.                             **           01255
**                                                          **           01256
**             Fixed a bug where OUTVOLALL didn't work      **           01257
**             for volumes other than VOLUME1.              **           01258
**                                                          **           01259
** LEVEL 070 - More ASCII label detection support.          **           01260
**             LABADDIN works for ASCII tapes now.          **           01261
**             BLKCNT option fixed to convert corrected     **           01262
**             block counts to ASCII when necessary.        **           01263
**             EOVTOEOF now works for ASCII and IBM tapes,  **           01264
**             because a call to LABELCHK now returns the   **           01265
**             altered copy of INAREA to the main program.  **           01266
**             A parm of EOV2 now requires a space after    **           01267
**             it, so as not to interfere with EOV2EOF.     **           01268
**                                                          **           01269
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **           01270
**                                                          **           01271
**             LBI support for XXX2 print of label          **           01272
**             contents.  Big blocksizes are printed        **           01273
**             in the XXX2 print message if they exist      **           01274
**             in the labels.  This is for IBM labels.      **           01275
**                                                          **           01276
**             Support 14-character tape owner for          **           01277
**             ANSI/ISO (ASCII) tapes.                      **           01278
**                                                          **           01279
**             Other cosmetic changes and many bug fixes.   **           01280
**                                                          **           01281
** LEVEL 072 - Separate all label print operations into a   **           01282
**             call to a separate CSECT called PRINTLBL.    **           01283
**             Now there is a unified label print routine   **           01284
**             for both EXTLBLIN and INAREA label input.    **           01285
**                                                          **           01286
** LEVEL 073 - Separate messages into their own CSECT.      **           01287
**             Address with PTMS macro, and special setup.  **           01288
**             Assembler instructions which access fields   **           01289
**             in the MSGCSECT CSECT are created with the   **           01290
**             new MVFMS macro.                             **           01291
**                                                          **           01292
** LEVEL 074 - Fix LTM service and reporting.               **           01293
**                                                          **           01294
** LEVEL 075 - Implement SECOFF (security indicators in     **           01295
**             labels turned off in the copied tapes).      **           01296
**             Involves VOL1 (byte 11) for ASCII tapes.     **           01297
**             XXX1 (byte 54) which is turned to C'0' for   **           01298
**             EBCDIC (IBM) tapes, and which is turned to   **           01299
**             ASCII space (X'20') for ASCII tapes.         **           01300
**                                                          **           01301
** LEVEL 076 - Implement FOOTAGE keyword to measure each    **           01302
**             tape file approximately, giving a 6250 bpi   **           01303
**             footage calculation.  This code originally   **           01304
**             came from the SS0104 tape mapping program    **           01305
**             from the Florida Power Corporation.          **           01306
**             Cumulative footages for the entire tape up   **           01307
**             to the current file, are also displayed.     **           01308
**                                                          **           01309
**             Introduced the FOOTDIAG keyword, to print    **           01310
**             diagnostics in the footage calculation.      **           01311
**             Most of the FOOTAGE workarea fields are      **           01312
**             displayed.                                   **           01313
**                                                          **           01314
** LEVEL 077 - Save addressability space by replacing       **           01315
**             multiple MVFMS invocations with ADRSMS and   **           01316
**             DROPMS macros, to get addressability to      **           01317
**             MSGCSECT, and keep it for a while.  Also     **           01318
**             further reduced the program size by making   **           01319
**             a PTMSN macro that doesn't re-do the         **           01320
**             addressability that PTMS does.  This is for  **           01321
**             putting in between a ADRSMS and a DROPMS.    **           01322
**                                                          **           01323
** LEVEL 078   Add CODEDPRM option to report PARM options   **           01324
**             before they were adjusted by COPYMODS.       **           01325
**                                                          **           01326
**             There was no way to turn off the INITVOLS    **           01327
**             option with a parm.  So I coded the NOINITVO **           01328
**             option, to turn off the INITVOLS option      **           01329
**             bit.  So tape init will only be in effect    **           01330
**             if INITVOLS is explicitly coded.  Report     **           01331
**             NOINITVO in the options report, if this      **           01332
**             option is set off.  Remember that coding     **           01333
**             the INITVOLS keyword also turns on the       **           01334
**             CHGVOL option, so that the JCL volser gets   **           01335
**             propagated into the newly initiated tape.    **           01336
**             Coding NOINITVO only turns off the INITVOLS  **           01337
**             parm bit, and not the CHGVOL bit, as this    **           01338
**             should be the proper way to do it.           **           01339
**                                                          **           01340
**             If no //OUTn DD cards are coded in the JCL,  **           01341
**             COPYMODS would have run through the WRITEs   **           01342
**             without writing, and it would look like a    **           01343
**             normal run.  The logical fix would be to     **           01344
**             force READONLY on, and say in a message      **           01345
**             that you have done so. (That's what I did.)  **           01346
**                                                          **           01347
** LEVEL 079   Add MINMAX option to report largest and      **           01348
**             smallest block sizes for each file read.     **           01349
**                                                          **           01350
**************************************************************           01351
**************************************************************           01352
         MACRO                                                           01353
.* ----------------------------------------------------------------- *   01354
.*  Establish addressability to fields in MSGCSECT.                  *   01355
.* ----------------------------------------------------------------- *   01356
&NAME    ADRSMS                                                          01357
*                                         Operate with a message field   01358
         STM   R4,R5,SAV45MSG             Store work registers           01359
         USING MSGCSECT,R5,R4             Address MSGCSECT               01360
         L     R5,=V(MSGCSECT)            Load CSECT entry               01361
         LA    R4,4095(,R5)               Second base                    01362
         LA    R4,1(,R4)                    completed                    01363
         MEND                                                            01364
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01365
         MACRO                                                           01366
.* ----------------------------------------------------------------- *   01367
.*  DROP addressability to fields in MSGCSECT.                       *   01368
.* ----------------------------------------------------------------- *   01369
&NAME    DROPMS                                                          01370
         LM    R4,R5,SAV45MSG             Restore work registers         01371
         DROP  R5,R4                      And tell that they're gone     01372
         MEND                                                            01373
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01374
         MACRO                                                           01375
.* ----------------------------------------------------------------- *   01376
.*  Print a message to SYSPRINT from a 133-character message line    *   01377
.*  that is in the MSGCSECT CSECT.  Addressability established.      *   01378
.* ----------------------------------------------------------------- *   01379
&NAME    PTMSN &MSGLINE                                                  01380
*                                 Print a message line to SYSPRINT       01381
*                                 with MSGCSECT addressability there     01382
         MVI   LINE-1,X'40'               Move in blank                  01383
         MVC   LINE(133),LINE-1           And blank line                 01384
         MVC   LINE(133),&MSGLINE         Move message to line & print   01385
         PUT   SYSPRINT,LINE                                             01386
         MEND                                                            01387
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01388
         MACRO                                                           01389
.* ----------------------------------------------------------------- *   01390
.*  Print a message to SYSPRINT from a 133-character message line    *   01391
.*  that is in the MSGCSECT CSECT.                                   *   01392
.* ----------------------------------------------------------------- *   01393
&NAME    PTMS  &MSGLINE                                                  01394
*                                   Print a message line to SYSPRINT     01395
         STM   R4,R5,SAV45MSG             Store work registers           01396
         USING MSGCSECT,R5,R4             Address MSGCSECT               01397
         L     R5,=V(MSGCSECT)            Load CSECT entry               01398
         LA    R4,4095(,R5)               Second base                    01399
         LA    R4,1(,R4)                    completed                    01400
         MVI   LINE-1,X'40'               Move in blank                  01401
         MVC   LINE(133),LINE-1           And blank line                 01402
         MVC   LINE(133),&MSGLINE         Move message to line & print   01403
         PUT   SYSPRINT,LINE                                             01404
         LM    R4,R5,SAV45MSG             Restore work registers         01405
         DROP  R5,R4                      And tell that they're gone     01406
         MEND                                                            01407
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01408
         MACRO                                                           01409
.* ----------------------------------------------------------------- *   01410
.*  Perform an instruction with one or more operands from MSGCSECT.  *   01411
.* ----------------------------------------------------------------- *   01412
&NAME    MVFMS &OPERA,&OPERB,&OPC=MVC                                    01413
*                                         Operate with a message field   01414
         STM   R4,R5,SAV45MSG             Store work registers           01415
         USING MSGCSECT,R5,R4             Address MSGCSECT               01416
         L     R5,=V(MSGCSECT)            Load CSECT entry               01417
         LA    R4,4095(,R5)               Second base                    01418
         LA    R4,1(,R4)                    completed                    01419
         &OPC  &OPERA,&OPERB              &OPC operation w/msg field     01420
         LM    R4,R5,SAV45MSG             Restore work registers         01421
         DROP  R5,R4                      And tell that they're gone     01422
         MEND                                                            01423
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01424
         MACRO                                                           01425
&NAME    HEX   &TO,&LEN,&FROM                                            01426
&NAME    DS    0H                                                        01427
         ST    R4,SAV4HEX                                                01428
         STM   R15,R1,HEXSAVE                                            01429
         LA    R1,&FROM                                                  01430
         LA    R0,&LEN                                                   01431
         LA    R15,&TO                                                   01432
         BAL   R4,HEX                                                    01433
         L     R4,SAV4HEX                                                01434
         LM    R15,R1,HEXSAVE                                            01435
         MEND                                                            01436
*  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ *   01437
         EJECT                                                           01438
         YREGS                                                           01439
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                01440
         GBLA  &HEXDFLA                                                  01441
* ------------------------------------------------------------------ *   01442
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   01443
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   01444
* ------------------------------------------------------------------ *   01445
&HEXDFLA SETA  4                                                         01446
&HEXDFLC SETC  '&HEXDFLA'                                                01447
COPYMODS CSECT                                                           01448
         USING *,R15                                          SBG 03/00  01449
         B     EYECATCH                                       SBG 03/00  01450
         DC    C'HEX DUMP '                                              01451
HEXDFLCC DC    C'&HEXDFLC'                                               01452
         DC    C' RECORDS '                                              01453
HEXDFLL  EQU   L'HEXDFLCC                                                01454
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 01455
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  01456
         DC    C'COPYMODS Level 079 '                         SBG 03/00  01457
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  01458
         DC    C'SYSIN IN PARMCHEK PGM'                                  01459
SAVEAREA DC    18F'0'                                                    01460
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  01461
         SAVE  (14,12)                                                   01462
         LR    R5,R1          SAVE PARM POINTER                          01463
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   01464
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          01465
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         01466
         LR    R13,R1               NEW SAVE AREA ADDRESS                01467
         DROP  R15                                                       01468
* -----                       SET UP SIX BASE REGISTERS                  01469
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             01470
         LR    R12,R15                                                   01471
         LA    R11,4095(,R12)                                            01472
         LA    R11,1(,R11)                                               01473
         LA    R10,4095(,R11)                                            01474
         LA    R10,1(,R10)                                               01475
         LA    R9,4095(,R10)                                             01476
         LA    R9,1(,R9)                                                 01477
         LA    R8,4095(,R9)                                              01478
         LA    R8,1(,R8)                                                 01479
         LA    R6,4095(,R8)                                              01480
         LA    R6,1(,R6)                                                 01481
         LR    R1,R5          RESTORE PARM POINTER                       01482
         ST    R1,PARMSTRT    PRESERVE PARM POINTER WHERE IT CAN         01483
*                             BE PASSED TO THE PARMCHEK PROGRAM.         01484
         ST    R1,PARMSAVE    And store the PARM pointer into this       01485
*                             program too, so it doesn't get lost.       01486
         L     R1,0(,R1)                                                 01487
         LH    R5,0(,R1)      SAVE PARM LENGTH, AND                      01488
         ST    R5,PARMSLEN    PRESERVE IT AS A FULLWORD                  01489
         MVC   SAVMSLEN,PARMSLEN     KEEP IT SAFE - DOUBLE SURE          01490
         L     R0,=V(TRTCSECT)       SAVE HEX TRANSLATE TABLE POINTER    01491
         ST    R0,SAVTRTCS           AND STORE IT FOR LATER USE.         01492
         L     R0,=V(LABELCHK)       Entry point of called LABELCHK pgm  01493
         ST    R0,LABCHENT           Save entry point for calling later  01494
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  01495
         ST    R0,PRTLBENT           Save entry point for calling later  01496
         L     R0,=V(FOOTAGE)        Entry point of called FOOTAGE pgm   01497
         ST    R0,FOOTGENT           Save entry point for calling later  01498
*   Initialization for 6250 footage calculations ---- below              01499
         MVI   LABELTYP,C'N'         Assume NL for footage calculations  01500
         MVI   DENSITY,C'4'          Assume 6250 density for footage     01501
         MVC   FILENO,=H'1'          Start with first file               01502
         XC    BLKSZE,BLKSZE         Zero                                01503
         XC    NUMBLKS,NUMBLKS         These                             01504
         XC    USERLBLS,USERLBLS         Fields                          01505
         XC    CUMTOTAL,CUMTOTAL           Initially                     01506
         XC    BLKSZWRK,BLKSZWRK                                         01507
         MVC   FILEFT,=C'        '                                       01508
         MVC   REELFT,=C'        '                                       01509
*   Initialization for 6250 footage calculations ---- above              01510
* --- >   Initialize max and min blocksize calculation  < --- * below    01511
         MVC   MAXBLK,=F'0'                 Start small                  01512
         MVC   MINBLK,=F'268435455'         Start big                    01513
* --- >   Initialize max and min blocksize calculation  < --- * above    01514
* ----------------------------------------------------------------- *    01515
*                                                                   *    01516
*  CALLING THE PARMCHEK PROGRAM REQUIRES:                           *    01517
*                                                                   *    01518
*     INPUT:   R2 POINTS TO STRTVALU, WHERE PARM INFORMATION IS     *    01519
*              ALREADY PRESERVED IN THE PARMSLEN AND PARMSTRT       *    01520
*              FIELDS.                                              *    01521
*                                                                   *    01522
*     OUTPUT:  R1 POINTS TO PARMCHEK'S PARMFLGS, ALREADY ALL        *    01523
*              FILLED IN.                                           *    01524
*                                                                   *    01525
*              R2 POINTS TO PARMCHEK'S USER AREA STARTING WITH      *    01526
*              STRTVALU, FILLED IN WITH USER INFORMATION FROM       *    01527
*              THE PARM SCAN.                                       *    01528
*                                                                   *    01529
*     AFTER THE PARMCHEK PROGRAM RETURNS CONTROL TO COPYMODS,       *    01530
*     ITS PARMFLGS AND STRTVALU AREAS ARE COPIED OVER INTO THE      *    01531
*     CORRESPONDING AREAS IN THE COPYMODS PROGRAM.                  *    01532
*                                                                   *    01533
*     PARMCHEK'S USER AREA STARTING WITH LABEL STRTVALU HAS TO      *    01534
*     EXACTLY MATCH COPYMODS' USER AREA STARTING WITH STRTVALU.     *    01535
*                                                                   *    01536
* ------------------------------------------------------------------*    01537
*    NOW DO IT.  CALL THE PARMCHEK PROGRAM AND GET THE RETURNS.     *    01538
* ------------------------------------------------------------------*    01539
         L     R0,=V(PARMCHEK)                                           01540
         ST    R0,ENTRYPT                                                01541
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      01542
         LA    R2,STRTVALU        USER AREA ADDRESS TO BE PASSED.        01543
         BALR  R14,R15                 DO CALL                           01544
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     01545
         ST    R2,USERSAVE             ADDRESS OF RETURNED USER AREA     01546
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      01547
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     01548
* -- >  After PARMS gotten...........                                    01549
         MVC   PARMCOPY(PARMFLLN),0(R1)   Preserve unchanged parms.      01550
         MVC   VOLSTG(6),VOLSTG1          Stage OUTVOLALL volume name    01551
         TM    PARMFLG5,X'04'                                            01552
         BO    LTMNUMB0                                                  01553
         MVC   LTMCNTR(4),=F'0'           Init LTM count fullword        01554
         B     LTMNUMB1                                                  01555
LTMNUMB0 DS    0H                                                        01556
         MVC   LTMCNTR(4),LTMNUMB         Init LTM count fullword        01557
LTMNUMB1 DS    0H                                                        01558
         ZAP   LTMCOUNT,=P'0'             Init LTM ascending counter     01559
         MVC   LTMBINAD,=F'0'             Init LTM binary counter        01560
* ----------------------------------------------------------------- *    01561
* ----------------------------------------------------------------- *    01562
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    01563
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    01564
* ----------------------------------------------------------------- *    01565
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         01566
SKIPLTMS DS    0H                                             SBG 06/00  01567
* ------- >> ------- >>                                                  01568
         TM    PARMFLG5,X'01'      INITTING ASCII TYPE 3?                01569
         BZ    NOASCII4            NO. DON'T ADJUST.                     01570
         NI    PARMFLG5,FF-X'02'   YES, TURN OFF ASCII TYPE 4.           01571
NOASCII4 DS    0H                                                        01572
* ------- >> ------- >>                                                  01573
* ----- * ----- * ------                                                 01574
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                01575
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    01576
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    01577
NONOEXNL DS    0H                                                        01578
* ----- * ----- * ------                                                 01579
* ----- * ----- * ------ *------                                         01580
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            01581
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    01582
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              01583
NOCUMSEP DS    0H                                                        01584
* ----- * ----- * ------ *------                                         01585
* ----- * -----                                                          01586
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        01587
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    01588
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        01589
NOCUMTOT DS    0H                                                        01590
* ----- * -----                                                          01591
         TM    PARMFLG6,X'80'   Do we want an options comparison?        01592
         BZ    NOCODDPR         No. Don't force OPTIONS on.              01593
         OI    PARMFLG4,X'20'   Make sure OPTIONS is also on.            01594
NOCODDPR DS    0H                                                        01595
* ----- * -----                                                          01596
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              01597
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      01598
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           01599
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           01600
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            01601
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       01602
*                                      BECAUSE WE'RE COPYING TO SL.      01603
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             01604
CANLBDMP DS    0H                                                        01605
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    01606
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          01607
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             01608
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   01609
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    01610
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01611
NOLBDQUI DS    0H                                                        01612
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    01613
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     01614
         TM    PARMFLG4,X'02'      IS STRIP ON?                          01615
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         01616
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                01617
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                01618
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                01619
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            01620
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           01621
         NI    PARMFLG5,FF-X'03'   INIT ASCII OFF                        01622
NOSTRADJ DS    0H                  END of the STRIP adjustments          01623
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     01624
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?                   01625
         BZ    SKIXLTMS         NO. DON'T CHANGE INDICATOR               01626
         MVFMS LTMRPTI,READDD   INDICATE LTM'S HAVE BEEN READ            01627
SKIXLTMS DS    0H                                                        01628
* ----------------------------------------------------------------- *    01629
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    01630
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    01631
* ----------------------------------------------------------------- *    01632
* --                                                             -- *    01633
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             01634
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        01635
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    01636
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          01637
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01638
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01639
         BZ    NOOPTRP1          NO. DON'T CALL IT                       01640
         BALR  R14,R15           CALL SUBPROGRAM                         01641
         TM    PARMFLG6,X'80'    IS CODEDPRM CODED?                      01642
         BZ    NOOPTRP2          NO. DON'T PRINT CODED OPTIONS.          01643
NOOPTRP1 DS    0H                                                        01644
         LA    R1,PARMCOPY       POINT TO QUANTITY TO BE PASSED          01645
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               01646
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 01647
         BZ    NOOPTRP2          NO. DON'T CALL IT                       01648
         BALR  R14,R15           CALL SUBPROGRAM                         01649
NOOPTRP2 DS    0H                                                        01650
         LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 01651
NOOPTRPT DS    0H                                                        01652
*  -------------------------------------------------------------- *      01653
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  01654
         RDJFCB IN                                                       01655
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        01656
         ADRSMS                                                          01657
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01658
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  01659
         DROPMS                                                          01660
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   01661
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  01662
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 01663
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  01664
         SPACE 3                                                         01665
OPENSYSP DS    0H                                                        01666
*                                                                        01667
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               01668
*                                                                        01669
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01670
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01671
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  01672
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  01673
         L     R2,16          R2=CVT                                     01674
         L     R2,0(,R2)      R2=TCB WORDS                               01675
         L     R2,4(,R2)      R2=MY TCB                                  01676
         L     R2,12(,R2)     R2=TIOT                                    01677
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          01678
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             01679
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        01680
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    01681
         BNE   TIOT1          NO                                         01682
         OI    FLAG1,OP1      SHOW IT                                    01683
         STM   R14,R3,SAV14T03                                    TEST   01684
         RDJFCB OUT1                                                     01685
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              01686
         MVC   VOLDD,DDOUT1                                              01687
         LM    R14,R3,SAV14T03                                    TEST   01688
         B     TIOTNEXT       CONTINUE                                   01689
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    01690
         BNE   TIOT2          NO                                         01691
         OI    FLAG1,OP2      SHOW IT                                    01692
         STM   R14,R3,SAV14T03                                    TEST   01693
         RDJFCB OUT2                                                     01694
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              01695
         MVC   VOLDD,DDOUT2                                              01696
         LM    R14,R3,SAV14T03                                    TEST   01697
         B     TIOTNEXT       CONTINUE                                   01698
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    01699
         BNE   TIOT3          NO                                         01700
         OI    FLAG1,OP3      SHOW IT                                    01701
         STM   R14,R3,SAV14T03                                    TEST   01702
         RDJFCB OUT3                                                     01703
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              01704
         MVC   VOLDD,DDOUT3                                              01705
         LM    R14,R3,SAV14T03                                    TEST   01706
         B     TIOTNEXT       CONTINUE                                   01707
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    01708
         BNE   TIOT4          NO                                         01709
         OI    FLAG1,OP4      SHOW IT                                    01710
         STM   R14,R3,SAV14T03                                    TEST   01711
         RDJFCB OUT4                                                     01712
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              01713
         MVC   VOLDD,DDOUT4                                              01714
         LM    R14,R3,SAV14T03                                    TEST   01715
         B     TIOTNEXT       CONTINUE                                   01716
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    01717
         BNE   TIOT5          NO                                         01718
         OI    FLAG1,OP5      SHOW IT                                    01719
         STM   R14,R3,SAV14T03                                    TEST   01720
         RDJFCB OUT5                                                     01721
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              01722
         MVC   VOLDD,DDOUT5                                              01723
         LM    R14,R3,SAV14T03                                    TEST   01724
         B     TIOTNEXT       CONTINUE                                   01725
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    01726
         BNE   TIOT6          NO                                         01727
         OI    FLAG1,OP6      SHOW IT                                    01728
         STM   R14,R3,SAV14T03                                    TEST   01729
         RDJFCB OUT6                                                     01730
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              01731
         MVC   VOLDD,DDOUT6                                              01732
         LM    R14,R3,SAV14T03                                    TEST   01733
         B     TIOTNEXT       CONTINUE                                   01734
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    01735
         BNE   TIOT7          NO                                         01736
         OI    FLAG1,OP7      SHOW IT                                    01737
         STM   R14,R3,SAV14T03                                    TEST   01738
         RDJFCB OUT7                                                     01739
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01740
         MVC   VOLDD,DDOUT7                                              01741
         LM    R14,R3,SAV14T03                                    TEST   01742
         B     TIOTNEXT       CONTINUE                                   01743
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01744
         BNE   TIOT8          NO                                         01745
         OI    FLAG1,OP8      SHOW IT                                    01746
         STM   R14,R3,SAV14T03                                    TEST   01747
         RDJFCB OUT8                                                     01748
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01749
         MVC   VOLDD,DDOUT8                                              01750
         LM    R14,R3,SAV14T03                                    TEST   01751
         B     TIOTNEXT       CONTINUE                                   01752
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01753
         BNE   TIOT9          NO                                         01754
         OI    FLAG2,OP9      SHOW IT                                    01755
         STM   R14,R3,SAV14T03                                    TEST   01756
         RDJFCB OUT9                                                     01757
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01758
         MVC   VOLDD,DDOUT9                                              01759
         LM    R14,R3,SAV14T03                                    TEST   01760
         B     TIOTNEXT       CONTINUE                                   01761
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01762
         BNE   TIOT10         NO                                         01763
         OI    FLAG2,OP10     SHOW IT                                    01764
         STM   R14,R3,SAV14T03                                    TEST   01765
         RDJFCB OUT10                                                    01766
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01767
         MVC   VOLDD,DDOUT10                                             01768
         LM    R14,R3,SAV14T03                                    TEST   01769
         B     TIOTNEXT       CONTINUE                                   01770
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01771
         BNE   TIOT11         NO                                         01772
         OI    FLAG2,OP11     SHOW IT                                    01773
         STM   R14,R3,SAV14T03                                    TEST   01774
         RDJFCB OUT11                                                    01775
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01776
         MVC   VOLDD,DDOUT11                                             01777
         LM    R14,R3,SAV14T03                                    TEST   01778
         B     TIOTNEXT       CONTINUE                                   01779
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01780
         BNE   TIOT12         NO                                         01781
         OI    FLAG2,OP12     SHOW IT                                    01782
         STM   R14,R3,SAV14T03                                    TEST   01783
         RDJFCB OUT12                                                    01784
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01785
         MVC   VOLDD,DDOUT12                                             01786
         LM    R14,R3,SAV14T03                                    TEST   01787
         B     TIOTNEXT       CONTINUE                                   01788
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01789
         BNE   TIOT13         NO                                         01790
         OI    FLAG2,OP13     SHOW IT                                    01791
         STM   R14,R3,SAV14T03                                    TEST   01792
         RDJFCB OUT13                                                    01793
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01794
         MVC   VOLDD,DDOUT13                                             01795
         LM    R14,R3,SAV14T03                                    TEST   01796
         B     TIOTNEXT       CONTINUE                                   01797
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01798
         BNE   TIOT14         NO                                         01799
         OI    FLAG2,OP14     SHOW IT                                    01800
         STM   R14,R3,SAV14T03                                    TEST   01801
         RDJFCB OUT14                                                    01802
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01803
         MVC   VOLDD,DDOUT14                                             01804
         LM    R14,R3,SAV14T03                                    TEST   01805
         B     TIOTNEXT       CONTINUE                                   01806
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01807
         BNE   TIOT15         NO                                         01808
         OI    FLAG2,OP15     SHOW IT                                    01809
         STM   R14,R3,SAV14T03                                    TEST   01810
         RDJFCB OUT15                                                    01811
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01812
         MVC   VOLDD,DDOUT15                                             01813
         LM    R14,R3,SAV14T03                                    TEST   01814
         B     TIOTNEXT       CONTINUE                                   01815
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01816
         BNE   TIOTNEXT       NO                                         01817
         OI    FLAG2,OP16     SHOW IT                                    01818
         STM   R14,R3,SAV14T03                                    TEST   01819
         RDJFCB OUT16                                                    01820
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01821
         MVC   VOLDD,DDOUT16                                             01822
         LM    R14,R3,SAV14T03                                    TEST   01823
         B     TIOTNEXT       CONTINUE                                   01824
TIOTNEXT SR    R3,R3                                                     01825
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01826
         AR    R2,R3          R2=NEXT DD ENTRY                           01827
         B     TIOTLOOP       GO CHECK IT                                01828
*  ---------------------------------------------------------  SBG 09/00  01829
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01830
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01831
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01832
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01833
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01834
         MVC   VOLUME1(6),VOLSTG1            PROPAGATE VOLSER            01835
         MVC   VOLUME2(VOLALLLN-6),VOLUME1                               01836
NOVOLOV  DS    0H                                                        01837
         CLC   FLAG1(2),=X'0000' No output files open?                   01838
         BNE   OPENS                                                     01839
         OI    PARMFLG2,X'08'    Force READONLY                          01840
         OI    NOUTSFLG,X'01'    Show we were here                       01841
         B     OPENS             Go OPEN files.                          01842
*  ---------------------------------------------------------  SBG 09/00  01843
         SPACE 3                                                         01844
*  -----------------------------------------------------------------  *  01845
*                                                                        01846
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01847
*                                                                        01848
*  -----------------------------------------------------------------  *  01849
OPENS    DS    0H               START OPENING FILES                      01850
         OPEN  (SYSPRINT,OUTPUT)                                         01851
*-- + -- + -- >>    below       READONLY forced because no OUTnn DD      01852
         TM    NOUTSFLG,X'01'                                            01853
         BZ    HASOUTPT                                                  01854
         ADRSMS                                                          01855
         PTMSN FORCREAD                                                  01856
         DROPMS                                                          01857
HASOUTPT DS    0H                                                        01858
*-- + -- + -- >>    above       READONLY forced because no OUTnn DD      01859
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01860
         BO    OPENMOVE                                                  01861
         TM    PARMFLG5,X'01'    INIT ASCII TAPES?                       01862
         BO    OPENMOVE                                                  01863
         TM    PARMFLG5,X'02'    INIT ASCII TAPES?                       01864
         BO    OPENMOVE                                                  01865
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01866
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01867
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01868
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01869
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01870
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01871
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01872
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01873
NOLBLDD  DS    0H                                                        01874
         PTMS  LDMPMSG            DISPLAY MISSING DD MESSAGE             01875
         OI    ENDITFLG,X'01'     FLAG THAT LABLDUMP NOT OPEN.           01876
OPNLABIN TM    PARMFLG2,X'80'     DO WE NEED LABADDIN?                   01877
         BZ    CHKENDIT           NO. SEE IF ANYTHING ELSE IS BAD        01878
         OPEN  (LABADDIN,INPUT)                                          01879
         TM    LABADDIN+48,X'10'  IS THE DD OPEN  ?                      01880
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01881
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01882
         B     CHKENDIT           GO CHECK IF WE HAVE TO END.            01883
NOLABIN  DS    0H                                                        01884
         PTMS  NLABMSG            DISPLAY MISSING DD MESSAGE             01885
         OI    ENDITFLG,X'04'     FLAG THAT LABADDIN NOT OPEN.           01886
CHKENDIT TM    ENDITFLG,X'07'     CHECK IF WE HAVE TO END                01887
         BZ    OPENIN             NOTHING WRONG.  GO ON.                 01888
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01889
         CLOSE (SYSPRINT)                                                01890
         TM    OPENDFLG,X'01'     IS LABLDUMP DD OPEN?                   01891
         BZ    TRYCLABN           NO. TRY IF SYSIN IS OPEN.              01892
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    01893
         CLOSE (LABLDUMP)                                                01894
TRYCLABN TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   01895
         BZ    REALYEND           NO. GET OUT.                           01896
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01897
         CLOSE (LABADDIN)                                                01898
REALYEND B     THEEND                                                    01899
         EJECT                                                           01900
OPENIN   OPEN  (IN,INPUT)                                                01901
         TM    IN+48,X'10'                                               01902
         BO    INISOPEN                                                  01903
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01904
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01905
         BO    INISOPEN             OK. //IN DD is not needed.           01906
         TM    PARMFLG5,X'01'       INITTING ASCII TAPES?                01907
         BO    INISOPEN             OK. //IN DD is not needed.           01908
         TM    PARMFLG5,X'02'       INITTING ASCII TAPES?                01909
         BO    INISOPEN             OK. //IN DD is not needed.           01910
** --- >>>   //IN DD is really needed, but is not OPEN.                  01911
         PTMS  INNOTOPN             Print message that //IN not open.    01912
         B     ENDEM                Go to CLOSE files, and get out.      01913
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01914
INISOPEN DS    0H                                                        01915
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01916
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01917
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01918
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01919
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01920
* ----                                                                   01921
OPENINCK DS    0H                                                        01922
         OI    DATFLAG,X'20'      Initialize "no data read yet" flag.    01923
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     01924
         MVC   LTMBINAD,=F'0'                                            01925
         LA    R2,IN              POINT TO IN DCB                        01926
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01927
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01928
         EXCP  REWIOB                                                    01929
         WAIT  ECB=REWECB                                                01930
OPINREAD DS    0H                                                        01931
         TM    DATFLAG,X'20'      Still no legitimate data read?         01932
         BZ    OPINCHEK           Legitimate data. Look for VOL1.        01933
         MVC   INECB,=F'0'        Initialize IN's ECB                    01934
         EXCP  INIOB                                                     01935
         WAIT  ECB=INECB                                                 01936
* ->->->       Break in to bypass LTMs    ->->->   below                 01937
         TM    INCSW+4,X'01'      Was a tape mark read?                  01938
         BZ    OPINCHEK           No. This is legitimate data.           01939
         AP    LTMCOUNT,=P'1'     Add 1 to Tape Mark count.              01940
         L     R0,LTMBINAD                                               01941
         A     R0,=F'1'                                                  01942
         ST    R0,LTMBINAD                                               01943
         ADRSMS                                                          01944
         MVC   LTMRPTI,PASSED     Report tape mark was passed.           01945
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern             01946
         ED    LTMRNUM(11),LTMCOUNT+1           Put count in message     01947
         PTMSN LTMRPT             Report leading TM passed.              01948
         DROPMS                                                          01949
         B     OPINREAD           Do another read until real data found  01950
* ->->->       Break in to bypass LTMs    ->->->   above                 01951
OPINCHEK DS    0H                                                        01952
         NI    DATFLAG,FF-X'20'   Show legitimate data read now.         01953
         OI    DATFLAG,X'40'      Show we came thru here.                01954
         CLC   INAREA(4),=C'VOL1' Is the tape IBM SL ?                   01955
         BE    OPENINSL                 Yes, turn on SL flag.            01956
         CLC   INAREA(4),=X'564F4C31'   ASCII VOL1 ?                     01957
         BE    OPENINSL                 Yes, turn on SL flag.            01958
         B     RESETIN            No. Just rewind to reposition.         01959
OPENINSL DS    0H                                                        01960
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01961
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01962
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01963
****** ------ BELOW ------ SL FILE NUMBERS.                              01964
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01965
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01966
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01967
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01968
**** ----- >>>>>   Force file limiting by SL   - - -  below              01969
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01970
         BZ    NOSLFLIM              Not set, bypass code for it         01971
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01972
         L     R0,LTGFILE                                                01973
         A     R0,LTMBINAD                                               01974
         ST    R0,LTGFILE                                                01975
         ADRSMS                                                          01976
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01977
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01978
         PTMSN FORCESLM              Say you'll force limiting by SL     01979
         DROPMS                                                          01980
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01981
         BNO   SLLIMRES              No. only SLLIM. So go on.           01982
         PTMS  TWOFORCE              Say you'll force limiting by SL     01983
SLLIMRES DS    0H                                                        01984
         B     RESETIN                                                   01985
NOSLFLIM DS    0H                                                        01986
**** ----- >>>>>   Force file limiting by SL   - - -  above              01987
**** ----- >>>>>   Force file limiting by NL   - - -  below              01988
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01989
         BZ    NONLFLIM              Not set, bypass code for it         01990
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01991
         L     R0,LTGFILE                                                01992
         A     R0,LTMBINAD                                               01993
         ST    R0,LTGFILE                                                01994
         ADRSMS                                                          01995
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      01996
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01997
         PTMSN FORCENLM              Say you'll force limiting by NL     01998
         DROPMS                                                          01999
         B     RESETIN                                                   02000
NONLFLIM DS    0H                                                        02001
**** ----- >>>>>   Force file limiting by NL   - - -  above              02002
* -- > Strip test                                                        02003
         TM    PARMFLG4,X'02'        Are we stripping labels?            02004
         BZ    OPENINXW              No. Bypass this section.            02005
         TM    PARMFLG3,X'02'        Are we limiting files also?         02006
         BO    OPENINXW              Yes. Use SL number.                 02007
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   02008
         L     R0,LTGFILE                                                02009
         A     R0,LTMBINAD                                               02010
         ST    R0,LTGFILE                                                02011
         ADRSMS                                                          02012
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02013
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       02014
         DROPMS                                                          02015
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    02016
OPENINXW DS    0H                                                        02017
* -- > Strip test                                                        02018
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    02019
         L     R0,LTGFILE                                                02020
         A     R0,LTMBINAD                                               02021
         ST    R0,LTGFILE                                                02022
         ADRSMS                                                          02023
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02024
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    02025
         DROPMS                                                          02026
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    02027
OPENINXX DS    0H                                                        02028
****** ------ ABOVE ------ SL FILE NUMBERS.                              02029
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     02030
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02031
RESETLAD TM    OPENDFLG,X'04'     IS LABADDIN DD OPEN?                   02032
         BZ    RESETEND           NO. GET OUT.                           02033
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02034
         CLOSE (LABADDIN)                                                02035
RESETEND CLOSE (IN)                                                      02036
         B     THEEND                                                    02037
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     02038
RESETIN  DS    0H                                                        02039
         TM    PARMFLG2,X'80'     Came here for LABADDIN?                02040
         BZ    RESETSLD           No. Do complete rewind.                02041
         MVC   LTMCNTR(4),LTMBINAD                                       02042
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     02043
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    02044
         OI    RESLTMWF,X'01'                                            02045
         LA    R2,IN              POINT TO IN DCB                        02046
         ST    R2,BKBDCBPT        TELL IOB TO BACKSPACE ONLY ONE BLOCK   02047
         MVC   BK1BECB,=F'0'                                             02048
         EXCP  BK1BIOB                                                   02049
         WAIT  ECB=BK1BECB                                               02050
         B     NOLBLDMP                                                  02051
RESETSLD DS    0H                                                        02052
         ZAP   LTMCOUNT,=P'0'     Initialize LTM counter for report.     02053
         MVC   LTMBINAD,=F'0'     Binary counter to add to filecount.    02054
         MVC   REWECB,=F'0'                                              02055
         EXCP  REWIOB                                                    02056
         WAIT  ECB=REWECB                                                02057
NOINITOP DS    0H                                                        02058
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   02059
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            02060
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             02061
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                02062
         LTR   R15,R15                  DDNAME SHOULD BE THERE           02063
         BNZ   NOLBLDD                  IF NOT, FLAG                     02064
         ST    R7,SAVE7REG              SAVE R7                          02065
         LA    R7,LBLJFCB               POINT TO JFCB AREA               02066
         USING JFCBLK,R7                MAP THE AREA                     02067
         ADRSMS                                                          02068
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  02069
         MVC   LDMPOUTM+89(8),JFCBELNM                                   02070
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  02071
         PTMSN LDMPOUTM                                                  02072
         DROPMS                                                          02073
         DROP  R7                                                        02074
         L     R7,SAVE7REG              RESTORE R7                       02075
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  02076
         TM    PARMFLG2,X'80'     TEST IF LABADDIN IS NEEDED.            02077
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             02078
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                02079
         LTR   R15,R15                  DDNAME SHOULD BE THERE           02080
         BNZ   NOLABIN                  IF NOT, FLAG                     02081
         ST    R7,SAVE7REG              SAVE R7                          02082
         LA    R7,LBNJFCB               POINT TO JFCB AREA               02083
         USING JFCBLK,R7                MAP THE AREA                     02084
         ADRSMS                                                          02085
         MVC   LDMPINMS+38(44),JFCBDSNM                                  02086
         MVC   LDMPINMS+89(8),JFCBELNM                                   02087
         MVC   LDMPINMS+105(6),JFCBVOLS                                  02088
         PTMSN LDMPINMS                                                  02089
         DROPMS                                                          02090
         DROP  R7                                                        02091
         L     R7,SAVE7REG              RESTORE R7                       02092
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  02093
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  02094
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02095
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  02096
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  02097
         PTMS  READOMSG              MOVE READ-ONLY MESSAGE              02098
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    02099
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            02100
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         02101
         ADRSMS                                                          02102
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02103
         PTMSN LIMFMSG                  MOVE MESSAGE TEXT IN             02104
         DROPMS                                                          02105
NOLIMFMR DS    0H                                                        02106
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    02107
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02108
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          02109
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         02110
         MVC   LINE,LINE-1      CLEAR MSG LINE                           02111
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             02112
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           02113
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 02114
         B     N1LIMPRT             AND PRINT IT                         02115
N1LIMDEF DS    0H                                                        02116
         ADRSMS                                                          02117
         MVC   LIMPMSG+11(10),PRTCHAR                                    02118
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 02119
         DROPMS                                                          02120
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         02121
N1LIMHEX DS    0H                                                        02122
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02123
         B     READIN                                         SBG 06/00  02124
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  02125
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    02126
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  02127
*  ---------------------------------------------------------  SBG 03/00  02128
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  02129
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          02130
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         02131
         MVC   LINE,LINE-1      CLEAR MSG LINE                           02132
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             02133
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           02134
         MVFMS LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 02135
         B     NOLIMPRT             AND PRINT IT                         02136
NOLIMDEF DS    0H                                                        02137
         ADRSMS                                                          02138
         MVC   LIMPMSG+11(10),PRTCHAR                                    02139
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 02140
         DROPMS                                                          02141
NOLIMPRT PUT   SYSPRINT,LINE                                             02142
NOLIMHEX DS    0H                                                        02143
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  02144
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         02145
         BO    INITEBCD                                                  02146
         TM    PARMFLG5,X'01'   INIT ASCII TAPE LEVEL 3?                 02147
         BO    INITAS3                                                   02148
         TM    PARMFLG5,X'02'   INIT ASCII TAPE LEVEL 4?                 02149
         BO    INITAS4                                                   02150
         B     OPENOINT                                                  02151
INITEBCD DS    0H                                                        02152
         MVFMS INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          02153
         B     NOCORPRT                                                  02154
INITAS3  DS    0H                                                        02155
         ADRSMS                                                          02156
         MVC   INITMSG,INITASC3     MOVE APPROPRIATE MESSAGE IN          02157
         MVC   INITCOPD,INITCREA                                         02158
         DROPMS                                                          02159
         B     NOCORPRT                                                  02160
INITAS4  DS    0H                                                        02161
         ADRSMS                                                          02162
         MVC   INITMSG,INITASC4     MOVE APPROPRIATE MESSAGE IN          02163
         MVC   INITCOPD,INITCREA                                         02164
         DROPMS                                                          02165
         B     NOCORPRT                                                  02166
OPENOINT DS    0H                                                        02167
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    02168
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      02169
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              02170
         ST    R7,SAVE7REG                                               02171
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       02172
         L     R7,SAVE7REG                                               02173
NOCORPRT DS    0H                                                        02174
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    02175
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    02176
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            02177
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         02178
         ADRSMS                                                          02179
         MVC   LIMFMSG+11(10),LIMCHAR   Insert number into message.      02180
         PTMSN LIMFMSG          MOVE MESSAGE TEXT IN                     02181
         DROPMS                                                          02182
NOLIMFMS DS    0H                                                        02183
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    02184
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   02185
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           02186
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         02187
         ADRSMS                                                          02188
         MVC   LIMLMSG+11(10),LABCHAR                                    02189
         PTMSN LIMLMSG          MOVE MESSAGE TEXT IN                     02190
         DROPMS                                                          02191
NOLIMLMR DS    0H                                                        02192
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   02193
         TM    PARMFLG5,X'04'       WRITE LTMS ENABLED?                  02194
         BZ    NOLTMSG0             NO. DON'T PRINT MESSAGE.             02195
         ADRSMS                                                          02196
         MVC   LTMWMSG+11(10),LTMCHAR                                    02197
         MVC   LINE(133),LTMWMSG    MOVE MESSAGE TEXT IN                 02198
         DROPMS                                                          02199
         PUT   SYSPRINT,LINE        AND PRINT IT                         02200
NOLTMSG0 DS    0H                                                        02201
**** ---- >>> Message that labels are being stripped <<< ---- below ***  02202
         TM    PARMFLG4,X'02'     Are labels being stripped?             02203
         BZ    NOSTRMSG                                                  02204
         PTMS  STRPMSG            Show we're stripping labels            02205
NOSTRMSG DS    0H                                                        02206
**** ---- >>> Message that labels are being stripped <<< ---- above ***  02207
OPEN0    DS    0H                                                        02208
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          02209
         BZ    OPEN1          NO                                         02210
         OPEN  (OUT1,OUTPUT)                                             02211
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          02212
         BZ    OPEN2          NO                                         02213
         OPEN  (OUT2,OUTPUT)                                             02214
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          02215
         BZ    OPEN3          NO                                         02216
         OPEN  (OUT3,OUTPUT)                                             02217
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          02218
         BZ    OPEN4          NO                                         02219
         OPEN  (OUT4,OUTPUT)                                             02220
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          02221
         BZ    OPEN5          NO                                         02222
         OPEN  (OUT5,OUTPUT)                                             02223
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          02224
         BZ    OPEN6          NO                                         02225
         OPEN  (OUT6,OUTPUT)                                             02226
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          02227
         BZ    OPEN7          NO                                         02228
         OPEN  (OUT7,OUTPUT)                                             02229
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          02230
         BZ    OPEN8          NO                                         02231
         OPEN  (OUT8,OUTPUT)                                             02232
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          02233
         BZ    OPEN9          NO                                         02234
         OPEN  (OUT9,OUTPUT)                                             02235
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         02236
         BZ    OPEN10         NO                                         02237
         OPEN  (OUT10,OUTPUT)                                            02238
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         02239
         BZ    OPEN11         NO                                         02240
         OPEN  (OUT11,OUTPUT)                                            02241
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         02242
         BZ    OPEN12         NO                                         02243
         OPEN  (OUT12,OUTPUT)                                            02244
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         02245
         BZ    OPEN13         NO                                         02246
         OPEN  (OUT13,OUTPUT)                                            02247
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         02248
         BZ    OPEN14         NO                                         02249
         OPEN  (OUT14,OUTPUT)                                            02250
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         02251
         BZ    OPEN15         NO                                         02252
         OPEN  (OUT15,OUTPUT)                                            02253
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         02254
         BZ    READIN         NO                                         02255
         OPEN  (OUT16,OUTPUT)                                            02256
         EJECT                                                           02257
* --------------------------------------------------------- *            02258
*                                                           *            02259
*  READ INPUT                                               *            02260
*                                                           *            02261
* --------------------------------------------------------- *            02262
*                                                           *            02263
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            02264
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            02265
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            02266
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            02267
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            02268
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            02269
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            02270
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            02271
*                                                           *            02272
* --------------------------------------------------------- *            02273
READIN   DS    0H                                                        02274
*---------------------------- Write Leading Tapemarks ----- below -->    02275
         TM    PARMFLG1,X'20'       Is LTMSKIP on?                       02276
         BO    NOWRLTMS             Yes. Don't manufacture passed LTMs.  02277
         TM    RESLTMWF,X'01'       Come from RESETIN for LABADDIN?      02278
         BO    READWLTM             Yes. Manufacture LTMs if any.        02279
         TM    PARMFLG5,X'08'       Set to write leading tapemarks?      02280
         BZ    NOWRLTMS             No. Only regular processing.         02281
READWLTM DS    0H                                                        02282
         L     R1,LTMCNTR           Check descending LTM counter         02283
*                                   Previously initialized to LTMNUMB    02284
         C     R1,=F'0'             Is it zero now?                      02285
         BE    NOWRLTMS             Yes. No more writing LTMs.           02286
         AP    LTMCOUNT,=P'1'                                            02287
         L     R0,LTMBINAD                                               02288
         A     R0,=F'1'                                                  02289
         ST    R0,LTMBINAD                                               02290
         BCTR  R1,0                 Not yet 0. Lower it by one.          02291
         ST    R1,LTMCNTR           And store it away for next pass.     02292
         MVI   OUTCCW,X'1F'         Load tape mark CCW opcode.           02293
         MVC   OUTCCW+6(2),=X'0001'    Put 1 in bytes field, and         02294
         ADRSMS                                                          02295
         MVC   LTMRNUM(11),LTMCTPAT                                      02296
         ED    LTMRNUM(11),LTMCOUNT+1                                    02297
         MVC   LTMRPTI,WRITTEN      Report tape mark written.            02298
         PTMSN LTMRPT               Write report line.                   02299
         DROPMS                                                          02300
         B     WRITE1               Write the tape mark to outputs.      02301
NOWRLTMS DS    0H                                                        02302
*---------------------------- Write Leading Tapemarks ----- above -->    02303
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   02304
         BO    TLITWRIT                                                  02305
         TM    PARMFLG5,X'01'     INITTING ASCII TAPE LEVEL 3?           02306
         BO    TLITASCI                                                  02307
         TM    PARMFLG5,X'02'     INITTING ASCII TAPE LEVEL 4?           02308
         BO    TLITASCI                                                  02309
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  02310
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     02311
         MVI   INECB,X'00'    INITIALIZE ECB                             02312
* ------------------------------------------------------------------ *   02313
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   02314
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   02315
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   02316
* ------------------------------------------------------------------ *   02317
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  02318
         BZ    NONLSL0        NO. IGNORE THIS CODE                       02319
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          02320
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           02321
NONLSL0  DS    0H                                                        02322
* ----------------------------------------------------------- SBG 09/00  02323
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               02324
***** --------------- LIMITING FILES ------------------ ***** BELOW *    02325
         TM    PARMFLG3,X'02'     LIMITING FILES?                        02326
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  02327
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               02328
         BZ    INOLIMIT           NOT YET - JUST GO ON                   02329
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     02330
*                                 AND DON'T DO MORE READS OF INPUT TAPE  02331
INOLIMIT DS    0H                                                        02332
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    02333
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    02334
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  02335
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     02336
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     02337
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     02338
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      02339
         L     R7,SAVE7RG3        RESTORE R7                             02340
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     02341
NOLBDADJ DS    0H                                                        02342
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    02343
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02344
*                                                                        02345
*       Since there is a possibility that the WRITE will                 02346
*       not work for one of the output ddnames, we have                  02347
*       to save the total bytes successfully moved to the                02348
*       currently open output tapes.  Also file count for                02349
*       this tape, and block count for this file.                        02350
*                                                                        02351
         MVC   PRVBY,TOTBY        Total bytes before this READ           02352
         MVC   FILECNTP,FILECNT   Total file count before this READ      02353
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ     02354
*                                                                        02355
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02356
         EXCP  INIOB          READ                                       02357
         WAIT  ECB=INECB      WAIT FOR READ                              02358
         TM    INCSW+4,X'01'  WAS TM READ?                               02359
         BO    READIN1        YES                                        02360
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                02361
         BNE   INERR          NO -- ERROR                                02362
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    02363
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  02364
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  02365
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  02366
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  02367
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  02368
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  02369
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  02370
         SR    R2,R3          R2=ACTUAL LENGTH READ                      02371
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              02372
         MVC   BYTESCOH(2),=H'0'  Make sure upper halfword is X'0000'    02373
*                                                                        02374
*  The BYTESMVD field is now a fullword that should contain the number   02375
*  of bytes moved by the currently executed EXCP READ.                   02376
*                                                                        02377
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***         02378
         TM    PARMFLG6,X'20'     Reporting footages?                    02379
         BZ    NOFEET01           No. Don't execute this code            02380
         MVC   BLKSZWRK(4),BYTESMVD   No longer dependent on R2.         02381
*        ST    R2,BLKSZWRK        Fullword arithmetic, save count        02382
         CLC   BLKSZE,BLKSZWRK    Compare to what was there before       02383
         BNL   NOFEET01           Prev BLKSZE not higher than current?   02384
         MVC   BLKSZE,BLKSZWRK    Less, replace with current blocksize   02385
NOFEET01 DS    0H                                                        02386
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***         02387
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below   02388
         TM    PARMFLG6,X'01'     Are we reporting Max-Min blocksizes?   02389
         BZ    NOMNMXRP           No. Skip all this code.                02390
         ST    R1,SAVE1RG1        Yes. Start by saving work reg.         02391
         L     R1,BYTESMVD        Load it with number of bytes moved.    02392
         C     R1,MAXBLK          Bigger than previous maximum?          02393
         BNH   TRYMINBK           No. Don't adjust maxmimum.             02394
         ST    R1,MAXBLK          Yes. Set new maximum.                  02395
TRYMINBK DS    0H                                                        02396
         C     R1,MINBLK          Smaller than previous minimum?         02397
         BNL   TRYNOMOR           No. Don't adjust minimum.              02398
         ST    R1,MINBLK          Yes. Reduce minimum to current quant.  02399
TRYNOMOR DS    0H                                                        02400
         L     R1,SAVE1RG1        Restore work register.                 02401
NOMNMXRP DS    0H                                                        02402
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above   02403
         NI    DATFLAG,FF-X'10'    SHOW REAL DATA HAS BEEN READ          02404
         NI    ISLBLFLG,FF-X'03'   NOT A LABEL UNTIL PROVEN SO           02405
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*         02406
         ST    R7,TOTB7REG        Save BAL Register                      02407
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02408
         LA    R3,TOTBY           POINT REGISTER TO TOTALS COUNTER       02409
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS BLOCK              02410
         L     R7,TOTB7REG        Restore BAL Register                   02411
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*         02412
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             02413
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     02414
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     02415
         ST    R7,R7HXPRT        SAVE R7.                                02416
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            02417
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             02418
         BCTR  R1,0              LOWER BY ONE                            02419
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               02420
         L     R7,R7HXPRT        RESTORE R7.                             02421
NPRTHEX  DS    0H                                                        02422
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             02423
**** ----  BYTE COUNTS ---- BELOW                                        02424
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     02425
         BZ    INNOBYTE       NO, SKIP INCREMENT                         02426
         L     R2,BYTESMVD    LOAD FULLWORD OF BYTES MOVED               02427
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  02428
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  02429
INNOBYTE DS    0H                                                        02430
**** ----  BYTE COUNTS ---- ABOVE                                        02431
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02432
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  02433
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  02434
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  02435
* ------------------------------------------------------------------*    02436
*    Call the LABELCHK program and get the returns.                 *    02437
* ------------------------------------------------------------------*    02438
         L     R15,LABCHENT       Get entry point of called program      02439
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        02440
         LA    R1,PARMFLGS        Point R1 to parm flags.                02441
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    02442
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         02443
         BALR  R14,R15                 Do CALL.                          02444
         ST    R2,SAVELBCK             Address of returned user area     02445
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    02446
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           02447
*                                 A call to LABCHECK overlays INAREA,    02448
*                                 so if a LABCHECK routine alters        02449
*                                 a label, the alteration will be        02450
*                                 written out to the output tapes.       02451
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     02452
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02453
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   02454
         BO    CLOSMALL           Yes. Close all files and finish up.    02455
* ------------------------------------------------------------------*    02456
*        BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  02457
*                             FORMATS, AND SET FLAGS          SBG 04/00  02458
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  02459
*                             PRINT LABEL INFO FOUND.         SBG 04/00  02460
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              02461
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                02462
         BZ    LBLNOCNT                                                  02463
         TM    ISLBLFLG,X'03'     WAS LAST INPUT RECORD A LABEL?         02464
         BZ    LBLNOCNT                                                  02465
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02466
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        02467
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02468
LBLNOCNT DS    0H                                                        02469
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              02470
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02471
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        02472
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           02474
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        02475
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              02476
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              02477
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  02478
*                                                             SBG 04/00  02479
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02480
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  02481
         BZ    READGO1            NO. WE CAN GO ON.                      02482
         TM    ISLBLFLG,X'03'     DID WE JUST READ A LABEL?              02483
         BZ    READGO1            NO DON'T CHECK FOR SL                  02484
         PTMS  NOLABSL            DISPLAY NO SL ON SL MSG                02485
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02486
         CLOSE (LABADDIN)                                                02487
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            02488
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  02489
         EJECT                                                           02490
*  ----------------------------------------------------------------  *   02491
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02492
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       02493
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        02494
*  ----------------------------------------------------------------  *   02495
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               02496
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               02497
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        02498
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             02499
         BZ    STILTAPE                                                  02500
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        02501
         BZ    STILTAPE                                                  02502
         B     WRTTAPMK                                                  02503
STILTAPE DS    0H                                                        02504
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        02505
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    02506
         BZ    DOTHEGET             NO. DO THE FILE GETS.                02507
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 02508
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    02509
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          02510
DOTHEGET DS    0H                                                        02511
*** ---                                                                  02512
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              02513
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   02514
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               02515
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 02516
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   02517
DOGETALW DS    0H                                                        02518
*** ---                                                                  02519
         GET   LABADDIN,EXTLBLIN                                         02520
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    02521
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     02522
*------------------------------------> Hex Print Limit - Below           02523
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     02524
         BZ    NOHXPREX                NO. DON'T ADJUST LIMIT            02525
         CLC   =X'2D2D2D2D454E444F464C4142454C',EXTLBLIN  ASCII eol?     02526
         BE    NOHXPRAX                          Yes. Reset count.       02527
         CLC   =C'----ENDOFLABEL',EXTLBLIN     End of a label file?      02528
         BNE   NOHXPREX                        No. Don't reset count.    02529
NOHXPRAX DS    0H                                                        02530
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           02531
NOHXPREX DS    0H                                                        02532
*------------------------------------> Hex Print Limit - Above           02533
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        02534
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        02535
         CLC   =X'2D2D2D2D454E444F464C4142454C484541444552',EXTLBLIN     02536
         BE    ENDHEADR       ASCII ----ENDOFLABELHEADER                 02537
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        02538
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           02539
         CLC   =X'2D2D2D2D454E444F464C4142454C545241494C4552',EXTLBLIN   02540
         BE    ENDTRAIL       ASCII ----ENDOFLABELTRAILER                02541
* ---------------------------------  EOV2EOF  BELOW  ------------- *     02542
      CLC =X'2D2D2D2D454E444F464C4142454C545241494C4552454F56',EXTLBLIN  02543
         BE    TRAIXEOV       ASCII ----ENDOFLABELTRAILEREOV             02544
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     02545
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            02546
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          02547
TRAIXEOV DS    0H                                                        02548
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     02549
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               02550
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      02551
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             02552
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             02553
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           02554
NTRALEOV DS    0H                                                        02555
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     02556
*                                                                        02557
INEXTALL DS    0H            All allowed EXTLBLIN cards go thru here.    02558
*                                                                        02559
* ------     Hex Print records from External Labels    ----  below       02560
         TM    PARMFLG5,X'20'       ARE WE DOING HEX PRINT?              02561
         BZ    EXTNOPRT             NO, SO BYPASS THIS                   02562
         ST    R7,R7HXPRT           SAVE R7.                             02563
         BAL   R7,HEXPRNEX          PRINT CURRENT RECORD IN HEX.         02564
         L     R1,BCTLIMIT          LOAD REGISTER FOR DECREMENT          02565
         BCTR  R1,0                 LOWER BY ONE                         02566
         ST    R1,BCTLIMIT          PUT IT BACK FOR NEXT PASS            02567
         L     R7,R7HXPRT           RESTORE R7.                          02568
EXTNOPRT DS    0H                                                        02569
* ------     Hex Print records from External Labels    ----  above       02570
* -- >                                                                   02571
ASCIITST DS    0H                                                        02572
         CLI   EXTLBLIN,X'56'              ASCII V                       02573
         BE    ISASCIIG                                                  02574
         CLI   EXTLBLIN,X'45'              ASCII E                       02575
         BE    ISASCIIG                                                  02576
         CLI   EXTLBLIN,X'48'              ASCII H                       02577
         BE    ISASCIIG                                                  02578
         CLI   EXTLBLIN,X'55'              ASCII U                       02579
         BE    ISASCIIG                                                  02580
         CLI   EXTLBLIN,X'2D'              ASCII DASH                    02581
         BE    ISASCIIG                                                  02582
         B     ISNTASCI                                                  02583
ISASCIIG DS    0H                                                        02584
         OI    ASCIIFLG,X'01'              ASSUME ASCII                  02585
         OI    EXASCFLG,X'01'              ASSUME ASCII                  02586
         B     ASCIITSE                                                  02587
ISNTASCI DS    0H                                                        02588
         NI    ASCIIFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02589
         NI    EXASCFLG,FF-X'01'           TURN OFF ASCII LABEL INDIC    02590
ASCIITSE DS    0H                                                        02591
* -- >                                                                   02592
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1?                   02593
         BE    NASCVOL1                    YES. TREAT AS A VOL1.         02594
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  02595
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            02596
NASCVOL1 DS    0H                                                        02597
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    02598
*** --- >>  Security off?  -  below                                      02599
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02600
         BZ    NOSECV01             No. Don't affect these fields.       02601
         TM    ASCIIFLG,X'01'       Only turn off security if ASCII.     02602
         BO    NOSECV01             Otherwise, no security byte here.    02603
         MVI   EXTLBLIN+10,X'20'    Move in ASCII blank.                 02604
NOSECV01 DS    0H                                                        02605
*** --- >>  Security off?  -  above                                      02606
         B     GOTVOL01             PROCESS THE VOL1                     02607
NLABVOL1 DS    0H                                                        02608
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                02609
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1?                   02610
         BE    NASCHDR1                    YES. TREAT AS A HDR1.         02611
         CLC   EXTLBLIN(4),=C'HDR1'                                      02612
         BNE   NLABHDR1                                                  02613
NASCHDR1 DS    0H                                                        02614
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              02615
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02616
*** --- >>  Security off?  -  below                                      02617
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02618
         BZ    NOSCEHE2             No. Don't affect these fields.       02619
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02620
         BO    NOSCEHA1             Yes, turn off appropriate security.  02621
         B     NOSCEHE1             Otherwise do it in EBCDIC.           02622
NOSCEHA1 DS    0H                                                        02623
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02624
         B     NOSCEHE2                                                  02625
NOSCEHE1 DS    0H                                                        02626
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02627
NOSCEHE2 DS    0H                                                        02628
*** --- >>  Security off?  -  above                                      02629
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      02630
         B     ENDIBMSL                                                  02631
NLABHDR1 DS    0H                                                        02632
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2?                   02633
         BE    NASCHDR2                    YES. TREAT AS A HDR2.         02634
         CLC   EXTLBLIN(4),=C'HDR2'                                      02635
         BNE   NLABHDR2                                                  02636
NASCHDR2 DS    0H                                                        02637
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              02638
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    02639
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      02640
         B     ENDIBMSL                                                  02641
NLABHDR2 DS    0H                                                        02642
***** ----- *****                                                        02643
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1?                   02644
         BE    NASCEOF1                    YES. TREAT AS A EOF1.         02645
         CLC   EXTLBLIN(4),=C'EOF1'                                      02646
         BNE   NLABEOF1                                                  02647
NASCEOF1 DS    0H                                                        02648
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              02649
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02650
*** --- >>  Security off?  -  below                                      02651
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02652
         BZ    NOSCEEE2             No. Don't affect these fields.       02653
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02654
         BO    NOSCEEA1             Yes, turn off appropriate security.  02655
         B     NOSCEEE1             Otherwise do it in EBCDIC.           02656
NOSCEEA1 DS    0H                                                        02657
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02658
         B     NOSCEEE2                                                  02659
NOSCEEE1 DS    0H                                                        02660
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02661
NOSCEEE2 DS    0H                                                        02662
*** --- >>  Security off?  -  above                                      02663
         B     ENDIBMSL                                                  02664
NLABEOF1 DS    0H                                                        02665
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2?                   02666
         BE    NASCEOF2                    YES. TREAT AS A EOF2.         02667
         CLC   EXTLBLIN(4),=C'EOF2'                                      02668
         BNE   NLABEOF2                                                  02669
NASCEOF2 DS    0H                                                        02670
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              02671
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02672
         B     ENDIBMSL                                                  02673
NLABEOF2 DS    0H                                                        02674
***** ----- *****                                                        02675
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1?                   02676
         BE    NASCEOV1                    YES. TREAT AS A EOV1.         02677
         CLC   EXTLBLIN(4),=C'EOV1'                                      02678
         BNE   NLABEOV1                                                  02679
NASCEOV1 DS    0H                                                        02680
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             02681
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02682
*** --- >>  Security off?  -  below                                      02683
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  02684
         BZ    NOSCEVE2             No. Don't affect these fields.       02685
         TM    ASCIIFLG,X'01'       Are we dealing ASCII labels?         02686
         BO    NOSCEVA1             Yes, turn off appropriate security.  02687
         B     NOSCEVE1             Otherwise do it in EBCDIC.           02688
NOSCEVA1 DS    0H                                                        02689
         MVI   EXTLBLIN+53,X'20'    Move in ASCII blank.                 02690
         B     NOSCEVE2                                                  02691
NOSCEVE1 DS    0H                                                        02692
         MVI   EXTLBLIN+53,C'0'     Move in EBCDIC zero.                 02693
NOSCEVE2 DS    0H                                                        02694
*** --- >>  Security off?  -  above                                      02695
         B     ENDIBMSL                                                  02696
NLABEOV1 DS    0H                                                        02697
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2?                   02698
         BE    NASCEOV2                    YES. TREAT AS A EOV2.         02699
         CLC   EXTLBLIN(4),=C'EOV2'                                      02700
         BNE   NLABEOV2                                                  02701
NASCEOV2 DS    0H                                                        02702
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             02703
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             02704
         B     ENDIBMSL                                                  02705
NLABEOV2 DS    0H                                                        02706
ENDIBMSL DS    0H                                                        02707
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                02708
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   02709
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              02710
         CLC   EXTLBLIN(3),=X'484452'     ASCII HDR?                     02711
         BE    WRTLABEL                   TREAT SAME AS EBCDIC HDR       02712
* -------------- EOV2EOF BELOW ----------------- *                       02713
ISITEOV  DS    0H                                                        02714
         CLC   EXTLBLIN(3),=X'454F56'     ASCII EOV?                     02715
         BE    ISASCEOV                   TREAT AS ASCII EOV             02716
         CLC   EXTLBLIN(3),=C'EOV'                                       02717
         BNE   NOEOF2V                                                   02718
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02719
         BZ    NOEOF2V                                                   02720
         MVC   EXTLBLIN(3),=C'EOF'                                       02721
         PTMS  EOVCHG                     MOVE IN MESSAGE                02722
         B     NOEOF2V                                                   02723
ISASCEOV DS    0H                                                        02724
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                02725
         BZ    NOEOF2V                                                   02726
         MVC   EXTLBLIN(3),=X'454F46'     PUT IN ASCII EOF INSTEAD       02727
         PTMS  EOVCHG                     MOVE IN MESSAGE                02728
NOEOF2V  DS    0H                                                        02729
* -------------- EOV2EOF ABOVE ----------------- *                       02730
* ----------                                                             02731
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      02732
         BZ    BLNOCORR             NO. SKIP THIS.                       02733
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       02734
         BE    CORBLKCT                                                  02735
         CLC   EXTLBLIN(4),=X'454F4631'  DO ON ASCII EOF1                02736
         BE    CORBLKCT                                                  02737
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       02738
         BE    CORBLKCT                                                  02739
         CLC   EXTLBLIN(4),=X'454F5631'  DO ON ASCII EOV1                02740
         BE    CORBLKCT                                                  02741
BLNOCORR B     EOFOREOV                                                  02742
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          02743
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                02744
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         02745
         TM    PARMFLG3,X'80'       FIXING LABELS?                       02746
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       02747
         MVC   EXTLBLIN(80),HDR2SAV                                      02748
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDR?                    02749
         BNE   MAKEEOF2                                                  02750
         MVC   EXTLBLIN(3),=X'454F46'      REPLACE IT WITH ASCII EOF.    02751
         B     NOMKEOF2                                                  02752
MAKEEOF2 DS    0H                                                        02753
         MVC   EXTLBLIN(3),=C'EOF'                                       02754
NOMKEOF2 DS    0H                                                        02755
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          02756
* ----------                                                             02757
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         02758
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          02759
         CLC   EXTLBLIN(2),=X'454F'                                      02760
         BE    WRTLABEL                                                  02761
**** ---- ****                                                           02762
         CLC   EXTLBLIN(3),=X'55484C'                                    02763
         BE    ISASUHL                                                   02764
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  02765
         BNE   NOTLUHL                                                   02766
ISASUHL  DS    0H                                                        02767
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     02768
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  02769
NOTLUHL  DS    0H                                                        02770
**** ---- ****                                                           02771
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 02772
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             02773
         CLC   EXTLBLIN(3),=X'55544C'     ASCII UTL.                     02774
         BE    WRTLABEL                                                  02775
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         02776
ENDHEADR DS    0H                                                        02777
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   02778
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  02779
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             02780
*** -----                                                                02781
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            02782
         BZ    NOEODFL1                                                  02783
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     02784
         B     ENDTRAIL                                                  02785
NOEODFL1 DS    0H                                                        02786
*** -----                                                                02787
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            02788
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         02789
ENDTRAIL DS    0H                                                        02790
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         02791
         A     R0,=F'1'         ADD 1 TO COUNT                           02792
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  02793
*** ---                                                                  02794
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     02795
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              02796
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      02797
         BL    ENDNOLIM             NOT YET. GET OUT.                    02798
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       02799
ENDNOLIM DS    0H                                                        02800
*** ---                                                                  02801
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  02802
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     02803
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  02804
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              02805
         B     WRTTAPMK                                                  02806
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02807
CORBLKCT DS    0H                                                        02808
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     02809
         BZ    NOCORBLK          NO. BYPASS.                             02810
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   02811
         BZ    NOCORBLK          NO. BYPASS.                             02812
*** ---  FIXING LABELS  --- ***                                          02813
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 02814
         BZ    NOFIXL1           NO. DON'T FIX.                          02815
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               02816
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  02817
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            02818
         CLC   EXTLBLIN(4),=X'48445231'   ASCII HDR1?                    02819
         BNE   NOTASCHD                   NO.                            02820
         MVC   EXTLBLIN(3),=X'454F46'     YES. MOVE IN ASCII EOF         02821
         B     NOFIXL1                    AND GET OUT.
NOTASCHD DS    0H                                                        02822
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              02823
NOFIXL1  DS    0H                                                        02824
*** ---  FIXING LABELS  --- ***                                          02825
         CLC   EXTLBLIN(4),=X'454F5631'   ASCII EOV1?                    02826
         BE    NOFIXL1A                                                  02827
         CLC   EXTLBLIN(4),=X'454F4631'   ASCII EOF1?                    02828
         BNE   NOFIXL1B                                                  02829
NOFIXL1A DS    0H                                                        02830
         ST    R5,R5HXPRT              Save register.                    02831
         L     R5,SAVTRTCS             Point to translation table CSECT  02832
         USING TRTCSECT,R5                                               02833
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   02834
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          02835
         L     R5,R5HXPRT              Restore R5                        02836
         DROP  R5                                                        02837
         MVC   EXTLBLIN+54(6),BLKCNASC+4                                 02838
         B     NOFIXL2                      AND NOT THE EBCDIC ONE       02839
NOFIXL1B DS    0H                                                        02840
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      02841
NOFIXL2  DS    0H                                                        02842
         STM   R2,R3,SAVE2TO3                                            02843
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     02844
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02845
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02846
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02847
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02848
         LM    R2,R3,SAVE2TO3                                            02849
NOCORBLK B     EOFOREOV                                                  02850
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    02851
GOTVOL01 DS    0H                                                        02852
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    02853
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         02854
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        02855
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              02856
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         02857
         MVC   VOLNEW(6),VOLSTG1       OVERLAY NEW VOLSER FOR ALL OUTS   02858
NOOVLALL DS    0H                                                        02859
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        02860
         B     WRTLABEL                                                  02861
WRTLABEL OI    WRLBLFLG,X'01'                                            02862
* --------------- PRINT LABEL TO BE WRITTEN ------ below ------ *        02863
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       02864
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          02865
* ----------------------------------------------------------------- *    02866
         L     R15,PRTLBENT       Get entry point of called program      02867
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       02868
         LA    R1,PARMFLGS        Point R1 to parm flags.                02869
         L     R3,=A(EXTLBLIN)    Point R3 to address of input area.     02870
         BALR  R14,R15                 Do CALL.                          02871
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     02872
*        MVC   EXTLBLIN(80),0(R3)      Overlay 80 bytes of EXTLBLIN      02873
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    02874
* ----------------------------------------------------------------- *    02875
NOPRTEXT DS    0H             Don't print external label on report       02876
* --------------- PRINT LABEL TO BE WRITTEN ------ above ------ *        02877
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02878
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          02879
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    02880
         B     WRITE1         WRITE LABEL RECORD                         02881
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             02882
WRTTAPMK DS    0H                                                        02883
*** ----------------                                                     02884
         TM    INEODFLG,X'02'                                            02885
         BZ    NOEODNOW                                                  02886
         TM    WRLBLFLG,X'04'                                            02887
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  02888
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       02889
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                02890
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        02891
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   02892
NOEODNOW DS    0H                                                        02893
*** ----------------                                                     02894
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           02895
         B     WRITE1         WRITE TAPE MARK                            02896
* ------------------ SPECIAL ROUTINES ------------------------------- *  02897
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    02898
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         02899
         B     READIN             AND GO BACK WHERE YOU STARTED          02900
* ------------------ SPECIAL ROUTINES ------------------------------- *  02901
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   02902
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    02903
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02904
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    02905
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       02906
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    02907
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  02908
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              02909
         B     CLOSMALL          FINISHED, GET OUT.                      02910
NOFIXLBL DS    0H                                                        02911
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  02912
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       02913
         B     READIN2        WRITE OUTPUTS AND FINISH                   02914
* ------------------------------------------------------------------- *  02915
*                                                                        02916
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           02917
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        02918
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      02919
*      ALREADY.                                                          02920
*                                                                        02921
* ------------------ SPECIAL ROUTINES ------------------------------- *  02922
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   02923
         EJECT                                                           02924
READGO1  DS    0H                                                        02925
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          02926
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           02927
         BZ    READNCNT                                                  02928
         TM    ISLBLFLG,X'03'  LAST READ A LABEL?                        02929
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        02930
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           02931
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      02932
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              02933
READNCNT DS    0H                                                        02934
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          02935
**---->            LABEL STRIPPING CODE          BELOW                   02936
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               02937
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        02938
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       02939
         BZ    RDNOSTRP           NO IT WASN'T                           02940
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   02941
RDNOSTRP DS    0H                                                        02942
**---->            LABEL STRIPPING CODE          ABOVE                   02943
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  02944
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        02945
         ST    R7,STOR7REG                                               02946
         L     R7,BLOKCNT                                                02947
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              02948
         ST    R7,BLOKCNT                                                02949
         L     R7,STOR7REG                                               02950
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       02951
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   02952
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           02953
         B     READINGO         CONTINUE REPORTING FILE END AND WRITE.   02954
NOINITT1 DS    0H                                                        02955
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       02956
         B     WRITE1           CONTINUE                                 02957
*                                                             SBG 04/00  02958
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02959
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  02960
**** ------------------- Leading Tape Marks ------- below                02961
         TM    DATFLAG,X'10'    Has any real data been read?             02962
         BZ    NOSKLTME         Yes, bypass this entire routine.         02963
         TM    PARMFLG1,X'20'   Are we skipping LTMs?                    02964
         BZ    NOSKLTMO         PARM is off, we copy them.               02965
         AP    LTMCOUNT,=P'1'   Increment counter                        02966
         L     R0,LTMBINAD      Increment binary counter                 02967
         A     R0,=F'1'                                                  02968
         ST    R0,LTMBINAD                                               02969
         ADRSMS                                                          02970
         MVC   LTMRNUM(11),LTMCTPAT             Edit pattern             02971
         ED    LTMRNUM(11),LTMCOUNT+1           Put number in report     02972
         MVC   LTMRPTI,SKIPPED      Report tape mark skipped.            02973
         PTMSN LTMRPT               Write report line.                   02974
         DROPMS                                                          02975
         B     READIN           Skip this tapemark.                      02976
NOSKLTMO DS    0H                                                        02977
         TM    PARMFLG2,X'08'       Is this run READ only?               02978
         BO    NOSKLTMR                                                  02979
         MVFMS LTMRPTI,COPIED       Report tape mark copied.             02980
         B     NOSKLTME                                                  02981
NOSKLTMR DS    0H                                                        02982
         MVFMS LTMRPTI,READDD       Report tape mark read.               02983
NOSKLTME DS    0H                                                        02984
**** ------------------- Leading Tape Marks ------- above                02985
* ------------------------- ADD LABEL TO NL CODE ----------- *           02986
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 02987
         BZ    NONLSL1          NO.  BYPASS.                             02988
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            02989
*** ---                                                                  02990
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         02991
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    02992
*                               DO NOT COLLECT 200 DOLLARS.              02993
*** ---                                                                  02994
NONLSL1  DS    0H                                                        02995
* ------------------------- ADD LABEL TO NL CODE ----------- *           02996
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  02997
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         02998
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        02999
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        03000
         BO    WRCTLHDR         YES. PUT IT OUT.                         03001
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        03002
         BO    WRCTLEOF         YES. PUT IT OUT.                         03003
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        03004
         BO    WRCTLEOV         YES. PUT IT OUT.                         03005
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       03006
WRCTLHDR DS    0H                                                        03007
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03008
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  03009
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03010
         BZ    WRCTLAS1         No. Don't translate the control card.    03011
         ST    R5,R5HXPRT       Yes.   Save register.                    03012
         L     R5,SAVTRTCS             Point to translation table CSECT  03013
         USING TRTCSECT,R5                                               03014
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03015
         L     R5,R5HXPRT              Restore R5                        03016
         DROP  R5                                                        03017
WRCTLAS1 DS    0H                   Branch here if don't use ASCII.      03018
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03019
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03020
WRCTLEOF DS    0H                                                        03021
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03022
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  03023
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03024
         BZ    WRCTLAS2         No. Don't translate the control card.    03025
         ST    R5,R5HXPRT       Yes.   Save register.                    03026
         L     R5,SAVTRTCS             Point to translation table CSECT  03027
         USING TRTCSECT,R5                                               03028
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03029
         L     R5,R5HXPRT              Restore R5                        03030
         DROP  R5                                                        03031
WRCTLAS2 DS    0H                   Branch here if don't use ASCII.      03032
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03033
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03034
WRCTLEOV DS    0H                                                        03035
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03036
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  03037
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             03038
         BZ    WRCTLAS4         No. Don't translate the control card.    03039
         ST    R5,R5HXPRT       Yes.   Save register.                    03040
         L     R5,SAVTRTCS             Point to translation table CSECT  03041
         USING TRTCSECT,R5                                               03042
         TR    LLINE(80),TRTE2A        Translate LLINE area to ASCII     03043
         L     R5,R5HXPRT              Restore R5                        03044
         DROP  R5                                                        03045
WRCTLAS4 DS    0H                   Branch here if don't use ASCII.      03046
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03047
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          03048
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          03049
NOCNTLWR DS    0H                                                        03050
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  03051
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  03052
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  03053
         MVFMS LTMRPTI,SKIPPED,OPC=CLC   WE SKIP LEADING TAPEMARKS?      03054
         BNE   RDNOSKIP                                       SBG 03/00  03055
         AP    LTMCOUNT,=P'1'                                            03056
         L     R0,LTMBINAD                                               03057
         A     R0,=F'1'                                                  03058
         ST    R0,LTMBINAD                                               03059
         ADRSMS                                                          03060
         MVC   LTMRNUM(11),LTMCTPAT                                      03061
         ED    LTMRNUM(11),LTMCOUNT+1                                    03062
         PTMSN LTMRPT            INDICATE LEADING TM SKIPPED             03063
         DROPMS                                                          03064
         B     READIN         DO ANOTHER READ                 SBG 03/00  03065
RDNOSKIP DS    0H                                             SBG 03/00  03066
         AP    LTMCOUNT,=P'1'                                            03067
         L     R0,LTMBINAD                                               03068
         A     R0,=F'1'                                                  03069
         ST    R0,LTMBINAD                                               03070
         ADRSMS                                                          03071
         MVC   LTMRNUM(11),LTMCTPAT                                      03072
         ED    LTMRNUM(11),LTMCOUNT+1                                    03073
         PTMSN LTMRPT            INDICATE LEADING TM COPIED   SBG 03/00  03074
         DROPMS                                                          03075
         B     MARKFILE                                       SBG 03/00  03076
READINGO DS    0H                                             SBG 04/00  03077
*------------------------------------> HEX PRINT LIMIT - BELOW           03078
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     03079
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            03080
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           03081
NOHXPRST DS    0H                                                        03082
*------------------------------------> HEX PRINT LIMIT - ABOVE           03083
         ST    R7,STOR7REG                                               03084
         L     R7,FILECNT                                                03085
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  03086
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03087
         ADRSMS                                                          03088
         UNPK  FILEDONE+6(5),DWORD+5(3)    UNPACK FILE NUMBER            03089
         MVC   FILNOSAV(5),FILEDONE+6      SAVE DISPLAY NUMBER           03090
         DROPMS                                                          03091
         ST    R7,FILECNT                                                03092
         STH   R7,FILENO      Save File number for FOOTAGE routine       03093
         L     R7,BLOKCNT                                                03094
         ST    R7,NUMBLKS     Save Block Count for FOOTAGE routine       03095
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03096
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03097
         MVFMS FILEDONE+21(7),DWORD+4(4),OPC=UNPK  UNPACK BLOCK COUNT    03098
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            03099
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03100
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        03101
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        03102
         BZ    MARKNCNT           NO-SKIP ROUTINE                        03103
         ADRSMS                                                          03104
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   03105
         MVC   FILECONT,=C'CONTAINING'                                   03106
         DROPMS                                                          03107
         L     R4,DBINH           LOAD REG WITH HI ORDER                 03108
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03109
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03110
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03111
         L     R4,DBINL           LOAD REG WITH LOW ORDER                03112
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03113
         AP    QWORD,DWORD        AND ADD IT IN                          03114
         MVFMS FILEBYTE,QWORD+6,OPC=ED   DISPLAY COUNT IN LINE           03115
** ----                                                                  03116
         LM    R4,R5,TOTBYTES                                            03117
         A     R5,DBINL            LOW ORDER COUNT                       03118
         BNO   MARKNOVR            B IF NO OVERFLOW                      03119
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03120
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03121
MARKNOVR DS    0H                                                        03122
         A     R4,DBINH            HIGH ORDER                            03123
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               03124
** ----                                                                  03125
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             03126
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  03127
         LM    R4,R5,LABBYTES                                            03128
         A     R5,LABINL           LOW ORDER COUNT                       03129
         BNO   MARKNOVL            B IF NO OVERFLOW                      03130
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03131
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03132
MARKNOVL DS    0H                                                        03133
         A     R4,LABINH           HIGH ORDER                            03134
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               03135
* - >                                                                    03136
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          03137
         BZ    NOSEPLBL                                                  03138
         ADRSMS                                                          03139
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03140
         MVC   FILECUMT,=C'CUM LABEL:'                                   03141
         DROPMS                                                          03142
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   03143
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03144
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03145
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03146
         CVD   R5,DWORD          LOW ORDER WORD                          03147
         AP    QWORD,DWORD       AND ADD IT IN                           03148
         MVFMS FILETBYE,QWORD+6,OPC=ED  MAKE NUMBER DISPLAYABLE          03149
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        03150
NOSEPLBL DS    0H                                                        03151
* - >                                                                    03152
         B     MARKNOLB                                                  03153
MARKISNL DS    0H                                                        03154
         TM    ISLBLFLG,X'03'      CAME FROM READING LABELS?             03155
         BO    MARKNOLB                                                  03156
         LM    R4,R5,FILBYTES                                            03157
         A     R5,DBINFL           LOW ORDER COUNT                       03158
         BNO   MARKNOVF            B IF NO OVERFLOW                      03159
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  03160
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   03161
MARKNOVF DS    0H                                                        03162
         A     R4,DBINFH           HIGH ORDER                            03163
         STM   R4,R5,FILBYTES                                            03164
* - >                                                                    03165
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          03166
         BZ    NOSEPDAT                                                  03167
         ADRSMS                                                          03168
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03169
         MVC   FILECUMT,=C'CUM DATA :'                                   03170
         DROPMS                                                          03171
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   03172
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03173
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03174
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03175
         CVD   R5,DWORD          LOW ORDER WORD                          03176
         AP    QWORD,DWORD       AND ADD IT IN                           03177
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03178
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        03179
NOSEPDAT DS    0H                                                        03180
* - >                                                                    03181
MARKNOLB DS    0H                                                        03182
** ----                                                                  03183
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                03184
         BZ    MARKNCN2           NO-SKIP ROUTINE                        03185
* - >                                                                    03186
         ADRSMS                                                          03187
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   03188
         MVC   FILECUMT,=C'CUM TOTAL:'                                   03189
         DROPMS                                                          03190
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   03191
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           03192
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        03193
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   03194
         CVD   R5,DWORD          LOW ORDER WORD                          03195
         AP    QWORD,DWORD       AND ADD IT IN                           03196
         MVFMS FILETBYE,QWORD+6,OPC=ED   MAKE NUMBER DISPLAYABLE         03197
* - >                                                                    03198
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                03199
MARKNCNT DS    0H                                                        03200
         MVFMS FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      03201
MARKNCN2 DS    0H                                                        03202
         MVFMS FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      03203
MARKNCNE DS    0H                                                        03204
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        03205
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - below   03206
         TM    PARMFLG6,X'01'               Reporting Min-Max blksize?   03207
         BZ    XMINMAX                      No. Skip all this code.      03208
         STM   R1,R5,SAVE1TO5               Save regs                    03209
         L     R1,MINBLK                    Minimum blksize for file     03210
         XC    DWORD,DWORD                  Clear DWORD to zeros.        03211
         CVD   R1,DWORD                     Convert to decimal.          03212
         OI    DWORD+7,X'0F'                Make sign readable.          03213
         ADRSMS                                                          03214
*        UNPK  MNMXMIN+1(7),DWORD+4(4)      Display number in message    03215
         MVC   MNMXMIN(8),MXPATTRN                                       03216
         ED    MNMXMIN+1(8),DWORD+4                                      03217
         DROPMS                                                          03218
         L     R1,MAXBLK                    Maximum blksize for file     03219
         XC    DWORD,DWORD                  Clear DWORD to zeros.        03220
         CVD   R1,DWORD                     Convert to decimal.          03221
         OI    DWORD+7,X'0F'                Make sign readable.          03222
         ADRSMS                                                          03223
*        UNPK  MNMXMAX+1(7),DWORD+4(4)      Display number in message    03224
         MVC   MNMXMAX(8),MXPATTRN                                       03225
         ED    MNMXMAX+1(8),DWORD+4                                      03226
         MVC   MNMXFNUM(5),FILNOSAV         Display saved file number    03227
         CLC   MNMXMIN+1(7),=C'8435455'     End of input tape?           03228
         BNE   NOPRMSXE                     No. Print msg unchanged.     03229
         MVC   MNMXMIN+1(7),=C'0000000'     Make message reasonable.     03230
         B     NOPRMSXF                     And don't even print it.     03231
NOPRMSXE DS    0H                                                        03232
         PTMSN MNMXMSG1                     Print message                03233
NOPRMSXF DS    0H                                                        03234
         DROPMS                                                          03235
         LM    R1,R5,SAVE1TO5               Restore work regs            03236
XMINMAX  B     XMINMAX1                                                  03237
MXPATTRN DC    X'4020202020202120'          8 bytes of pattern           03238
XMINMAX1 DS    0H                                                        03239
* ----<>----<>---->>:  Minimum and Maximum Blocksize Reporting - above   03240
         PTMS  FILEDONE            WRITE IT                              03241
         TM    LBLFLAG,X'08'       INITTED HDR1 SEEN?                    03242
         BO    WRITE1              YES. GO DIRECTLY TO WRITE IT.         03243
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        03244
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        03245
         BZ    MARKNTOT           NO-SKIP ROUTINE                        03246
         ADRSMS                                                          03247
         MVC   FILECONT,=C'          '                                   03248
         MVC   FILECUMT,=C'          '                                   03249
         DROPMS                                                          03250
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              03251
         ST    R4,DBINH            ZERO BYTE COUNT                       03252
         ST    R4,DBINL            ZERO BYTE COUNT                       03253
         ST    R4,LABINH           ZERO BYTE COUNT                       03254
         ST    R4,LABINL           ZERO BYTE COUNT                       03255
         ST    R4,DBINFH           ZERO BYTE COUNT                       03256
         ST    R4,DBINFL           ZERO BYTE COUNT                       03257
MARKNTOT DS    0H                                                        03258
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        03259
MARKFILE DS    0H                                                        03260
* -- >      Max - Min reporting    -   below                             03261
         TM    PARMFLG6,X'01'               MINMAX on?                   03262
         BZ    NOMXMNRS                     No. No reset necessary.      03263
         MVC   MAXBLK,=F'0'                 Start small - RESET MAX      03264
         MVC   MINBLK,=F'268435455'         Start big   - RESET MIN      03265
NOMXMNRS DS    0H                                                        03266
* -- >      Max - Min reporting    -   above                             03267
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              03268
         ST    R7,BLOKCNT                                                03269
         L     R7,FILECNT                                                03270
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       03271
         ST    R7,FILECNT                                                03272
         L     R7,STOR7REG                                               03273
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  03274
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  03275
*                                                                        03276
* ->->-> -----------  FOOTAGE REPORTING  -----  below  ----- ***         03277
         TM    PARMFLG6,X'20'     Reporting footages?                    03278
         BZ    NOFEET02           No. Don't execute this code            03279
         LA    R1,LABELTYP        Point to footage work area             03280
         L     R15,FOOTGENT       Load entry point for FOOTAGE routine   03281
         BALR  R14,R15            Call FOOTAGE                           03282
*                                 FOOTAGE workarea has now been updated  03283
         ST    R7,SAVE7RG6                                               03284
         LA    R7,0                                                      03285
         LH    R7,FILENO                                                 03286
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL             03287
         L     R7,SAVE7RG6                                               03288
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03289
         ADRSMS                                                          03290
         UNPK  FOOTMNUM(5),DWORD+5(3)           UNPACK FILE              03291
         MVC   FOOTMFT,FILEFT                                            03292
         MVC   FOOTMCFT,REELFT                                           03293
         DROPMS                                                          03294
*  TEST TEST TEST TEST TEST TEST - below                                 03295
FEETDIAG DS    0H                                                        03296
         TM    PARMFLG6,X'40'     Diagnostics wanted?                    03297
         BZ    NOFEETDI           Not requested. Skip printing them.     03298
         STM   R4,R5,SAV45MSG     Register save                          03299
         USING MSGCSECT,R5,R4                                            03300
         L     R5,=V(MSGCSECT)          Load Messages CSECT              03301
         LA    R4,4095(,R5)             Addressability                   03302
         LA    R4,1(,R4)                                                 03303
         HEX   FOOTMFIL+2,2,FILENO      File Number from FOOTAGE block   03304
         HEX   FOOTMFIL+8,4,BLKSZE      Block Size  from FOOTAGE block   03305
         HEX   FOOTMFIL+18,4,NUMBLKS    Block Count from FOOTAGE block   03306
         HEX   FOOTMFIL+28,4,CUMTOTAL   Running Total in FOOTAGE block   03307
         MVC   FOOTMFIL+37(10),FILEFT                                    03308
         MVC   FOOTMFIL+47(10),REELFT                                    03309
         LM    R4,R5,SAV45MSG     Register restore                       03310
         DROP  R5,R4                                                     03311
NOFEETDI DS    0H                                                        03312
*  TEST TEST TEST TEST TEST TEST - above                                 03313
         ADRSMS                                                          03314
         CLC   FILEDONE+21(7),=C'0000000'                                03315
         BE    NOLASTFT                                                  03316
         PTMSN FOOTMSG1                                                  03317
NOLASTFT DS    0H                                                        03318
         DROPMS                                                          03319
         XC    BLKSZE,BLKSZE  Set max block size to 0 in footage block   03320
NOFEET02 DS    0H                                                        03321
* ->->-> -----------  FOOTAGE REPORTING  -----  above  ----- ***         03322
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          03323
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             03324
         BZ    MARKFILA          NO - SKIP THIS CODE                     03325
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     03326
         BNL   MARKFILA          NO - NO RESTRICTIONS                    03327
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     03328
MARKFILA DS    0H                                                        03329
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          03330
         TM    PARMFLG4,X'02'   Stripping labels?                        03331
         BZ    MARKSTRX         no - bypass strip-related code           03332
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                03333
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  03334
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     03335
         B     READIN           YES. SKIP WRITING THE T.M. TOO           03336
MARKSTRX DS    0H                                                        03337
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  03338
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  03339
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  03340
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  03341
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           03342
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  03343
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  03344
         B     WRITE1         GO WRITE TM TO OUTPUTS                     03345
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  03346
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  03347
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  03348
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  03349
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  03350
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  03351
*                                                             SBG 04/00  03352
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  03353
INEODATA DS    0H                                                        03354
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       03355
*                                                                        03356
READIN2  DS    0H                                                        03357
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       03358
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      03359
         BZ    READ2GO           NO. BYPASS THIS CODE.                   03360
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  03361
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           03362
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              03363
         BZ    NOEXTMK           NO                                      03364
         B     WRTTAPMK                                                  03365
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           03366
         BZ    READ2GO           NO. BYPASS REST OF CODE.                03367
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          03368
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    03369
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    03370
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         03371
READ2STP DS    0H                                                        03372
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            03373
READ2GO  DS    0H                                                        03374
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       03375
         OI    FLAG2A,EOV        INDICATE EOV ON INPUT                   03376
* --- >>>  ------------------ below -------- Skip writing last T.M.      03377
* -------------------------------------------------------------- *       03378
*            When stripping labels, somehow an extra             *       03379
*            tape mark gets written.  This is a kludge           *       03380
*            to correct that.....                                *       03381
* -------------------------------------------------------------- *       03382
         TM    PARMFLG4,X'02'    Stripping Labels?                       03383
         BZ    READ2GNS          No. don't skip writing last t.m.        03384
*        MVC   LINE(133),LINE-1       CLEAR LINE                         03385
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              03386
*        PUT   SYSPRINT,LINE                                             03387
         B     WRITE17           Do not write the extra tape mark        03388
READ2GNS DS    0H                                                        03389
* --- >>>  ------------------ above -------- Skip writing last T.M.      03390
         B     WRITE1                                                    03391
         SPACE 3                                                         03392
* -------------------- Code for Initting Tapes ---------->>>>> below     03393
TLITWRIT DS    0H                                                        03394
         TM    PARMFLG3,X'01'                                            03395
         BZ    TLITWRIE                                                  03396
TLITREW1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    03397
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         03398
         BO    TLITREW2                YES. SET WRITE CCW BACK.          03399
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        03400
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               03401
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    03402
TLITREW2 DS    0H                      ALREADY DID THE REWIND.           03403
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  03404
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            03405
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          03406
TLITSKP1 DS    0H                                                        03407
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              03408
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        03409
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     03410
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          03411
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     03412
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          03413
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    03414
         MVC   EXTLBLIN+41(10),TAPEOWN   And the Tape Owner if any       03415
* --> Hex printing - below                                               03416
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03417
         BZ    NPRHINT1                No. Bypass it.                    03418
         ST    R7,R7HXPRT              Save BAL register.                03419
         BAL   R7,HEXPRNEX             Hex print from external labels.   03420
         L     R7,R7HXPRT              Restore BAL register.             03421
NPRHINT1 DS    0H                                                        03422
* --> Hex printing - above                                               03423
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03424
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        03425
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        03426
TLITSKP2 DS    0H                                                        03427
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    03428
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     03429
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    03430
* --> Hex printing - below                                               03431
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03432
         BZ    NPRHINT2                No. Bypass it.                    03433
         ST    R7,R7HXPRT              Save BAL register.                03434
         BAL   R7,HEXPRNEX             Hex print from external labels.   03435
         L     R7,R7HXPRT              Restore BAL register.             03436
NPRHINT2 DS    0H                                                        03437
* --> Hex printing - above                                               03438
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03439
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             03440
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    03441
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     03442
TLITWRIE DS    0H                                                        03443
* -------------------- Code for Initting Tapes ---------->>>>> above     03444
* -------------------- Code for Initting ASCII Tapes ---->>>>> below     03445
TLITASCI DS    0H               INIT ASCII TAPES.                        03446
         TM    PARMFLG5,X'03'   Are we initting any type of ASCII tape?  03447
         BZ    TLITASCE         No. Bypass this code.                    03448
TLITRAS1 DS    0H                      SET UP INITIAL OUTPUT REWINDS.    03449
         TM    INITRWFL,X'01'          DID WE DO THE REWIND YET?         03450
         BO    TLITRAS2                YES. SET WRITE CCW BACK.          03451
         MVC   OUTCCWPT(4),=A(REWCCW)  NO. SET UP REWIND INSTEAD.        03452
         OI    INITRWFL,X'01'          SHOW FOR NEXT TIME.               03453
         B     WRITE1                  AND DO THE REWINDS OF OUTPUTS.    03454
TLITRAS2 DS    0H                      ALREADY DID THE REWIND.           03455
         MVC   OUTCCWPT(4),=A(OUTCCW)  SO SET UP REGULAR OUTPUT WRITES.  03456
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            03457
         OI    WRLBLFLG,X'01'              INPUT FROM EXTLBLIN.          03458
TLITSKA1 DS    0H                                                        03459
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              03460
         BO    TLITSKA2                GO TO SECOND PASS FOR HDR1        03461
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     03462
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          03463
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     03464
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          03465
         MVC   EXTLBLIN(80),AVOL1LAB   STUFF THE INPUT AREA WITH VOL1    03466
         MVC   EXTLBLIN+37(14),TAPEOWN   And the Tape Owner if any       03467
* --> Hex printing - below                                               03468
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03469
         BZ    NPRHINA1                No. Bypass it.                    03470
*           Temporary ASCII translation is done here.           *        03471
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03472
         ST    R5,R5HXPRT              Save register.                    03473
         L     R5,SAVTRTCS             Point to translation table CSECT  03474
         USING TRTCSECT,R5                                               03475
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03476
         ST    R7,R7HXPRT              Save BAL register.                03477
         BAL   R7,HEXPRNEX             Hex print from external labels.   03478
         L     R7,R7HXPRT              Restore BAL register.             03479
         L     R5,R5HXPRT              Restore R5                        03480
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03481
         DROP  R5                                                        03482
NPRHINA1 DS    0H                                                        03483
* --> Hex printing - above                                               03484
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03485
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        03486
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        03487
TLITSKA2 DS    0H                                                        03488
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    03489
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     03490
         MVC   EXTLBLIN(80),AHDR1INI   STUFF THE INPUT AREA WITH HDR1    03491
* --------------------------------------------------------------*        03492
*           Note:  The real ASCII translation is                *        03493
*                  done in the CHANGVOL routine that            *        03494
*                  gets executed just before each               *        03495
*                  output write.  Please note that              *        03496
*                  INASC3 and INASC4 imply CHGVOL.              *        03497
* --------------------------------------------------------------*        03498
* --> Hex printing - below                                               03499
         TM    PARMFLG5,X'20'          Is Hex Printing On?               03500
         BZ    NPRHINA2                No. Bypass it.                    03501
*           Temporary ASCII translation is done here.           *        03502
         MVC   EXTLBLWK(80),EXTLBLIN   Preserve the label area           03503
         ST    R5,R5HXPRT              Save register.                    03504
         L     R5,SAVTRTCS             Point to translation table CSECT  03505
         USING TRTCSECT,R5                                               03506
         TR    EXTLBLIN(80),TRTE2A     Translate EXTLBLIN area to ASCII  03507
         ST    R7,R7HXPRT              Save BAL register.                03508
         BAL   R7,HEXPRNEX             Hex print from external labels.   03509
         L     R7,R7HXPRT              Restore BAL register.             03510
         L     R5,R5HXPRT              Restore R5                        03511
         MVC   EXTLBLIN(80),EXTLBLWK   Restore External Label Area       03512
         DROP  R5                                                        03513
NPRHINA2 DS    0H                                                        03514
* --> Hex printing - above                                               03515
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       03516
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             03517
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    03518
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     03519
TLITASCE DS    0H                                                        03520
* -------------------- Code for Initting ASCII Tapes ---->>>>> above     03521
*                                                                        03522
*  WRITE TO OUTPUT TAPES                                                 03523
*                                                                        03524
WRITE1   DS    0H                                             SBG 06/00  03525
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              03526
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        03527
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              03528
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        03529
WRNOTPMK DS    0H                                                        03530
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  03531
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03532
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  03533
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  03534
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    03535
         BZ    WRITE2         NO                                         03536
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     03537
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  03538
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03539
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03540
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  03541
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03542
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03543
         EXCP  OUTIOB         WRITE IT                                   03544
         WAIT  ECB=OUTECB     WAIT FOR IT                                03545
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03546
         BNE   OUTERR         NO - ERROR                                 03547
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    03548
         BZ    WRITE3         NO                                         03549
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     03550
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  03551
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03552
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03553
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  03554
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03555
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03556
         EXCP  OUTIOB         WRITE IT                                   03557
         WAIT  ECB=OUTECB     WAIT FOR IT                                03558
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03559
         BNE   OUTERR         NO - ERROR                                 03560
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    03561
         BZ    WRITE4         NO                                         03562
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     03563
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  03564
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03565
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03566
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  03567
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03568
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03569
         EXCP  OUTIOB         WRITE IT                                   03570
         WAIT  ECB=OUTECB     WAIT FOR IT                                03571
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03572
         BNE   OUTERR         NO - ERROR                                 03573
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    03574
         BZ    WRITE5         NO                                         03575
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     03576
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  03577
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03578
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03579
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  03580
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03581
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03582
         EXCP  OUTIOB         WRITE IT                                   03583
         WAIT  ECB=OUTECB     WAIT FOR IT                                03584
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03585
         BNE   OUTERR         NO - ERROR                                 03586
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    03587
         BZ    WRITE6         NO                                         03588
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     03589
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  03590
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03591
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03592
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  03593
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03594
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03595
         EXCP  OUTIOB         WRITE IT                                   03596
         WAIT  ECB=OUTECB     WAIT FOR IT                                03597
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03598
         BNE   OUTERR         NO - ERROR                                 03599
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    03600
         BZ    WRITE7         NO                                         03601
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     03602
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  03603
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03604
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03605
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  03606
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03607
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03608
         EXCP  OUTIOB         WRITE IT                                   03609
         WAIT  ECB=OUTECB     WAIT FOR IT                                03610
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03611
         BNE   OUTERR         NO - ERROR                                 03612
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    03613
         BZ    WRITE8         NO                                         03614
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     03615
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  03616
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03617
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03618
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  03619
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03620
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03621
         EXCP  OUTIOB         WRITE IT                                   03622
         WAIT  ECB=OUTECB     WAIT FOR IT                                03623
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03624
         BNE   OUTERR         NO - ERROR                                 03625
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    03626
         BZ    WRITE9         NO                                         03627
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     03628
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  03629
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03630
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03631
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  03632
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03633
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03634
         EXCP  OUTIOB         WRITE IT                                   03635
         WAIT  ECB=OUTECB     WAIT FOR IT                                03636
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03637
         BNE   OUTERR         NO - ERROR                                 03638
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    03639
         BZ    WRITE10        NO                                         03640
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     03641
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  03642
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03643
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03644
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  03645
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03646
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03647
         EXCP  OUTIOB         WRITE IT                                   03648
         WAIT  ECB=OUTECB     WAIT FOR IT                                03649
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03650
         BNE   OUTERR         NO - ERROR                                 03651
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    03652
         BZ    WRITE11        NO                                         03653
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     03654
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  03655
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03656
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03657
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  03658
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03659
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03660
         EXCP  OUTIOB         WRITE IT                                   03661
         WAIT  ECB=OUTECB     WAIT FOR IT                                03662
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03663
         BNE   OUTERR         NO - ERROR                                 03664
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    03665
         BZ    WRITE12        NO                                         03666
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     03667
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  03668
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03669
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03670
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  03671
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03672
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03673
         EXCP  OUTIOB         WRITE IT                                   03674
         WAIT  ECB=OUTECB     WAIT FOR IT                                03675
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03676
         BNE   OUTERR         NO - ERROR                                 03677
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    03678
         BZ    WRITE13        NO                                         03679
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     03680
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  03681
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03682
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03683
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  03684
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03685
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03686
         EXCP  OUTIOB         WRITE IT                                   03687
         WAIT  ECB=OUTECB     WAIT FOR IT                                03688
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03689
         BNE   OUTERR         NO - ERROR                                 03690
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    03691
         BZ    WRITE14        NO                                         03692
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     03693
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  03694
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03695
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03696
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  03697
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03698
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03699
         EXCP  OUTIOB         WRITE IT                                   03700
         WAIT  ECB=OUTECB     WAIT FOR IT                                03701
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03702
         BNE   OUTERR         NO - ERROR                                 03703
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    03704
         BZ    WRITE15        NO                                         03705
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     03706
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  03707
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03708
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03709
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  03710
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03711
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03712
         EXCP  OUTIOB         WRITE IT                                   03713
         WAIT  ECB=OUTECB     WAIT FOR IT                                03714
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03715
         BNE   OUTERR         NO - ERROR                                 03716
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    03717
         BZ    WRITE16        NO                                         03718
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     03719
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  03720
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03721
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03722
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  03723
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03724
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03725
         EXCP  OUTIOB         WRITE IT                                   03726
         WAIT  ECB=OUTECB     WAIT FOR IT                                03727
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03728
         BNE   OUTERR         NO - ERROR                                 03729
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    03730
         BZ    WRITE17        NO                                         03731
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     03732
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  03733
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       03734
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         03735
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  03736
         ST    R2,OUTDCBPT    PUT IT IN IOB                              03737
         MVI   OUTECB,X'00'   INITIALIZE ECB                             03738
         EXCP  OUTIOB         WRITE IT                                   03739
         WAIT  ECB=OUTECB     WAIT FOR IT                                03740
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   03741
         BNE   OUTERR         NO - ERROR                                 03742
WRITE17  DS    0H                                                        03743
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               03744
         BNE   WR17NTPM       No. Don't correct bytes moved field        03745
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    03746
WR17NTPM DS    0H                                                        03747
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         03748
         BO    ENDINPUT       YES. CLOSE.                                03749
         TM    FLAG2A,EOV     END OF INPUT?                              03750
         BO    ENDINPUT       YES - QUIT                                 03751
         B     READIN         NO - LOOP                                  03752
         SPACE 3                                                         03753
*                                                                        03754
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             03755
*                                                                        03756
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                03757
         BZ    INERR1         NO - ASSUME DATA CHECK                     03758
         ADRSMS                                                          03759
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        03760
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        03761
         DROPMS                                                          03762
         B     INERR2         CONTINUE                                   03763
INERR1   DS    0H                                                        03764
         ADRSMS                                                          03765
         MVC   LINE(133),INDCK  SET ERROR MESSAGE                        03766
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        03767
         DROPMS                                                          03768
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        03769
         MVI   INECB,X'00'    RESET ECB                                  03770
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 03771
               6,INECB,ROUTCDE=(3)                                       03772
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       03773
*                             WHO CARES WHAT THE REPLY IS                03774
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      03775
         B     CLOSMALL                                                  03776
*        ABEND 69             QUIT                                       03777
         SPACE 3                                                         03778
*                                                                        03779
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      03780
*                                                                        03781
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       03782
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE                      03783
         TM    OUTCSW+4,X'02' UNIT CHECK?                                03784
         BO    OUTERUC        YES. HANDLE IT.                            03785
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   03786
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     03787
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       03788
         MVFMS LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       03789
         B     OUTERR2            GO FILL IN REST OF THE INFO            03790
OUTERUC  DS    0H                                                        03791
         MVFMS LINE(133),OUTEQC  SET ERROR MESSAGE                       03792
         B     OUTERR2        CONTINUE                                   03793
OUTERR1  DS    0H                                                        03794
         MVFMS LINE(133),OUTDCK  SET ERROR MESSAGE                       03795
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             03796
         L     R5,16          R5=CVT                                     03797
         L     R5,0(,R5)      R5=TCB WORDS                               03798
         L     R5,4(,R5)      R5=MY TCB                                  03799
         L     R5,12(,R5)     R5=TIOT                                    03800
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              03801
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  03802
         MVC   SAVDDN(5),4(R4)   Save DDNAME                             03803
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     03804
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           03805
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE                03806
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE                     03807
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB                 03808
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY          03809
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE       03810
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 03811
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO                       03812
         MVC   SAVELINE(133),LINE                                        03813
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03814
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.      03815
         MVC   LINE(133),LINE-1      CLEAR LINE                          03816
         MVFMS LINE(133),OUTCOUNT    How much was copied?                03817
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE   03818
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              03819
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        03820
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              03821
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ        03822
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      03823
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  03824
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03825
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 03826
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ       03827
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          03828
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             03829
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         03830
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            03831
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    03832
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE           03833
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ        03834
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 03835
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             03836
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           03837
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  03838
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                03839
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            03840
         AP    QWORD,DWORD        AND ADD IT IN                          03841
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN               03842
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              03843
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              03844
* ---- >    WTO on a Unit Exception   < ---- Below                       03845
         TM    PARMFLG5,X'40'   Do we WTO on a Unit Exception?           03846
         BO    OUTERR2A         Yes. WTO anyway, as of old.              03847
* ---- >    WTO on a Unit Exception   < ---- Above                       03848
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           03849
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             03850
*                               THIS IS A SEMI-NORMAL CONDITION          03851
*                               AND WHY INVOLVE THE OPERATOR?            03852
OUTERR2A MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    03853
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  03854
OUTERR4  DS    0H                                                        03855
         OI    OUTERFLG,X'01'    SHOW THIS WTOR WAS ISSUED               03856
         WTOR  '                                                       X 03857
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       03858
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 03859
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           03860
         BNE   OUTERR3        NO - TRY AGAIN                             03861
* ------------------------------------------------------------------- *  03862
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  03863
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  03864
* ------------------------------------------------------------------- *  03865
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              03866
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 03867
*                             DON'T BOTHER WAITING FOR REWIND            03868
* ------------------------------------------------------------------- *  03869
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           03870
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        03871
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03872
         BNE   OUTERR5        NO                                         03873
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03874
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 03875
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        03876
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03877
         BNE   OUTERR6        NO                                         03878
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03879
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 03880
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        03881
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03882
         BNE   OUTERR7        NO                                         03883
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03884
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 03885
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        03886
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03887
         BNE   OUTERR8        NO                                         03888
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03889
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 03890
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        03891
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03892
         BNE   OUTERR9        NO                                         03893
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03894
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 03895
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        03896
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03897
         BNE   OUTERR10       NO                                         03898
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03899
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 03900
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        03901
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03902
         BNE   OUTERR11       NO                                         03903
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03904
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 03905
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        03906
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03907
         BNE   OUTERR12       NO                                         03908
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03909
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 03910
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        03911
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03912
         BNE   OUTERR13       NO                                         03913
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      03914
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 03915
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       03916
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03917
         BNE   OUTERR14       NO                                         03918
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03919
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 03920
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       03921
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03922
         BNE   OUTERR15       NO                                         03923
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03924
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 03925
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       03926
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03927
         BNE   OUTERR16       NO                                         03928
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03929
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 03930
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       03931
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03932
         BNE   OUTERR17       NO                                         03933
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03934
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 03935
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       03936
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03937
         BNE   OUTERR18       NO                                         03938
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03939
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 03940
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       03941
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           03942
         BNE   OUTERR19       NO                                         03943
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03944
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 03945
*                             THEN IT MUST BE OUTPUT 16                  03946
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      03947
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 03948
         SPACE 3                                                         03949
*                                                                        03950
*  END OF INPUT -- FINISH UP                                             03951
*                                                                        03952
ENDINPUT DS    0H                                                        03953
         SPACE 3                                                         03954
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03955
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  03956
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  03957
         MVFMS LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  03958
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  03959
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  03960
ENDIN0   DS    0H                                                        03961
         MVFMS LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   03962
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       03963
         BO    ENDIN1         YES - CONTINUE                             03964
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   03965
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       03966
         BO    ENDIN2         YES - CONTINUE                             03967
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 03968
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       03969
         BO    ENDIN3         YES - CONTINUE                             03970
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 03971
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       03972
         BO    ENDIN4         YES - CONTINUE                             03973
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 03974
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       03975
         BO    ENDIN5         YES - CONTINUE                             03976
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  03977
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       03978
         BO    ENDIN6         YES - CONTINUE                             03979
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   03980
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       03981
         BO    ENDIN7         YES - CONTINUE                             03982
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   03983
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        03984
         BO    ENDIN8         YES - CONTINUE                             03985
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   03986
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        03987
         BO    ENDIN9         YES - CONTINUE                             03988
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   03989
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        03990
         BO    ENDIN10        YES - CONTINUE                             03991
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   03992
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        03993
         BO    ENDIN11        YES - CONTINUE                             03994
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   03995
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        03996
         BO    ENDIN12        YES - CONTINUE                             03997
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   03998
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        03999
         BO    ENDIN13        YES - CONTINUE                             04000
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   04001
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        04002
         BO    ENDIN14        YES - CONTINUE                             04003
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   04004
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        04005
         BO    ENDIN15        YES - CONTINUE                             04006
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   04007
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        04008
         BO    ENDIN16        YES - CONTINUE                             04009
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  04010
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   04011
         SPACE 3                                                         04012
*                                                                        04013
*  CLOSE ALL FILES                                                       04014
*                                                                        04015
CLOSMALL DS    0H                                                        04016
*        B     OUTERR        REMOVE - REMOVE - REMOVE                    04017
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              04018
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         04019
         BZ    ENDINTOT          NO - SKIP ROUTINE                       04020
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               04021
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04022
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04023
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04024
         CVD   R5,DWORD          LOW ORDER WORD                          04025
         AP    QWORD,DWORD       AND ADD IT IN                           04026
         ADRSMS                                                          04027
         ED    TOTBPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04028
         PTMSN TOTBLINE                                                  04029
         DROPMS                                                          04030
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     04031
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04032
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04033
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04034
         CVD   R5,DWORD          LOW ORDER WORD                          04035
         AP    QWORD,DWORD       AND ADD IT IN                           04036
         ADRSMS                                                          04037
         ED    TOTLPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04038
         PTMSN TOTLLINE                                                  04039
         DROPMS                                                          04040
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      04041
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           04042
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        04043
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   04044
         CVD   R5,DWORD          LOW ORDER WORD                          04045
         AP    QWORD,DWORD       AND ADD IT IN                           04046
         ADRSMS                                                          04047
         ED    TOTWPATT,QWORD+6          MAKE NUMBER DISPLAYABLE         04048
         PTMSN TOTWLINE                                                  04049
         DROPMS                                                          04050
         MVI   LINE,C' '                                                 04051
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          04052
ENDINTOT DS    0H                                                        04053
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              04054
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  04055
         TM    LBLFLAG,X'08'         HAVE WE COPIED AN INITTED TAPE?     04056
         BZ    NOINITT3              NOPE. DON'T REPORT IT EITHER.       04057
         TM    PARMFLG2,X'08'        IS THIS RUN READ-ONLY?              04058
         BO    NOINITT3              YES. DON'T PRINT COPY MESSAGE       04059
         ADRSMS                                                          04060
         MVC   INITSER(6),INVOLUME   MOVE IN VOLSER FROM VOL1            04061
         PTMSN INITMSG               MSG-WE'RE DOING INITTED TAPE        04062
         DROPMS                                                          04063
NOINITT3 DS    0H                                                        04064
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  04065
         TM    PARMFLG3,X'01'   INIT ONLY?                               04066
         BO    NOCLOSIN                                                  04067
         TM    PARMFLG5,X'01'   INIT ASCII LEVEL 3?                      04068
         BO    NOCLOSIN                                                  04069
         TM    PARMFLG5,X'02'   INIT ASCII LEVEL 4?                      04070
         BO    NOCLOSIN                                                  04071
         CLOSE (IN)                                                      04072
NOCLOSIN DS    0H                                                        04073
         CLOSE (SYSPRINT)                                                04074
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  04075
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  04076
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    04077
         CLOSE (LABLDUMP)                                                04078
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            04079
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        04080
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     04081
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        04082
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     04083
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    04084
         CLOSE (LABADDIN)                                                04085
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        04086
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  04087
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  04088
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  04089
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  04090
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             04091
         BZ    CLOSE1         NO                                         04092
         CLOSE (OUT1)         CLOSE OUTPUT 1                             04093
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             04094
         BZ    CLOSE2         NO                                         04095
         CLOSE (OUT2)         CLOSE OUTPUT 2                             04096
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             04097
         BZ    CLOSE3         NO                                         04098
         CLOSE (OUT3)         CLOSE OUTPUT 3                             04099
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             04100
         BZ    CLOSE4         NO                                         04101
         CLOSE (OUT4)         CLOSE OUTPUT 4                             04102
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             04103
         BZ    CLOSE5         NO                                         04104
         CLOSE (OUT5)         CLOSE OUTPUT 5                             04105
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             04106
         BZ    CLOSE6         NO                                         04107
         CLOSE (OUT6)         CLOSE OUTPUT 6                             04108
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             04109
         BZ    CLOSE7         NO                                         04110
         CLOSE (OUT7)         CLOSE OUTPUT 7                             04111
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             04112
         BZ    CLOSE8         NO                                         04113
         CLOSE (OUT8)         CLOSE OUTPUT 8                             04114
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             04115
         BZ    CLOSE9         NO                                         04116
         CLOSE (OUT9)         CLOSE OUTPUT 9                             04117
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            04118
         BZ    CLOSE10        NO                                         04119
         CLOSE (OUT10)        CLOSE OUTPUT 10                            04120
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            04121
         BZ    CLOSE11        NO                                         04122
         CLOSE (OUT11)        CLOSE OUTPUT 11                            04123
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            04124
         BZ    CLOSE12        NO                                         04125
         CLOSE (OUT12)        CLOSE OUTPUT 12                            04126
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            04127
         BZ    CLOSE13        NO                                         04128
         CLOSE (OUT13)        CLOSE OUTPUT 13                            04129
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            04130
         BZ    CLOSE14        NO                                         04131
         CLOSE (OUT14)        CLOSE OUTPUT 14                            04132
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            04133
         BZ    CLOSE15        NO                                         04134
         CLOSE (OUT15)        CLOSE OUTPUT 15                            04135
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            04136
         BZ    THEEND         NO                                         04137
         CLOSE (OUT16)        CLOSE OUTPUT 16                            04138
         SPACE 3                                                         04139
*                                                                        04140
*  Test for ABEND 069 first.  Did we come from an Input Error?           04141
*                                                                        04142
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       04143
         BZ    THEEND            No.  End normally.                      04144
         ABEND 69                QUIT                                    04145
*                                                                        04146
*  THE END                                                               04147
*                                                                        04148
THEEND   DS    0H                                                        04149
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 04150
         BO    THEEND0           YES WE DO.  Issue RC = 0.               04151
         MVFMS WTOCBT+16(41),FILEDONE                                    04152
WTOCBT   WTO   'CBT990                                              '    04153
THEENDS  DS    0H                                                        04154
         TM    OUTERFLG,X'01'   WTOR ISSUED AT LEAST ONCE?               04155
         BO    THEEND16         Yes, issue RC = 16                       04156
         TM    FLAG2A,ERR       WAS THERE AN ERROR?                      04157
         BO    THEEND8          Yes, issue RC = 8                        04158
         B     THEEND0          Otherwise, issue RC = 0                  04159
THEEND16 DS    0H                                                        04160
         L     R13,4(,R13)                                               04161
         MVC   16(4,R13),=F'16'         Return code 16    in R15         04162
         B     THEEND2                                                   04163
THEEND8  DS    0H                                                        04164
         L     R13,4(,R13)                                               04165
         MVC   16(4,R13),=F'8'          Return code 8     in R15         04166
         B     THEEND2                                                   04167
THEEND0  DS    0H                                                        04168
         L     R13,4(,R13)                                               04169
         MVC   16(4,R13),=F'0'          Return code 0     in R15         04170
THEEND2  DS    0H                                                        04171
         LM    R14,R12,12(R13)                                           04172
         BR    R14                                                       04173
         EJECT                                                           04174
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      04175
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      04176
*    BAL REGISTER IS R4.                                                 04177
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      04178
HEX      DS    0H                                                        04179
         MVC   1(1,R15),0(R1)        Move byte                           04180
         UNPK  0(3,R15),1(2,R15)     Unpack                              04181
         TR    0(2,R15),HEXTAB-240                                       04182
         LA    R15,2(,R15)           Increment output pointer            04183
         LA    R1,1(,R1)             Increment input pointer             04184
         BCT   R0,HEX                Decrement length, then loop         04185
         MVI   0(R15),C' '           Blank the trailing byte             04186
         BR    R4                    Return to caller                    04187
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     04188
         SPACE                                                           04189
* --------------------------------------------------------- * SBG 05/00  04190
*    BAL REGISTER IS R7.                                      SBG 05/00  04191
* --------------------------------------------------------- * SBG 05/00  04192
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  04193
*                         ALTERED.                                       04194
         ADRSMS                                                          04195
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           04196
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           04197
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 04198
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 04199
* ----                                                                   04200
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  04201
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             04202
         MVC   VOLALT+35(6),VOLSTG1  MOVE NEW VOLSER VALUE TO MSG        04203
INDVVOLS DS    0H                                                        04204
* ----                                                                   04205
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         04206
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     04207
         PTMSN VOLALT                MOVE MESSAGE TO PRT                 04208
         DROPMS                                                          04209
         BR    R7                    RETURN TO CALLER                    04210
* --------------------------------------------------------- *            04211
*    BAL REGISTER IS R7.                                                 04212
* --------------------------------------------------------- *            04213
PRTBLCNT DS    0H                                                        04214
         PTMS  BLKCNTMS              MESSAGE TO PRINT LINE               04215
PRTBLCNE BR    R7                                                        04216
* --------------------------------------------------------- *            04217
*    BAL REGISTER IS R7.                                                 04218
* --------------------------------------------------------- *            04219
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         04220
         ST    R7,SAVE7REG                                               04221
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  04222
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    04223
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   04224
BACKEXT1 L     R7,SAVE7REG                                               04225
BACKEXTE BR    R7                                                        04226
* --------------------------------------------------------- *            04227
*    BAL REGISTER IS R7.                                                 04228
* --------------------------------------------------------- *            04229
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       04230
         ST    R7,SAVE7REG                                               04231
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         04232
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 04233
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 04234
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          04235
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       04236
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       04237
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    04238
CLEARSV1 L     R7,SAVE7REG                                               04239
CLEARSVE BR    R7                                                        04240
* --------------------------------------------------------- *            04241
*    BAL REGISTER IS R7.                                                 04242
* --------------------------------------------------------- *            04243
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       04244
         ST    R7,SAVE7REG                                               04245
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         04246
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           04247
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   04248
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          04249
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      04250
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           04251
         BZ    FIXALL3                                                   04252
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              04253
         BZ    FIXLAST2                                                  04254
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       04255
         BZ    FIXLAST1                                                  04256
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       04257
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   04258
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              04259
         L     R7,SAVE7REG                                               04260
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    04261
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    04262
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           04263
         L     R7,SAVE7REG                                               04264
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   04265
FIXLAST1 DS    0H               REPLACE EOF2                             04266
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           04267
         L     R7,SAVE7REG                                               04268
         B     ADDEOF2          CREATE THE EOF2                          04269
FIXEXTL1 DS    0H                                                        04270
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      04271
         L     R7,SAVE7REG                                               04272
FIXEXTLE BR    R7                                                        04273
* --------------------------------------------------------- *            04274
*    BAL REGISTER IS R7.                                                 04275
* --------------------------------------------------------- *            04276
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      04277
*                             IOS USES DURING EXCP PROCESSING.           04278
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    04279
* ------------------------------------------------------------------- *  04280
         MVC   OUTIOB(4),IOB01                                           04281
         MVC   OUTCSW(8),FUL2ZERO                                        04282
         MVC   OUTDCBPT(4),FUL2ZERO                                      04283
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    04284
         MVC   OUTDCBPT+8(4),IOB02                                       04285
CLEARIOE BR    R7                                                        04286
* --------------------------------------------------------- *            04287
*    BAL REGISTER IS R7.                                                 04288
* --------------------------------------------------------- *            04289
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  04290
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  04291
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    04292
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  04293
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  04294
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                04295
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  04296
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          04297
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  04298
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                04299
* -- >>                                                                  04300
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04301
         BZ    CHEBCVID             NO. NO TRANSLATION OF VOLSER         04302
         ST    R5,R5HXPRT           Save register.                       04303
         L     R5,SAVTRTCS          Point to translation table CSECT.    04304
         USING TRTCSECT,R5                                               04305
         MVC   VOLASC(6),VOLCHG                                          04306
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           04307
         DROP  R5                                                        04308
         MVC   INAREA+4(6),VOLASC   Use ASCII volser to replace          04309
         B     CHASCVID             And not the EBCDIC one.              04310
CHEBCVID MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       04311
CHASCVID DS    0H                                                        04312
* -- >>                                                                  04313
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  04314
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        04315
         CLI   TAPEOWN,C' '   IS THERE A TAPEOWNER VALUE                 04316
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   04317
* -- >>                                                                  04318
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04319
         BZ    CHEBCTOW             NO. NO TRANSLATION OF VOLSER         04320
         ST    R5,R5HXPRT           Save register.                       04321
         L     R5,SAVTRTCS          Point to translation table CSECT.    04322
         USING TRTCSECT,R5                                               04323
         MVC   TAPEOASC(14),TAPEOWN                                      04324
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      04325
         DROP  R5                                                        04326
         MVC   INAREA+37(14),TAPEOASC    ASCII ownerid to replace        04327
         B     CHASCTOW                  And not the EBCDIC one.         04328
CHEBCTOW DS    0H                                                        04329
         MVC   INAREA+41(10),TAPEOWN     Move EBCDIC tape owner          04330
CHASCTOW DS    0H                                                        04331
* -- >>                                                                  04332
         MVC   LINE(133),LINE-1                                          04333
         ADRSMS                                                          04334
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04335
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04336
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04337
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04338
         PTMSN OWNRMSG                                                   04339
         DROPMS                                                          04340
CHNOTOWN DS    0H                                                        04341
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      04342
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             04343
CHEXTLAB DS    0H                                                        04344
         TM    PARMFLG5,X'03'      ARE WE INITTING ASCII TAPES?          04345
         BZ    CHEXTGO1            NO. DO ORDINARY PROCESSING            04346
         B     CHANGASC            YES. GO TO SPECIAL ROUTINE.           04347
CHEXTGO1 TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        04348
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             04349
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04350
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                04351
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   04352
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 04353
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               04354
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           04355
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       04356
         BZ    CHNOZAPV            NO. BYPASS.                           04357
* -- >>                                                                  04358
         TM    ASCIIFLG,X'01'                                            04359
         BO    CHASCVE1                                                  04360
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04361
         BZ    CHEBCVEX             NO. NO TRANSLATION OF VOLSER         04362
CHASCVE1 DS    0H                                                        04363
         ST    R5,R5HXPRT           Save register.                       04364
         L     R5,SAVTRTCS          Point to translation table CSECT.    04365
         USING TRTCSECT,R5                                               04366
         MVC   VOLASC(6),VOLCHG                                          04367
         TR    VOLASC(6),TRTE2A     Translate volser to ASCII.           04368
         DROP  R5                                                        04369
         MVC   EXTLBLIN+4(6),VOLASC Use ASCII volser to replace          04370
         B     CHASCVEX             And not the EBCDIC one.              04371
CHEBCVEX MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    04372
CHASCVEX DS    0H                                                        04373
* -- >>                                                                  04374
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  04375
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        04376
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       04377
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           04378
* -- >>                                                                  04379
         TM    ASCIIFLG,X'01'                                            04380
         BO    CHASCVE2                                                  04381
         TM    ISLBLFLG,X'02'       IS THIS AN ASCII LABEL?              04382
         BZ    CHEBCTEX             NO. NO TRANSLATION OF VOLSER         04383
CHASCVE2 DS    0H                                                        04384
         ST    R5,R5HXPRT           Save register.                       04385
         L     R5,SAVTRTCS          Point to translation table CSECT.    04386
         USING TRTCSECT,R5                                               04387
         MVC   TAPEOASC(14),TAPEOWN                                      04388
         TR    TAPEOASC(14),TRTE2A       Translate volser to ASCII.      04389
         DROP  R5                                                        04390
         MVC   EXTLBLIN+37(14),TAPEOASC  ASCII ownerid to replace        04391
         B     CHASCTEX                  And not the EBCDIC one.         04392
CHEBCTEX DS    0H                                                        04393
         MVC   EXTLBLIN+41(10),TAPEOWN   Move EBCDIC tape owner          04394
CHASCTEX DS    0H                                                        04395
* -- >>                                                                  04396
         MVC   LINE(133),LINE-1                                          04397
         ADRSMS                                                          04398
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04399
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04400
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04401
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04402
         PTMSN OWNRMSG                                                   04403
         DROPMS                                                          04404
CHNOZAPV DS    0H                                                        04405
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             04406
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04407
         BO    CHGWRIT             YES, SKIP SECOND WRITE                04408
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             04409
         BO    CHGPRINT            YES, PRINT.                           04410
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       04411
         BO    CHGPRINT            YES, PRINT                            04412
         B     CHGWRIT                                                   04413
CHGPRINT DS    0H                                                        04414
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  04415
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        04416
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04417
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        04418
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04419
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04420
         TM    EXASCFLG,X'01'                                            04421
         BZ    CHGPRANT                                                  04422
         ST    R5,R5HXPRT        Save register.                          04423
         L     R5,SAVTRTCS       Point to translation table CSECT.       04424
         USING TRTCSECT,R5                                               04425
         TR    VOLORIG(6),TRTA2E   Translate VOLSER to EBCDIC            04426
         ST    R7,SAVE7RG5                                               04427
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  04428
         L     R7,SAVE7RG5                                               04429
         TR    VOLORIG(6),TRTE2A   Translate VOLSER to ASCII             04430
         L     R5,R5HXPRT        Restore register.                       04431
         DROP  R5                                                        04432
         B     CHGWRIT                                                   04433
CHGPRANT DS    0H                                                        04434
         ST    R7,SAVE7RG5                                               04435
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  04436
         L     R7,SAVE7RG5                                               04437
CHGWRIT  DS    0H                                             SBG 05/00  04438
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  04439
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               04440
         SPACE 3                                                         04441
CHANGASC DS    0H             PROCESS CHANGE VOLUME INFO TO INIT ASCII   04442
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  04443
*    X'01' OF WRITE LABEL FLAG IS ASSUMED TO BE ON AT THIS POINT.        04444
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       04445
CHASCLAB DS    0H                                                        04446
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04447
         BO    CHNOASCV            YES, SKIP SECOND WRITE                04448
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    04449
         MVC   EXTLBLIN(4),AVOL1LIT                                      04450
         TM    PARMFLG5,X'01'      INITTING ASCII LEVEL 3?               04451
         BO    CHASCLX1            YES. KEEP LEVEL 3 INDICATOR.          04452
         MVI   AVOL1LVL,C'4'       NO. INSERT LEVEL 4 INDICATOR.         04453
CHASCLX1 DS    0H                                                        04454
         MVC   EXTLBLIN+79(1),AVOL1LVL   MOVE IN SYSTEM LEVEL FOR ANSI   04455
         TM    PARMFLG2,X'40'      IS OUTVOL PARM IN EFFECT              04456
         BZ    CHNOASCV            NO. DON'T CHANGE OWNER INFORMATION    04457
         CLI   TAPEOWN,C' '        IS THERE ANY CHANGE IN TAPEOWN?       04458
         BE    CHNOASCV            NO INFO-THEREFORE NO CHANGE           04459
         MVC   EXTLBLIN+37(14),TAPEOWN    CHANGE TAPE OWNER TOO          04460
         MVC   LINE(133),LINE-1                                          04461
         ADRSMS                                                          04462
         MVC   OWNRTID(14),LINE          CLEAR FIELD                     04463
         MVC   OWNRTID(14),TAPEOWN       MOVE OWNER INFO INTO MSG        04464
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     04465
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     04466
         PTMSN OWNRMSG                                                   04467
         DROPMS                                                          04468
CHNOASCV DS    0H                                                        04469
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL ASCII LABELS       04470
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           04471
         BO    CHGWRASX            YES, SKIP SECOND WRITE                04472
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             04473
         BO    CHGASPRT            YES, PRINT.                           04474
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       04475
         BO    CHGASPRT            YES, PRINT                            04476
         B     CHGWRAS                                                   04477
CHGASPRT DS    0H                                                        04478
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  04479
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04480
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   04481
         BNZ   CHGWRAS             ANY OF ABOVE - DON'T PRINT MSG        04482
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   04483
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            04484
         ST    R7,SAVE7RG5                                               04485
         BAL   R7,VOL1PRT          PRINT MESSAGE THAT VOLSER CHANGED     04486
         L     R7,SAVE7RG5                                               04487
         B     CHGWRAS                                                   04488
CHGWRASX DS    0H                                                        04489
         MVC   EXTLBLIN+60(20),AHDR1OSC     Refresh IBMZLA literal       04490
         MVC   EXTLBLIN+4(23),AHDR1ID1      Refresh Dummy Fileid etc.    04491
CHGWRAS  DS    0H                                                        04492
         ST    R5,R5HXPRT        Save register.                          04493
         L     R5,SAVTRTCS       Point to translation table CSECT.       04494
         USING TRTCSECT,R5                                               04495
         TR    EXTLBLIN(80),TRTE2A   Translate entire label to ASCII.    04496
         DROP  R5                                                        04497
         L     R5,R5HXPRT        Restore register.                       04498
CHASCEND BR    R7                  END OF ROUTINE - RETURN               04499
         SPACE 3                                                         04500
* --------------------------------------------------------- *            04501
*    BAL REGISTER IS R7.                                                 04502
* --------------------------------------------------------- *            04503
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  04504
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          04505
* --------------------------------------------------------- *            04506
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             04507
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               04508
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               04509
         AR    R5,R2               ADD TO BYTE COUNT                     04510
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              04511
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           04512
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   04513
ADDCNOOV DS    0H                                                        04514
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        04515
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        04516
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               04517
* --------------------------------------------------------- *            04518
*    BAL REGISTER IS R7.                                                 04519
* --------------------------------------------------------- *            04520
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            04521
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              04522
* --------------------------------------------------------- *            04523
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          04524
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04525
         BE    MOVEHI09                                                  04526
         MVC   0(4,R3),0(R2)                                             04527
         B     MOVEHIEN                                                  04528
         LA    R2,1(,R2)                                                 04529
         LA    R3,1(,R3)                                                 04530
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04531
         BE    MOVEHI08                                                  04532
         MVC   0(3,R3),0(R2)                                             04533
         B     MOVEHIEN                                                  04534
         LA    R2,1(,R2)                                                 04535
         LA    R3,1(,R3)                                                 04536
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04537
         BE    MOVEHI07                                                  04538
         MVC   0(2,R3),0(R2)                                             04539
         B     MOVEHIEN                                                  04540
         LA    R2,1(,R2)                                                 04541
         LA    R3,1(,R3)                                                 04542
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        04543
         BE    MOVEHIEN                                                  04544
         MVC   0(1,R3),0(R2)                                             04545
MOVEHIEN BR    R7                                                        04546
* --------------------------------------------------------- *            04547
*    BAL REGISTER IS R7.                                                 04548
* --------------------------------------------------------- *            04549
****                                                                     04550
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             04551
****                                                                     04552
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 04553
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    04554
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      04555
****                      THEN BACK SPACE FILE OVER TAPE MARK.           04556
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         04557
****                                                                     04558
* --------------------------------------------------------- *            04559
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     04560
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04561
         EXCP  INIOB          READ                                       04562
         WAIT  ECB=INECB      WAIT FOR READ                              04563
         TM    INCSW+4,X'01'  WAS TM READ?                               04564
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               04565
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                04566
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  04567
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04568
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         04569
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                04570
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               04571
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 04572
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                04573
         SR    R2,R3                 R2=ACTUAL LENGTH READ               04574
         NI    ISLBLFLG,FF-X'03'     TURN OFF "ISLABEL" FLAGS            04575
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           04576
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      04577
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          04578
* ------------------------------------------------------------------*    04579
*    Call the LABELCHK program and get the returns.                 *    04580
* ------------------------------------------------------------------*    04581
         L     R15,LABCHENT       Get entry point of called program      04582
         STM   R1,R3,SAVE13LC     Save R1 and R2.                        04583
         LA    R1,PARMFLGS        Point R1 to parm flags.                04584
         LA    R2,LCHKPASS        Point R2 to user area to be passed.    04585
         L     R3,=A(INAREA)      Point R3 to address of INAREA.         04586
         BALR  R14,R15                 Do CALL.                          04587
         ST    R2,SAVELBCK             Address of returned user area     04588
         MVC   LCHKPASS(LCHKPASE),0(R2)   Move generated values back.    04589
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back too.           04590
*                                 A call to LABCHECK overlays INAREA,    04591
*                                 so if a LABCHECK routine alters        04592
*                                 a label, the alteration will be        04593
*                                 written out to the output tapes.       04594
         MVC   INAREA(80),0(R3)           Overlay 80 bytes of INAREA     04595
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    04596
         TM    CLOSMFLG,X'01'     Are we doing LABADDIN to an SL tape?   04597
         BO    CLOSMALL           Yes. Close all files and finish up.    04598
* ------------------------------------------------------------------*    04599
*        BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             04600
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       04601
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          04602
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         04603
         TM    ISLBLFLG,X'02'                                            04604
         BO    LBDQLABL                                                  04605
*                             NORMALLY WITHOUT CHANGING ANYTHING.        04606
*                             BUT IF IT IS A DATA FILE,                  04607
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   04608
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          04609
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04610
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            04611
         EXCP  INIOB          DO THIS EXCP                               04612
         WAIT  ECB=INECB      WAIT FOR READ                              04613
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04614
         BNE   LBDQINER       NO -- ERROR                                04615
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04616
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04617
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             04618
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     04619
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         04620
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04621
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      04622
         EXCP  INIOB          DO THIS EXCP                               04623
         WAIT  ECB=INECB      WAIT FOR READ                              04624
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04625
         BNE   LBDQINER       NO -- ERROR                                04626
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04627
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04628
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          04629
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        04630
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     04631
         EXCP  INIOB          DO THIS EXCP                               04632
         WAIT  ECB=INECB      WAIT FOR READ                              04633
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                04634
         BNE   LBDQINER       NO -- ERROR                                04635
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      04636
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             04637
LBDQREND BR    R7                                                        04638
* --------------------------------------------------------- *            04639
*    BAL REGISTER IS R7.                                                 04640
* --------------------------------------------------------- *            04641
****                                                                     04642
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        04643
****                                                                     04644
* --------------------------------------------------------- *            04645
HEXPRINT DS    0H                Hex Print from Tape Data (INAREA)       04646
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04647
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04648
         NI    HEXEXFLG,FF-X'01' Turn off External Label Input Flag.     04649
         ST    R5,R5HXPRT        Save register.                          04650
         L     R5,SAVTRTCS       Point to translation table CSECT.       04651
         USING TRTCSECT,R5                                               04652
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04653
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04654
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04655
         B     HEXPRNXX          Bypass Hex Print from external labels   04656
*                                                                        04657
HEXPRNEX DS    0H                Hex Print from External Label Input     04658
         TM    PARMFLG5,X'20'    ARE WE DOING HEX PRINT?                 04659
         BZ    NOHEXPRO          NO. DON'T DO THIS CODE.                 04660
         OI    HEXEXFLG,X'01'    Turn on External Label Input Flag.      04661
         ST    R5,R5HXPRT        Save register.                          04662
         L     R5,SAVTRTCS       Point to translation table CSECT.       04663
         L     R0,BCTLIMIT       LOAD REGISTER FOR COMPARE               04664
         C     R0,=F'0'          HAVE WE PRINTED ALL WE SAID?            04665
         BNH   NOHEXPRO          YES. DON'T EXECUTE THIS ROUTINE.        04666
         L     R2,=F'80'         We know to print exactly 80 bytes.      04667
         B     MOVESIZ1          Now go print them.                      04668
*                                                                        04669
HEXPRNXX DS    0H                                                        04670
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      04671
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           04672
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           04673
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   04674
MOVESIZ1 DS    0H                                                        04675
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                04676
         BCTR  R2,0                ONE LESS FOR EXECUTE                  04677
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04678
         EX    R2,MOVRULER         PUT IN HEX RULER                      04679
         PUT   SYSPRINT,LINE                                             04680
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04681
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04682
         BO    HEXEX001            Yes. Move the data from EXTLBLIN.     04683
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04684
         B     HEXEN000            and continue to print.                04685
HEXEX001 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04686
HEXEN000 DS    0H                                                        04687
         TM    PARMFLG5,X'80'      Is ASCII on?                          04688
         BZ    HEXEN001            No. Use EBCDIC printables.            04689
         EX    R2,PRHEXAS          Yes. Use ASCII printables.            04690
         B     HEXENSK1                                                  04691
HEXEN001 DS    0H                                                        04692
         EX    R2,PRHEXL0          TRANSLATE TO REMOVE UNPRINTABLES      04693
HEXENSK1 DS    0H                                                        04694
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04695
         EX    R2,MOVTOLIN         MOVE TRANSLATED DATA TO OUTPUT        04696
         PUT   SYSPRINT,LINE                                             04697
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04698
         BO    HEXEX002            Yes. Move the data from EXTLBLIN.     04699
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04700
         B     HEXEN002            and continue to print.                04701
HEXEX002 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04702
HEXEN002 EX    R2,PRHEXL1          TRANSLATE TO PRINT FIRST NIBBLE       04703
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04704
         EX    R2,MOVTOLIN         MOVE 1ST HALF OF HEX TO OUTPUT        04705
         PUT   SYSPRINT,LINE                                             04706
         TM    HEXEXFLG,X'01'      Printing from External Label Input?   04707
         BO    HEXEX003            Yes. Move the data from EXTLBLIN.     04708
         EX    R2,MOVDATIN         No. Move the record from INAREA.      04709
         B     HEXEN003            and continue to print.                04710
HEXEX003 EX    R2,MOVDATEX         Move data from EXTLBLIN.              04711
HEXEN003 EX    R2,PRHEXL2          TRANSLATE TO PRINT LAST NIBBLE        04712
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     04713
         EX    R2,MOVTOLIN         MOVE 2ND HALF OF HEX TO OUTPUT        04714
         PUT   SYSPRINT,LINE                                             04715
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      04716
         B     HEXPREND                                                  04717
MOVDATEX MVC   HEXPRTWK(*-*),EXTLBLIN     ***  EXECUTED  ***             04718
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             04719
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             04720
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             04721
PRHEXAS  TR    HEXPRTWK(*-*),TRTASPRT     ***  EXECUTED  ***             04722
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             04723
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             04724
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             04725
HEXPREND DS    0H                                                        04726
         L     R2,BYTESMVD         RESTORE R2 FOR LATER USE              04727
NOHEXPRO DS    0H                                                        04728
         L     R5,R5HXPRT                                                04729
         DROP  R5                                                        04730
         BR    R7             RETURN TO CALLER                           04731
* --------------------------------------------------------- *            04732
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  04733
         EJECT                                                           04734
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  04735
SAVE1TO5 DC    5F'0'                                                     04736
SAVE1RG1 DC    F'0'                                                      04737
MAXBLK   DC    F'0'           Maximum Blocksize for file                 04738
MINBLK   DC    F'0'           Minimum Blocksize for file                 04739
FILNOSAV DC    CL5' '                                                    04740
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            04741
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           04742
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  04743
FUL2ZERO DC    2F'0'                                                     04744
IOB01    DC    X'02000000'                                               04745
IOB02    DC    X'00010000'                                               04746
PL4NO3   DC    PL4'3'                                                    04747
BLOKCNTP DC    F'0'                                                      04748
FILECNTP DC    F'1'                                                      04749
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES       04750
TOTBYH   DC    F'0'                                                      04751
TOTBYL   DC    F'0'                                                      04752
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES  04753
PRVBYH   DC    F'0'                                                      04754
PRVBYL   DC    F'0'                                                      04755
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        04756
DBINFH   DC    F'0'                                                      04757
DBINFL   DC    F'0'                                                      04758
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       04759
DBINH    DC    F'0'                                                      04760
DBINL    DC    F'0'                                                      04761
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      04762
LABINH   DC    F'0'                                                      04763
LABINL   DC    F'0'                                                      04764
WORKA    DC    D'0'                                                      04765
WORKL    DC    D'0'                                                      04766
WORKP    DC    D'0'                                                      04767
SAV01MLT DC    D'0'                                                      04768
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     04769
HEXSAVE  DS    3F                    Register save for HEX macro         04770
BLOKCNT  DC    F'0'                                                      04771
FILECNT  DC    F'1'                                                      04772
LABELCNT DC    F'0'                                                      04773
SAVUNIT  DC    CL4' '                                                    04774
         DC    CL1' '         Need this to absorb blank from HEX macro   04775
SAVDDN   DC    CL5' '                                                    04776
SAVVOLSR DC    CL6' '                                                    04777
SAVBYTES DC    X'0000'                                                   04778
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       04779
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      04780
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     04781
NOUTSFLG DC    X'00'          NO OUTxx DDs were coded in JCL             04782
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        04783
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  04784
INITRWFL DC    X'00'          FLAG SHOWING OUTPUT TAPES REWOUND IN INIT  04785
*              X'01'          OUTPUT TAPES HAVE BEEN REWOUND             04786
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         04787
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       04788
*              X'01'          TAPE IS SL                                 04789
HEXEXFLG DC    X'00'          Hex printing from INAREA.                  04790
*              X'01'          Hex printing from EXTLBLIN.                04791
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      04792
*              X'00'          WE ARE NOW WRITING DATA FROM THE           04793
*                             INPUT TAPE. X'01' IS OFF.                  04794
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         04795
*                             EXTERNAL FILE                              04796
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          04797
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            04798
*              X'08'          WE CAME FROM THE LBLINEND LABEL            04799
*                             THIS MEANS EOF OF THE LABADDIN FILE        04800
*              X'10'          FINISHED FIXING LABELS                     04801
RESLTMWF DC    X'00'                                                     04802
*              X'01'          CAME FROM RESETIN FOR LABADDIN             04803
**** ----- LABELCHK -------------------->>>>  Passed area, below         04804
*                                                                        04805
LCHKPASS DS    0H                                                        04806
*                                                                        04807
INAREAX  DC    CL80' '        Read labels into here.                     04808
         DC    CL40' '        Padding for possible overflow.             04809
* --------------------------------------------------------- *            04810
*                                                                        04811
*                                                                        04812
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       04813
*              X'00'          DATA IS NOT A LABEL                        04814
*              X'01'          DATA IS A LABEL                            04815
*              X'02'          DATA IS AN ASCII LABEL                     04816
*                                                                        04817
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               04818
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             04819
*              X'02'          BECAUSE OF SYSIN    DD MISSING             04820
*              X'04'          BECAUSE OF LABADDIN DD MISSING             04821
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                04822
*              X'01'          LABLDUMP DD IS OPEN                        04823
*              X'02'          SYSIN    DD IS OPEN                        04824
*              X'04'          LABADDIN DD IS OPEN                        04825
L80FLAG  DC    X'00'                                                     04826
*              X'01'          LAST DATA WAS 80 BYTE RECORD               04827
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    04828
*              X'01'          HDR1 HAS BEEN SEEN                         04829
*              X'02'          HDR2 HAS BEEN SEEN                         04830
*              X'04'          VOL1 HAS BEEN SEEN                         04831
*              X'08'          HDR1 IS FROM AN INITTED TAPE               04832
*              X'10'          EOF1 HAS BEEN SEEN                         04833
*              X'20'          EOF2 HAS BEEN SEEN                         04834
*              X'40'          EOV1 HAS BEEN SEEN                         04835
*              X'80'          EOV2 HAS BEEN SEEN                         04836
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    04837
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           04838
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   04839
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          04840
CLOSMFLG DC    X'00'          If X'01' then close all open files         04841
* --------------------------                                             04842
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     04843
*              X'01'          WE ARE IN A HDR GROUP                      04844
*              X'02'          WE ARE IN A EOF GROUP                      04845
*              X'04'          WE ARE IN A EOV GROUP                      04846
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    04847
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    04848
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       04849
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     04850
* ---------- *                                                           04851
* --------------------------------------------------------- *            04852
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        04853
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           04854
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           04855
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           04856
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             04857
VOLCHG   DC    C'      '                                                 04858
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        04859
VOLASC   DC    C'      '     ASCII VOLUME                                04860
LCHKPASE EQU   *-LCHKPASS                                                04861
**** ----- LABELCHK -------------------->>>>  Passed area, above         04862
OUTERFLG DC    X'00'          FLAG IF WTOR ISSUED BECAUSE OF AN ERROR    04863
*              X'01'          ERROR WAS PRESENT                          04864
OUTBYT   DS    0F                                                        04865
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        04866
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             04867
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  04868
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        04869
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         04870
LTMCNTR  DC    F'0'                                                      04871
LTMBINAD DC    F'0'                                                      04872
LTMCOUNT DC    PL6'0'                                                    04873
TWO31    DC    P'2147483648'       2 TO THE 31ST                         04874
         DC    C'      '                                                 04875
         DC    C'0'                                                      04876
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      04877
         DC    C'      '                                                 04878
DWORD    DC    D'0'                                                      04879
QWORD    DS    PL16                                                      04880
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  04881
ZEROA23  DC    23X'30'        TEST FOR IEHINITTED ASCII HDR1             04882
         CNOP  0,8                                                       04883
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'                         04884
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'                         04885
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'0001'                         04886
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04887
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE 2 FILES   04888
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACKSPACE ONE FILE  04889
         DC    X'03',AL3(INAREA),X'2000',X'0001'                         04890
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04891
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04892
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'0001'     BACKSPACE BLOCK     04893
         DC    X'3F',AL3(INAREA),X'6000',X'0001'     FWD SPACE FILE      04894
         DC    X'2F',AL3(INAREA),X'6000',X'0001'     BACK OVER T.M.      04895
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         04896
INECB    DC    F'0'                                                      04897
INIOB    DC    X'02000000'                                               04898
         DC    A(INECB)                                                  04899
INCSW    DC    2F'0'                                                     04900
INCCWPT  DC    A(INCCW)                                                  04901
         DC    A(IN)                                                     04902
         DC    F'0'                                                      04903
         DC    X'00010000'                                               04904
OUTECB   DC    F'0'                                                      04905
OUTIOB   DC    X'02000000'                                               04906
         DC    A(OUTECB)                                                 04907
OUTCSW   DC    2F'0'                                                     04908
OUTCCWPT DC    A(OUTCCW)                                                 04909
OUTDCBPT DC    A(OUT1)                                                   04910
         DC    F'0'                                                      04911
         DC    X'00010000'                                               04912
REWECB   DC    F'0'                                                      04913
REWIOB   DC    X'02000000'                                               04914
         DC    A(REWECB)                                                 04915
REWCSW   DC    2F'0'                                                     04916
REWCCWPT DC    A(REWCCW)                                                 04917
REWDCBPT DC    A(OUT1)                                                   04918
         DC    F'0'                                                      04919
         DC    X'00010000'                                               04920
BK1BECB  DC    F'0'                                                      04921
BK1BIOB  DC    X'02000000'                                               04922
         DC    A(BK1BECB)                                                04923
BK1BCSW  DC    2F'0'                                                     04924
BKBCCWPT DC    A(BK1BCCW)                                                04925
BKBDCBPT DC    A(IN)                                                     04926
         DC    F'0'                                                      04927
         DC    X'00010000'                                               04928
         SPACE 3                                                         04929
DDOCHG   DC    C'     '                                                  04930
DDOUT1   DC    C'OUT1 '                                                  04931
DDOUT2   DC    C'OUT2 '                                                  04932
DDOUT3   DC    C'OUT3 '                                                  04933
DDOUT4   DC    C'OUT4 '                                                  04934
DDOUT5   DC    C'OUT5 '                                                  04935
DDOUT6   DC    C'OUT6 '                                                  04936
DDOUT7   DC    C'OUT7 '                                                  04937
DDOUT8   DC    C'OUT8 '                                                  04938
DDOUT9   DC    C'OUT9 '                                                  04939
DDOUT10  DC    C'OUT10'                                                  04940
DDOUT11  DC    C'OUT11'                                                  04941
DDOUT12  DC    C'OUT12'                                                  04942
DDOUT13  DC    C'OUT13'                                                  04943
DDOUT14  DC    C'OUT14'                                                  04944
DDOUT15  DC    C'OUT15'                                                  04945
DDOUT16  DC    C'OUT16'                                                  04946
FLAGLIT  DC    C' - FLAGS - '                                            04947
* --------------------------                                             04948
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      04949
FLAG1    DC    X'00'                                                     04950
OP1      EQU   X'80'                                                     04951
OP2      EQU   X'40'                                                     04952
OP3      EQU   X'20'                                                     04953
OP4      EQU   X'10'                                                     04954
OP5      EQU   X'08'                                                     04955
OP6      EQU   X'04'                                                     04956
OP7      EQU   X'02'                                                     04957
OP8      EQU   X'01'                                                     04958
FLAG2    DC    X'00'                                                     04959
OP9      EQU   X'80'                                                     04960
OP10     EQU   X'40'                                                     04961
OP11     EQU   X'20'                                                     04962
OP12     EQU   X'10'                                                     04963
OP13     EQU   X'08'                                                     04964
OP14     EQU   X'04'                                                     04965
OP15     EQU   X'02'                                                     04966
OP16     EQU   X'01'                                                     04967
FLAG2A   DC    X'00'                                          SBG 03/00  04968
ERR      EQU   X'02'                                                     04969
EOV      EQU   X'01'                                                     04970
EOVSOON  EQU   X'01'         X'01' IS INITIAL SETTING.                   04971
FF       EQU   X'FF'                                                     04972
FLAG3    DC    X'00'                                                     04973
FLAG4    DC    X'00'                                                     04974
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  04975
* ---------- *                                                           04976
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      04977
*              x'01'    Yes.                                             04978
* ---------- *                                                           04979
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   04980
*              X'01'    HDR1 HAS BEEN READ IN                            04981
*              X'02'    HDR2 HAS BEEN READ IN                            04982
*              X'04'    VOL1 HAS BEEN READ IN                            04983
*              X'08'    UHL  HAS BEEN READ IN                            04984
*              X'10'    EOF1 HAS BEEN READ IN                            04985
*              X'20'    EOF2 HAS BEEN READ IN                            04986
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           04987
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           04988
* ---------- *                                                           04989
STRIPFLG DC    X'00'                                                     04990
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    04991
DATFLAG  DC    X'00'                                          SBG 03/00  04992
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  04993
* --------------------------------------------------------- * SBG 04/00  04994
VOLDD    DC    C'     '                                                  04995
STOR7REG DS    F                                                         04996
TOTB7REG DS    F                                                         04997
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       04998
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       04999
SAVE13LC DC    3F'0'                                                     05000
SAV45MSG DC    2F'0'                                                     05001
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05002
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        05003
         SPACE 3                                                         05004
LABELITH DC    CL80'----ENDOFLABELHEADER '                               05005
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            05006
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               05007
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            05008
LTMCTPAT DC    X'4020202020202020202120'                                 05009
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   05010
VOL1LABL DS    0CL80                                                     05011
VOL1LIT  DC    CL4'VOL1'                                                 05012
VOL1SERL DC    CL6' '                                                    05013
VOL1FIL1 DC    CL31' '                                                   05014
VOL1ONER DC    CL10' '                                                   05015
VOL1FIL2 DC    CL29' '                                                   05016
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   05017
HDR1INIT DS    0CL80                                                     05018
HDR1ILIT DC    CL4'HDR1'                                                 05019
HDR1IFIL DC    76C'0'                                                    05020
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   05021
AVOL1LAB DS    0CL80                                                     05022
AVOL1LIT DC    CL4'VOL1'                                                 05023
AVOL1SER DC    CL6' '                                                    05024
AVOL1ACC DC    CL1' '                                                    05025
AVOL1RS1 DC    CL13' '                                                   05026
AVOL1IMP DC    CL13' '                                                   05027
AVOL1OWN DC    CL14' '                                                   05028
AVOL1RS2 DC    CL28' '                                                   05029
AVOL1LVL DC    CL1'3'                                                    05030
* ------------------------ INITIALIZATION OF ASCII VOLUMES --------- *   05031
AHDR1INI DS    0CL80                                                     05032
AHDR1LIT DC    CL4'HDR1'                                                 05033
AHDR1ID1 DC    23C'0'                                                    05034
AHDR1FSN DC    CL4'0001'                                                 05035
AHDR1FSQ DC    CL4'0001'                                                 05036
AHDR1GNM DC    CL4'0001'                                                 05037
AHDR1VNM DC    CL2'00'                                                   05038
AHDR1CRD DC    CL6' 00000'                                               05039
AHDR1EXD DC    CL6' 00000'                                               05040
AHDR1ACC DC    CL1' '                                                    05041
AHDR1BKC DC    CL6'000000'                                               05042
AHDR1OSC DC    CL20'IBMZLA '                                             05043
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   05044
MSGCSECT CSECT                                                           05045
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          05046
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05047
         DC    CL78' '                                                   05048
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          05049
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05050
         DC    CL78' '                                                   05051
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          05052
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   05053
         DC    CL78' '                                                   05054
BLKCNTMS DC    C' BLOCK COUNTS in EOF1 and EOV1 are being corrected fo'  05055
         DC    C'r TAPE COPY operation, when outputs are SL.'            05056
         DC    CL37' '                                                   05057
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  05058
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  05059
         DC    C'A PARM OF INITVOLS.'                                    05060
         DC    CL8' '                                                    05061
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  05062
         DC    C'                             MEMBER=         VOLUME= '  05063
         DC    C'                          '                             05064
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  05065
         DC    C'                             MEMBER=         VOLUME= '  05066
         DC    C'                          '                             05067
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  05068
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  05069
         DC    C' MULTIPLE OF 80           '                             05070
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  05071
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  05072
         DC    C' TAPES. '                                               05073
         DC    CL19' '                                                   05074
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05075
         DC    C' IS TREATED AS NL.                                   '  05076
         DC    CL27' '                                                   05077
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05078
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05079
         DC    CL27' '                                                   05080
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05081
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05082
         DC    CL27' '                                                   05083
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05084
         DC    CL6'&HEXDFLM'                                             05085
         DC    C' RECORDS WILL'                                          05086
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05087
         DC    C'SYSIN.'                                                 05088
         DC    CL17' '                                                   05089
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  05090
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  05091
         DC    C'UT TAPES.                 '                             05092
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  05093
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  05094
         DC    C' MULTIPLE OF 80           '                             05095
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  05096
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  05097
         DC    C'IMAGES.                   '                             05098
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  05099
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  05100
         DC    C'                           '                            05101
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  05102
         DC    C'ing a Tape Mark right now.                           '  05103
         DC    C'                           '                            05104
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  05105
         DC    C'.  Divide by 3 for the SL file number ***            '  05106
         DC    C'                           '                            05107
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  05108
         DC    C'.  Multiply by 3 for the NL file number ***          '  05109
         DC    C'                           '                            05110
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  05111
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  05112
         DC    C't code PARM=SLLIM.         '                            05113
FORCREAD DC    C' Option READONLY has been forced by not having any OU'  05114
         DC    C'Txx DDNAMES coded in the JCL.                        '  05115
         DC    C'                           '                            05116
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         05117
         DC    C'TERMINATED '                                            05118
         DC    76C'*'                                                    05119
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    05120
         DC    82C'*'                                                    05121
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  05122
         DC    C' FOR DDNAME '                                           05123
VOLDDN   DC    C'     '                                                  05124
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  05125
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 05126
OWNRTID  DC    C'          '                                             05127
OWNRTIDE DC    C'    '                                                   05128
OWNRLIT1 DC    C' FOR DDNAME '                                           05129
OWNRDDO  DC    C'     '                                                  05130
OWNRFIL2 DC    64C' '                                                    05131
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  05132
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  05133
         DC    C'  '                                                     05134
         DC    C'LTM Number ='                                           05135
LTMRNUM  DC    C'           '                                            05136
         DC    78C' '                                                    05137
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  05138
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  05139
         DC    69C' '                                         SBG 06/00  05140
INITASC3 DC    C' ASCII TAPE INIT LVL 3 '                                05141
INITASC4 DC    C' ASCII TAPE INIT LVL 4 '                                05142
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           05143
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                05144
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           05145
INITSER  DC    C'      '                                      SBG 03/00  05146
INITBLNK DC    76C' '                                         SBG 03/00  05147
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        05148
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               05149
OUTCFCNT DC    C'XXXXXXXXXX'                                             05150
         DC    C'  Bytes:'                                               05151
OUTCBCNT DC    CL26' '                                                   05152
         DC    C' '                                                      05153
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        05154
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05155
         DC    40C'*'                                                    05156
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        05157
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05158
         DC    40C'*'                                                    05159
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        05160
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         05161
         DC    40C'*'                                                    05162
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               05163
FILEPBYT DS    0CL44                                                     05164
FILEDFL1 DC    C' '                                                      05165
FILECONT DC    C'          '                                             05166
FILEDFL2 DC    C' '                                                      05167
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             05168
         DC    C' BYTES'                                                 05169
FILETBYT DS    0CL44                                                     05170
FILEDFL3 DC    C'    '                                                   05171
FILECUMT DC    C'          '                                             05172
FILEDFL4 DC    C' '                                                      05173
FILETBYE DC    C' 9,999,999,999,999,999,999'                             05174
         DC    8C' '                                                     05175
FOOTMSG1 DS    0CL133                                                    05176
         DC    C' File '                                                 05177
FOOTMNUM DC    C'     '                                                  05178
         DC    C' Ft @ 6250: '                                           05179
FOOTMFT  DC    C'          '                                             05180
         DC    C' Cumulative Feet for this Tape: '                       05181
FOOTMCFT DC    C'          '                                             05182
FOOTMFIL DC    58C' '                                                    05183
MNMXMSG1 DS    0CL133                                                    05184
         DC    C' File '                                                 05185
MNMXFNUM DC    C'     '                                                  05186
         DC    C' Min Blksize: '                                         05187
MNMXMIN  DC    C'        '                                               05188
         DC    C' Max Blksize: '                                         05189
MNMXMAX  DC    C'        '                                               05190
         DC    78C' '                                                    05191
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     05192
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     05193
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      05194
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  05195
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 05196
               LSER: XXXXXX '                                 SBG 06/00  05197
         DC    66C' '                                         SBG 06/00  05198
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 05199
               ERIAL XXXXXX '                                 SBG 06/00  05200
         DC    66C' '                                         SBG 06/00  05201
         DC    C' '                                                      05202
COPYMODS CSECT                                                           05203
HEXPRTWK DC    CL133' '                                                  05204
         DC    C' '                                                      05205
LINE     DC    CL133' '                                                  05206
         DC    C' '                                                      05207
SAVELINE DC    CL133' '                                                  05208
LINE44   DC    CL44' '                                                   05209
RULERHEX DS    0CL132                                                    05210
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   05211
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  05212
         DC    C'----1----+----2----+----3----+----4'                    05213
REPLY    DC    C'      '                                                 05214
COPIED   DC    C'COPIED '                                     SBG 03/00  05215
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  05216
WRITTEN  DC    C'WRITTEN'                                                05217
READDD   DC    C'READ   '                                                05218
PASSED   DC    C'PASSED '                                                05219
FULLWORK DS    0F                                             SBG 03/00  05220
         DC    H'0'                                           SBG 03/00  05221
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  05222
         DC    2F'0'               FILLER                     SBG 05/00  05223
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05224
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    05225
* --------------------------------------------------------- * SBG 05/00  05226
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                05227
PARMFLG1 DC    X'00'                                                     05228
*              X'DE'    LABEL INFORMATION WILL BE PRINTED                05229
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED               05230
PARMFLG2 DC    X'00'                                                     05231
PARMFLG3 DC    X'00'                                                     05232
PARMFLG4 DC    X'00'                                                     05233
PARMFLG5 DC    X'00'                                                     05234
PARMFLG6 DC    X'00'                                                     05235
PARMFLG7 DC    X'00'                                                     05236
PARMFLG8 DC    X'00'                                                     05237
PARMFLG9 DC    X'00'                                                     05238
PARMFLGA DC    X'00'                                                     05239
PARMFLLN EQU   *-PARMFLGS                                                05240
PARMCOPY DS    XL10                Copy of options before correction     05241
* --------------------------------------------------------- * SBG 05/00  05242
         DS    0F                                                        05243
STRTVALU DS    0CL(ENDVALUE)                                             05244
         DC    A(ENDVALUE)                                               05245
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05246
*                                  Upon entry to PARMCHEK, contains      05247
*                                  the PARM address from COPYMODS,       05248
*                                  which gets overlaid.                  05249
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05250
*                                  Upon entry to PARMCHEK, contains      05251
*                                  the PARM address from COPYMODS,       05252
*                                  which gets overlaid.                  05253
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05254
*                                  Upon entry to PARMCHEK, contains      05255
*                                  the PARM length from COPYMODS,        05256
*                                  which gets overlaid.                  05257
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05258
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05259
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05260
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05261
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05262
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05263
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05264
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05265
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05266
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 05267
         DC    CL7' '              FILLER                                05268
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            05269
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     05270
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05271
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05272
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05273
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05274
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05275
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05276
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       05277
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05278
TAPEOWN  DC    CL10' '                                                   05279
TAPEOEXT DC    CL4' '                                                    05280
TAPEOASC DC    CL14' '                                                   05281
OVERFLAG DC    X'00'                                                     05282
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05283
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05284
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05285
LIMCHAR  DC    CL10' '                                                   05286
LABCHAR  DC    CL10' '                                                   05287
PRTCHAR  DC    CL10' '                                                   05288
LTMCHAR  DC    CL10' '                                                   05289
ENDVALUE EQU   (*-PARMSLEN)+4                                            05290
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     05291
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    05292
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05293
* --------------------------------------------------------- *            05294
*              FORMAT OF PARM TABLE                                      05295
*              ONE ENTRY IS 20 BYTES                                     05296
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05297
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05298
*                               X'00' SAYS TURN FLAG ON                  05299
*                               X'10' SET ENTRY AS A DEFAULT             05300
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05301
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                05302
*                                WHICH ALLOWS FOR 80 PARMS               05303
*                                THAT DON'T HAVE TO BE                   05304
*                                SEPARATED BY A COMMA.                   05305
PBYTES   EQU   10               NUMBER OF PARM SWITCH BYTES              05306
* --------------------------------------------------------- *            05307
EFFS     DC    X'FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF'               05308
* --------------------------------------------------------- *            05309
         SPACE 3                                                         05310
         LTORG                                                           05311
         SPACE 3                                                         05312
         DS    0D                                             SBG 09/00  05313
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        05314
LBNJFCB  DC    44F'0'                                                    05315
         DS    0D                                             SBG 09/00  05316
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        05317
LBLJFCB  DC    44F'0'                                                    05318
         DS    0D                                             SBG 05/00  05319
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        05320
OUTJFCB  DC    44F'0'                                                    05321
         DS    0D                                             SBG 06/00  05322
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  05323
INJFCB   DC    44F'0'                                         SBG 06/00  05324
         SPACE 3                                                         05325
VOLALL   DS    0CL96         16 X 6                                      05326
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05327
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05328
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05329
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05330
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05331
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05332
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05333
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05334
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05335
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05336
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05337
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05338
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05339
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05340
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05341
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               05342
VOLALLLN EQU   *-VOLALL                                                  05343
* --------------------------------------------------------- * SBG 05/00  05344
         SPACE 3                                                         05345
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 05346
               EXLST=INEXLST                                             05347
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 05348
               EXLST=OUTEXLST                                            05349
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 05350
               EXLST=OUTEXLST                                            05351
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 05352
               EXLST=OUTEXLST                                            05353
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 05354
               EXLST=OUTEXLST                                            05355
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 05356
               EXLST=OUTEXLST                                            05357
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 05358
               EXLST=OUTEXLST                                            05359
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 05360
               EXLST=OUTEXLST                                            05361
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 05362
               EXLST=OUTEXLST                                            05363
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 05364
               EXLST=OUTEXLST                                            05365
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 05366
               EXLST=OUTEXLST                                            05367
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 05368
               EXLST=OUTEXLST                                            05369
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 05370
               EXLST=OUTEXLST                                            05371
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 05372
               EXLST=OUTEXLST                                            05373
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 05374
               EXLST=OUTEXLST                                            05375
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 05376
               EXLST=OUTEXLST                                            05377
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 05378
               EXLST=OUTEXLST                                            05379
         ENTRY SYSPRINT                                                  05380
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05381
               BLKSIZE=133                                               05382
         ENTRY LABLDUMP                                                  05383
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 05384
               EXLST=LBLEXLST                                            05385
         ENTRY LABADDIN                                                  05386
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 05387
               EXLST=LBNEXLST,EODAD=LBLINEND                             05388
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  05389
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  05390
SAVE2TO3 DC    2F'0'                                                     05391
SAVE3REG DC    F'0'                                                      05392
SAVE7BA1 DC    F'0'                                                      05393
SAVE7REG DC    F'0'                                                      05394
SAVE7BAL DC    F'0'                                                      05395
SAVE7RG1 DC    F'0'                                                      05396
SAVE7RG2 DC    F'0'                                                      05397
SAVE7RG3 DC    F'0'                                                      05398
SAVE7RG4 DC    F'0'                                                      05399
SAVE7RG5 DC    F'0'                                                      05400
SAVE7RG6 DC    F'0'                                                      05401
R5HXPRT  DC    F'0'                                                      05402
R7HXPRT  DC    F'0'                                                      05403
SAVTRTCS DC    F'0'                                                      05404
ENTRYPT  DC    F'0'                                                      05405
LABCHENT DC    F'0'                                                      05406
PRTLBENT DC    F'0'                                                      05407
FOOTGENT DC    F'0'                                                      05408
PARMSAVE DC    F'0'                                                      05409
PARMADDR DC    F'0'                                                      05410
USERSAVE DC    F'0'                                                      05411
SAVELBCK DC    F'0'                                                      05412
         DC    CL4' '                                                    05413
HDR1SAV  DC    CL80' '                                                   05414
HDR2SAV  DC    CL80' '                                                   05415
UHL1SAV  DC    CL80' '                                                   05416
UHL2SAV  DC    CL80' '                                                   05417
UHL3SAV  DC    CL80' '                                                   05418
UHL4SAV  DC    CL80' '                                                   05419
UHL5SAV  DC    CL80' '                                                   05420
UHL6SAV  DC    CL80' '                                                   05421
UHL7SAV  DC    CL80' '                                                   05422
UHL8SAV  DC    CL80' '                                                   05423
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          05424
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      05425
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 05426
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  05427
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                    05428
*   This area must match the FOOTWORK DSECT in the FOOTAGE routine.      05429
LABELTYP DS    C                       LABEL TYPE                        05430
DENSITY  DS    C                       DENSITY CODE                      05431
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY    05432
BLKSZE   DS    F                       BLOCK SIZE IN BINARY              05433
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY        05434
USERLBLS DS    F                       USER LABELS IN BINARY             05435
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL             05436
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC            05437
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC            05438
*--------END OF FOOTAGE ROUTINE PARAMETERS                               05439
BLKSZWRK DS    F          Work area to calculate maximum BLKSZE          05440
TRTCSECT CSECT                                                           05441
* ------------------------------------------------------------------- *  05442
*   You have to make sure to keep the TRTDSECT that is in LABELCHK    *  05443
*   (and possibly other places) in synchronization with this CSECT.   *  05444
* ------------------------------------------------------------------- *  05445
TRTBL0   DS    0D                                                        05446
         DC    XL16'40404040404040404040404040404040'                    05447
         DC    XL16'40404040404040404040404040404040'                    05448
         DC    XL16'40404040404040404040404040404040'                    05449
         DC    XL16'40404040404040404040404040404040'                    05450
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    05451
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    05452
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    05453
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    05454
         DC    XL16'40818283848586878889404040404040'                    05455
         DC    XL16'40919293949596979899404040404040'                    05456
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    05457
         DC    XL16'40404040404040404040404040404040'                    05458
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    05459
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    05460
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    05461
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    05462
TRTBL1   DS    0D                                                        05463
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    05464
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    05465
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    05466
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    05467
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    05468
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    05469
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    05470
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    05471
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    05472
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    05473
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    05474
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    05475
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    05476
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    05477
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    05478
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    05479
TRTBL2   DS    0D                                                        05480
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05481
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05482
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05483
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05484
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05485
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05486
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05487
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05488
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05489
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05490
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05491
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05492
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05493
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05494
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05495
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    05496
TRTE2A   DS    0D                                                        05497
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    05498
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    05499
         DC    XL16'202122232425262728292A2B2C2D2E2F'                    05500
         DC    XL16'303132333435363738393A3B3C3D3E3F'                    05501
         DC    XL16'20414243444546474849A22E3C282B7C'                    05502
         DC    XL16'2651525354555657585921242A293B5E'                    05503
         DC    XL16'2D2F6263646566676869A62C255F3E3F'                    05504
         DC    XL16'707172737475767778603A2340273D22'                    05505
         DC    XL16'806162636465666768698ABBF0FDFEB1'                    05506
         DC    XL16'906A6B6C6D6E6F7071729ABAE6B8C6A4'                    05507
         DC    XL16'B57E737475767778797AAABFD05BDEAE'                    05508
         DC    XL16'ACA3A5B7A9A7B6BCBDBEBAA8AF5DB4D7'                    05509
         DC    XL16'7B414243444546474849CACBCCCDCECF'                    05510
         DC    XL16'7D4A4B4C4D4E4F505152DADBDCDDDEDF'                    05511
         DC    XL16'5CF7535455565758595AEAEBECEDEEEF'                    05512
         DC    XL16'30313233343536373839FAFBFCFDFEFF'                    05513
TRTA2E   DS    0D                                                        05514
         DC    XL16'000102030405060708090A0B0C0D0E0F'                    05515
         DC    XL16'101112131415161718191A1B1C1D1E1F'                    05516
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05517
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05518
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05519
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05520
         DC    XL16'79818283848586878889919293949596'                    05521
         DC    XL16'979899A2A3A4A5A6A7A8A9C04FD0A17F'                    05522
         DC    XL16'808182838485868788898A8B8C8D8E8F'                    05523
         DC    XL16'909192939495969798999A9B9C9D9E9F'                    05524
         DC    XL16'A0A14AB19FB26AB5BBB4AAABB0ADAFBC'                    05525
         DC    XL16'B08FB2B3BEA0B6B39DB99BB8B7B8B9AB'                    05526
         DC    XL16'C0C1C2C3C4C59EC7C8C9CACBCCCDCECF'                    05527
         DC    XL16'ACD1D2D3D4D5D6BFD8D9DADBDCDDAEDF'                    05528
         DC    XL16'E0E1E2E3E4E59CE7E8E9EAEBECEDEEEF'                    05529
         DC    XL16'8CF1F2F3F4F5F6E1F8F9FAFBFC8D8EFF'                    05530
TRTASPRT DS    0D                                                        05531
         DC    XL16'40404040404040404040404040404040'                    05532
         DC    XL16'40404040404040404040404040404040'                    05533
         DC    XL16'405A7F7B5B6C507D4D5D5C4E6B604B61'                    05534
         DC    XL16'F0F1F2F3F4F5F6F7F8F97A5E4C7E6E6F'                    05535
         DC    XL16'7CC1C2C3C4C5C6C7C8C9D1D2D3D4D5D6'                    05536
         DC    XL16'D7D8D9E2E3E4E5E6E7E8E9ADE0BD5F6D'                    05537
         DC    XL16'40818283848586878889919293949596'                    05538
         DC    XL16'979899A2A3A4A5A6A7A8A94D4F5DA17F'                    05539
         DC    XL16'40404040404040404040404040404040'                    05540
         DC    XL16'40404040404040404040404040404040'                    05541
         DC    XL16'40404040404040404040404040404040'                    05542
         DC    XL16'40404040404040404040404040404040'                    05543
         DC    XL16'40404040404040404040404040404040'                    05544
         DC    XL16'40404040404040404040404040404040'                    05545
         DC    XL16'40404040404040404040404040404040'                    05546
         DC    XL16'40404040404040404040404040404040'                    05547
         EJECT                                                           05548
JFCBLK   DSECT                                                           05549
         IEFJFCBN LIST=YES                                               05550
COPYMODS CSECT                                                           05551
INAREA   DS    CL65535                                        SBG 03/00  05552
#PAN$AUD CSECT                                                           05553
$PAN#AUD DC    CL30'LEVEL 079 COPYMODS  07/07/04 '                       05554
         END                                                             05555
*          PRINT OPTION LIST   AT LEVEL 079 AS OF 07/07/04               05556
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 05557
**************************************************************           05558
**************************************************************           05559
**                                                          **           05560
**                                                          **           05561
**  MODULE: COPYMOPT                                        **           05562
**                                                          **           05563
**                                                          **           05564
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           05565
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           05566
**            PROGRAM.                                      **           05567
**                                                          **           05568
**                                                          **           05569
**  Technique Note:  A separate SYSPRINT DCB is coded here  **           05570
**            in this CSECT, besides the SYSPRINT DCB       **           05571
**            that was coded in the main COPYMODS CSECT.    **           05572
**            The SYSPRINT DCB that is here, is OPENed      **           05573
**            and CLOSEd by this CSECT before COPYMODS'     **           05574
**            SYSPRINT DCB is OPENed for the first time.    **           05575
**            This gives a "DISP=MOD" effect for the        **           05576
**            //SYSPRINT DD name, and it also allows SDSF   **           05577
**            or any other spool browser program to show    **           05578
**            the options in effect in SYSPRINT, before     **           05579
**            any tapes have been mounted yet.              **           05580
**                                                          **           05581
**************************************************************           05582
**************************************************************           05583
         EJECT                                                           05584
         YREGS                                                           05585
COPYMOPT CSECT                                                           05586
         USING *,R15                                          SBG 03/00  05587
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     05588
         B     EYECATCH                                       SBG 03/00  05589
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  05590
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   05591
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  05592
SAVEAREA DC    18F'0'                                                    05593
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  05594
         SAVE  (14,12)                                                   05595
         LR    R5,R1          SAVE PASSED QUANTITY                       05596
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   05597
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          05598
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         05599
         LR    R13,R1               NEW SAVE AREA ADDRESS                05600
         DROP  R15                                                       05601
* -----                       SET UP TWO BASE REGISTERS                  05602
         USING COPYMOPT,R12,R11                                          05603
         LR    R12,R15                                                   05604
         LA    R11,4095(,R12)                                            05605
         LA    R11,1(,R11)                                               05606
         LR    R1,R5          RESTORE PARM POINTER                       05607
OPTMOVE  DS    0H                                                        05608
         MVC   PARMTBIN(10),0(R1)     MOVE PARMS INTO THIS PGM           05609
         TM    TWICEFLG,X'02'         Second call to program?            05610
         BO    OPTMOVEO               Don't move ten bytes past....      05611
         MVC   PARMTCPY(10),10(R1)    Move original parms if first call  05612
         MVC   PARMFSAV(10),0(R1)     And save changed parms             05613
         OI    TWICEFLG,X'02'         Show original parms moved already  05614
OPTMOVEO DS    0H                                                        05615
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       05616
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       05617
         OPEN  (SYSPRINT,OUTPUT)                                         05618
         TM    TWICEFLG,X'01'         Is this the second time here?      05619
         BZ    WRITORIG               No. Write the original headers.    05620
         TM    PARMTBIN+5,X'80'       Is CODEDPRM coded?                 05621
         BO    NOWRTHDR               Yes. Write different headers.      05622
WRITORIG DS    0H                     Write original OPTIONS headers.    05623
         OI    TWICEFLG,X'01'         Show we were here once already.    05624
         MVC   LINE(133),LINE-1       CLEAR LINE                         05625
         MVC   LINE(133),DISPLINH     Write original header 1.           05626
         PUT   SYSPRINT,LINE                                             05627
         MVC   LINE(133),LINE-1       CLEAR LINE                         05628
         MVC   LINE(133),DISPLINO     Write original header 2.           05629
         PUT   SYSPRINT,LINE                                             05630
         B     YSWRTHDR                                                  05631
NOWRTHDR DS    0H                     Write CODEDPRM different headers.  05632
         MVC   LINE(133),LINE-1       CLEAR LINE                         05633
         MVC   LINE(133),DISPNCOR     Write "before correction" hdr 1.   05634
         PUT   SYSPRINT,LINE                                             05635
         MVC   LINE(133),LINE-1       CLEAR LINE                         05636
         MVC   LINE(133),DISPNCRO     Write "before correction" hdr 2.   05637
         PUT   SYSPRINT,LINE                                             05638
YSWRTHDR DS    0H                                                        05639
         MVC   LINE(133),LINE-1       CLEAR LINE                         05640
         PUT   SYSPRINT,LINE                                             05641
         BAL   R7,FILLOPTS                                               05642
         MVC   LINE(133),LINE-1       CLEAR LINE                         05643
         MVC   LINE(133),DISPOP02                                        05644
         PUT   SYSPRINT,LINE                                             05645
         MVC   LINE(133),LINE-1       CLEAR LINE                         05646
         MVC   LINE(133),DISPOP01                                        05647
         PUT   SYSPRINT,LINE                                             05648
         MVC   LINE(133),LINE-1       CLEAR LINE                         05649
         MVC   LINE(133),DISPOP03                                        05650
         PUT   SYSPRINT,LINE                                             05651
         TM    TWICEFLG,X'04'         Don't do changed report on         05652
         BO    PARMGHNC                second call.                      05653
         CLC   PARMFSAV(10),PARMTCPY  COMPARE TO SEE IF PARMS CHANGED    05654
         BNE   PARMCHGD               Not equal, report that.            05655
         MVC   LINE(133),LINE-1       CLEAR LINE                         05656
         MVC   LINE(133),DISPSHNC     Display that parms not changed     05657
         PUT   SYSPRINT,LINE                                             05658
         B     PARMGHNC               And go on with other print lines   05659
PARMCHGD DS    0H                     Parms have changed                 05660
         MVC   LINE(133),LINE-1       CLEAR LINE                         05661
         MVC   LINE(133),DISPSHCR     Display that parms have changed    05662
         PUT   SYSPRINT,LINE                                             05663
PARMGHNC DS    0H                     Go on with other print lines       05664
         MVC   LINE(133),LINE-1       CLEAR LINE                         05665
         MVC   LINE(133),DISPHEXM                                        05666
         PUT   SYSPRINT,LINE                                             05667
         MVC   LINE(133),LINE-1       CLEAR LINE                         05668
         PUT   SYSPRINT,LINE                                             05669
         CLOSE (SYSPRINT)                                                05670
* ----------------------------------------------------------------- *    05671
THEEND   EQU   *                                                         05672
         TM    TWICEFLG,X'04'         Second call, unconditionally?      05673
         BO    OPTMOVE2               Yes. No need to set flag.          05674
         OI    TWICEFLG,X'04'         No. Set flag for next time.        05675
OPTMOVE2 DS    0H                                                        05676
THEEND1  DS    0H                                                        05677
         L     R13,4(,R13)                                               05678
         RETURN (14,12),RC=0                                             05679
         EJECT                                                           05680
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    05681
* ----------------------------------------------------------------- *    05682
*    BAL REGISTER IS R7.                                            *    05683
* ------------------------------------------------------------------*    05684
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            05685
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        05686
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        05687
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     05688
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  05689
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        05690
         BE    FILOPEND                                                  05691
         MVC   PARMWORK(10),0(R3)     MOVE BYTES TO BE TESTED            05692
         NC    PARMWORK(10),PARMTBIN  CHECK IF BYTE IS ON                05693
         BZ    FILLZER                                                   05694
         MVC   0(10,R2),10(R3)        MOVE OPTION TO DISPLAY - BIT ON    05695
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05696
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05697
         BCT   R4,FILLOOP             LOOP BACK                          05698
         B     FILNEXTB                                                  05699
FILLZER  DS    0H                                                        05700
         MVC   0(10,R2),20(R3)        MOVE OPTION TO DISPLAY - BIT OFF   05701
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           05702
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          05703
         BCT   R4,FILLOOP             LOOP BACK                          05704
FILNEXTB DS    0H                                                        05705
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  05706
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      05707
         PUT   SYSPRINT,LINE                                             05708
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    05709
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     05710
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     05711
FILOPEND BR    R7                                                        05712
* ----------------------------------------------------------------- *    05713
* ----------  CONSTANTS  ------------------------------------------ *    05714
         LTORG                                                           05715
         DS    0F                                                        05716
PARMTBIN DC    X'00000000000000000000'                                   05717
PARMTCPY DC    X'00000000000000000000'                                   05718
PARMFSAV DC    X'00000000000000000000'                                   05719
PARMWORK DC    X'00000000000000000000'                                   05720
PARMZERO DC    X'00000000000000000000'                                   05721
OPTABLE  DS    0D                                                        05722
         DC    X'20000000000000000000',C'LTMSKIP   ',C'LTMCOPY   '       05723
OPTENTLN EQU   *-OPTABLE                                                 05724
         DC    X'01000000000000000000',C'BLKCNT    ',C'NOBLKCNT  '       05725
         DC    X'02000000000000000000',C'HDR1      ',C'NOHDR1    '       05726
         DC    X'04000000000000000000',C'HDR2      ',C'NOHDR2    '       05727
         DC    X'08000000000000000000',C'EOF1      ',C'NOEOF1    '       05728
         DC    X'10000000000000000000',C'EOF2      ',C'NOEOF2    '       05729
         DC    X'40000000000000000000',C'EOV1      ',C'NOEOV1    '       05730
         DC    X'80000000000000000000',C'EOV2      ',C'NOEOV2    '       05731
         DC    X'00100000000000000000',C'LABLDUMP  ',C'NOLABLDU  '       05732
         DC    X'00200000000000000000',C'SYSIN     ',C'NOSYSIN   '       05733
         DC    X'00400000000000000000',C'OUTVOL ***',C'NOOUTVOL  '       05734
         DC    X'00800000000000000000',C'LABADDIN  ',C'NOLABADD  '       05735
         DC    X'00010000000000000000',C'CHGVOL    ',C'NOCHGVOL  '       05736
         DC    X'00020000000000000000',C'VOLLBL    ',C'NOVOLLBL  '       05737
         DC    X'00040000000000000000',C'EOVCHG    ',C'NOEOVCHG  '       05738
         DC    X'00080000000000000000',C'READONLY  ',C'WRITE     '       05739
         DC    X'00001000000000000000',C'PRADDLBL  ',C'NOPRADDL  '       05740
         DC    X'00002000000000000000',C'CORRBLKS  ',C'NOCORRBL  '       05741
         DC    X'00004000000000000000',C'NOEXNULL  ',C'EXNULL    '       05742
         DC    X'00008000000000000000',C'LBLFIX    ',C'NOLBLFIX  '       05743
         DC    X'00000100000000000000',C'INITVOLS  ',C'NOINITVO  '       05744
         DC    X'00000200000000000000',C'LIMFILE **',C'NOLIMFIL  '       05745
         DC    X'00000400000000000000',C'BYTES     ',C'NOBYTES   '       05746
         DC    X'00000800000000000000',C'CUMTOT    ',C'NOCUMTOT  '       05747
         DC    X'00000010000000000000',C'LIMLABEL *',C'NOLIMLAB  '       05748
         DC    X'00000020000000000000',C'OPTION    ',C'NOOPTION  '       05749
         DC    X'00000040000000000000',C'SUPPWTO   ',C'NOSUPPWT  '       05750
         DC    X'00000080000000000000',C'LBDQUICK  ',C'NOLBDQUI  '       05751
         DC    X'00000001000000000000',C'CUMSEP    ',C'NOCUMSEP  '       05752
         DC    X'00000002000000000000',C'STRIP     ',C'NOSTRIP   '       05753
         DC    X'00000004000000000000',C'NLLIM     ',C'NONLLIM   '       05754
         DC    X'00000008000000000000',C'SLLIM     ',C'NOSLLIM   '       05755
         DC    X'00000000100000000000',C'IDRCOFF   ',C'NOIDRCOF  '       05756
HXPRT    DC    X'00000000200000000000',C'HEXPRT    ',C'NOHEXPRT  '       05757
         DC    X'00000000400000000000',C'UNEXWTO   ',C'NOUNEXWT  '       05758
         DC    X'00000000800000000000',C'ASCII     ',C'EBCDIC    '       05759
         DC    X'00000000010000000000',C'INASC3    ',C'NOINASC3  '       05760
         DC    X'00000000020000000000',C'INASC4    ',C'NOINASC4  '       05761
         DC    X'00000000040000000000',C'          ',C'NOENABLT  '       05762
         DC    X'00000000080000000000',C'WRTLTM    ',C'          '       05763
         DC    X'00000000001000000000',C'SECOFF    ',C'NOSECOFF  '       05764
         DC    X'00000000002000000000',C'FOOTAGE   ',C'NOFOOTAGE '       05765
         DC    X'00000000004000000000',C'FOOTDIAG  ',C'NOFOOTDI  '       05766
         DC    X'00000000008000000000',C'CODEDPRM  ',C'NOCODEDP  '       05767
         DC    X'00000000000100000000',C'MINMAX    ',C'NOMINMAX  '       05768
         DC    X'00000000000200000000',C'          ',C'          '       05769
         DC    X'00000000000400000000',C'          ',C'          '       05770
         DC    X'00000000000800000000',C'          ',C'          '       05771
         DC    X'00000000000010000000',C'          ',C'          '       05772
         DC    X'00000000000020000000',C'          ',C'          '       05773
         DC    X'00000000000040000000',C'          ',C'          '       05774
         DC    X'00000000000080000000',C'          ',C'          '       05775
         DC    X'00000000000001000000',C'          ',C'          '       05776
         DC    X'00000000000002000000',C'          ',C'          '       05777
         DC    X'00000000000004000000',C'          ',C'          '       05778
         DC    X'00000000000008000000',C'          ',C'          '       05779
         DC    X'00000000000000100000',C'          ',C'          '       05780
         DC    X'00000000000000200000',C'          ',C'          '       05781
         DC    X'00000000000000400000',C'          ',C'          '       05782
         DC    X'00000000000000800000',C'          ',C'          '       05783
         DC    X'00000000000000010000',C'          ',C'          '       05784
         DC    X'00000000000000020000',C'          ',C'          '       05785
         DC    X'00000000000000040000',C'          ',C'          '       05786
         DC    X'00000000000000080000',C'          ',C'          '       05787
         DC    X'00000000000000001000',C'          ',C'          '       05788
         DC    X'00000000000000002000',C'          ',C'          '       05789
         DC    X'00000000000000004000',C'          ',C'          '       05790
         DC    X'00000000000000008000',C'          ',C'          '       05791
         DC    X'00000000000000000100',C'          ',C'          '       05792
         DC    X'00000000000000000200',C'          ',C'          '       05793
         DC    X'00000000000000000400',C'          ',C'          '       05794
         DC    X'00000000000000000800',C'          ',C'          '       05795
         DC    X'00000000000000000010',C'          ',C'          '       05796
         DC    X'00000000000000000020',C'          ',C'          '       05797
         DC    X'00000000000000000040',C'          ',C'          '       05798
         DC    X'00000000000000000080',C'          ',C'          '       05799
         DC    X'00000000000000000001',C'          ',C'          '       05800
         DC    X'00000000000000000002',C'          ',C'          '       05801
         DC    X'00000000000000000004',C'          ',C'          '       05802
         DC    X'00000000000000000008',C'          ',C'          '       05803
         DC    X'FFFFFFFFFFFFFFFFFFFF'                                   05804
*  -----                                                                 05805
TWICEFLG DC    X'00'     X'00' shows first invocation of this program.   05806
DISPAREA DS    0D                                                        05807
DISPSHNC DS    0CL133                                                    05808
         DC    C'     COPYMODS has not had to correct any of the optio'  05809
         DC    C'ns as coded in the JCL.                              '  05810
         DC    27C' '                                                    05811
DISPSHCR DS    0CL133                                                    05812
         DC    C'     COPYMODS attempts to keep the options consistent'  05813
         DC    C' and has changed some options. For a comparison repor'  05814
         DC    C't, code the CODEDPRM parm. '                            05815
DISPNCOR DS    0CL133                                                    05816
         DC    C'-    CODED PARMS BEFORE BEING CORRECTED BY THE COPYMO'  05817
         DC    C'DS PROGRAM  -  List of Uncorrected Options           '  05818
         DC    27C' '                                                    05819
DISPNCRO DS    0CL133                                                    05820
         DC    C'     OPTIONS:  As coded in the JCL and interpreted by'  05821
         DC    C' the PARMCHEK routine --                             '  05822
         DC    27C' '                                                    05823
DISPLINH DS    0CL133                                                    05824
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  05825
         DC    C'LEVEL 079 - OPTIONS DISPLAY                          '  05826
         DC    27C' '                                                    05827
DISPLINO DS    0CL133                                                    05828
         DC    C'-    OPTIONS IN EFFECT:                              '  05829
         DC    C'                                                     '  05830
         DC    27C' '                                                    05831
DISPOP01 DS    0CL133                                                    05832
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  05833
         DC    C'LIMIT=   SYSIN CARD                                  '  05834
         DC    27C' '                                                    05835
DISPOP02 DS    0CL133                                                    05836
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  05837
         DC    C'LIMIT=   SYSIN CARD                                  '  05838
         DC    27C' '                                                    05839
DISPOP03 DS    0CL133                                                    05840
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  05841
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  05842
         DC    27C' '                                                    05843
DISPHEXM DC    C'0NOTE - The HEXPRT option displays only original reco'  05844
         DC    C'rds before they have been changed by the COPYMODS pro'  05845
         DC    C'gram.                     '                             05846
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 05847
               BLKSIZE=133                                               05848
         DC    C' '                                                      05849
LINE     DS    CL133                                                     05850
DISPLIN1 DS    0CL133                                                    05851
         DC    C'0    '                                                  05852
DISPL1A  DC    8CL12' '                                                  05853
         DC    32C' '                                                    05854
DISPLIN2 DS    0CL133                                                    05855
         DC    C'     '                                                  05856
DISPL2A  DC    8CL12' '                                                  05857
         DC    32C' '                                                    05858
DISPLIN3 DS    0CL133                                                    05859
         DC    C'     '                                                  05860
DISPL3A  DC    8CL12' '                                                  05861
         DC    32C' '                                                    05862
DISPLIN4 DS    0CL133                                                    05863
         DC    C'     '                                                  05864
DISPL4A  DC    8CL12' '                                                  05865
         DC    32C' '                                                    05866
DISPLIN5 DS    0CL133                                                    05867
         DC    C'     '                                                  05868
DISPL5A  DC    8CL12' '                                                  05869
         DC    32C' '                                                    05870
DISPLIN6 DS    0CL133                                                    05871
         DC    C'     '                                                  05872
DISPL6A  DC    8CL12' '                                                  05873
         DC    32C' '                                                    05874
DISPLIN7 DS    0CL133                                                    05875
         DC    C'     '                                                  05876
DISPL7A  DC    8CL12' '                                                  05877
         DC    32C' '                                                    05878
DISPLIN8 DS    0CL133                                                    05879
         DC    C'     '                                                  05880
DISPL8A  DC    8CL12' '                                                  05881
         DC    32C' '                                                    05882
DISPLIN9 DS    0CL133                                                    05883
         DC    C'     '                                                  05884
DISPL9A  DC    8CL12' '                                                  05885
         DC    32C' '                                                    05886
DISPLINA DS    0CL133                                                    05887
         DC    C'     '                                                  05888
DISPLAA  DC    8CL12' '                                                  05889
         DC    32C' '                                                    05890
         SPACE 3                                                         05891
         EJECT                                                           05892
@PAN$AUD CSECT                                                           05893
$PAN#AUD DC    CL30'LEVEL 079 COPYMOPT  07/07/04 '                       05894
         END                                                             05895
*          PARM CHECKER        AT LEVEL 1.6 AS OF 07/07/04               05896
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       05897
**************************************************************           05898
**************************************************************           05899
**                                                          **           05900
**                                                          **           05901
**  MODULE:   PARMCHEK - Set option bits, based on          **           05902
**                       keywords coded in PARM and/or      **           05903
**                       SYSIN.                             **           05904
**                                                          **           05905
**  AUTHOR:   Sam Golob                                     **           05906
**                                                          **           05907
**  PURPOSE:  This program converts keywords in a PARM      **           05908
**            field or in SYSIN, into bit settings that     **           05909
**            a program can use, to control options in      **           05910
**            its execution.                                **           05911
**                                                          **           05912
**            This program can be run as a subroutine       **           05913
**            which is called, to set up to 10 bytes of     **           05914
**            bits, up to 80 bits in all, based on the      **           05915
**            settings of keywords in a table.              **           05916
**                                                          **           05917
**            This routine makes it easy to put a lot of    **           05918
**            options into a program.  If you want to       **           05919
**            add options, or use other words in PARM or    **           05920
**            SYSIN to call the same options, all you       **           05921
**            have to do, is to change or add entries in    **           05922
**            a table.  There is no extra coding to be      **           05923
**            done.                                         **           05924
**                                                          **           05925
**            Keywords in the PARM or SYSIN areas do not    **           05926
**            have to be delimited by commas or spaces or   **           05927
**            anything else.  Although for clarity, I'd     **           05928
**            certainly recommend that you put commas or    **           05929
**            spaces between the PARM field keywords.       **           05930
**            Therefore, I'd also advise that when you      **           05931
**            design keywords to put into the table to      **           05932
**            designate options, that you make them         **           05933
**            significantly different from each other.      **           05934
**            There is a length field in the table,         **           05935
**            however, which gives you some more control    **           05936
**            in this area.                                 **           05937
**                                                          **           05938
**            From a calling program, it would be possible  **           05939
**            to call PARMCHEK twice, against two different **           05940
**            tables, to set 20 bytes of options, instead   **           05941
**            of 10 bytes of options, and so forth...       **           05942
**                                                          **           05943
**            This gives you the opportunity of having      **           05944
**            a tremendous number of options, set by        **           05945
**            keywords, in your program, without using      **           05946
**            up valuable "base register space" for such    **           05947
**            coding.                                       **           05948
**                                                          **           05949
**                                                          **           05950
**  METHOD:   Bits, in the 10 bytes of PARMFLGS, are set,   **           05951
**            from a table, based on assembled defaults.    **           05952
**            These default settings are then overridden    **           05953
**            from a scan of words in the PARM field of     **           05954
**            the EXEC card.                                **           05955
**                                                          **           05956
**            If a SYSIN DD card is present, its cards      **           05957
**            are scanned against the table entries, to     **           05958
**            further override the bit settings which       **           05959
**            have already been done by the defaults and    **           05960
**            the PARM field.                               **           05961
**                                                          **           05962
**            The main purpose of this routine is to set    **           05963
**            bits from words.  However, if you need some   **           05964
**            keywords with values, such as (for example)   **           05965
**            FILELIMIT=69  in your program, you may use    **           05966
**            the "user code" section of this program       **           05967
**            to code that stuff in, so that these special  **           05968
**            keywords can be coded in SYSIN.               **           05969
**                                                          **           05970
**            Two sample keywords expecting number values:  **           05971
**            FILELIMIT=nnn  or                             **           05972
**            LABELIMIT=mmm                                 **           05973
**            have been coded here, just to illustrate      **           05974
**            how the user coding might work.               **           05975
**                                                          **           05976
**            Search order is:  Defaults, then PARM in      **           05977
**            the EXEC card, then SYSIN.                    **           05978
**                                                          **           05979
**            As coded here, the FILELIMIT= and             **           05980
**            LABELIMIT= keywords in SYSIN have to be in    **           05981
**            column 1 of the SYSIN cards, and if these     **           05982
**            "special keywords" are present in a card,     **           05983
**            the rest of that card is not scanned for      **           05984
**            the table keywords.                           **           05985
**                                                          **           05986
**            As coded here, the PARMTABL is a separate     **           05987
**            CSECT, addressable by V-CONs from the         **           05988
**            PARMCHEK CSECT.                               **           05989
**                                                          **           05990
**            It would probably be best to invoke the       **           05991
**            PARMCHEK program as a separate CSECT which    **           05992
**            is linkedited with the calling program,       **           05993
**            but it may be LOADed and BALR 14,15 'ed to,   **           05994
**            and run as a separate program.  (See the      **           05995
**            PARMDRVR program that is included in this     **           05996
**            package, as a sample.)                        **           05997
**                                                          **           05998
**    Input:  A fullword containing the address of the      **           05999
**            saved Register 1 from the calling program,    **           06000
**            which points to its parms.                    **           06001
**                                                          **           06002
**            A table containing parms, which is coded      **           06003
**            according to the following rules, and which   **           06004
**            has entries of 20 bytes apiece.               **           06005
**                                                          **           06006
**      FORMAT OF THE PARM TABLE                            **           06007
**                                                          **           06008
**        ONE ENTRY IS 20 BYTES                             **           06009
**                                                          **           06010
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           06011
**                         (This is the word which          **           06012
**                          controls the bit settings.)     **           06013
**                         (up to and including 8 bytes)    **           06014
**                                                          **           06015
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           06016
**                         X'00' says turn bit flag(s) ON   **           06017
**                         X'10' set entry as a DEFAULT     **           06018
**                                                          **           06019
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           06020
**                         (This is the word searched on,   **           06021
**                          in the EXEC PARM and SYSIN      **           06022
**                          areas.)                         **           06023
**                                                          **           06024
**          NEXT 10 BYTES: FLAG BIT settings controlled by  **           06025
**                          this keyword.                   **           06026
**                                                          **           06027
**                         These are the bits which the     **           06028
**                          keyword will flip on (or off).  **           06029
**                                                          **           06030
**                         You may control multiple bits    **           06031
**                          using one keyword.  All bits    **           06032
**                          controlled by this keyword      **           06033
**                          are coded in this entry field.  **           06034
**                                                          **           06035
**          The table is ended by an entry of X'FF's.       **           06036
**                                                          **           06037
**                                                          **           06038
**    Output:  R1 points to a 10-byte area containing the   **           06039
**             80 switch settings.                          **           06040
**                                                          **           06041
**             Sample code to use PARMCHEK output:          **           06042
**                                                          **           06043
**                      ST    R1,PARMADDR                   **           06044
**                      USING PARMFLGS,R1                   **           06045
**             *                                            **           06046
**             PARMFLGS DSECT                               **           06047
**             PARMFLG1 DS    X                             **           06048
**             PARMFLG2 DS    X                             **           06049
**             PARMFLG3 DS    X                             **           06050
**             PARMFLG4 DS    X                             **           06051
**             PARMFLG5 DS    X                             **           06052
**             PARMFLG6 DS    X                             **           06053
**             PARMFLG7 DS    X                             **           06054
**             PARMFLG8 DS    X                             **           06055
**             PARMFLG9 DS    X                             **           06056
**             PARMFLGA DS    X                             **           06057
**                                                          **           06058
**               then ....                                  **           06059
**                                                          **           06060
**                      TM    PARMFLG2,X'04'                **           06061
**                      BZ    some location                 **           06062
**                        ....                              **           06063
**                                                          **           06064
**             R2 points to the address of a data area      **           06065
**             containing values generated by this          **           06066
**             program.  It's address is at label STRTVALU  **           06067
**             and its length is in the first fullword      **           06068
**             at STRTVALU.                                 **           06069
**                                                          **           06070
**             R2 is accessed in a similar manner to R1.    **           06071
**             See the PARMDRVR program for an example      **           06072
**             illustrating one way in which PARMCHEK       **           06073
**             may be called.                               **           06074
**                                                          **           06075
**                                                          **           06076
**************************************************************           06077
         EJECT                                                           06078
**************************************************************           06079
**                                                          **           06080
**  CHANGE LOG:                                             **           06081
**                                                          **           06082
**    Version 1.1 - Separate Parm Table into different      **           06083
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           06084
**                                                          **           06085
**    Version 1.2 - Uppercase keyword before comparing      **           06086
**       against the table entries.  This assumes you       **           06087
**       will code your table with all uppercase keyword    **           06088
**       entries.                                           **           06089
**                                                          **           06090
**    Version 1.3 - Option for requiring commas or spaces   **           06091
**       as delimiters between parms.  Comment out one      **           06092
**       instruction to require delimiters.                 **           06093
**                                                          **           06094
**    Version 1.4 - Fitted to COPYMODS Level 061.           **           06095
**                                                          **           06096
**    Version 1.5 - Fitted to COPYMODS Level 079.           **           06097
**                  Ten parm bits instead of five.          **           06098
**                                                          **           06099
**    Version 1.6 - Allow lowercase in SYSIN keywords.      **           06100
**                                                          **           06101
**                                                          **           06102
**************************************************************           06103
**************************************************************           06104
         EJECT                                                           06105
**************************************************************           06106
*  ---------------------------------------------------------------  *    06107
*    This macro is used to display hex values in a printed report.       06108
*  ---------------------------------------------------------------  *    06109
         MACRO                                                           06110
&NAME    HEX   &TO,&LEN,&FROM                                            06111
&NAME    DS    0H                                                        06112
         ST    R4,SAV4HEX                                                06113
         STM   R15,R1,HEXSAVE                                            06114
         LA    R1,&FROM                                                  06115
         LA    R0,&LEN                                                   06116
         LA    R15,&TO                                                   06117
         BAL   R4,HEX                                                    06118
         L     R4,SAV4HEX                                                06119
         LM    R15,R1,HEXSAVE                                            06120
         MEND                                                            06121
         SPACE                                                           06122
**************************************************************           06123
         GBLC  &LLEV                                                     06124
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                06125
         GBLA  &HEXDFLA                                                  06126
&LLEV    SETC  '1.6 '                                                    06127
         YREGS                                                           06128
* ------------------------------------------------------------------ *   06129
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   06130
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   06131
* ------------------------------------------------------------------ *   06132
         ENTRY CARDREAD                                                  06133
         ENTRY PARMCHEK                                                  06134
&HEXDFLA SETA  4                                                         06135
&HEXDFLC SETC  '&HEXDFLA'                                                06136
PARMCHEK CSECT                                                           06137
         USING *,R15                                                     06138
         B     EYECATCH                                                  06139
         DC    C'HEX DUMP '                                              06140
HEXDFLCC DC    C'&HEXDFLC'                                               06141
         DC    C' RECORDS '                                              06142
HEXDFLL  EQU   L'HEXDFLCC                                                06143
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 06144
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06145
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                06146
         DC    C' - '                                                    06147
         DC    C'PARM INPUT IN SYSIN '                                   06148
         DC    C' - '                                                    06149
         DC    C'LEVEL '                                                 06150
SYSLEV   DC    C'&LLEV'                                                  06151
         DC    C' - '                                                    06152
SYSDAT   DC    C'&SYSDATE'                                               06153
         DC    C'  ',C'&SYSTIME ',C'--- '                                06154
         DC    C'--- '            MAKE EYECATCHER VISIBLE                06155
SAVEAREA DC    18F'0'                                                    06156
EYECATCH DS    0D             ENSURE ALIGNMENT                           06157
         SAVE  (14,12)                                                   06158
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   06159
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          06160
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         06161
         LR    R13,R1               NEW SAVE AREA ADDRESS                06162
         DROP  R15                                                       06163
* -----                       SET UP BASE REGISTERS                      06164
         USING PARMCHEK,R12,R11,R10                                      06165
         LR    R12,R15                                                   06166
         LA    R11,4095(,R12)                                            06167
         LA    R11,1(,R11)                                               06168
         LA    R10,4095(,R11)                                            06169
         LA    R10,1(,R10)                                               06170
*                                                                        06171
* ----->   GET PARMS THAT COPYMODS WAS CALLED WITH.                      06172
*                                                                        06173
         LR    R6,R2          SAVE USER AREA POINTER                     06174
         L     R6,PARMSTRT-STRTVALU(,R6)   SAVED ORIGINAL PARMS          06175
         LR    R1,R6          RESTORE PARM POINTER                       06176
         ST    R1,PARMSAVE                                               06177
* ----------------------------------------------------------------- *    06178
TIOTSCAN DS    0H             Determine the presence of Optional         06179
*                             DDNAMES:  SYSIN AND PARMREPT.              06180
* ----->                      OPEN them if there is JCL for them.        06181
* ----------------------------------------------------------------- *    06182
         L     R5,16          R5=CVT                                     06183
         L     R5,0(,R5)      R5=TCB WORDS                               06184
         L     R5,4(,R5)      R5=MY TCB                                  06185
         L     R5,12(,R5)     R5=TIOT                                    06186
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          06187
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             06188
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        06189
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               06190
         BNE   TIOTSYSN       NO                                         06191
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         06192
         B     TIOTNEXT       CONTINUE                                   06193
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          06194
         BNE   TIOTNEXT                                                  06195
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         06196
         B     TIOTNEXT                                                  06197
TIOTNEXT SR    R3,R3                                                     06198
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      06199
         AR    R5,R3          R5=NEXT DD ENTRY                           06200
         B     TIOTLOOP       GO CHECK IT                                06201
TIOTSEND DS    0H                                                        06202
***********************************************************************  06203
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  06204
***********************************************************************  06205
         STM   R14,R2,SAVE1402                                           06206
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             06207
         OI    DATE+4,X'0F'                                              06208
         UNPK  DATED,DATE                                                06209
         OI    TIME+3,X'0F'                                              06210
         UNPK  TIMED,TIME                                                06211
*                          FILL HEADDATE AREA WITH INFO TO REUSE         06212
         MVC   HEADDATE(2),DATED                                         06213
         MVI   HEADDATE+2,C'/'                                           06214
         MVC   HEADDATE+3(2),DATED+2                                     06215
         MVI   HEADDATE+5,C'/'                                           06216
         MVC   HEADDATE+6(4),DATED+4                                     06217
         MVC   HEADDATE+12(2),TIMED                                      06218
         MVI   HEADDATE+14,C':'                                          06219
         MVC   HEADDATE+15(2),TIMED+2                                    06220
         MVI   HEADDATE+17,C':'                                          06221
         MVC   HEADDATE+18(2),TIMED+4                                    06222
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         06223
         LM    R14,R2,SAVE1402                                           06224
***********************************************************************  06225
         MVC   LEVDATE(8),SYSDAT                                         06226
***********************************************************************  06227
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             06228
* ----------------------------------------------------------------- *    06229
INITCONS DS    0H                                                        06230
         ZAP   TOTMLCNT,=P'0'                                            06231
* ----------------------------------------------------------------- *    06232
CHEKPRNT DS    0H                                                        06233
         TM    FLAGSYST,X'01'                                            06234
         BZ    CHEKPREN                                                  06235
         OPEN  (PARMREPT,OUTPUT)                                         06236
         OI    OPENDFLG,X'01'                                            06237
         MVC   PRTLINE,PRTLINE-1                                         06238
         MVC   PRTLINE,MESSAGE1                                          06239
         PUT   PARMREPT,MESSAGE1                                         06240
         MVC   PRTLINE,PRTLINE-1                                         06241
         PUT   PARMREPT,PRTLINE                                          06242
CHEKPREN DS    0H                                                        06243
* ----------------------------------------------------------------- *    06244
* --------------------------------------------------------- *            06245
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     06246
*                         PRESENCE OR ABSENCE.                           06247
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  06248
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         06249
         L     R1,0(,R1)      Get PARM field                             06250
         LH    R5,0(,R1)      SAVE PARM LENGTH                           06251
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       06252
         MVC   SAVMSLEN,PARMSLEN                                         06253
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 06254
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                06255
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               06256
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              06257
* -----------------------------------------------------------            06258
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               06259
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               06260
* -----------------------------------------------------------            06261
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               06262
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         06263
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            06264
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   06265
         BO    PARMDSET       YES, GO SET IT.                            06266
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06267
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 06268
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  06269
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                06270
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        06271
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06272
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  06273
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            06274
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              06275
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        06276
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               06277
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             06278
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               06279
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 06280
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               06281
* ----------------------------------------------------------------- *    06282
SCANPARM DS    0H                                                        06283
         ST    R7,SAVE7BA0                                               06284
         ZAP   PARMLCNT,=P'0'                                            06285
         ZAP   PARMHITS,=P'0'                                            06286
         MVC   PARMSLEN,SAVMSLEN                                         06287
         BAL   R7,PARMLOOP      Now check the PARM field                 06288
         MVC   SAVPHITS,PARMHITS                                         06289
         MVC   SAVCHRCT,PRMCHRCT                                         06290
         MVC   SAVELCNT,PARMLCNT                                         06291
         AP    TOTMHITS,PARMHITS                                         06292
         AP    TOTMLCNT,PARMLCNT                                         06293
         L     R7,SAVE7BA0                                               06294
* ----------------------------------------------------------------- *    06295
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   06296
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             06297
         OPEN  (SYSIN,INPUT)                                             06298
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   06299
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               06300
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                06301
         B     OPNSYSNE           AND CONTINUE PROCESSING.               06302
NOSYSIN  DS    0H                                                        06303
         B     CARDREND                                                  06304
OPNSYSNE DS    0H                                                        06305
* ----------------------------------------------------------------- *    06306
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               06307
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         06308
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        06309
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       06310
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        06311
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06312
*              Insert User Code Here for Keywords                        06313
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06314
         GET   SYSIN,CARDIN                                              06315
*                                                                        06316
* -- >>              <-- Intercept any keywords you want in SYSIN -->    06317
* -- >>              <--    before you start the table scan       -->    06318
*                                                                        06319
* ----------------------------------------------------------------- *    06320
         MVI   CARDWORK,X'40'           CLEAR CARD WORKAREA TO BLANKS    06321
         MVC   CARDWORK+1(79),CARDWORK                                   06322
         MVC   CARDWORK(80),CARDIN      MOVE CARD IMAGE TO WORKAREA      06323
         OC    CARDWORK(80),CARDBLNK    UPPERCASE                        06324
* ----------------------------------------------------------------- *    06325
*      CARDWORK now contains an uppercased version of CARDIN.            06326
* ----------------------------------------------------------------- *    06327
         CLC   =C'OUTVOLALL=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06328
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           06329
         CLC   =C'TAPEOWNER=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06330
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           06331
         CLC   =C'FILELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06332
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           06333
         CLC   =C'LABELIMIT=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06334
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           06335
         CLC   =C'PRINTRCDS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06336
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           06337
         CLC   =C'WRITELTMS=',CARDWORK  KEYWORD PRESENT IN THIS CARD?    06338
         BE    LTMNMGET          PROCESS THIS CARD FOR KEYWORD           06339
         CLC   =C'/*',CARDIN                                             06340
         BE    SYSINEND                                                  06341
*                                                                        06342
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06343
* ----         Resume Checking SYSIN in PARM Table                       06344
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06345
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        06346
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         06347
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    06348
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             06349
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        06350
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  06351
         L     R1,TOTCHRCT                                               06352
         A     R1,PRMCHRCT                                               06353
         ST    R1,TOTCHRCT                                               06354
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          06355
         ZAP   PARMHITS,=P'0'                                            06356
         ZAP   PARMLCNT,=P'0'                                            06357
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 06358
         AP    TOTMHITS,PARMHITS                                         06359
         AP    TOTMLCNT,PARMLCNT                                         06360
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      06361
         B     CARDREAD        GET ANOTHER CARD                          06362
* ----                                                                   06363
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06364
*              Handle User Code Here for Keywords                        06365
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06366
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        06367
         BE    CARDREAD                 YES. IGNORE CARD                 06368
         MVC   VOLSTG1(6),CARDIN+10                                      06369
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      06370
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   06371
         B     CARDREAD          GET ANOTHER CARD                        06372
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        06373
         BE    CARDREAD                 YES. IGNORE CARD                 06374
         MVC   TAPEOWN(14),CARDIN+10                                     06375
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      06376
         B     CARDREAD                                                  06377
FILELGET DS    0H                                                        06378
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06379
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06380
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06381
         BL    CARDREAD          YES. IGNORE.                            06382
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06383
         BH    CARDREAD          YES. IGNORE.                            06384
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                06385
         LA    R15,CARDIN+10     STARTING ADDRESS                        06386
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06387
FILELNUM DS    0H                                                        06388
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06389
         C     R15,=A(CARDIN+71) END OF CARD?                            06390
         BH    FILELGNM          YES, GET NUMBER                         06391
         CLI   0(R15),C' '       BLANK HERE?                             06392
         BE    FILELGNM          YES, GET NUMBER                         06393
         B     FILELNUM          NO. STEP UP ONE PLACE                   06394
FILELGNM DS    0H                                                        06395
         SR    R15,R1            HOW BIG IS THE NUMBER                   06396
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06397
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            06398
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         06399
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       06400
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06401
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           06402
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               06403
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06404
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           06405
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       06406
FILELCLG DS    0H                                                        06407
         B     CARDREAD                                                  06408
LABELGET DS    0H                                                        06409
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06410
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06411
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06412
         BL    CARDREAD          YES. IGNORE.                            06413
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06414
         BH    CARDREAD          YES. IGNORE.                            06415
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               06416
         LA    R15,CARDIN+10     STARTING ADDRESS                        06417
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06418
LABELNUM DS    0H                                                        06419
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06420
         C     R15,=A(CARDIN+71) END OF CARD?                            06421
         BH    LABELGNM          YES, GET NUMBER                         06422
         CLI   0(R15),C' '       BLANK HERE?                             06423
         BE    LABELGNM          YES, GET NUMBER                         06424
         B     LABELNUM          NO. STEP UP ONE PLACE                   06425
LABELGNM DS    0H                                                        06426
         SR    R15,R1            HOW BIG IS THE NUMBER                   06427
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06428
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            06429
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         06430
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            06431
         CVB   R0,WORKL          CONVERT IT TO BINARY                    06432
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           06433
LABELCLG DS    0H                                                        06434
         B     CARDREAD                                                  06435
PRINTGET DS    0H                                                        06436
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06437
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06438
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06439
         BL    CARDREAD          YES. IGNORE.                            06440
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06441
         BH    CARDREAD          YES. IGNORE.                            06442
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         06443
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    06444
         LA    R15,CARDIN+10     STARTING ADDRESS                        06445
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06446
PRINTNUM DS    0H                                                        06447
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06448
         C     R15,=A(CARDIN+71) END OF CARD?                            06449
         BH    PRINTGNM          YES, GET NUMBER                         06450
         CLI   0(R15),C' '       BLANK HERE?                             06451
         BE    PRINTGNM          YES, GET NUMBER                         06452
         B     PRINTNUM          NO. STEP UP ONE PLACE                   06453
PRINTGNM DS    0H                                                        06454
         SR    R15,R1            HOW BIG IS THE NUMBER                   06455
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06456
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            06457
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         06458
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            06459
         CVB   R0,WORKP          CONVERT IT TO BINARY                    06460
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           06461
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            06462
PRINTCLG DS    0H                                                        06463
         B     CARDREAD                                                  06464
LTMNMGET DS    0H                                                        06465
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            06466
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 06467
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      06468
         BL    CARDREAD          YES. IGNORE.                            06469
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          06470
         BH    CARDREAD          YES. IGNORE.                            06471
         OI    PARMFLG5,X'08'    SET WRTLTM OPTION ON                    06472
         LA    R15,CARDIN+10     STARTING ADDRESS                        06473
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               06474
LTMNMNUM DS    0H                                                        06475
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  06476
         C     R15,=A(CARDIN+71) END OF CARD?                            06477
         BH    LTMNMGNM          YES, GET NUMBER                         06478
         CLI   0(R15),C' '       BLANK HERE?                             06479
         BE    LTMNMGNM          YES, GET NUMBER                         06480
         B     LTMNMNUM          NO. STEP UP ONE PLACE                   06481
LTMNMGNM DS    0H                                                        06482
         SR    R15,R1            HOW BIG IS THE NUMBER                   06483
         BCTR  R15,0             LOWER IT FOR EXECUTE                    06484
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            06485
         EX    R15,MVLTMNUM      COPY THE NUMBER TO MESSAGE AREA         06486
         EX    R15,MVLTMCHR      COPY THE NUMBER TO USER PASS AREA       06487
         CVB   R0,WORKA          CONVERT IT TO BINARY                    06488
         ST    R0,LTMNUMB        STORE THE VALUE FOR LATER USE           06489
LTMNMCLG DS    0H                                                        06490
         B     CARDREAD                                                  06491
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06492
*              End of User Code Here for Keywords                        06493
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    06494
CHECKEND DS    0H                                                        06495
* -----------------------------------------------------------            06496
SYSINEND DS    0H                                                        06497
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     06498
         BZ    CARNOSYS         NO. Flag SYSIN option as OFF.            06499
* ------- Correct Error - SYSIN not shown if not coded explicitly.       06500
         OI    PARMFLG2,X'20'   Mark PARMS that SYSIN is on.             06501
* ------- Correct Error - SYSIN not shown if not coded explicitly.       06502
         L     R1,TOTCHRCT                                               06503
         A     R1,PRMCHRCT         Final totals for last card            06504
         ST    R1,TOTCHRCT                                               06505
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             06506
         CLOSE (SYSIN)                                                   06507
         B     CARDREND                                                  06508
CARNOSYS DS    0H                                                        06509
         NI    PARMFLG2,FF-X'20'   Turn SYSIN off in PARM flags.         06510
CARDREND DS    0H                                                        06511
         BAL   R7,SUMMREPT                                               06512
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     06513
         BZ    PARMRPEN         NO.  GET OUT.                            06514
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             06515
         CLOSE (PARMREPT)                                                06516
PARMRPEN DS    0H                                                        06517
THEEND   DS    0H                                                        06518
         L     R13,4(,R13)                                               06519
         MVC   16(4,R13),=F'0'          Return code 0     in R15         06520
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          06521
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          06522
         LM    R14,R12,12(R13)                                           06523
         BR    R14                                                       06524
* -----------------------------------------------------------            06525
*        S U B R O U T I N E S                                           06526
* -----------------------------------------------------------            06527
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              06528
* -----------------------------------------------------------            06529
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     06530
         BNL   PARMFIN        YES - GET OUT                              06531
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         06532
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            06533
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         06534
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   06535
*        ------------------------------------------------------------    06536
*--->                    code to require a delimiter (space, etc)        06537
*                        to enable, comment out the next instruction     06538
*        ------------------------------------------------------------    06539
         B     PRMNODLM         comment this line to require delimiter   06540
         TM    PRMFDFLG,X'01'                                            06541
         BO    PRMNFND                                                   06542
PRMNODLM DS    0H                                                        06543
*--->                                                                    06544
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              06545
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 06546
         BCTR  R5,0           ONE LESS FOR EXECUTE                       06547
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       06548
*                                                                        06549
*   If you want to require parm comparisons as case sensitive,           06550
*    then comment out the following instruction....                      06551
*                                                                        06552
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       06553
*                                                                        06554
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     06555
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                06556
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          06557
         B     BOPPTBL        INNER LOOP                                 06558
*                                                                        06559
PRMNFND  DS    0H                                                        06560
*--->                 below - Parm Found flagging to require delimiter   06561
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   06562
         BE    PRMFDOFF                                                  06563
         CLI   0(R4),C','                                                06564
         BE    PRMFDOFF                                                  06565
         B     PRMFDEND                                                  06566
PRMFDOFF DS    0H                                                        06567
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         06568
PRMFDEND DS    0H                                                        06569
*--->                 above - Parm Found flagging to require delimiter   06570
*                                                                        06571
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       06572
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  06573
*                                                                        06574
         B     PARMLOOP       TRY AGAIN                                  06575
*                                                                        06576
PRMFOUND DS    0H                                                        06577
*                                                                        06578
*--->                 below - Parm Found flagging to require delimiter   06579
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 06580
*--->                 above - Parm Found flagging to require delimiter   06581
PRMNOSEP DS    0H                                                        06582
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         06583
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            06584
         TM    1(R2),X'01'         PARM ON OR OFF?                       06585
         BO    PARMOFF             OFF                                   06586
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     06587
         B     PARMGO                        AND GO ON                   06588
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           06589
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              06590
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        06591
PARMGO   DS    0H                                                        06592
         XR    R5,R5          Clear Work Reg befor IC                    06593
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             06594
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  06595
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   06596
         B     PARMLOOP       LOOK FOR MORE PARMS                        06597
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              06598
*                             COUNT FOR DEBUGGING                        06599
PRMCHEND DS    0H                                                        06600
         BR    R7                                                        06601
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    06602
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    06603
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    06604
* --------------------------------------------------------- *            06605
SUMMREPT DS    0H                  Print details of PARMREPT             06606
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  06607
         BZ    SUMMREND            No. Bypass this routine.              06608
         MVC   PRTLINE,PRTLINE-1                                         06609
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        06610
         HEX   PRTLINE+27,1,PARMFLG1                                     06611
         HEX   PRTLINE+30,1,PARMFLG2                                     06612
         HEX   PRTLINE+33,1,PARMFLG3                                     06613
         HEX   PRTLINE+36,1,PARMFLG4                                     06614
         HEX   PRTLINE+39,1,PARMFLG5                                     06615
         HEX   PRTLINE+42,1,PARMFLG6                                     06616
         HEX   PRTLINE+45,1,PARMFLG7                                     06617
         HEX   PRTLINE+48,1,PARMFLG8                                     06618
         HEX   PRTLINE+51,1,PARMFLG9                                     06619
         HEX   PRTLINE+54,1,PARMFLGA                                     06620
         PUT   PARMREPT,PRTLINE                                          06621
         MVC   PRTLINE,PRTLINE-1                                         06622
         PUT   PARMREPT,PRTLINE                                          06623
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  06624
         MVC   PRTLINE+4(12),=C'User Area : '                            06625
         HEX   PRTLINE+16,48,STRTVALU                                    06626
         PUT   PARMREPT,PRTLINE                                          06627
         MVC   PRTLINE,PRTLINE-1                                         06628
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          06629
         HEX   PRTLINE+16,48,STRTVALU+48                                 06630
         PUT   PARMREPT,PRTLINE                                          06631
         MVC   PRTLINE,PRTLINE-1                                         06632
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          06633
         HEX   PRTLINE+16,48,STRTVALU+96                                 06634
         PUT   PARMREPT,PRTLINE                                          06635
         MVC   PRTLINE,PRTLINE-1                                         06636
         MVC   PRTLINE+4(12),=C'UA + x''90'': '                          06637
         HEX   PRTLINE+16,38,STRTVALU+144                                06638
         PUT   PARMREPT,PRTLINE                                          06639
         MVC   PRTLINE,PRTLINE-1                                         06640
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  06641
         HEX   PRTLINE+30,4,STRTVALU                                     06642
         MVC   PRTLINE+42(6),=C'Hex   '                                  06643
         PUT   PARMREPT,PRTLINE                                          06644
         MVC   PRTLINE,PRTLINE-1                                         06645
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  06646
         HEX   PRTLINE+30,4,PARMSLEN                                     06647
         MVC   PRTLINE+42(6),=C'Hex   '                                  06648
         PUT   PARMREPT,PRTLINE                                          06649
         MVC   PRTLINE,PRTLINE-1                                         06650
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  06651
         HEX   PRTLINE+30,4,SAVMSLEN                                     06652
         MVC   PRTLINE+42(6),=C'Hex   '                                  06653
         PUT   PARMREPT,PRTLINE                                          06654
         MVC   PRTLINE,PRTLINE-1                                         06655
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  06656
         HEX   PRTLINE+30,4,PARMSTRT                                     06657
         MVC   PRTLINE+42(6),=C'Hex   '                                  06658
         PUT   PARMREPT,PRTLINE                                          06659
         MVC   PRTLINE,PRTLINE-1                                         06660
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  06661
         HEX   PRTLINE+30,4,PRMCHRCT                                     06662
         MVC   PRTLINE+42(6),=C'Hex   '                                  06663
         PUT   PARMREPT,PRTLINE                                          06664
         MVC   PRTLINE,PRTLINE-1                                         06665
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  06666
         HEX   PRTLINE+30,4,SAVCHRCT                                     06667
         MVC   PRTLINE+42(6),=C'Hex   '                                  06668
         PUT   PARMREPT,PRTLINE                                          06669
         MVC   PRTLINE,PRTLINE-1                                         06670
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  06671
         HEX   PRTLINE+30,4,TOTCHRCT                                     06672
         MVC   PRTLINE+42(6),=C'Hex   '                                  06673
         PUT   PARMREPT,PRTLINE                                          06674
         MVC   PRTLINE,PRTLINE-1                                         06675
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  06676
         HEX   PRTLINE+30,4,SAVPHITS                                     06677
         MVC   PRTLINE+42(6),=C'Packed'                                  06678
         PUT   PARMREPT,PRTLINE                                          06679
         MVC   PRTLINE,PRTLINE-1                                         06680
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  06681
         HEX   PRTLINE+30,4,PARMHITS                                     06682
         MVC   PRTLINE+42(6),=C'Packed'                                  06683
         PUT   PARMREPT,PRTLINE                                          06684
         MVC   PRTLINE,PRTLINE-1                                         06685
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  06686
         HEX   PRTLINE+30,4,TOTMHITS                                     06687
         MVC   PRTLINE+42(6),=C'Packed'                                  06688
         PUT   PARMREPT,PRTLINE                                          06689
         MVC   PRTLINE,PRTLINE-1                                         06690
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  06691
         HEX   PRTLINE+30,4,SAVELCNT                                     06692
         MVC   PRTLINE+42(6),=C'Packed'                                  06693
         PUT   PARMREPT,PRTLINE                                          06694
         MVC   PRTLINE,PRTLINE-1                                         06695
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  06696
         HEX   PRTLINE+30,4,PARMLCNT                                     06697
         MVC   PRTLINE+42(6),=C'Packed'                                  06698
         PUT   PARMREPT,PRTLINE                                          06699
         MVC   PRTLINE,PRTLINE-1                                         06700
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  06701
         HEX   PRTLINE+30,4,TOTMLCNT                                     06702
         MVC   PRTLINE+42(6),=C'Packed'                                  06703
         PUT   PARMREPT,PRTLINE                                          06704
         MVC   PRTLINE,PRTLINE-1                                         06705
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  06706
         HEX   PRTLINE+30,20,PARMTENT                                    06707
         PUT   PARMREPT,PRTLINE                                          06708
SUMMREND DS    0H                                                        06709
         BR    R7                                                        06710
* --------------------------------------------------------- *            06711
* --------------------------------------------------------- *            06712
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    06713
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    06714
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    06715
MVLTMNUM MVC   LTMWMSG+11(0),0(R1)   <<< EXECUTED >>>                    06716
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    06717
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    06718
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    06719
MVLTMCHR MVC   LTMCHAR(0),0(R1)      <<< EXECUTED >>>                    06720
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    06721
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    06722
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    06723
         LTORG                                                           06724
         EJECT                                                           06725
* --------------------------------------------------------- *            06726
WORKA    DC    D'0'                                                      06727
WORKL    DC    D'0'                                                      06728
WORKP    DC    D'0'                                                      06729
PL4NO3   DC    PL4'3'                                                    06730
FF       EQU   X'FF'                                                     06731
LTMWMSG  DC    C' WRITELTMS=           HAS BEEN CODED IN SYSIN. THIS N'  06732
         DC    C'UMBER OF LEADING TAPE MARKS WILL BE WRITTEN TO OUTPUT'  06733
         DC    C'S.'                                                     06734
         DC    CL25' '                                                   06735
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06736
         DC    C' IS TREATED AS NL.                                   '  06737
         DC    CL27' '                                                   06738
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  06739
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  06740
         DC    CL27' '                                                   06741
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  06742
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  06743
         DC    CL27' '                                                   06744
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 06745
         DC    CL6'&HEXDFLM'                                             06746
         DC    C' RECORDS WILL'                                          06747
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  06748
         DC    C'SYSIN.'                                                 06749
         DC    CL17' '                                                   06750
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     06751
* --------------------------------------------------------- *            06752
PARMFLGS DS    0CL10    10 CONTIGUOUS BYTES OF PARM FLAGS                06753
PARMFLG1 DC    X'00'                                                     06754
PARMFLG2 DC    X'00'                                                     06755
PARMFLG3 DC    X'00'                                                     06756
PARMFLG4 DC    X'00'                                                     06757
PARMFLG5 DC    X'00'                                                     06758
PARMFLG6 DC    X'00'                                                     06759
PARMFLG7 DC    X'00'                                                     06760
PARMFLG8 DC    X'00'                                                     06761
PARMFLG9 DC    X'00'                                                     06762
PARMFLGA DC    X'00'                                                     06763
PARMCOPY DS    XL10                Copy of options before correction     06764
* --------------------------------------------------------- *            06765
         DS    0F                                                        06766
STRTVALU DS    0CL(ENDVALUE)                                             06767
         DC    A(ENDVALUE)                                               06768
PARMSLEN DC    F'0'                LENGTH OF PARMS                       06769
*                                  Upon entry, this field contains       06770
*                                  the PARM address from COPYMODS,       06771
*                                  which gets overlaid by PARMCHEK.      06772
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       06773
*                                  Upon entry, this field contains       06774
*                                  the PARM address from COPYMODS,       06775
*                                  which gets overlaid by PARMCHEK.      06776
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               06777
*                                  Upon entry, this field contains       06778
*                                  the PARM length from COPYMODS,        06779
*                                  which gets overlaid by PARMCHEK.      06780
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06781
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06782
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             06783
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   06784
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06785
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   06786
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06787
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06788
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  06789
PARMTENT DC    CL20' '             PARM TABLE ENTRY DUMP                 06790
         DC    CL7' '              FILLER                                06791
PARMFWRK DC    XL10'00'            FOR TURNING OFF PARM BYTES            06792
*  -----    User Stuff                                                   06793
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          06794
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  06795
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      06796
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         06797
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         06798
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         06799
LTMNUMB  DC    F'0'           NUMBER OF LEADING T.M. TO BE WRITTEN       06800
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       06801
TAPEOWN  DC    CL10' '                                                   06802
TAPEOEXT DC    CL4' '                                                    06803
TAPEOASC DC    CL14' '                                                   06804
OVERFLAG DC    X'00'                                                     06805
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               06806
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    06807
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         06808
LIMCHAR  DC    CL10' '                                                   06809
LABCHAR  DC    CL10' '                                                   06810
PRTCHAR  DC    CL10' '                                                   06811
LTMCHAR  DC    CL10' '                                                   06812
ENDVALUE EQU   (*-PARMSLEN)+4                                            06813
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     06814
* --------------------------------------------------------- *            06815
*              FORMAT OF PARM TABLE                                      06816
*              ONE ENTRY IS 20 BYTES                                     06817
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               06818
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 06819
*                               X'00' SAYS TURN FLAG ON                  06820
*                               X'10' SET ENTRY AS A DEFAULT             06821
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               06822
*                NEXT 10 BYTES: FLAG SETTINGS - 10 FLAGS,                06823
*                                WHICH ALLOWS FOR 80 PARMS               06824
*                                THAT DON'T HAVE TO BE                   06825
*                                SEPARATED BY A COMMA.                   06826
PBYTES   EQU   10               Number of bytes of parm switches         06827
PTELEN   EQU   20               Length of each table entry               06828
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  06829
EFFS     DC    20X'FF'          X'FF' bytes for XORing                   06830
* --------------------------------------------------------- *            06831
PARMTABL CSECT                                                           06832
         DC    X'07',X'00',C'LTMSKIP ',X'20000000000000000000'           06833
         DC    X'07',X'00',C'SKIPLTM ',X'20000000000000000000'           06834
         DC    X'07',X'11',C'COPYLTM ',X'20000000000000000000'           06835
         DC    X'07',X'01',C'LTMCOPY ',X'20000000000000000000'           06836
         DC    X'07',X'00',C'LBLINFO ',X'DE000000000000000000'           06837
         DC    X'06',X'00',C'PRINTL  ',X'DE000000000000000000'           06838
         DC    X'06',X'00',C'LABELS  ',X'DE000000000000000000'           06839
         DC    X'06',X'01',C'NOLABL  ',X'DE000000000000000000'           06840
         DC    X'07',X'11',C'NOLABEL ',X'DE000000000000000000'           06841
         DC    X'04',X'00',C'HDR1    ',X'02000000000000000000'           06842
         DC    X'06',X'01',C'NOHDR1  ',X'02000000000000000000'           06843
         DC    X'04',X'00',C'HDR2    ',X'04000000000000000000'           06844
         DC    X'06',X'01',C'NOHDR2  ',X'04000000000000000000'           06845
         DC    X'04',X'00',C'EOF1    ',X'08000000000000000000'           06846
         DC    X'06',X'01',C'NOEOF1  ',X'08000000000000000000'           06847
         DC    X'04',X'00',C'EOF2    ',X'10000000000000000000'           06848
         DC    X'06',X'01',C'NOEOF2  ',X'10000000000000000000'           06849
         DC    X'04',X'00',C'EOV1    ',X'40000000000000000000'           06850
         DC    X'06',X'01',C'NOEOV1  ',X'40000000000000000000'           06851
         DC    X'05',X'00',C'EOV2    ',X'80000000000000000000' + space   06852
         DC    X'06',X'01',C'NOEOV2  ',X'80000000000000000000'           06853
         DC    X'04',X'00',C'HDRS    ',X'06000000000000000000'           06854
         DC    X'06',X'01',C'NOHDRS  ',X'06000000000000000000'           06855
         DC    X'04',X'00',C'EOFS    ',X'18000000000000000000'           06856
         DC    X'06',X'01',C'NOEOFS  ',X'18000000000000000000'           06857
         DC    X'04',X'00',C'EOVS    ',X'C0000000000000000000'           06858
         DC    X'06',X'01',C'NOEOVS  ',X'C0000000000000000000'           06859
         DC    X'06',X'00',C'CHGVOL  ',X'00010000000000000000'           06860
         DC    X'08',X'11',C'NOCHGVOL',X'00010000000000000000'           06861
         DC    X'06',X'00',C'JCLVOL  ',X'00010000000000000000'           06862
         DC    X'08',X'01',C'NOJCLVOL',X'00010000000000000000'           06863
         DC    X'06',X'00',C'NEWVOL  ',X'00010000000000000000'           06864
         DC    X'08',X'01',C'NONEWVOL',X'00010000000000000000'           06865
         DC    X'06',X'10',C'VOLLBL  ',X'00020000000000000000'           06866
         DC    X'08',X'01',C'NOVOLLBL',X'00020000000000000000'           06867
         DC    X'07',X'00',C'EOV2EOF ',X'00040000000000000000'           06868
         DC    X'08',X'00',C'EOVTOEOF',X'00040000000000000000'           06869
         DC    X'06',X'00',C'EOVCHG  ',X'00040000000000000000'           06870
         DC    X'08',X'11',C'NOEOVCHG',X'00040000000000000000'           06871
         DC    X'04',X'00',C'READ    ',X'00080000000000000000'           06872
         DC    X'08',X'00',C'READONLY',X'00080000000000000000'           06873
         DC    X'07',X'00',C'NOWRITE ',X'00080000000000000000'           06874
         DC    X'07',X'11',C'WRITE   ',X'00080000000000000000'           06875
         DC    X'08',X'00',C'LABLDUMP',X'00100000000000000000'           06876
         DC    X'08',X'11',C'NOLABLDU',X'00100000000000000000'           06877
         DC    X'05',X'00',C'SYSIN   ',X'00200000000000000000'           06878
         DC    X'07',X'11',C'NOSYSIN ',X'00200000000000000000'           06879
         DC    X'06',X'00',C'OUTVOL  ',X'00400000000000000000'           06880
         DC    X'08',X'01',C'NOOUTVOL',X'00400000000000000000'           06881
         DC    X'08',X'00',C'LABADDIN',X'00808000000000000000'           06882
         DC    X'08',X'01',C'NOLABADD',X'00800000000000000000'           06883
         DC    X'06',X'10',C'BLKCNT  ',X'01000000000000000000'           06884
         DC    X'08',X'01',C'NOBLKCNT',X'01000000000000000000'           06885
         DC    X'08',X'00',C'PRADDLBL',X'00001000000000000000'           06886
         DC    X'08',X'01',C'NOPRADDL',X'00001000000000000000'           06887
         DC    X'08',X'10',C'CORRBLKS',X'00002000000000000000'           06888
         DC    X'08',X'01',C'NOCORRBL',X'00002000000000000000'           06889
         DC    X'08',X'00',C'NOEXNULL',X'00004000000000000000'           06890
         DC    X'08',X'00',C'NOSLNULL',X'00004000000000000000'           06891
         DC    X'06',X'11',C'EXNULL  ',X'00004000000000000000'           06892
         DC    X'06',X'01',C'SLNULL  ',X'00004000000000000000'           06893
         DC    X'06',X'00',C'LBLFIX  ',X'00008000000000000000'           06894
         DC    X'08',X'01',C'NOLBLFIX',X'00008000000000000000'           06895
         DC    X'08',X'00',C'INITVOLS',X'00010100000000000000'           06896
         DC    X'08',X'00',C'INITTAPE',X'00010100000000000000'           06897
         DC    X'08',X'11',C'NOINITVO',X'00000100000000000000'           06898
         DC    X'07',X'00',C'LIMFILE ',X'00000200000000000000'           06899
         DC    X'07',X'00',C'FILELIM ',X'00000200000000000000'           06900
         DC    X'08',X'01',C'NOLIMFIL',X'00000200000000000000'           06901
         DC    X'05',X'00',C'BYTES   ',X'00000400000000000000'           06902
         DC    X'07',X'01',C'NOBYTES ',X'00000400000000000000'           06903
         DC    X'06',X'00',C'CUMTOT  ',X'00000800000000000000'           06904
         DC    X'08',X'01',C'NOCUMTOT',X'00000800000000000000'           06905
         DC    X'08',X'00',C'LIMLABEL',X'00000010000000000000'           06906
         DC    X'08',X'01',C'NOLIMLAB',X'00000010000000000000'           06907
         DC    X'06',X'10',C'OPTION  ',X'00000020000000000000'           06908
         DC    X'08',X'01',C'NOOPTION',X'00000020000000000000'           06909
         DC    X'07',X'00',C'SUPPWTO ',X'00000040000000000000'           06910
         DC    X'08',X'11',C'NOSUPPWT',X'00000040000000000000'           06911
         DC    X'08',X'00',C'LBDQUICK',X'00000080000000000000'           06912
         DC    X'08',X'01',C'NOLBDQUI',X'00000080000000000000'           06913
         DC    X'06',X'00',C'CUMSEP  ',X'00000001000000000000'           06914
         DC    X'08',X'01',C'NOCUMSEP',X'00000001000000000000'           06915
         DC    X'05',X'00',C'STRIP   ',X'00000002000000000000'           06916
         DC    X'07',X'11',C'NOSTRIP ',X'00000002000000000000'           06917
         DC    X'05',X'00',C'NLLIM   ',X'00000004000000000000'           06918
         DC    X'07',X'01',C'NONLLIM ',X'00000004000000000000'           06919
         DC    X'05',X'00',C'SLLIM   ',X'00000008000000000000'           06920
         DC    X'07',X'01',C'NOSLLIM ',X'00000008000000000000'           06921
         DC    X'07',X'00',C'IDRCOFF ',X'00000000100000000000'           06922
         DC    X'08',X'01',C'NOIDRCOF',X'00000000100000000000'           06923
         DC    X'06',X'00',C'HEXPRT  ',X'00000000200000000000'           06924
         DC    X'08',X'01',C'NOHEXPRT',X'00000000200000000000'           06925
         DC    X'07',X'10',C'UNEXWTO ',X'00000000400000000000'           06926
         DC    X'08',X'01',C'NOUNEXWT',X'00000000400000000000'           06927
         DC    X'06',X'00',C'INASC3  ',X'00010000810000000000'           06928
         DC    X'07',X'00',C'INASCII ',X'00010000810000000000'           06929
         DC    X'08',X'01',C'NOINASC3',X'00000000810000000000'           06930
         DC    X'06',X'00',C'INASC4  ',X'00010000820000000000'           06931
         DC    X'08',X'01',C'NOINASC4',X'00000000820000000000'           06932
         DC    X'05',X'00',C'ASCII   ',X'00000000800000000000'           06933
         DC    X'07',X'01',C'NOASCII ',X'00000000800000000000'           06934
         DC    X'06',X'01',C'EBCDIC  ',X'00000000800000000000'           06935
         DC    X'08',X'00',C'ENABLTMW',X'00000000040000000000'           06936
         DC    X'08',X'01',C'NOENABLT',X'00000000040000000000'           06937
         DC    X'06',X'00',C'WRTLTM  ',X'00000000080000000000'           06938
         DC    X'08',X'11',C'NOWRTLTM',X'00000000080000000000'           06939
         DC    X'06',X'00',C'SECOFF  ',X'00000000001000000000'           06940
         DC    X'08',X'01',C'NOSECOFF',X'00000000001000000000'           06941
         DC    X'07',X'00',C'FOOTAGE ',X'00000000002000000000'           06942
         DC    X'08',X'01',C'NOFOOTAG',X'00000000002000000000'           06943
         DC    X'08',X'00',C'FOOTDIAG',X'00000000004000000000'           06944
         DC    X'08',X'11',C'NOFOOTDI',X'00000000004000000000'           06945
         DC    X'08',X'00',C'CODEDPRM',X'00000000008000000000'           06946
         DC    X'08',X'11',C'NOCODEDP',X'00000000008000000000'           06947
         DC    X'06',X'00',C'MINMAX  ',X'00000000000100000000'           06948
         DC    X'08',X'01',C'NOMINMAX',X'00000000000100000000'           06949
         DC    X'FFFFFFFFFFFFFFFF'                                       06950
* --------------------------------------------------------- *            06951
PARMCHEK CSECT                                                           06952
         SPACE 3                                                         06953
         LTORG                                                           06954
         SPACE 3                                                         06955
         DS    0D                                                        06956
* --------------------------------------------------------- *            06957
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 06958
               COPYMODS LVL-079'                                         06959
* --------------------------------------------------------- *            06960
         SPACE 3                                                         06961
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 06962
               EODAD=SYSINEND                                            06963
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     06964
* --------------------------------------------------------- *            06965
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06966
HEX      DS    0H                                                        06967
         MVC   1(1,R15),0(R1)        Move byte                           06968
         UNPK  0(3,R15),1(2,R15)     Unpack                              06969
         TR    0(2,R15),HEXTAB-240                                       06970
         LA    R15,2(,R15)           Increment output pointer            06971
         LA    R1,1(,R1)             Increment input pointer             06972
         BCT   R0,HEX                Decrement length, then loop         06973
         MVI   0(R15),C' '           Blank the trailing byte             06974
         BR    R4                    Return to caller                    06975
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     06976
         SPACE                                                           06977
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06978
HEXSAVE  DS    3F                    Register save for HEX macro         06979
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      06980
* --------------------------------------------------------- *            06981
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             06982
*              X'01'          PARMREPT DD IS PRESENT                     06983
*              X'02'          SYSIN    DD IS PRESENT                     06984
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                06985
*              X'01'          PARMREPT DD IS OPEN                        06986
*              X'02'          SYSIN    DD IS OPEN                        06987
* --------------------------------------------------------- *            06988
         SPACE 3                                                         06989
PARMSAVE DC    F'0'                                                      06990
SAV4HEX  DC    F'0'                                                      06991
SAVE2TO3 DC    2F'0'                                                     06992
SAVE3REG DC    F'0'                                                      06993
SAVE7BA0 DC    F'0'                                                      06994
SAVE7BA1 DC    F'0'                                                      06995
PARMWORK DC    CL8' '                                                    06996
UPCASEOR DC    CL8' '                                                    06997
         DC    CL4' '                                                    06998
*    ------------------------ >   Constants for Date and Time - below    06999
SAVE1402 DS    6F                 Extra fullword for safety              07000
TIMED    DS    CL7                                                       07001
DATED    DS    CL9                                                       07002
DATETIME DS    4F                                                        07003
         ORG   DATETIME                                                  07004
TIME     DS    CL4                                                       07005
         DS    CL4                                                       07006
DATE     DS    CL5                                                       07007
         DS    CL3                                                       07008
HEADDLIT DS    0CL31              Literal for headings - date and time   07009
         DC    CL6'Today:'                                               07010
         DC    CL2' '                                                    07011
HEADDATE DC    CL23' '                                                   07012
LEVELLIT DS    0CL21              Level number display for headings      07013
         DC    CL6'Level '                                               07014
LEVELL   DC    CL4'&LLEV'                                                07015
         DC    CL2' ('                                                   07016
LEVDATE  DC    CL8' '             Assembly date for this program         07017
         DC    CL1')'                                                    07018
*    ------------------------ >   Constants for Date and Time - above    07019
*    --------------- >            Output line buffers - below            07020
PRMFDFLG DC    X'00'              Parm Found Flag                        07021
*              X'01'              Parm has been found in this record     07022
         DC    CL3' '                                                    07023
         DC    C' '                                                      07024
LINE     DC    CL133' '                                                  07025
         DC    C' '                                                      07026
CNTLINE  DC    CL133' '                                                  07027
         DC    C' '                                                      07028
OUTLINE  DC    CL133' '                                                  07029
         DC    C' '                                                      07030
PRTLINE  DC    CL133' '                                                  07031
         DC    CL80' '            Padding                                07032
*    --------------- >            Output line buffers - above            07033
*                                                                        07034
CARDBLNK DC    CL80' '            BLANK CARD IMAGE                       07035
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  07036
CARDWORK DC    CL80' '            SYSIN CARD WORK AREA                   07037
         END                                                             07038
*         LABEL CHECKER        AT LEVEL 1.1 AS OF 07/07/04               07039
   TITLE 'LABELCHK -- SET PARM BITS USING A TABLE'                       07040
**************************************************************           07041
**************************************************************           07042
**                                                          **           07043
**                                                          **           07044
**  MODULE:   LABELCHK - Check tape files to see if they    **           07045
**                       are tape labels.                   **           07046
**                                                          **           07047
**  AUTHOR:   Sam Golob                                     **           07048
**                                                          **           07049
**  PURPOSE:  This is a subroutine for programs which read  **           07050
**            tapes under BLP, so that tape label files     **           07051
**            would appear as ordinary files to the calling **           07052
**            program.  As file contents are passed to      **           07053
**            this program, LABELCHK detects whether they   **           07054
**            are tape labels, and tells the caller what    **           07055
**            type of labels they are.  If labels need to   **           07056
**            be interpreted, the PRINTLBL program is       **           07057
**            called.                                       **           07058
**                                                          **           07059
**  METHOD:   Label headers (usually the first 4 bytes)     **           07060
**            are scanned, and if a match to a known label  **           07061
**            type is found, then that type of label is     **           07062
**            processed appropriately.                      **           07063
**                                                          **           07064
**  Flags Set:  The principal flag set by this routine is   **           07065
**            the ISLABEL byte:                             **           07066
**                                                          **           07067
**   Setting of ISLABEL:   X'01'  - record is an IBM        **           07068
**                                  standard label          **           07069
**                                                          **           07070
**                         X'02'  - record is an ANSI/ISO   **           07071
**                                  (ASCII) standard label  **           07072
**                                                          **           07073
**                         X'00'  - the tested record is    **           07074
**                                  not a tape label        **           07075
**                                                          **           07076
**   Other flags and quantities are also set by this        **           07077
**   routine.  They are passed back to the caller in the    **           07078
**   LCHKPASS user area, in register 2.  Sometimes the      **           07079
**   PARMFLGS are changed.  These are passed back to the    **           07080
**   caller in register 1.  Sometimes the INAREA (record    **           07081
**   input area, usually containing a label image) is       **           07082
**   changed.  The altered label image is passed back to    **           07083
**   the caller in register 3.  At present, 80 bytes are    **           07084
**   passed back in register 3.                             **           07085
**                                                          **           07086
**************************************************************           07087
         EJECT                                                           07088
**************************************************************           07089
**                                                          **           07090
**  CHANGE LOG:                                             **           07091
**                                                          **           07092
**    Version 1.0 - Base program to detect IBM tape labels. **           07093
**                                                          **           07094
**    Version 1.1 - Support ANSI/ISO (ASCII) tape labels.   **           07095
**                                                          **           07096
**                                                          **           07097
**************************************************************           07098
**************************************************************           07099
         EJECT                                                           07100
**************************************************************           07101
*  ---------------------------------------------------------------  *    07102
*    This macro is used to display hex values in a printed report.       07103
*  ---------------------------------------------------------------  *    07104
         MACRO                                                           07105
&NAME    HEX   &TO,&LEN,&FROM                                            07106
&NAME    DS    0H                                                        07107
         ST    R4,SAV4HEX                                                07108
         STM   R15,R1,HEXSAVE                                            07109
         LA    R1,&FROM                                                  07110
         LA    R0,&LEN                                                   07111
         LA    R15,&TO                                                   07112
         BAL   R4,HEX                                                    07113
         L     R4,SAV4HEX                                                07114
         LM    R15,R1,HEXSAVE                                            07115
         MEND                                                            07116
         SPACE                                                           07117
**************************************************************           07118
         GBLC  &LLEV                                                     07119
&LLEV    SETC  '1.1 '                                                    07120
         YREGS                                                           07121
         ENTRY LABELCHK                                                  07122
LABELCHK CSECT                                                           07123
         USING *,R15                                                     07124
         B     EYECATCH                                                  07125
         DC    C'--- '            MAKE EYECATCHER VISIBLE                07126
         DC    C'LABELCHK - CHECK TAPE FILES IF THEY ARE LABELS'         07127
         DC    C' - '                                                    07128
         DC    C'LEVEL '                                                 07129
SYSLEV   DC    C'&LLEV'                                                  07130
         DC    C' - '                                                    07131
SYSDAT   DC    C'&SYSDATE'                                               07132
         DC    C'  ',C'&SYSTIME ',C'--- '                                07133
         DC    C'Copyright (c) 2003 by Sam Golob '                       07134
         DC    C'--- '              MAKE EYECATCHER VISIBLE              07135
SAVEAREA DC    18F'0'                                                    07136
EYECATCH DS    0D                   ENSURE ALIGNMENT                     07137
         SAVE  (14,12)                                                   07138
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     07139
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   07140
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          07141
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         07142
         LR    R13,R1               NEW SAVE AREA ADDRESS                07143
         DROP  R15                                                       07144
* -----                             SET UP BASE REGISTERS                07145
         USING LABELCHK,R12,R11,R10,R9                                   07146
         LR    R12,R15                                                   07147
         LA    R11,4095(,R12)                                            07148
         LA    R11,1(,R11)                                               07149
         LA    R10,4095(,R11)                                            07150
         LA    R10,1(,R10)                                               07151
         LA    R9,4095(,R10)                                             07152
         LA    R9,1(,R9)                                                 07153
         LR    R1,R5                RESTORE REGISTER 1 INPUT             07154
* ----------------------------------------------------------------- *    07155
         ST    R1,PARMSAVE          Address of parm flags in caller      07156
         ST    R2,USERSAVE          Address of user area in caller       07157
         ST    R3,INARSAVE          Address of INAREA in caller          07158
* ----------------------------------------------------------------- *    07159
***********************************************************************  07160
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  07161
***********************************************************************  07162
         STM   R14,R2,SAVE1402                                           07163
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             07164
         OI    DATE+4,X'0F'                                              07165
         UNPK  DATED,DATE                                                07166
         OI    TIME+3,X'0F'                                              07167
         UNPK  TIMED,TIME                                                07168
*                          FILL HEADDATE AREA WITH INFO TO REUSE         07169
         MVC   HEADDATE(2),DATED                                         07170
         MVI   HEADDATE+2,C'/'                                           07171
         MVC   HEADDATE+3(2),DATED+2                                     07172
         MVI   HEADDATE+5,C'/'                                           07173
         MVC   HEADDATE+6(4),DATED+4                                     07174
         MVC   HEADDATE+12(2),TIMED                                      07175
         MVI   HEADDATE+14,C':'                                          07176
         MVC   HEADDATE+15(2),TIMED+2                                    07177
         MVI   HEADDATE+17,C':'                                          07178
         MVC   HEADDATE+18(2),TIMED+4                                    07179
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         07180
         LM    R14,R2,SAVE1402                                           07181
***********************************************************************  07182
         MVC   LEVDATE(8),SYSDAT                                         07183
***********************************************************************  07184
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND TITLES      07185
* ----------------------------------------------------------------- *    07186
INITCONS DS    0H                    Initialize necessary quantities.    07187
         MVI   LINE-1,X'40'          Make sure the print line is blank.  07188
         MVC   LINE,LINE-1                                               07189
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      07190
         ST    R0,SYSPRDCB             store for the program's use       07191
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      07192
         ST    R0,LABLDDCB             store for the program's use       07193
         L     R0,LABADDIV           LABADDIN DCB address in caller      07194
         ST    R0,LABADDCB             store for the program's use       07195
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    07196
         ST    R0,SAVTRTCS             store it for later use            07197
         L     R0,=V(PRINTLBL)       Entry point of called PRINTLBL pgm  07198
         ST    R0,PRTLBENT           Save entry point for calling later  07199
* ----------------------------------------------------------------*      07200
PROCESS  DS    0H                    First copy over passed areas.       07201
* ----------------------------------------------------------------*      07202
         L     R1,PARMSAVE              Point to caller's parm flags     07203
         MVC   PARMFLGS(PARMFLLN),0(R1) Copy them into our program.      07204
         L     R2,USERSAVE              Point to caller's user area.     07205
         MVC   LCHKPASS(LCHKPASE),0(R2) Copy his user area to ours.      07206
         L     R3,INARSAVE              Point to INAREA in caller.       07207
         MVC   INAREA(80),0(R3)         Copy caller's INAREA to ours.    07208
* ----------------------------------------------------------------*      07209
*   Then execute this entire program as a called subroutine.      *      07210
* ----------------------------------------------------------------*      07211
         BAL   R7,LABLCHEK                                               07212
* ----------------------------------------------------------------*      07213
*                                                                        07214
         B     THEEND                                                    07215
LBLINEND DS    0H                                                        07216
         OI    LBLINENF,X'01'                                            07217
THEEND   DS    0H                                                        07218
         L     R13,4(,R13)                                               07219
         MVC   16(4,R13),=F'0'          Return code 0     in R15         07220
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     07221
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    07222
         MVC   28(4,R13),=A(LCHKPASS)   Address of our user area in R2   07223
         MVC   32(4,R13),=A(INAREA)     Address of our INAREA in R3      07224
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07225
         LM    R14,R12,12(R13)                                           07226
         BR    R14                                                       07227
         EJECT                                                           07228
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      07229
*    BAL REGISTER IS R7.                                                 07230
* --------------------------------------------------------- *            07231
LABLCHEK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS              07232
*                         AND SET LABEL FLAGS, ACCORDINGLY,              07233
*                         IN THE LBLFLAG BYTE.                           07234
* --------------------------------------------------------- *            07235
*     The type of labels last seen on the input tape                     07236
*     are generally flagged by bits in the LBLFLAG byte.                 07237
*     These bit settings are set by this program as                      07238
*     follows:   (These are for both IBM and ASCII labels)               07239
* --------------------------------------------------------- *            07240
*              X'01'    HDR1 HAS BEEN SEEN                               07241
*              X'02'    HDR2 HAS BEEN SEEN                               07242
*              X'04'    VOL1 HAS BEEN SEEN                               07243
*              X'08'    HDR1 IS FROM AN INITTED TAPE                     07244
*              X'10'    EOF1 HAS BEEN SEEN                               07245
*              X'20'    EOF2 HAS BEEN SEEN                               07246
*              X'40'    EOV1 HAS BEEN SEEN                               07247
*              X'80'    EOV2 HAS BEEN SEEN                               07248
* --------------------------------------------------------- *            07249
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            07250
* -                                                       - *            07251
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            07252
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            07253
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            07254
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            07255
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            07256
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            07257
* --------------------------------------------------------- *            07258
*                                                           *            07259
*   Beginning of processing:                                *            07260
*                                                           *            07261
*     Check the input record (that has been copied to       *            07262
*     INAREA) for each possible type of label, and direct   *            07263
*     the processing to the appropriate routine, if a       *            07264
*     label type has been found.                            *            07265
*                                                           *            07266
*     If an input record does not fit any of these          *            07267
*     criteria, it is not considered a tape label.          *            07268
*                                                           *            07269
* --------------------------------------------------------- *            07270
         NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG AT START      07271
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?                     07272
         BE    CVOL1                PROCESS THE VOL1                     07273
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?                     07274
         BE    CHDR1                PROCESS HDR1                         07275
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?                        07276
         BE    CHDR2                PROCESS HDR2                         07277
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?                       07278
         BE    CEOF1                PROCESS EOF1                         07279
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?                       07280
         BE    CEOF2                PROCESS EOF2                         07281
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?                       07282
         BE    CEOV1                PROCESS EOV1                         07283
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?                       07284
         BE    CEOV2                PROCESS EOV2                         07285
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL?            07286
         BE    CUHL                 PROCESS UHL                          07287
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?           07288
         BE    CUTL                 PROCESS UTL                          07289
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         07290
         BE    ASC                     PROCESS ALL VOL TYPES             07291
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         07292
         BE    ASC                     PROCESS ALL HDR TYPES             07293
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         07294
         BE    ASC                     PROCESS ALL EOF TYPES             07295
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         07296
         BE    ASC                     PROCESS ALL EOV TYPES             07297
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     07298
         BE    ASC                     PROCESS ALL UVL TYPES             07299
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     07300
         BE    ASC                     PROCESS ALL UHL TYPES             07301
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    07302
         BE    ASC                     PROCESS ALL UTL TYPES             07303
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL or ASCII AL   07304
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------             07305
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07306
         BO    CVOL1NPR             YES. JUST TURN ON ISLABEL FLAG       07307
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          07308
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07309
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    07310
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      07311
CLRIDRCV DS    0H                                                        07312
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          07313
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE            07314
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE             07315
* ---------------- LABEL ADDING CODE ---------------------- *            07316
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                07317
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    07318
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   07319
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              07320
         ST    R6,SAVER6                                                 07321
         L     R6,SYSPRDCB                                               07322
         PUT   (6),LINE                                                  07323
         L     R6,SAVER6                                                 07324
*        PUT   SYSPRINT,LINE        WRITE MSG                            07325
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  07326
*        CLOSE (LABADDIN)                                                07327
         OI    LABADFLG,X'01'                                            07328
CVOL1OUT DS    0H                 CLOSE OTHER FILES AND SCRAM            07329
         OI    CLOSMFLG,X'01'                                            07330
         B     THEEND                                                    07331
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          07332
* ---------------- LABEL ADDING CODE ---------------------- *            07333
* ---------------- LABEL DUMPING CODE --------------------- *            07334
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07335
         BZ    CVOL1ND              NO. SKIP PUTTING OUT                 07336
         ST    R7,SAVE7LDM          Save BAL register.                   07337
         LA    R4,INAREA            Point to area to be dumped.          07338
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07339
         L     R7,SAVE7LDM          Restore BAL register.                07340
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            07341
* ---------------- LABEL DUMPING CODE --------------------- *            07342
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.                       07343
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?                    07344
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND             07345
*                                                                        07346
* ------ Call PRINTLBL routine to print this label.....   below          07347
         ST    R7,SAVE7BA2        Save BAL register.                     07348
         BAL   R7,PRNTLABL        Print the current label.               07349
         L     R7,SAVE7BA2                                               07350
* ------ Call PRINTLBL routine to print this label.....   above          07351
*                                                                        07352
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07353
         B     LABCHEND                                                  07354
CHDR1    DS    0H                                                        07355
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07356
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      07357
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS, INITTED HDR       07358
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.                       07359
* ---------------- LABEL DUMPING CODE --------------------- *            07360
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07361
         BZ    CHDR1ND              NO. SKIP PUTTING OUT                 07362
         ST    R7,SAVE7LDM          Save BAL register.                   07363
         LA    R4,INAREA            Point to area to be dumped.          07364
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07365
         L     R7,SAVE7LDM          Restore BAL register.                07366
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            07367
* ---------------- LABEL DUMPING CODE --------------------- *            07368
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?              07369
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET             07370
* ---------------- LABEL DUMPING CODE --------------------- *            07371
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07372
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      07373
         ST    R7,SAVE7LDM          Save BAL register.                   07374
         ST    R4,SAVE4LDM                                               07375
         LA    R4,LABELITI          Point to area to be dumped.          07376
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07377
         L     R4,SAVE4LDM                                               07378
         L     R7,SAVE7LDM          Restore BAL register.                07379
CHDR1NDM DS    0H                                                        07380
* ---------------- LABEL DUMPING CODE --------------------- *            07381
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE              07382
CHDR1A   DS    0H                                                        07383
*** --- >>  Security off?  -  below                                      07384
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07385
         BZ    NOSECCH1             No. Don't affect these fields.       07386
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07387
NOSECCH1 DS    0H                                                        07388
*** --- >>  Security off?  -  above                                      07389
         TM    PARMFLG1,X'02' DO WE PRINT LABELS?                        07390
         BZ    CHDR1Z         NO. DON'T PRINT.                           07391
*                                                                        07392
* ------ Call PRINTLBL routine to print this label.....   below          07393
         ST    R7,SAVE7BA2        Save BAL register.                     07394
         BAL   R7,PRNTLABL        Print the current label.               07395
         L     R7,SAVE7BA2                                               07396
* ------ Call PRINTLBL routine to print this label.....   above          07397
*                                                                        07398
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07399
         B     LABCHEND                                                  07400
CHDR2    DS    0H                                                        07401
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07402
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      07403
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          07404
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07405
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    07406
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07407
         BNE   CLRIDRH2                                                  07408
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07409
CLRIDRH2 DS    0H                                                        07410
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          07411
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2            07412
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.                       07413
* ---------------- LABEL DUMPING CODE --------------------- *            07414
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07415
         BZ    CHDR2ND              NO. SKIP PUTTING OUT                 07416
         ST    R7,SAVE7LDM          Save BAL register.                   07417
         LA    R4,INAREA            Point to area to be dumped.          07418
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07419
         L     R7,SAVE7LDM          Restore BAL register.                07420
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           07421
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07422
* ---------------- LABEL DUMPING CODE --------------------- *            07423
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?                      07424
         BZ    CHDR2Z           NO.                                      07425
*                                                                        07426
* ------ Call PRINTLBL routine to print this label.....   below          07427
         ST    R7,SAVE7BA2        Save BAL register.                     07428
         BAL   R7,PRNTLABL        Print the current label.               07429
         L     R7,SAVE7BA2                                               07430
* ------ Call PRINTLBL routine to print this label.....   above          07431
*                                                                        07432
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07433
         B     LABCHEND                                                  07434
CEOF1    DS    0H                                                        07435
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07436
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      07437
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1                 07438
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.                       07439
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07440
BCTCEOF1 DS    0H                                                        07441
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07442
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  07443
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         07444
         STM   R2,R3,SAVE2TO3                                            07445
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     07446
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    07447
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 07448
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        07449
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              07450
         LM    R2,R3,SAVE2TO3                                            07451
BCTCEOFX DS    0H                                                        07452
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07453
* ---------------- LABEL DUMPING CODE --------------------- *            07454
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07455
         BZ    CEOF1ND              NO. SKIP PUTTING OUT                 07456
         ST    R7,SAVE7LDM          Save BAL register.                   07457
         LA    R4,INAREA            Point to area to be dumped.          07458
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07459
         L     R7,SAVE7LDM          Restore BAL register.                07460
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07461
* ---------------- LABEL DUMPING CODE --------------------- *            07462
CEOF1A   DS    0H                                                        07463
*** --- >>  Security off?  -  below                                      07464
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07465
         BZ    NOSECCF1             No. Don't affect these fields.       07466
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07467
NOSECCF1 DS    0H                                                        07468
*** --- >>  Security off?  -  above                                      07469
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?                      07470
         BZ    CEOF1Z           NO.                                      07471
*                                                                        07472
* ------ Call PRINTLBL routine to print this label.....   below          07473
         ST    R7,SAVE7BA2        Save BAL register.                     07474
         BAL   R7,PRNTLABL        Print the current label.               07475
         L     R7,SAVE7BA2                                               07476
* ------ Call PRINTLBL routine to print this label.....   above          07477
*                                                                        07478
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07479
         B     LABCHEND                                                  07480
CEOF2    DS    0H                                                        07481
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07482
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      07483
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          07484
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07485
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    07486
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07487
         BNE   CLRIDRF2                                                  07488
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07489
CLRIDRF2 DS    0H                                                        07490
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          07491
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2                 07492
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.                       07493
* ---------------- LABEL DUMPING CODE --------------------- *            07494
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07495
         BZ    CEOF2ND              NO. SKIP PUTTING OUT                 07496
         ST    R7,SAVE7LDM          Save BAL register.                   07497
         LA    R4,INAREA            Point to area to be dumped.          07498
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07499
         L     R7,SAVE7LDM          Restore BAL register.                07500
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07501
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07502
* ---------------- LABEL DUMPING CODE --------------------- *            07503
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?                      07504
         BZ    CEOF2Z           NO.                                      07505
*                                                                        07506
* ------ Call PRINTLBL routine to print this label.....   below          07507
         ST    R7,SAVE7BA2        Save BAL register.                     07508
         BAL   R7,PRNTLABL        Print the current label.               07509
         L     R7,SAVE7BA2                                               07510
* ------ Call PRINTLBL routine to print this label.....   above          07511
*                                                                        07512
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07513
         B     LABCHEND                                                  07514
CEOV1    DS    0H                                                        07515
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07516
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      07517
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 07518
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07519
         BZ    CEOVN1         NO, PROCESS ORDINARILY                     07520
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    07521
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            07522
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 07523
         MVI   LINE-1,C' '                                               07524
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           07525
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        07526
         ST    R6,SAVER6                                                 07527
         L     R6,SYSPRDCB                                               07528
         PUT   (6),LINE                                                  07529
         L     R6,SAVER6                                                 07530
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               07531
         B     CEOVY1                                                    07532
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       07533
CEOVY1   DS    0H                                                        07534
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07535
BCTCEOV1 DS    0H                                                        07536
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07537
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  07538
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         07539
         STM   R2,R3,SAVE2TO3                                            07540
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     07541
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    07542
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 07543
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        07544
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              07545
         LM    R2,R3,SAVE2TO3                                            07546
BCTCEOVX DS    0H                                                        07547
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07548
* ---------------- LABEL DUMPING CODE --------------------- *            07549
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07550
         BZ    CEOV1ND              NO. SKIP PUTTING OUT                 07551
         ST    R7,SAVE7LDM          Save BAL register.                   07552
         LA    R4,INAREA            Point to area to be dumped.          07553
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07554
         L     R7,SAVE7LDM          Restore BAL register.                07555
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            07556
* ---------------- LABEL DUMPING CODE --------------------- *            07557
CEOV1A   DS    0H                                                        07558
*** --- >>  Security off?  -  below                                      07559
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07560
         BZ    NOSECCV1             No. Don't affect these fields.       07561
         MVI   INAREA+53,C'0'       Move in EBCDIC zero.                 07562
NOSECCV1 DS    0H                                                        07563
*** --- >>  Security off?  -  above                                      07564
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?                      07565
         BZ    CEOV1Z           NO.                                      07566
*                                                                        07567
* ------ Call PRINTLBL routine to print this label.....   below          07568
         ST    R7,SAVE7BA2        Save BAL register.                     07569
         BAL   R7,PRNTLABL        Print the current label.               07570
         L     R7,SAVE7BA2                                               07571
* ------ Call PRINTLBL routine to print this label.....   above          07572
*                                                                        07573
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07574
         B     LABCHEND                                                  07575
CEOV2    DS    0H                                                        07576
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07577
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      07578
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          07579
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   07580
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    07581
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             07582
         BNE   CLRIDRV2                                                  07583
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      07584
CLRIDRV2 DS    0H                                                        07585
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          07586
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2                 07587
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07588
         BZ    CEOVN2         NO, PROCESS ORDINARILY                     07589
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN                    07590
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            07591
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY                 07592
         B     CEOVY2                                                    07593
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.                       07594
CEOVY2   DS    0H                                                        07595
* ---------------- LABEL DUMPING CODE --------------------- *            07596
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07597
         BZ    CEOV2ND              NO. SKIP PUTTING OUT                 07598
         ST    R7,SAVE7LDM          Save BAL register.                   07599
         LA    R4,INAREA            Point to area to be dumped.          07600
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07601
         L     R7,SAVE7LDM          Restore BAL register.                07602
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   07603
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        07604
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           07605
         B     CEOV2ND              AND GET OUT                          07606
CEOV2F   DS    0H                                                        07607
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07608
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            07609
* ---------------- LABEL DUMPING CODE --------------------- *            07610
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?                      07611
         BZ    CEOV2Z           NO.                                      07612
*                                                                        07613
* ------ Call PRINTLBL routine to print this label.....   below          07614
         ST    R7,SAVE7BA2        Save BAL register.                     07615
         BAL   R7,PRNTLABL        Print the current label.               07616
         L     R7,SAVE7BA2                                               07617
* ------ Call PRINTLBL routine to print this label.....   above          07618
*                                                                        07619
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07620
         B     LABCHEND                                                  07621
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            07622
CUHL     DS    0H             HANDLE USER HEADER LABELS                  07623
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07624
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      07625
*                                                                        07626
* ------ Call PRINTLBL routine to print this label.....   below          07627
         ST    R7,SAVE7BA2        Save BAL register.                     07628
         BAL   R7,PRNTLABL        Print the current label.               07629
         L     R7,SAVE7BA2                                               07630
* ------ Call PRINTLBL routine to print this label.....   above          07631
*                                                                        07632
* ---------------- LABEL DUMPING CODE --------------------- *            07633
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07634
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 07635
         ST    R7,SAVE7LDM          Save BAL register.                   07636
         LA    R4,INAREA            Point to area to be dumped.          07637
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07638
         L     R7,SAVE7LDM          Restore BAL register.                07639
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            07640
* ---------------- LABEL DUMPING CODE --------------------- *            07641
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07642
         B     LABCHEND                                                  07643
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 07644
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07645
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      07646
*                                                                        07647
* ------ Call PRINTLBL routine to print this label.....   below          07648
         ST    R7,SAVE7BA2        Save BAL register.                     07649
         BAL   R7,PRNTLABL        Print the current label.               07650
         L     R7,SAVE7BA2                                               07651
* ------ Call PRINTLBL routine to print this label.....   above          07652
*                                                                        07653
* ---------------- LABEL DUMPING CODE --------------------- *            07654
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07655
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 07656
         ST    R7,SAVE7LDM          Save BAL register.                   07657
         LA    R4,INAREA            Point to area to be dumped.          07658
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07659
         L     R7,SAVE7LDM          Restore BAL register.                07660
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            07661
* ---------------- LABEL DUMPING CODE --------------------- *            07662
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              07663
         B     LABCHEND                                                  07664
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            07665
         EJECT                                                           07666
* ----------------  ASCII   Labels  ----------------------- *            07667
* --------------------------------------------------------- *            07668
*  ANSI/ISO label rules are a bit more relaxed than IBM     *            07669
*  label rules.  VOLx, HDRx, EOFx, EOVx, UVLx, UHLx, and    *            07670
*  UTLx are all considered labels, with a lot of latitude   *            07671
*  as to what the "x" is.  Therefore, for ASCII tape        *            07672
*  labels, we check the first 3 characters in each label    *            07673
*  category, and then further subdivide within that         *            07674
*  category if necessary.                                   *            07675
* --------------------------------------------------------- *            07676
ASC      DS    0H                   ALL ASCII LABEL CANDIDATES HERE      07677
*                                                                        07678
*        Common ASCII preparation routines......                         07679
*                                                                        07680
         OI    ASCIIFLG,X'01'       Say we're working in ASCII           07681
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    07682
         OI    ISLBLFLG,X'02'       Mark this record as an ASCII label   07683
*                                   This is being done early for ASCII   07684
*                                                                        07685
* -- >  Make an EBCDIC version of this label in the INASCI field.        07686
         ST    R5,R5HXPRT              Save register.                    07687
         L     R5,SAVTRTCS             Point to translation table CSECT  07688
         USING TRTDSECT,R5                                               07689
         MVC   INASCI(80),INAREA       Move LABEL area to workarea       07690
         TR    INASCI(80),TRTA2E       Translate to EBCDIC for print     07691
         L     R5,R5HXPRT              Restore R5                        07692
         DROP  R5                                                        07693
* -- >                                                                   07694
* ----------------------------------------------------- *                07695
* --   Again pick which type of ASCII label we have     *                07696
* ----------------------------------------------------- *                07697
         CLC   INAREA(3),=X'564F4C'   ASCII VOL?                         07698
         BE    ASCVOL                  PROCESS ALL VOL TYPES             07699
         CLC   INAREA(3),=X'484452'   ASCII HDR?                         07700
         BE    ASCHDR                  PROCESS ALL HDR TYPES             07701
         CLC   INAREA(3),=X'454F46'   ASCII EOF?                         07702
         BE    ASCEOF                  PROCESS ALL EOF TYPES             07703
         CLC   INAREA(3),=X'454F56'   ASCII EOV?                         07704
         BE    ASCEOV                  PROCESS ALL EOV TYPES             07705
         CLC   INAREA(3),=X'55564C'   ASCII UVL? (USER VOLUME LABEL)     07706
         BE    ASCUVL                  PROCESS ALL UVL TYPES             07707
         CLC   INAREA(3),=X'55484C'   ASCII UHL? (USER HEADER LABEL)     07708
         BE    ASCUHL                  PROCESS ALL UHL TYPES             07709
         CLC   INAREA(3),=X'55544C'   ASCII UTL? (USER TRAILER LABEL)    07710
         BE    ASCUTL                  PROCESS ALL UTL TYPES             07711
* ----------------------------------                                     07712
ASCVOL   DS    0H                                                        07713
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07714
         BO    ASCVOLLB              YES. JUST TURN ON ISLABEL FLAG      07715
* ---------------- LABEL ADDING CODE ---------------------- *            07716
*       Forbid adding new labels to an already AL tape.     *            07717
* --------------------------------------------------------- *            07718
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                07719
         BZ    ASCVOLNS             NO. WE CAN GO ON.                    07720
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   07721
         MVC   LINE(133),NOLABSL    DISPLAY NO SL ON SL MSG              07722
         ST    R6,SAVER6                                                 07723
         L     R6,SYSPRDCB                                               07724
         PUT   (6),LINE                                                  07725
         L     R6,SAVER6                                                 07726
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  07727
*        CLOSE (LABADDIN)                                                07728
         OI    LABADFLG,X'01'                                            07729
         OI    CLOSMFLG,X'01'                                            07730
         B     THEEND                                                    07731
ASCVOLNS DS    0H                   NOT ADDING SL ONTO SL TAPE.          07732
* ---------------- LABEL ADDING CODE ---------------------- *            07733
* ---------------- LABEL DUMPING CODE ------ below -------- *            07734
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07735
         BZ    AVOL1ND              NO. SKIP PUTTING OUT                 07736
         ST    R7,SAVE7LDM          Save BAL register.                   07737
         LA    R4,INAREA            Point to area to be dumped.          07738
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07739
         L     R7,SAVE7LDM          Restore BAL register.                07740
AVOL1ND  DS    0H                   END OF LABEL DUMPING CODE            07741
* ---------------- LABEL DUMPING CODE ------ above -------- *            07742
* --------------------------------------------------------- *            07743
*  At this point, we specifically check for a VOL1 label.   *            07744
* --------------------------------------------------------- *            07745
         CLI   INAREA+3,X'31'       Is the VOL label a VOL1?             07746
         BNE   ASCVOLLB             No. Just mark as an ASCII label.     07747
         OI    LBLFLAG,X'04'        Flag VOL1 seen.                      07748
         MVC   VOLORIG(6),INASCI+4     Save EBCDIC volser if there       07749
         MVC   INVOLUME(6),INASCI+4    Send to message too               07750
*** --- >>  Security off?  -  below                                      07751
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07752
         BZ    NOSECF01             No. Don't affect these fields.       07753
         MVI   INAREA+10,X'20'      Move in ASCII blank.                 07754
NOSECF01 DS    0H                                                        07755
*** --- >>  Security off?  -  above                                      07756
* --- >>>    VOL1  Label Printing   -----   below                        07757
         TM    PARMFLG2,X'02'          Printing Volume Labels?           07758
         BZ    ASCVOLLB                No. Skip this code.               07759
*                                                                        07760
* ------ Call PRINTLBL routine to print this label.....   below          07761
         ST    R7,SAVE7BA2        Save BAL register.                     07762
         BAL   R7,PRNTLABL        Print the current label.               07763
         L     R7,SAVE7BA2                                               07764
* ------ Call PRINTLBL routine to print this label.....   above          07765
*                                                                        07766
* --- >>>    VOL1  Label Printing   -----   above                        07767
ASCVOLLB DS    0H                                                        07768
ASCVOLE  DS    0H                                                        07769
         B     LABCHEND                                                  07770
*                                                                        07771
ASCHDR   DS    0H                                                        07772
         CLI   INAREA+3,X'31'       Is ASCII number field a 1?           07773
         BE    ASCHDR1                                                   07774
         CLI   INAREA+3,X'32'       Is ASCII number field a 2?           07775
         BE    ASCHDR2                                                   07776
         B     ASCHDRO                                                   07777
ASCHDR1  DS    0H                   ASCII Header 1                       07778
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07779
         BO    ASCHDR1Z             YES. OUT WITH ISLABEL MARKED.        07780
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF, INITTED HDR       07781
         OI    LBLFLAG,X'01'        FLAG HDR1 SEEN.                      07782
* ---------------- LABEL DUMPING CODE --------------------- *            07783
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07784
         BZ    AHDR1ND              NO. SKIP PUTTING OUT                 07785
         ST    R7,SAVE7LDM          Save BAL register.                   07786
         LA    R4,INAREA            Point to area to be dumped.          07787
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07788
         L     R7,SAVE7LDM          Restore BAL register.                07789
AHDR1ND  DS    0H                   END OF LABEL DUMPING CODE            07790
* ---------------- LABEL DUMPING CODE --------------------- *            07791
         CLC   INAREA+4(23),ZEROA23   WAS TAPE JUST INITTED?             07792
         BNE   CASC1A                 NO. THIS IS A HDR1 FOR DATASET     07793
* ---------------- LABEL DUMPING CODE --------------------- *            07794
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07795
         BZ    CASC1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      07796
         ST    R7,SAVE7LDM          Save BAL register.                   07797
         ST    R4,SAVE4LDM                                               07798
         OI    ATRNLFLG,X'01'       Order the line translated to ASCII.  07799
         LA    R4,LABELITI          Point to area to be dumped.          07800
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07801
         L     R4,SAVE4LDM                                               07802
         L     R7,SAVE7LDM          Restore BAL register.                07803
         NI    ATRNLFLG,FF-X'01'    Reinit the flag bit.                 07804
CASC1NDM DS    0H                                                        07805
* ---------------- LABEL DUMPING CODE --------------------- *            07806
         OI    LBLFLAG,X'08'        Show initted header label found.     07807
CASC1A   DS    0H                                                        07808
*** --- >>  Security off?  -  below                                      07809
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07810
         BZ    NOSECAH1             No. Don't affect these fields.       07811
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 07812
NOSECAH1 DS    0H                                                        07813
*** --- >>  Security off?  -  above                                      07814
* --- >      Print  Labels     - -   below                               07815
         TM    PARMFLG1,X'02'          DO WE PRINT LABELS?               07816
         BZ    ASCHDR1Z                NO. DON'T PRINT.                  07817
*                                                                        07818
* ------ Call PRINTLBL routine to print this label.....   below          07819
         ST    R7,SAVE7BA2        Save BAL register.                     07820
         BAL   R7,PRNTLABL        Print the current label.               07821
         L     R7,SAVE7BA2                                               07822
* ------ Call PRINTLBL routine to print this label.....   above          07823
*                                                                        07824
ASCHDR1Z DS    0H                                                        07825
* --- >      Print  Labels     - -   above                               07826
         B     LABCHEND                                                  07827
ASCHDR2  DS    0H                   ASCII Header 2                       07828
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07829
         BO    ASCHDR2Z             YES. MARKED AS LABEL AND GET OUT.    07830
         NI    LBLFLAG,X'0F'        TURN OFF EOV, EOF FLAGS IF HDR2      07831
         OI    LBLFLAG,X'02'        YES. FLAG HDR2 SEEN.                 07832
* ---------------- LABEL DUMPING CODE --------------------- *            07833
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07834
         BZ    AHDR2ND              NO. SKIP PUTTING OUT                 07835
         ST    R7,SAVE7LDM          Save BAL register.                   07836
         LA    R4,INAREA            Point to area to be dumped.          07837
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07838
         L     R7,SAVE7LDM          Restore BAL register.                07839
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           07840
AHDR2ND  DS    0H                   END OF LABEL DUMPING CODE            07841
* ---------------- LABEL DUMPING CODE --------------------- *            07842
ASCHDR2A DS    0H                                                        07843
* --- >      Print  Labels     - -   below                               07844
         TM    PARMFLG1,X'04'          DO WE PRINT LABELS?               07845
         BZ    ASCHDR2Z                NO. DON'T PRINT.                  07846
*                                                                        07847
* ------ Call PRINTLBL routine to print this label.....   below          07848
         ST    R7,SAVE7BA2        Save BAL register.                     07849
         BAL   R7,PRNTLABL        Print the current label.               07850
         L     R7,SAVE7BA2                                               07851
* ------ Call PRINTLBL routine to print this label.....   above          07852
*                                                                        07853
ASCHDR2Z DS    0H                                                        07854
* --- >      Print  Labels     - -   above                               07855
         B     LABCHEND                                                  07856
ASCHDRO  DS    0H                    ASCII Other header labels           07857
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07858
         BO    ASCHDRE               YES. GET OUT WITH LABEL INDICATED.  07859
*                                                                        07860
* ------ Call PRINTLBL routine to print this label.....   below          07861
         ST    R7,SAVE7BA2        Save BAL register.                     07862
         BAL   R7,PRNTLABL        Print the current label.               07863
         L     R7,SAVE7BA2                                               07864
* ------ Call PRINTLBL routine to print this label.....   above          07865
*                                                                        07866
* ---------------- LABEL DUMPING CODE --------------------- *            07867
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07868
         BZ    AHDROND              NO. SKIP PUTTING OUT                 07869
         ST    R7,SAVE7LDM          Save BAL register.                   07870
         LA    R4,INAREA            Point to area to be dumped.          07871
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07872
         L     R7,SAVE7LDM          Restore BAL register.                07873
AHDROND  DS    0H                   END OF LABEL DUMPING CODE            07874
* ---------------- LABEL DUMPING CODE --------------------- *            07875
ASCHDRE  DS    0H                                                        07876
         B     LABCHEND                                                  07877
ASCEOF   DS    0H                                                        07878
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07879
         BE    ASCEOF1                                                   07880
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07881
         BE    ASCEOF2                                                   07882
         B     ASCEOFO                                                   07883
ASCEOF1  DS    0H                    ASCII EOF 1                         07884
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07885
         BO    ASCEOF1Z              YES. GET OUT WITH LABEL INDICATED.  07886
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOF1          07887
         OI    LBLFLAG,X'10'         FLAG EOF1 SEEN.                     07888
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07889
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          07890
         BO    ASCBLKF1             YES. PLUG IN CORRECTED VALUE.        07891
         TM    PARMFLG1,X'01'          Is block count correction on?     07892
         BZ    NOTASCEF                No-don't plug in corrected value  07893
ASCBLKF1 DS    0H                                                        07894
         ST    R5,R5HXPRT              Save register.                    07895
         L     R5,SAVTRTCS             Point to translation table CSECT  07896
         USING TRTDSECT,R5                                               07897
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   07898
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          07899
         L     R5,R5HXPRT              Restore R5                        07900
         DROP  R5                                                        07901
         MVC   INAREA+54(6),BLKCNASC+4                                   07902
NOTASCEF DS    0H                                                        07903
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            07904
* ---------------- LABEL DUMPING CODE --------------------- *            07905
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07906
         BZ    AEOF1ND              NO. SKIP PUTTING OUT                 07907
         ST    R7,SAVE7LDM          Save BAL register.                   07908
         LA    R4,INAREA            Point to area to be dumped.          07909
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07910
         L     R7,SAVE7LDM          Restore BAL register.                07911
AEOF1ND  DS    0H                   END OF LABEL DUMPING CODE            07912
* ---------------- LABEL DUMPING CODE --------------------- *            07913
*** --- >>  Security off?  -  below                                      07914
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  07915
         BZ    NOSECAF1             No. Don't affect these fields.       07916
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 07917
NOSECAF1 DS    0H                                                        07918
*** --- >>  Security off?  -  above                                      07919
ASCEOF1A DS    0H                                                        07920
* --- >      Print  Labels     - -   below                               07921
         TM    PARMFLG1,X'08'          DO WE PRINT LABELS?               07922
         BZ    ASCEOF1Z                NO. DON'T PRINT.                  07923
*                                                                        07924
* ------ Call PRINTLBL routine to print this label.....   below          07925
         ST    R7,SAVE7BA2        Save BAL register.                     07926
         BAL   R7,PRNTLABL        Print the current label.               07927
         L     R7,SAVE7BA2                                               07928
* ------ Call PRINTLBL routine to print this label.....   above          07929
*                                                                        07930
ASCEOF1Z DS    0H                                                        07931
* --- >      Print  Labels     - -   above                               07932
         B     LABCHEND                                                  07933
ASCEOF2  DS    0H                   ASCII EOF 2                          07934
         TM    LBDQFLG,X'01'        JUST DOING PRELIM CHECK?             07935
         BO    ASCEOF2Z             YES. JUST TURN ON ISLABEL FLAG       07936
         NI    LBLFLAG,X'F8'        TURN OFF HDR FLAGS IF EOF2           07937
         OI    LBLFLAG,X'20'        YES. FLAG EOF2 SEEN.                 07938
* ---------------- LABEL DUMPING CODE --------------------- *            07939
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07940
         BZ    AEOF2ND              NO. SKIP PUTTING OUT                 07941
         ST    R7,SAVE7LDM          Save BAL register.                   07942
         LA    R4,INAREA            Point to area to be dumped.          07943
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07944
         L     R7,SAVE7LDM          Restore BAL register.                07945
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           07946
AEOF2ND  DS    0H                   END OF LABEL DUMPING CODE            07947
* ---------------- LABEL DUMPING CODE --------------------- *            07948
ASCEOF2A DS    0H                                                        07949
* --- >      Print  Labels     - -   below                               07950
         TM    PARMFLG1,X'10'          DO WE PRINT LABELS?               07951
         BZ    ASCEOF2Z                NO. DON'T PRINT.                  07952
*                                                                        07953
* ------ Call PRINTLBL routine to print this label.....   below          07954
         ST    R7,SAVE7BA2        Save BAL register.                     07955
         BAL   R7,PRNTLABL        Print the current label.               07956
         L     R7,SAVE7BA2                                               07957
* ------ Call PRINTLBL routine to print this label.....   above          07958
*                                                                        07959
ASCEOF2Z DS    0H                                                        07960
* --- >      Print  Labels     - -   above                               07961
         B     LABCHEND                                                  07962
ASCEOFO  DS    0H                    ASCII Other EOF labels              07963
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07964
         BO    ASCEOFE               YES. GET OUT WITH LABEL INDICATED.  07965
*                                                                        07966
* ------ Call PRINTLBL routine to print this label.....   below          07967
         ST    R7,SAVE7BA2        Save BAL register.                     07968
         BAL   R7,PRNTLABL        Print the current label.               07969
         L     R7,SAVE7BA2                                               07970
* ------ Call PRINTLBL routine to print this label.....   above          07971
*                                                                        07972
* ---------------- LABEL DUMPING CODE --------------------- *            07973
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               07974
         BZ    AEOFOND              NO. SKIP PUTTING OUT                 07975
         ST    R7,SAVE7LDM          Save BAL register.                   07976
         LA    R4,INAREA            Point to area to be dumped.          07977
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  07978
         L     R7,SAVE7LDM          Restore BAL register.                07979
AEOFOND  DS    0H                   END OF LABEL DUMPING CODE            07980
* ---------------- LABEL DUMPING CODE --------------------- *            07981
ASCEOFE  DS    0H                                                        07982
         B     LABCHEND                                                  07983
ASCEOV   DS    0H                                                        07984
         CLI   INAREA+3,X'31'        Is ASCII number field a 1?          07985
         BE    ASCEOV1                                                   07986
         CLI   INAREA+3,X'32'        Is ASCII number field a 2?          07987
         BE    ASCEOV2                                                   07988
         B     ASCEOVO                                                   07989
ASCEOV1  DS    0H                    ASCII EOV 1                         07990
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            07991
         BO    ASCEOV1Z              YES. JUST TURN ON ISLABEL FLAG      07992
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1                 07993
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?                         07994
         BZ    ASCEOVN1       NO, PROCESS ORDINARILY                     07995
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN                    07996
         NI    LBLFLAG,FF-X'40'      UNFLAG EOV1                         07997
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF                   07998
         MVI   LINE-1,C' '                                               07999
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08000
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE                        08001
         ST    R6,SAVER6                                                 08002
         L     R6,SYSPRDCB                                               08003
         PUT   (6),LINE                                                  08004
         L     R6,SAVER6                                                 08005
*        PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.               08006
         B     ASCEOVY1                                                  08007
ASCEOVN1 OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.                       08008
ASCEOVY1 DS    0H                                                        08009
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            08010
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          08011
         BO    ASCBLKV1             YES. PLUG IN CORRECTED VALUE.        08012
         TM    PARMFLG1,X'01'          Is block count correction on?     08013
         BZ    NOTASCEV                No-don't plug in corrected value  08014
ASCBLKV1 DS    0H                                                        08015
         ST    R5,R5HXPRT              Save register.                    08016
         L     R5,SAVTRTCS             Point to translation table CSECT  08017
         USING TRTDSECT,R5                                               08018
         MVC   BLKCNASC(10),BLKCNTSV   Move EBCDIC count to ASCII area   08019
         TR    BLKCNASC(10),TRTE2A     Translate count to ASCII          08020
         L     R5,R5HXPRT              Restore R5                        08021
         DROP  R5                                                        08022
         MVC   INAREA+54(6),BLKCNASC+4                                   08023
NOTASCEV DS    0H                                                        08024
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            08025
* ---------------- LABEL DUMPING CODE --------------------- *            08026
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08027
         BZ    AEOV1ND              NO. SKIP PUTTING OUT                 08028
         ST    R7,SAVE7LDM          Save BAL register.                   08029
         LA    R4,INAREA            Point to area to be dumped.          08030
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08031
         L     R7,SAVE7LDM          Restore BAL register.                08032
AEOV1ND  DS    0H                   END OF LABEL DUMPING CODE            08033
* ---------------- LABEL DUMPING CODE --------------------- *            08034
*** --- >>  Security off?  -  below                                      08035
         TM    PARMFLG6,X'10'       Turn off security indics in labels?  08036
         BZ    NOSECAV1             No. Don't affect these fields.       08037
         MVI   INAREA+53,X'20'      Move in ASCII blank.                 08038
NOSECAV1 DS    0H                                                        08039
*** --- >>  Security off?  -  above                                      08040
* --- >      Print  Labels     - -   below                               08041
         TM    PARMFLG1,X'40'          DO WE PRINT LABELS?               08042
         BZ    ASCEOV1Z                NO. DON'T PRINT.                  08043
*                                                                        08044
* ------ Call PRINTLBL routine to print this label.....   below          08045
         ST    R7,SAVE7BA2        Save BAL register.                     08046
         BAL   R7,PRNTLABL        Print the current label.               08047
         L     R7,SAVE7BA2                                               08048
* ------ Call PRINTLBL routine to print this label.....   above          08049
*                                                                        08050
ASCEOV1Z DS    0H                                                        08051
* --- >      Print  Labels     - -   above                               08052
         B     LABCHEND                                                  08053
ASCEOV2  DS    0H                    ASCII EOV 2                         08054
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08055
         BO    ASCEOV2Z              YES. INDICATE LABEL AND GET OUT.    08056
         NI    LBLFLAG,X'F8'         TURN OFF HDR FLAGS IF EOV2          08057
         TM    PARMFLG2,X'04'        CHANGE EOV TO EOF?                  08058
         BZ    ASCEOVN2              NO, PROCESS ORDINARILY              08059
         OI    LBLFLAG,X'20'         INSTEAD, FLAG EOF2 SEEN             08060
         NI    LBLFLAG,FF-X'80'      UNFLAG EOV2                         08061
         MVC   INAREA(3),=X'454F46'  PLUG IN ASCII EOF.                  08062
         OI    EOLGFLAG,X'02'        INDICATE EOF2 SEEN ON TAPE          08063
         B     ASCEOVY2                                                  08064
ASCEOVN2 OI    LBLFLAG,X'80'         YES. FLAG EOV2 SEEN.                08065
         OI    EOLGFLAG,X'04'        INDICATE EOV2 SEEN ON TAPE          08066
ASCEOVY2 DS    0H                                                        08067
* ---------------- LABEL DUMPING CODE --------------------- *            08068
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08069
         BZ    AEOV2ND              NO. SKIP PUTTING OUT                 08070
         ST    R7,SAVE7LDM          Save BAL register.                   08071
         LA    R4,INAREA            Point to area to be dumped.          08072
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08073
         L     R7,SAVE7LDM          Restore BAL register.                08074
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           08075
AEOV2ND  DS    0H                   END OF LABEL DUMPING CODE            08076
* ---------------- LABEL DUMPING CODE --------------------- *            08077
ASCEOV2N DS    0H                                                        08078
* --- >      Print  Labels     - -   below                               08079
         TM    PARMFLG1,X'80'          DO WE PRINT LABELS?               08080
         BZ    ASCEOV2Z                NO. DON'T PRINT.                  08081
*                                                                        08082
* ------ Call PRINTLBL routine to print this label.....   below          08083
         ST    R7,SAVE7BA2        Save BAL register.                     08084
         BAL   R7,PRNTLABL        Print the current label.               08085
         L     R7,SAVE7BA2                                               08086
* ------ Call PRINTLBL routine to print this label.....   above          08087
*                                                                        08088
ASCEOV2Z DS    0H                                                        08089
* --- >      Print  Labels     - -   above                               08090
         B     LABCHEND                                                  08091
ASCEOVO  DS    0H                    ASCII Other EOV labels              08092
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08093
         BO    ASCEOVE               YES. GET OUT WITH LABEL INDICATED.  08094
*                                                                        08095
* ------ Call PRINTLBL routine to print this label.....   below          08096
         ST    R7,SAVE7BA2        Save BAL register.                     08097
         BAL   R7,PRNTLABL        Print the current label.               08098
         L     R7,SAVE7BA2                                               08099
* ------ Call PRINTLBL routine to print this label.....   above          08100
*                                                                        08101
* ---------------- LABEL DUMPING CODE --------------------- *            08102
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08103
         BZ    AEOVOND              NO. SKIP PUTTING OUT                 08104
         ST    R7,SAVE7LDM          Save BAL register.                   08105
         LA    R4,INAREA            Point to area to be dumped.          08106
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08107
         L     R7,SAVE7LDM          Restore BAL register.                08108
AEOVOND  DS    0H                   END OF LABEL DUMPING CODE            08109
* ---------------- LABEL DUMPING CODE --------------------- *            08110
ASCEOVE  DS    0H                                                        08111
         B     LABCHEND                                                  08112
ASCUVL   DS    0H                                                        08113
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08114
         BO    ASCUVLE               YES. JUST TURN ON ISLABEL FLAG      08115
*                                                                        08116
* ------ Call PRINTLBL routine to print this label.....   below          08117
         ST    R7,SAVE7BA2        Save BAL register.                     08118
         BAL   R7,PRNTLABL        Print the current label.               08119
         L     R7,SAVE7BA2                                               08120
* ------ Call PRINTLBL routine to print this label.....   above          08121
*                                                                        08122
* ---------------- LABEL DUMPING CODE --------------------- *            08123
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08124
         BZ    AUVLEND              NO. SKIP PUTTING OUT                 08125
         ST    R7,SAVE7LDM          Save BAL register.                   08126
         LA    R4,INAREA            Point to area to be dumped.          08127
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08128
         L     R7,SAVE7LDM          Restore BAL register.                08129
AUVLEND  DS    0H                   END OF LABEL DUMPING CODE            08130
* ---------------- LABEL DUMPING CODE --------------------- *            08131
ASCUVLE  DS    0H                                                        08132
         B     LABCHEND                                                  08133
ASCUHL   DS    0H                                                        08134
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08135
         BO    ASCUHLE               YES. JUST TURN ON ISLABEL FLAG      08136
*                                                                        08137
* ------ Call PRINTLBL routine to print this label.....   below          08138
         ST    R7,SAVE7BA2        Save BAL register.                     08139
         BAL   R7,PRNTLABL        Print the current label.               08140
         L     R7,SAVE7BA2                                               08141
* ------ Call PRINTLBL routine to print this label.....   above          08142
*                                                                        08143
* ---------------- LABEL DUMPING CODE --------------------- *            08144
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08145
         BZ    AUHLEND              NO. SKIP PUTTING OUT                 08146
         ST    R7,SAVE7LDM          Save BAL register.                   08147
         LA    R4,INAREA            Point to area to be dumped.          08148
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08149
         L     R7,SAVE7LDM          Restore BAL register.                08150
AUHLEND  DS    0H                   END OF LABEL DUMPING CODE            08151
* ---------------- LABEL DUMPING CODE --------------------- *            08152
ASCUHLE  DS    0H                                                        08153
         B     LABCHEND                                                  08154
ASCUTL   DS    0H                                                        08155
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            08156
         BO    ASCUTLE               YES. JUST TURN ON ISLABEL FLAG      08157
*                                                                        08158
* ------ Call PRINTLBL routine to print this label.....   below          08159
         ST    R7,SAVE7BA2        Save BAL register.                     08160
         BAL   R7,PRNTLABL        Print the current label.               08161
         L     R7,SAVE7BA2                                               08162
* ------ Call PRINTLBL routine to print this label.....   above          08163
*                                                                        08164
* ---------------- LABEL DUMPING CODE --------------------- *            08165
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               08166
         BZ    AUTLEND              NO. SKIP PUTTING OUT                 08167
         ST    R7,SAVE7LDM          Save BAL register.                   08168
         LA    R4,INAREA            Point to area to be dumped.          08169
         BAL   R7,DUMLABRC          Dump label contents to LABLDUMP DD.  08170
         L     R7,SAVE7LDM          Restore BAL register.                08171
AUTLEND  DS    0H                   END OF LABEL DUMPING CODE            08172
* ---------------- LABEL DUMPING CODE --------------------- *            08173
ASCUTLE  DS    0H                                                        08174
         B     LABCHEND                                                  08175
NOTLABEL NI    ISLBLFLG,FF-X'03'  TURN OFF "IS LABEL" FLAG               08176
LABCHEND DS    0H                                                        08177
         BR    R7                                                        08178
* --------------------------------------------------------- *            08179
*    BAL REGISTER IS R7.                                                 08180
* --------------------------------------------------------- *            08181
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            08182
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              08183
* --------------------------------------------------------- *            08184
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          08185
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08186
         BE    MOVEHI09                                                  08187
         MVC   0(4,R3),0(R2)                                             08188
         B     MOVEHIEN                                                  08189
         LA    R2,1(,R2)                                                 08190
         LA    R3,1(,R3)                                                 08191
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08192
         BE    MOVEHI08                                                  08193
         MVC   0(3,R3),0(R2)                                             08194
         B     MOVEHIEN                                                  08195
         LA    R2,1(,R2)                                                 08196
         LA    R3,1(,R3)                                                 08197
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08198
         BE    MOVEHI07                                                  08199
         MVC   0(2,R3),0(R2)                                             08200
         B     MOVEHIEN                                                  08201
         LA    R2,1(,R2)                                                 08202
         LA    R3,1(,R3)                                                 08203
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        08204
         BE    MOVEHIEN                                                  08205
         MVC   0(1,R3),0(R2)                                             08206
MOVEHIEN BR    R7                                                        08207
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08208
*    BAL REGISTER IS R7.                                                 08209
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08210
*              Upon entry, R4 points to the 80-byte record               08211
*              to be dumped into the LABLDUMP DD.                        08212
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08213
DUMLABRC DS    0H                                                        08214
         TM    PARMFLG2,X'10'       Are we dumping labels?               08215
         BZ    DUMLABRN             No. Skip putting out.                08216
         MVC   LLINE,LLINE-1        Clear output area in EBCDIC.         08217
         MVC   LLINE(80),0(R4)      Move in record info to line.         08218
         TM    ASCIIFLG,X'01'       Are we working in ASCII?             08219
         BZ    NOASCIID             No. Don't translate label bytes.     08220
         MVI   LLINE,X'20'                  Clear to ASCII blanks        08221
         MVC   LLINE+1(L'LLINE-1),LLINE                                  08222
         MVC   LLINE(80),0(R4)      Move in record info to line.         08223
         ST    R5,SAVE5LDM          Save register.                       08224
         L     R5,SAVTRTCS          Point to translation table CSECT     08225
         USING TRTDSECT,R5          Map it.                              08226
         TM    ATRNLFLG,X'01'       Is this record to be translated?     08227
         BZ    ANOTRANS             No. Dump it as is.                   08228
         TR    LLINE(80),TRTE2A     Translate label dump area to ASCII   08229
ANOTRANS DS    0H                                                        08230
         L     R5,SAVE5LDM          Restore register.                    08231
         DROP  R5                                                        08232
NOASCIID DS    0H                                                        08233
         ST    R6,SAVER6            Prepare to write record. Save reg.   08234
         L     R6,LABLDDCB          Point to LABLDUMP DCB.               08235
         PUT   (6),LLINE                                                 08236
         L     R6,SAVER6            Restore register.                    08237
*        PUT   LABLDUMP,LLINE       Write out label info.                08238
DUMLABRN DS    0H                                                        08239
         BR    R7                                                        08240
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08241
*    BAL REGISTER IS R4.                                                 08242
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08243
HEX      DS    0H                                                        08244
         MVC   1(1,R15),0(R1)        Move byte                           08245
         UNPK  0(3,R15),1(2,R15)     Unpack                              08246
         TR    0(2,R15),HEXTAB-240                                       08247
         LA    R15,2(,R15)           Increment output pointer            08248
         LA    R1,1(,R1)             Increment input pointer             08249
         BCT   R0,HEX                Decrement length, then loop         08250
         MVI   0(R15),C' '           Blank the trailing byte             08251
         BR    R4                    Return to caller                    08252
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     08253
         SPACE                                                           08254
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08255
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08256
*    BAL REGISTER IS R7.                                                 08257
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08258
PRNTLABL DS    0H                                                        08259
*                                                                        08260
* ------ Call PRINTLBL routine to print this label.....   below          08261
         L     R15,PRTLBENT       Get entry point of called program      08262
         STM   R1,R3,SAVE13LC     Save R1 thru R3.                       08263
         LA    R1,PARMFLGS        Point R1 to parm flags.                08264
         L     R3,=A(INAREA)      Point R3 to address of input area.     08265
         BALR  R14,R15                 Do CALL.                          08266
         MVC   PARMFLGS(PARMFLLN),0(R1)   Move parms back for ASCII.     08267
*        MVC   INAREA(80),0(R3)        Overlay 80 bytes of INAREA        08268
         LM    R1,R3,SAVE13LC     Restore R1 thru R3.                    08269
* ------ Call PRINTLBL routine to print this label.....   above          08270
*                                                                        08271
         BR    R7                                                        08272
* --------------------------------------------------------- *            08273
* ---        C O N S T A N T S                          --- *            08274
* --------------------------------------------------------- *            08275
*    ------------------------ >   Constants for Date and Time - below    08276
SAVE1402 DS    6F                 Extra fullword for safety              08277
TIMED    DS    CL7                                                       08278
DATED    DS    CL9                                                       08279
DATETIME DS    4F                                                        08280
         ORG   DATETIME                                                  08281
TIME     DS    CL4                                                       08282
         DS    CL4                                                       08283
DATE     DS    CL5                                                       08284
         DS    CL3                                                       08285
HEADDLIT DS    0CL31              Literal for headings - date and time   08286
         DC    CL6'Today:'                                               08287
         DC    CL2' '                                                    08288
HEADDATE DC    CL23' '                                                   08289
LEVELLIT DS    0CL21              Level number display for headings      08290
         DC    CL6'Level '                                               08291
LEVELL   DC    CL4'&LLEV'                                                08292
         DC    CL2' ('                                                   08293
LEVDATE  DC    CL8' '             Assembly date for this program         08294
         DC    CL1')'                                                    08295
*    ------------------------ >   Constants for Date and Time - above    08296
         LTORG                                                           08297
FF       EQU   X'FF'                                                     08298
LABELITH DC    CL80'----ENDOFLABELHEADER '                               08299
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            08300
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               08301
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            08302
MESSAGE1 DC    CL133'1LABELCHK - TAPE LABEL CHECKING AND PRINTING PROGR- 08303
               AM              '                                         08304
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '             08305
         DC    C'EOV2EOF PARM OR OPTION'                                 08306
         DC    69C' '                                                    08307
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  08308
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  08309
         DC    C'                           '                            08310
         DC    C'0'                                                      08311
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    08312
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              08313
* --------------------------------------------------------- *            08314
         DC    C' '                                                      08315
LINE     DC    CL133' '                                                  08316
* ---------------------  Register Save Areas  ---------------->>>        08317
SYSPRINV DC    V(SYSPRINT)                                               08318
LABLDUMV DC    V(LABLDUMP)                                               08319
LABADDIV DC    V(LABADDIN)                                               08320
SAVTRTCS DC    F'0'                                                      08321
PRTLBENT DC    F'0'                                                      08322
PARMSAVE DC    F'0'                                                      08323
USERSAVE DC    F'0'                                                      08324
INARSAVE DC    F'0'                                                      08325
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     08326
HEXSAVE  DS    3F                    Register save for HEX macro         08327
SAVE2TO3 DC    2F'0'                                                     08328
SAVER6   DC    F'0'                                                      08329
SAVE3REG DC    F'0'                                                      08330
SAVE7BA1 DC    F'0'                                                      08331
SAVE7BA2 DC    F'0'                                                      08332
SAVE7REG DC    F'0'                                                      08333
SAVE7BAL DC    F'0'                                                      08334
SAVE4LDM DC    F'0'                                                      08335
SAVE5LDM DC    F'0'                                                      08336
R5HXPRT  DC    F'0'                                                      08337
SAVE7LDM DC    F'0'                                                      08338
SAVE7RG1 DC    F'0'                                                      08339
SAVE7RG2 DC    F'0'                                                      08340
SAVE7RG3 DC    F'0'                                                      08341
SAVE7RG4 DC    F'0'                                                      08342
SAVE7RG5 DC    F'0'                                                      08343
SAVE13LC DC    3F'0'                                                     08344
* ---------- *           Save V(CON)s to DCBs                            08345
SYSPRDCB DC    F'0'                                                      08346
LABLDDCB DC    F'0'                                                      08347
LABADDCB DC    F'0'                                                      08348
* ---------- *                                                           08349
         DC    C' '          BLANK FOR CLEARING AREA                     08350
LLINE    DC    CL80' '       OUTPUT AREA FOR LABEL DUMP                  08351
INASCI   DC    CL80' '       Read labels from here.                      08352
INAREA   DC    CL80' '       Read labels from here.                      08353
         DC    CL40' '       Padding for possible overflow.              08354
* ---------- *                                                           08355
**** ----------------------------------->>>>  Passed area, below         08356
* --------------------------------------------------------- *            08357
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08358
PARMFLG1 DC    X'00'                                                     08359
PARMFLG2 DC    X'00'                                                     08360
PARMFLG3 DC    X'00'                                                     08361
PARMFLG4 DC    X'00'                                                     08362
PARMFLG5 DC    X'00'                                                     08363
PARMFLG6 DC    X'00'                                                     08364
PARMFLG7 DC    X'00'                                                     08365
PARMFLG8 DC    X'00'                                                     08366
PARMFLG9 DC    X'00'                                                     08367
PARMFLGA DC    X'00'                                                     08368
PARMFLLN EQU   *-PARMFLGS                                                08369
PARMCOPY DS    XL10           Copy of options before correction          08370
* --------------------------------------------------------- *            08371
**** ----- LABELCHK -------------------->>>>  Passed area, below         08372
*                                                                        08373
LCHKPASS DS    0H                                                        08374
*                                                                        08375
INAREAX  DC    CL80' '        Read labels into here.                     08376
         DC    CL40' '        Padding for possible overflow.             08377
* --------------------------------------------------------- *            08378
*                                                                        08379
*                                                                        08380
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       08381
*              X'00'          DATA IS NOT A LABEL                        08382
*              X'01'          DATA IS A LABEL                            08383
*              X'02'          DATA IS AN ASCII LABEL                     08384
*                                                                        08385
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               08386
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             08387
*              X'02'          BECAUSE OF SYSIN    DD MISSING             08388
*              X'04'          BECAUSE OF LABADDIN DD MISSING             08389
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                08390
*              X'01'          LABLDUMP DD IS OPEN                        08391
*              X'02'          SYSIN    DD IS OPEN                        08392
*              X'04'          LABADDIN DD IS OPEN                        08393
L80FLAG  DC    X'00'                                                     08394
*              X'01'          LAST DATA WAS 80 BYTE RECORD               08395
LBLFLAG  DC    X'00'          FLAG WHEN TAPE LABELS ARE BEING READ IN    08396
*              X'01'          HDR1 HAS BEEN SEEN                         08397
*              X'02'          HDR2 HAS BEEN SEEN                         08398
*              X'04'          VOL1 HAS BEEN SEEN                         08399
*              X'08'          HDR1 IS FROM AN INITTED TAPE               08400
*              X'10'          EOF1 HAS BEEN SEEN                         08401
*              X'20'          EOF2 HAS BEEN SEEN                         08402
*              X'40'          EOV1 HAS BEEN SEEN                         08403
*              X'80'          EOV2 HAS BEEN SEEN                         08404
ASCIIFLG DC    X'00'          Label is ASCII if X'01'                    08405
EXASCFLG DC    X'00'          External Label is ASCII if X'01'           08406
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   08407
LABADFLG DC    X'00'          If X'01' then close LABADDIN file          08408
CLOSMFLG DC    X'00'          If X'01' then close all open files         08409
* --------------------------                                             08410
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     08411
*              X'01'          WE ARE IN A HDR GROUP                      08412
*              X'02'          WE ARE IN A EOF GROUP                      08413
*              X'04'          WE ARE IN A EOV GROUP                      08414
LBLINENF DC    X'01'          X'01' IF NEEDS IMMED BRANCH TO LBLINEND    08415
ATRNLFLG DC    X'00'          TRANSLATE TO ASCII BEFORE DUMPING LABEL    08416
BLKCNTSV DC    C'0000000000'  SAVE FULL BLOCK COUNT FOR DATA FILES       08417
BLKCNASC DC    X'30303030303030303030'     FULL BLOCK COUNT IN ASCII     08418
* ---------- *                                                           08419
* --------------------------------------------------------- *            08420
INVOLUME DC    CL6'      '   EBCDIC INPUT VOLUME NAME FOR MESSAGE        08421
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           08422
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           08423
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           08424
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             08425
VOLCHG   DC    C'      '                                                 08426
VOLSTG   DC    C'      '     CARD VOLUME NAME - TO OVERLAY OTHERS        08427
VOLASC   DC    C'      '     ASCII VOLUME                                08428
LCHKPASE EQU   *-LCHKPASS                                                08429
**** ----- LABELCHK -------------------->>>>  Passed area, above         08430
** ---------------------------------------------------------------- **   08431
TRTDSECT DSECT                 Displacements must match TRTCSECT.        08432
TRTBL0   DS    256X                                                      08433
TRTBL1   DS    256X                                                      08434
TRTBL2   DS    256X                                                      08435
TRTE2A   DS    256X                                                      08436
TRTA2E   DS    256X                                                      08437
TRTASPRT DS    256X                                                      08438
** ---------------------------------------------------------------- **   08439
         END                                                             08440
*         LABEL PRINTER        AT LEVEL 1.1 AS OF 07/07/04               08441
   TITLE 'PRINTLBL -- PRINT TAPE LABELS OF DIFFERENT TYPES'              08442
         GBLC  &LLEV                                                     08443
&LLEV    SETC  '1.1 '                                                    08444
         YREGS                                                           08445
         ENTRY PRINTLBL                                                  08446
PRINTLBL CSECT                                                           08447
         USING *,R15                                                     08448
         B     EYECATCH                                                  08449
         DC    C'--- '            MAKE EYECATCHER VISIBLE                08450
         DC    C'PRINTLBL - PRINT TAPE FILES IF THEY ARE LABELS'         08451
         DC    C' - '                                                    08452
         DC    C'LEVEL '                                                 08453
SYSLEV   DC    C'&LLEV'                                                  08454
         DC    C' - '                                                    08455
SYSDAT   DC    C'&SYSDATE'                                               08456
         DC    C'  ',C'&SYSTIME ',C'--- '                                08457
         DC    C'Copyright (c) 2003 by Sam Golob '                       08458
         DC    C'--- '              MAKE EYECATCHER VISIBLE              08459
SAVEAREA DC    18F'0'                                                    08460
EYECATCH DS    0D                   ENSURE ALIGNMENT                     08461
         SAVE  (14,12)                                                   08462
         LR    R5,R1                SAVE REGISTER 1 INPUT TO PROGRAM     08463
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   08464
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          08465
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         08466
         LR    R13,R1               NEW SAVE AREA ADDRESS                08467
         DROP  R15                                                       08468
* -----                             SET UP BASE REGISTERS                08469
         USING PRINTLBL,R12,R11,R10,R9                                   08470
         LR    R12,R15                                                   08471
         LA    R11,4095(,R12)                                            08472
         LA    R11,1(,R11)                                               08473
         LA    R10,4095(,R11)                                            08474
         LA    R10,1(,R10)                                               08475
         LA    R9,4095(,R10)                                             08476
         LA    R9,1(,R9)                                                 08477
         LR    R1,R5                RESTORE REGISTER 1 INPUT             08478
* ----------------------------------------------------------------- *    08479
         ST    R1,PARMSAVE          Address of parm flags in caller      08480
         ST    R3,INARSAVE          Address of input area in caller      08481
* ----------------------------------------------------------------- *    08482
INITCONS DS    0H                    Initialize necessary quantities.    08483
         MVI   LINE-1,X'40'          Make sure the print line is blank.  08484
         MVC   LINE,LINE-1                                               08485
         L     R0,SYSPRINV           SYSPRINT DCB address in caller      08486
         ST    R0,SYSPRDCB             store for the program's use       08487
         L     R0,LABLDUMV           LABLDUMP DCB address in caller      08488
         ST    R0,LABLDDCB             store for the program's use       08489
         L     R0,LABADDIV           LABADDIN DCB address in caller      08490
         ST    R0,LABADDCB             store for the program's use       08491
         L     R0,=V(TRTCSECT)       Save HEX TRANSLATE TABLE pointer    08492
         ST    R0,SAVTRTCS             store it for later use            08493
         MVC   EXTLBLIN(80),0(R3)    Copy label input area to ours.      08494
         MVC   PARMFLGS(PARMFLLN),0(R1)   Copy input parms to our pgm.   08495
* ----------------------------------------------------------------- *    08496
WHATLBL  DS    0H                                                        08497
         CLC   EXTLBLIN(4),=C'VOL1'                                      08498
         BE    WHATLBLE                                                  08499
         CLC   EXTLBLIN(4),=C'HDR1'                                      08500
         BE    WHATLBLE                                                  08501
         CLC   EXTLBLIN(4),=C'EOF1'                                      08502
         BE    WHATLBLE                                                  08503
         CLC   EXTLBLIN(4),=C'EOV1'                                      08504
         BE    WHATLBLE                                                  08505
         CLC   EXTLBLIN(4),=C'HDR2'                                      08506
         BE    WHATLBLE                                                  08507
         CLC   EXTLBLIN(4),=C'EOF2'                                      08508
         BE    WHATLBLE                                                  08509
         CLC   EXTLBLIN(4),=C'EOV2'                                      08510
         BE    WHATLBLE                                                  08511
         CLC   EXTLBLIN(3),=C'UHL'                                       08512
         BE    WHATLBLE                                                  08513
         CLC   EXTLBLIN(3),=C'UTL'                                       08514
         BE    WHATLBLE                                                  08515
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    08516
         BE    WHATLBLA                                                  08517
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    08518
         BE    WHATLBLA                                                  08519
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    08520
         BE    WHATLBLA                                                  08521
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    08522
         BE    WHATLBLA                                                  08523
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    08524
         BE    WHATLBLA                                                  08525
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    08526
         BE    WHATLBLA                                                  08527
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    08528
         BE    WHATLBLA                                                  08529
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    08530
         BE    WHATLBLA                                                  08531
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    08532
         BE    WHATLBLA                                                  08533
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    08534
         BE    WHATLBLA                                                  08535
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    08536
         BE    WHATLBLA                                                  08537
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    08538
         BE    WHATLBLA                                                  08539
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    08540
         BE    WHATLBLA                                                  08541
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    08542
         BE    WHATLBLA                                                  08543
         B     NOPRTEXT                    Not a label format            08544
*                                                                        08545
WHATLBLE DS    0H                          EBCDIC Labels                 08546
*                                          Go to appropriate routine     08547
         CLC   EXTLBLIN(4),=C'VOL1'                                      08548
         BE    PXTVOL1                                                   08549
         CLC   EXTLBLIN(4),=C'HDR1'                                      08550
         BE    PXT1PR                                                    08551
         CLC   EXTLBLIN(4),=C'EOF1'                                      08552
         BE    PXT1PR                                                    08553
         CLC   EXTLBLIN(4),=C'EOV1'                                      08554
         BE    PXT1PR                                                    08555
         CLC   EXTLBLIN(4),=C'HDR2'                                      08556
         BE    PXT2PR                                                    08557
         CLC   EXTLBLIN(4),=C'EOF2'                                      08558
         BE    PXT2PR                                                    08559
         CLC   EXTLBLIN(4),=C'EOV2'                                      08560
         BE    PXT2PR                                                    08561
         CLC   EXTLBLIN(3),=C'UHL'                                       08562
         BE    PXTUSE                                                    08563
         CLC   EXTLBLIN(3),=C'UTL'                                       08564
         BE    PXTUSE                                                    08565
         B     NOPRTEXT                    Not a label format            08566
WHATLBLA DS    0H                          ASCII  Labels                 08567
*                                                                        08568
*        Common ASCII preparation routines......                         08569
*                                                                        08570
         OI    PARMFLG5,X'80'       Force ASCII HEXPRT interpretation    08571
*                                                                        08572
* -- >  Make an EBCDIC version of this label in the EXTLBLWK field.      08573
         ST    R5,R5HXPRT              Save register.                    08574
         L     R5,SAVTRTCS             Point to translation table CSECT  08575
         USING TRTDSECT,R5                                               08576
         MVC   EXTLBLWK(80),EXTLBLIN   Move LABEL area to workarea       08577
         TR    EXTLBLWK(80),TRTA2E     Translate to EBCDIC for print     08578
         L     R5,R5HXPRT              Restore R5                        08579
         DROP  R5                                                        08580
* -- >                                                                   08581
*                                                                        08582
*        ASCII preparations done......                                   08583
*                                          Go to appropriate routine     08584
*                                                                        08585
         CLC   EXTLBLIN(4),=X'564F4C31'    ASCII VOL1                    08586
         BE    PXTVOL1A                                                  08587
         CLC   EXTLBLIN(4),=X'48445231'    ASCII HDR1                    08588
         BE    PXT1PRA                                                   08589
         CLC   EXTLBLIN(4),=X'454F4631'    ASCII EOF1                    08590
         BE    PXT1PRA                                                   08591
         CLC   EXTLBLIN(4),=X'454F5631'    ASCII EOV1                    08592
         BE    PXT1PRA                                                   08593
         CLC   EXTLBLIN(4),=X'48445232'    ASCII HDR2                    08594
         BE    PXT2PRA                                                   08595
         CLC   EXTLBLIN(4),=X'454F4632'    ASCII EOF2                    08596
         BE    PXT2PRA                                                   08597
         CLC   EXTLBLIN(4),=X'454F5632'    ASCII EOV2                    08598
         BE    PXT2PRA                                                   08599
         CLC   EXTLBLIN(3),=X'564F4C'      ASCII VOLx                    08600
         BE    PXTUSEA                                                   08601
         CLC   EXTLBLIN(3),=X'484452'      ASCII HDRx                    08602
         BE    PXTUSEA                                                   08603
         CLC   EXTLBLIN(3),=X'454F46'      ASCII EOFx                    08604
         BE    PXTUSEA                                                   08605
         CLC   EXTLBLIN(3),=X'454F56'      ASCII EOVx                    08606
         BE    PXTUSEA                                                   08607
         CLC   EXTLBLIN(3),=X'55564C'      ASCII UVLx                    08608
         BE    PXTUSEA                                                   08609
         CLC   EXTLBLIN(3),=X'55484C'      ASCII UHLx                    08610
         BE    PXTUSEA                                                   08611
         CLC   EXTLBLIN(3),=X'55544C'      ASCII UTLx                    08612
         BE    PXTUSEA                                                   08613
         B     NOPRTEXT                    Not a label format            08614
* ----------------------------------------------------------------- *    08615
*                                                                   *    08616
*   Various Label Printing Routines follow at this point.           *    08617
*                                                                   *    08618
* ----------------------------------------------------------------- *    08619
PXTVOL1  DS    0H                      Print EBCDIC VOL1 Label           08620
         MVI   LINE-1,C' '                                               08621
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  08622
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             08623
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL              08624
         MVC   VOL1OWNR(10),LINE       CLEAR FIELD TO BLANKS             08625
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION              08626
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          08627
         ST    R6,SAVER6                                                 08628
         L     R6,SYSPRDCB                                               08629
         PUT   (6),LINE                                                  08630
         L     R6,SAVER6                                                 08631
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         08632
         B     NOPRTEXT                                                  08633
PXTVOL1A DS    0H                      Print ASCII  VOL1 Label           08634
         MVI   LINE-1,C' '                                               08635
         MVC   LINE,LINE-1             CLEAR PRINT LINE                  08636
         MVC   VOL1SER(6),LINE         CLEAR FIELD TO BLANKS             08637
         MVC   VOL1SER(6),EXTLBLWK+4   REPORT VOLUME SERIAL              08638
         MVC   VOL1OWNR(14),LINE       CLEAR FIELD TO BLANKS             08639
         MVC   VOL1OWNR(14),EXTLBLWK+37   OWNER INFORMATION              08640
         MVC   VOL1LBL+78(15),=C'ANSI/ISO LEVEL '   Level 1, 3, or 4     08641
         MVC   VOL1LBL+93(1),EXTLBLWK+79  Copy Level into message        08642
         MVC   LINE(133),VOL1LBL       INDICATE THAT VOL1 FOUND          08643
         ST    R6,SAVER6                                                 08644
         L     R6,SYSPRDCB                                               08645
         PUT   (6),LINE                                                  08646
         L     R6,SAVER6                                                 08647
*        PUT   SYSPRINT,LINE           WRITE MESSAGE WITH VOLSER         08648
         B     NOPRTEXT                                                  08649
PXT1PR   DS    0H                      Print EBCDIC xxx1 Label           08650
         ST    R3,SAVE3REG                                               08651
         LA    R3,EXTLBLIN                                               08652
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08653
         BAL   R7,PRTXXX1              PRINT XXX1 LABEL FORMAT           08654
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08655
         L     R3,SAVE3REG                                               08656
         B     NOPRTEXT                                                  08657
PXT1PRA  DS    0H                      Print ASCII  xxx1 Label           08658
         ST    R3,SAVE3REG                                               08659
         LA    R3,EXTLBLWK             Point to label area to print      08660
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08661
         BAL   R7,PRTXXX1              PRINT LABEL INFO                  08662
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08663
         L     R3,SAVE3REG                                               08664
         B     NOPRTEXT                                                  08665
PXT2PR   DS    0H                      Print EBCDIC xxx2 Label           08666
         ST    R3,SAVE3REG                                               08667
         LA    R3,EXTLBLIN             Point to label area to print      08668
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08669
         BAL   R7,PRTXXX2              PRINT LABEL INFO                  08670
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08671
         L     R3,SAVE3REG                                               08672
         B     NOPRTEXT                                                  08673
PXT2PRA  DS    0H                      Print ASCII  xxx2 Label           08674
         ST    R3,SAVE3REG                                               08675
         LA    R3,EXTLBLWK             Point to label area to print      08676
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08677
         BAL   R7,PRTAXX2              PRINT LABEL INFO                  08678
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08679
         L     R3,SAVE3REG                                               08680
         B     NOPRTEXT                                                  08681
PXTUSE   DS    0H                      Print EBCDIC USER Label           08682
         ST    R3,SAVE3REG                                               08683
         LA    R3,EXTLBLIN             Point to label area to print      08684
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08685
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08686
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08687
         L     R3,SAVE3REG                                               08688
         B     NOPRTEXT                                                  08689
PXTUSEA  DS    0H                      Print ASCII  USER Label           08690
         ST    R3,SAVE3REG                                               08691
         LA    R3,EXTLBLWK             Point to label area to print      08692
         ST    R7,SAVE7BAL             STORE PREVIOUS BAL REGISTER       08693
         BAL   R7,PRTUSER              PRINT LABEL INFO                  08694
         L     R7,SAVE7BAL             RELOAD PREVIOUS BAL REGISTER      08695
         L     R3,SAVE3REG                                               08696
         B     NOPRTEXT                                                  08697
* ----------------------------------------------------------------- *    08698
NOPRTEXT DS    0H             Don't print external label on report       08699
* ----------------------------------------------------------------- *    08700
THEEND   DS    0H                                                        08701
         L     R13,4(,R13)                                               08702
         MVC   16(4,R13),=F'0'          Return code 0     in R15         08703
* - - - - - - - - - - - - - Pass addresses of our passed areas back.     08704
         MVC   24(4,R13),=A(PARMFLGS)   Address of our PARMFLGS in R1    08705
         MVC   32(4,R13),=A(EXTLBLIN)   Address of our EXTLBLIN in R3    08706
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      08707
         LM    R14,R12,12(R13)                                           08708
         BR    R14                                                       08709
         EJECT                                                           08710
* --------------------------------------------------------- *            08711
*    BAL REGISTER IS R7.                                                 08712
* --------------------------------------------------------- *            08713
PRTXXX1  DS    0H            Print HDR1, EOF1, EOV1 - EBCDIC & ASCII     08714
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08715
         MVI   LINE-1,C' '                                               08716
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08717
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08718
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS               08719
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL                08720
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS               08721
         MVC   XXX1DSN(17),4(R3)     DATASET NAME                        08722
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS               08723
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER             08724
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS               08725
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER              08726
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS               08727
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS              08728
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               08729
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         08730
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS               08731
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS              08732
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS               08733
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS              08734
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE                08735
         ST    R6,SAVER6                                                 08736
         L     R6,SYSPRDCB                                               08737
         PUT   (6),LINE                                                  08738
         L     R6,SAVER6                                                 08739
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08740
PRTXXX1R BR    R7                                                        08741
* --------------------------------------------------------- *            08742
*    BAL REGISTER IS R7.                                                 08743
* --------------------------------------------------------- *            08744
PRTXXX2  DS    0H                 Print HDR2, EOF2, EOV2 - EBCDIC        08745
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08746
         MVI   LINE-1,C' '                                               08747
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08748
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG            08749
         MVC   XXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08750
         MVC   XXX2RFM(1),4(R3)      RECFM                               08751
         MVC   XXX2RFM+1(1),38(R3)   Block Attribute                     08752
         MVC   XXX2RFM+2(1),36(R3)   Control Character                   08753
         MVC   XXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08754
         CLC   =C'00000',5(R3)       Is Block Length 00000?              08755
         BNE   PRX2NLBI              No. No LBI. Print what's here.      08756
         CLI   70(R3),X'40'          Is first LBI field a blank?         08757
         BNE   PRX2NLBI              No LBI field either. Print zeros.   08758
         MVC   XXX2BKLE(10),70(R3)   Move LBI field to blksize display   08759
         B     PRX2LBI               And not the old blksize field.      08760
PRX2NLBI DS    0H                                                        08761
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH                        08762
PRX2LBI  DS    0H                                                        08763
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08764
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH                       08765
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08766
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY                        08767
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08768
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME                      08769
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS               08770
         CLI   34(R3),C'P'           INDICATE IDRC?                      08771
         BNE   PRX2NOI               NO. SAY NO                          08772
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION                   08773
         B     PRX2MOV                                                   08774
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                                        08775
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE                08776
         ST    R6,SAVER6                                                 08777
         L     R6,SYSPRDCB                                               08778
         PUT   (6),LINE                                                  08779
         L     R6,SAVER6                                                 08780
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08781
PRTXXX2R BR    R7                                                        08782
* --------------------------------------------------------- *            08783
*    BAL REGISTER IS R7.                                                 08784
* --------------------------------------------------------- *            08785
PRTAXX2  DS    0H                 Print HDR2, EOF2, EOV2 - ASCII         08786
*                                                                        08787
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED, TRANSLATED TO EBCDIC.    08788
*                                                                        08789
         MVI   LINE-1,C' '                                               08790
         MVC   LINE,LINE-1           CLEAR PRINT LINE                    08791
         MVC   AXX2LBL+1(4),0(R3)    MOVE LABEL TYPE TO MESSAGE          08792
         MVC   AXX2RFM(3),LINE       CLEAR FIELD TO BLANKS               08793
         MVC   AXX2RFM(1),4(R3)      RECFM                               08794
         MVC   AXX2RFM+1(1),38(R3)   Block Attribute                     08795
         MVC   AXX2RFM+2(1),36(R3)   Control Character                   08796
         MVC   AXX2BKLE(10),LINE     CLEAR FIELD TO BLANKS               08797
         MVC   AXX2BKL(5),5(R3)      BLOCK LENGTH                        08798
         MVC   AXX2RCL(5),LINE       CLEAR FIELD TO BLANKS               08799
         MVC   AXX2RCL(5),10(R3)     RECORD LENGTH                       08800
         MVC   AXX2TDN(1),LINE       CLEAR FIELD TO BLANKS               08801
         MVC   AXX2TDN(1),15(R3)     TAPE DENSITY                        08802
         MVC   AXX2JST(17),LINE      CLEAR FIELD TO BLANKS               08803
         MVC   AXX2JST(17),17(R3)     JOB/STEP NAME                      08804
         MVC   AXX2CCS(5),LINE       CLEAR FIELD TO BLANKS               08805
         MVC   AXX2CCS(5),39(R3)      CCSID IDENTIFIER                   08806
PRA2MOV  MVC   LINE(133),AXX2LBL     MOVE INFO TO PRINT LINE             08807
         ST    R6,SAVER6                                                 08808
         L     R6,SYSPRDCB                                               08809
         PUT   (6),LINE                                                  08810
         L     R6,SAVER6                                                 08811
*        PUT   SYSPRINT,LINE         PRINT ASCII XXX2 LABEL              08812
PRTAXX2R BR    R7                                                        08813
* --------------------------------------------------------- *            08814
*    BAL REGISTER IS R7.                                                 08815
* --------------------------------------------------------- *            08816
PRTUSER  DS    0H                                                        08817
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          08818
         MVI   LINE-1,C' '                                               08819
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           08820
         MVI   USERLBL-1,C' '                                            08821
         MVC   USERLBL(133),USERLBL-1                                    08822
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          08823
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                08824
         ST    R6,SAVER6                                                 08825
         L     R6,SYSPRDCB                                               08826
         PUT   (6),LINE                                                  08827
         L     R6,SAVER6                                                 08828
*        PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  08829
PRTUSERR BR    R7                                                        08830
* ----------------------------------------------------------------- *    08831
* ---               C  O  N  S  T  A  N  T  S                   --- *    08832
* ----------------------------------------------------------------- *    08833
         LTORG                                                           08834
FF       EQU   X'FF'                                                     08835
LABELITH DC    CL80'----ENDOFLABELHEADER '                               08836
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            08837
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               08838
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            08839
         DC    C'0'                                                      08840
ZERO23   DC    23C'0'        TEST FOR IEHINITTED HDR1                    08841
         DC    X'30'                                                     08842
ZEROA23  DC    23X'30'       TEST FOR IEHINITTED ASCII HDR1              08843
* --------------------------------------------------------- *            08844
         DC    C' '                                                      08845
LINE     DC    CL133' '                                                  08846
* ---------------------  Register Save Areas  ---------------->>>        08847
SYSPRINV DC    V(SYSPRINT)                                               08848
LABLDUMV DC    V(LABLDUMP)                                               08849
LABADDIV DC    V(LABADDIN)                                               08850
SAVTRTCS DC    F'0'                                                      08851
SYSPRDCB DC    F'0'                                                      08852
LABLDDCB DC    F'0'                                                      08853
LABADDCB DC    F'0'                                                      08854
SAVER6   DC    F'0'                                                      08855
SAVE3REG DC    F'0'                                                      08856
SAVE7BA1 DC    F'0'                                                      08857
SAVE7REG DC    F'0'                                                      08858
SAVE7BAL DC    F'0'                                                      08859
SAVE4LDM DC    F'0'                                                      08860
SAVE5LDM DC    F'0'                                                      08861
R5HXPRT  DC    F'0'                                                      08862
SAVE7LDM DC    F'0'                                                      08863
SAVE7RG1 DC    F'0'                                                      08864
SAVE7RG2 DC    F'0'                                                      08865
SAVE7RG3 DC    F'0'                                                      08866
SAVE7RG4 DC    F'0'                                                      08867
* ----------------------------------------------------------------- *    08868
** -------------------- >>>>>   ASCII & IBM  VOL1 LABEL PRINT - BELOW    08869
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '              08870
VOL1SER  DC    C'      '                                                 08871
VOL1OWNT DC    C'     OWNER = '                                          08872
VOL1OWNR DC    C'          '                                             08873
VOL1OWNE DC    C'    '                                                   08874
VOL1BLNK DC    59C' '                                                    08875
         DC    C' '                                                      08876
** -------------------- >>>>>   ASCII & IBM  USER LABEL PRINT - BELOW    08877
USERLBL  DC    81C' '                                                    08878
         DC    52C' '                                                    08879
** -------------------- >>>>>   ASCII & IBM  XXX1 LABEL PRINT - BELOW    08880
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                                  08881
XXX1VOL  DC    C'      '                                                 08882
XXX1DSNL DC    C' DSN='                                                  08883
XXX1DSN  DC    C'                 '                                      08884
XXX1DSQL DC    C' DS SEQ #: '                                            08885
XXX1DSQ  DC    C'    '                                                   08886
XXX1VSQL DC    C' VOL SEQ #: '                                           08887
XXX1VSQ  DC    C'    '                                                   08888
XXX1BLCL DC    C' BLK CNT: '                                             08889
XXX1BLCH DC    C'    '                                                   08890
XXX1BLC  DC    C'      '                                                 08891
XXX1CRDL DC    C' CRDATE: '                                              08892
XXX1CRD  DC    C'      '                                                 08893
XXX1EXDL DC    C' EXDATE: '                                              08894
XXX1EXD  DC    C'      '                                                 08895
XXX1BLNK DC    30C' '                                                    08896
** -------------------- >>>>>           IBM  XXX2 LABEL PRINT - BELOW    08897
XXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08898
XXX2RFM  DC    C' '                                                      08899
XXX2BKLL DC    C'    BLOCK LENGTH: '                                     08900
XXX2BKLE DS    0CL10                                                     08901
XXX2BKL  DC    C'     '                                                  08902
         DC    C'     '                                                  08903
XXX2RCLL DC    C'   RECORD LENGTH: '                                     08904
XXX2RCL  DC    C'     '                                                  08905
XXX2TDNL DC    C'  TAPE DEN: '                                           08906
XXX2TDN  DC    C' '                                                      08907
XXX2JSTL DC    C'   JOB/JOB STEP: '                                      08908
XXX2JST  DC    C'                 '                                      08909
XXX2IDRL DC    C'   IDRC? '                                              08910
XXX2IDR  DC    C'   '                                                    08911
XXX2BLNK DC    8C' '                                                     08912
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - BELOW    08913
AXX2LBL  DC    C' XXX2 LABEL: RECFM='                                    08914
AXX2RFM  DC    C' '                                                      08915
AXX2BKLL DC    C'    BLOCK LENGTH: '                                     08916
AXX2BKLE DS    0CL10                                                     08917
AXX2BKL  DC    C'     '                                                  08918
         DC    C'     '                                                  08919
AXX2RCLL DC    C'   RECORD LENGTH: '                                     08920
AXX2RCL  DC    C'     '                                                  08921
AXX2TDNL DC    C'  TAPE DEN: '                                           08922
AXX2TDN  DC    C' '                                                      08923
AXX2JSTL DC    C'   JOB/JOB STEP: '                                      08924
AXX2JST  DC    C'                 '                                      08925
AXX2CCSL DC    C'   CCSID '                                              08926
AXX2CCS  DC    C'     '                                                  08927
AXX2BLNK DC    6C' '                                                     08928
** -------------------- >>>>>          ASCII XXX2 LABEL PRINT - ABOVE    08929
* --------------------------------------------------------- *            08930
* ----------------------------------------------------------------- *    08931
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          08932
EXTLBLWK DC    CL80' '    WORK AREA FOR TRANSLATING                      08933
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 08934
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  08935
PARMSAVE DC    F'0'                                                      08936
USERSAVE DC    F'0'                                                      08937
INARSAVE DC    F'0'                                                      08938
** ---------------------------------------------------------------- **   08939
**** ----------------------------------->>>>  Passed area, below         08940
* --------------------------------------------------------- *            08941
PARMFLGS DS    0CL10          Parm Flags, Copied from COPYMODS           08942
PARMFLG1 DC    X'00'                                                     08943
PARMFLG2 DC    X'00'                                                     08944
PARMFLG3 DC    X'00'                                                     08945
PARMFLG4 DC    X'00'                                                     08946
PARMFLG5 DC    X'00'                                                     08947
PARMFLG6 DC    X'00'                                                     08948
PARMFLG7 DC    X'00'                                                     08949
PARMFLG8 DC    X'00'                                                     08950
PARMFLG9 DC    X'00'                                                     08951
PARMFLGA DC    X'00'                                                     08952
PARMFLLN EQU   *-PARMFLGS                                                08953
PARMCOPY DS    XL10           Copy of options before correction          08954
* --------------------------------------------------------- *            08955
TRTDSECT DSECT                 Displacements must match TRTCSECT.        08956
TRTBL0   DS    256X                                                      08957
TRTBL1   DS    256X                                                      08958
TRTBL2   DS    256X                                                      08959
TRTE2A   DS    256X                                                      08960
TRTA2E   DS    256X                                                      08961
TRTASPRT DS    256X                                                      08962
** ---------------------------------------------------------------- **   08963
         END                                                             08964
         TITLE 'FOOTAGE CALCULATION AS IF THE TAPE WERE 6250 BPI'        08965
         YREGS                                                           08966
***********************************************************************  08967
*                                                                     *  08968
* NAME             FOOTAGE                                            *  08969
*                                                                     *  08970
* PURPOSE          Footage calculations on modern 3590 or 3490        *  08971
*                  cartridges don't mean much.  In order to give      *  08972
*                  us a much better idea of the true size of the      *  08973
*                  data on a tape, it would give us a better          *  08974
*                  picture to imagine that the data would reside      *  08975
*                  on a (very long) 6250 bpi tape reel.  Of course,   *  08976
*                  it might be too much data for an actual reel,      *  08977
*                  but we would get a good uniform picture of the     *  08978
*                  actual data size.                                  *  08979
*                                                                     *  08980
* FUNCTION         Calculate 6250 bpi footage for the last file       *  08981
*                  read, and accumulate total 6250 bpi footage        *  08982
*                  for the entire tape, up to the last file read.     *  08983
*                                                                     *  08984
* Calling FOOTAGE from COPYMODS -                                     *  08985
*                                                                     *  08986
*                  Register 1 passes the address of a workarea        *  08987
*                  within the COPYMODS program.  The FOOTWORK         *  08988
*                  DSECT describes the labels in this workarea.       *  08989
*                  The contents of the workarea contains all the      *  08990
*                  input information necessary for the FOOTAGE        *  08991
*                  routine.                                           *  08992
*                                                                     *  08993
*                  COPYMODS provides FOOTAGE with initial values,     *  08994
*                  in the workarea.  FOOTAGE uses these values,       *  08995
*                  and recalculates the footages (for the file, and   *  08996
*                  for the entire tape, up to here), based on block   *  08997
*                  sizes, etc. that were provided in the workarea.    *  08998
*                  FOOTAGE then changes the two footage measurement   *  08999
*                  values in the workarea, along with possibly other  *  09000
*                  workarea changes, and then returns control back    *  09001
*                  to COPYMODS.                                       *  09002
*                                                                     *  09003
* DESCRIPTION      FOOTAGE IS CALLED FROM THE COPYMODS READIN CODE    *  09004
*                  & IS PROVIDED WITH A WORK AREA.  THE FOOTAGE FOR   *  09005
*                  THE FILE (BASED ON BLKSIZE, NUMBER OF BLOCKS,      *  09006
*                  AND 6250 BPI TAPE DENSITY IS CALCULATED AND MOVED  *  09007
*                  INTO THE OUTPUT AREA.  TOTAL REEL LENGTH IS ALSO   *  09008
*                  CALCULATED AND MOVED INTO THE OUTPUT AREA.         *  09009
*                                                                     *  09010
* PARAMETERS       FOOTAGE IS PASSED THE ADDRESS OF A WORK AREA       *  09011
*                  WHICH CONTAINS INPUT DATA AND IS UPDATED BY        *  09012
*                  FOOTAGE.  THE WORK AREA INCLUDES -                 *  09013
*                                                                     *  09014
*                  TAPE LABEL TYPE INDICATOR (ALWAYS NON-LABELLED)    *  09015
*                  DENSITY CODE (ALWAYS 4)                            *  09016
*                  RECORD LENGTH                                      *  09017
*                  NUMBER OF RECORDS                                  *  09018
*                  NUMBER OF USER LABELS                              *  09019
*                  CUMULATIVE REEL COUNT   (UPDATED)                  *  09020
*                  FILE FOOTAGE IN EBCDIC  (UPDATED)                  *  09021
*                  REEL FOOTAGE IN EBCDIC  (UPDATED)                  *  09022
*                                                                     *  09023
* REGISTER USAGE   R0  - LINKAGE                                      *  09024
*                  R1  - LINKAGE                                      *  09025
*                  R2  - POINTER TO DENSITY CONSTANTS                 *  09026
*                  R3  - NOT USED                                     *  09027
*                  R4  - FOOTAGE CALCULATION WORK                     *  09028
*                  R5  - FOOTAGE CALCULATION WORK                     *  09029
*                  R6  - NOT USED                                     *  09030
*                  R7  - NOT USED                                     *  09031
*                  R8  - NOT USED                                     *  09032
*                  R9  - NOT USED                                     *  09033
*                  R10 - NOT USED                                     *  09034
*                  R11 - WORK AREA POINTER                            *  09035
*                  R12 - PROGRAM BASE                                 *  09036
*                  R13 - SAVE AREA                                    *  09037
*                  R14 - LINKAGE                                      *  09038
*                  R15 - LINKAGE                                      *  09039
*                                                                     *  09040
***********************************************************************  09041
         TITLE 'ENTRY CODING'                                            09042
FOOTAGE  CSECT                                                           09043
         USING FOOTAGE,R15              DEFINE BASE REGISTER             09044
         B     JUMPID                   BRANCH AROUND ID                 09045
         DC    AL1(28)                  IDENTIFIER LENGTH                09046
         DC    CL8'FOOTAGE'             CSECT NAME                       09047
         DC    CL1' '                   SPACER                           09048
         DC    CL8'&SYSDATE'            DATE OF ASSEMBLY                 09049
         DC    CL1' '                   SPACER                           09050
         DC    CL8'&SYSTIME'            TIME OF ASSEMBLY                 09051
         DC    CL1' '                   SPACER                           09052
JUMPID   DS    0H                                                        09053
         STM   R14,R12,12(R13)          SAVE REGISTERS                   09054
         LR    R12,R15                  LOAD BASE ADDRESS                09055
         DROP  R15                      DISCONTINUE R15 BASE             09056
         USING FOOTAGE,R12              DEFINE BASE REGISTERS            09057
         LR    R15,R13                  SAVE OLD SAVEAREA ADDR           09058
         BAL   R13,JUMPSAVE             LOAD SAVEAREA ADDR               09059
         DC    18F'0'                   SAVE AREA                        09060
JUMPSAVE DS    0H                                                        09061
         ST    R15,4(,R13)              CHAIN SAVE AREAS                 09062
         ST    R13,8(,R15)                                               09063
         LR    R11,R1                   LOAD WORK AREA ADDRESS           09064
         USING FOOTWORK,R11             WORK AREA ADDRESSABILITY         09065
         B     CALC6250        ONLY CALCULATE AS 6250 FOR ALL TAPES.     09066
         TITLE 'FOOTAGE CALCULATIONS FOR 6250 BPI, GCR'                  09067
***********************************************************************  09068
*                                                                     *  09069
*        FOOTAGE CALCULATIONS FOR 6250 BPI, GCR                       *  09070
*                                                                     *  09071
*        FULL REEL COUNT = 260,409,600                                *  09072
*                                                                     *  09073
***********************************************************************  09074
         SPACE                                                           09075
CALC6250 SR    R4,R4                   CLEAR FOR DIVIDE                  09076
         L     R5,BLKSZE               LOAD BLOCKSIZE                    09077
         D     R4,=F'1106'             DIVIDE BY 1106                    09078
         LR    R1,R4                   SAVE REMAINDER                    09079
         M     R4,=F'1600'             FOR EVERY 1106, 1580 + 20 RESYNC  09080
         SR    R0,R0                                                     09081
         D     R0,=F'7'                7 BYTE GROUPS                     09082
         LA    R1,1(R1)                ADD 1 TO QUOTIENT                 09083
         MH    R1,=H'10'               FOR EVERY 7, YOU GET 10           09084
         AR    R5,R1                   ADD IT TO TOTAL                   09085
         A     R5,=F'2898'             ADD 2898 FOR IBG AND CONTROL      09086
         M     R4,NUMBLKS              MULTIPLY BY NUMBER OF BLOCKS      09087
         CLI   LABELTYP,C'S'           TEST FOR STANDARD LABELS          09088
         BNE   SAVE6250                                                  09089
         L     R1,USERLBLS             LOAD USER LABEL COUNT             09090
         LA    R1,2(R1)                ADD 2 FOR STANDARD LABELS         09091
         MH    R1,=H'6036'             MULTIPLY BY 6036                  09092
         AR    R5,R1                   ADD TO TOTAL                      09093
         CLC   =H'1',FILENO            TEST FOR FIRST FILE               09094
         BNE   SAVE6250                                                  09095
         A     R5,=F'3018'             ADD 3018 FOR VOL LABEL            09096
SAVE6250 LA    R2,DATA6250             ADDRESS OF 6250 BPI CONSTANTS     09097
         TITLE 'CONVERT THE BIT COUNTS TO FEET AND EDIT'                 09098
***********************************************************************  09099
*                                                                     *  09100
*        CONVERT THE BIT COUNTS TO FEET AND EDIT                      *  09101
*                                                                     *  09102
***********************************************************************  09103
         SPACE                                                           09104
FOOTEDIT LR    R1,R5                   COPY                              09105
         A     R1,CUMTOTAL             ADD PREVIOUS TOTAL                09106
         ST    R1,CUMTOTAL             STORE NEW TOTAL                   09107
         A     R5,0(,R2)               ROUND OFF                         09108
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12             09109
         CVD   R5,PACKDEC              CONVERT TO DECIMAL                09110
         MVC   FILEFT,=X'40402020202021204B20'  MOVE IN MASK             09111
         ED    FILEFT,PACKDEC+4        EDIT IT                           09112
         LR    R5,R1                   COPY CUMULATIVE TOTAL             09113
         SR    R4,R4                                                     09114
         A     R5,0(,R2)               ROUND OFF                         09115
         D     R4,4(,R2)               DIVIDE BY (BPI/10)*12             09116
         CVD   R5,PACKDEC              CONVERT TO DECIMAL                09117
         MVC   REELFT,=X'40402020202021204B20'  MOVE IN MASK             09118
         ED    REELFT,PACKDEC+4                                          09119
         DROP  R11                                                       09120
FOOTRTRN L     R13,4(,R13)              RESTORE OLD SAVEAREA             09121
         MVC   16(4,R13),=F'0'          RETURN CODE 0     IN R15         09122
         LM    R14,R12,12(R13)                                           09123
         BR    R14                      RETURN                           09124
         TITLE 'DATA AREAS'                                              09125
***********************************************************************  09126
*                                                                     *  09127
*        DATA AREAS                                                   *  09128
*                                                                     *  09129
***********************************************************************  09130
         SPACE                                                           09131
         LTORG                                                           09132
         SPACE                                                           09133
DATA6250 DC    F'5425'                                                   09134
         DC    F'10850'                9042/10*12 (BITS PER FOOT/10)     09135
PACKDEC  DS    D                                                         09136
*--------FOLLOWING IS A WORK AREA FOR FOOTAGE ROUTINE                    09137
*   THIS DSECT MUST MATCH THE LABELTYP WORK AREA IN COPYMODS.            09138
FOOTWORK DSECT                                                           09139
LABELTYP DS    C                       LABEL TYPE                        09140
DENSITY  DS    C                       DENSITY CODE                      09141
FILENO   DS    H                       FILE SEQUENCE NUMBER IN BINARY    09142
BLKSZE   DS    F                       BLOCK SIZE IN BINARY              09143
NUMBLKS  DS    F                       NUMBER OF BLOCKS IN BINARY        09144
USERLBLS DS    F                       USER LABELS IN BINARY             09145
CUMTOTAL DS    F                       CUMULATIVE REEL TOTAL             09146
FILEFT   DS    CL10                    FILE FOOTAGE IN EBCDIC            09147
REELFT   DS    CL10                    REEL FOOTABE IN EBCDIC            09148
*--------END OF FOOTAGE ROUTINE PARAMETERS                               09149
         END                                                             09150
