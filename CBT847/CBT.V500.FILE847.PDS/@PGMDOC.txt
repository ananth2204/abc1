**                                                          **
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **
**                                                          **
**           Extensively revised by Sam Golob.              **
**                                                          **
**      (See the documentation in the code, below.)         **
**                                                          **
**  ** ================================================ **  **
**  **  Defaults have purposely been left, so the       **  **
**  **  output will resemble that of the original       **  **
**  **  program version.  And all of your original JCL  **  **
**  **  will still work.  However the list of "options  **  **
**  **  in effect" will be printed in //SYSPRINT by     **  **
**  **  default.  It will give you an idea about what   **  **
**  **  kind of things are really possible to do,       **  **
**  **  using this program.  IBM SL, and ASCII SL,      **  **
**  **  are extensively supported.  So are 64K blocks.  **  **
**  ** ================================================ **  **
**  **  Options in COPYMODS may be coded in the PARM    **  **
**  **  of the EXEC card or, more conveniently, in      **  **
**  **  a separate //SYSIN DD card, which is automati-  **  **
**  **  cally recognized if it is present in the JCL.   **  **
**  ** ================================================ **  **
**  **  Assembly time defaults can be changed by        **  **
**  **  altering the (extremely flexible) PARMTABL.     **  **
**  ** ================================================ **  **
**                                                          **
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **
**     WAS FOR COPYING THE SHARE MVS MODS TAPE.             **
**                                                          **
**     This has been revised, with the many new functions   **
**     that have been added to COPYMODS.  Besides copying   **
**     tapes, COPYMODS can read and measure tapes, as well  **
**     as altering the copied tapes in many ways, such as   **
**     stripping the labels or leading tape marks off.      **
**     The VOLSER and OWNER can be altered in the copied    **
**     tapes, and all labels can also be altered, through   **
**     a process of dumping the labels to a FB-80 file      **
**     (LABLDUMP option), editing the labels, stripping     **
**     the labels in a copy operation (STRIP option), and   **
**     splicing all the labels back in another copy         **
**     operation (LABADDIN option).  COPYMODS can also      **
**     INIT tapes, as many as 16 at a time.  No input tape  **
**     is needed for an INIT operation (INITVOLS option).   **
**                                                          **
**     To see all the COPYMODS options, look at label       **
**     PARMTABL in the PARMCHEK CSECT.  To see the keyword  **
**     parms for SYSIN, see the code a few lines after the  **
**     label CARDREAD in the PARMCHEK CSECT.                **
**                                                          **
**     The different COPYMODS parms or options can be used  **
**     in combination with each other, as long as they      **
**     don't contradict each other.  In certain cases, the  **
**     use of one option will cause the automatic turn-off  **
**     of one or more other options that contradict with    **
**     it.  This "adjustment" is done by the COPYMODS       **
**     program just after it receives the options settings  **
**     back from the PARMCHEK program.  For example, if     **
**     both LABLDUMP and LABADDIN (which contradict each    **
**     other) are set, COPYMODS will make a judgment that   **
**     LABADDIN takes precedence, so it will turn off both  **
**     the LABLDUMP and READ (read only) options.  On the   **
**     other hand, the STRIP and LABLDUMP options do not    **
**     contradict each other.  So in that case, when STRIP  **
**     and LABLDUMP are both set, COPYMODS will dump all    **
**     the labels from the input tape to the LABLDUMP file, **
**     while at the same time, it will strip them from the  **
**     tape copies.  To get the exact effect you want from  **
**     a COPYMODS run, just be very careful to code the     **
**     correct combination of options.  Look at the OPTIONS **
**     report before you mount the tapes.  (The OPTIONS     **
**     report in //SYSPRINT will be complete before the     **
**     tapes are mounted.)  To see the exact effect of      **
**     the COPYMODS option correction, code the CODEDPRM    **
**     option to obtain a comparison report of the options  **
**     before COPYMODS correction has been done.            **
**                                                          **
**     Up to 132 bytes of the beginning n records of each   **
**     tape file can be dumped in Hex, similarly to the     **
**     way TAPESCAN does it (HEXPRT option).  Interpreta-   **
**     tion of the printables in this hex dump can be       **
**     either EBCDIC (default) or ASCII.  EBCDIC and ASCII  **
**     are COPYMODS PARM or SYSIN keywords also.            **
**                                                          **
**     Support for ASCII tapes (ANSI/ISO Levels 3 and 4)    **
**     has been added.  COPYMODS can init ASCII tapes       **
**     with the INASC3 and INASC4 keywords.  Additionally,  **
**     the other functions of COPYMODS such as LABLDUMP,    **
**     LABADDIN, and READ work for ASCII tapes.  The HEXPRT **
**     option with the ASCII keyword allows you to print    **
**     tape records in hex, with an ASCII interpretation    **
**     of the printables.  EOV2EOF works for ASCII tapes.   **
**                                                          **
**     COPYMODS will automatically read past any number     **
**     of leading tape marks on a tape, and will copy       **
**     any real data that is after them.  The leading       **
**     tape marks can be included in the copied tapes       **
**     (option LTMCOPY - default) or they can be skipped    **
**     from the copied tapes and left off, so the real      **
**     data will be at the beginning of the copied tapes    **
**     (option LTMSKIP).                                    **
**                                                          **
**     See the "New Features" section below for some more   **
**     details.  See the #MANUAL member of the install pds  **
**     (CBT Tape File 229) for even more details.           **
**                                                          **
**  METHOD:  COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S    **
**    ARE PRESENT. THE INPUT TAPE IS READ, USING EXCP,      **
**    INTO ONE BUFFER, AND THE APPROPRIATE OUTPUT TAPES     **
**    ARE WRITTEN USING EXCP, FROM THAT SAME BUFFER.  ANY   **
**    LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON     **
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND      **
**    WITH A USER 69 ABEND.  IF AN ERROR OCCURS ON AN       **
**    OUTPUT TAPE, THE PROGRAM WILL QUIT WRITING TO THE     **
**    TAPE WHICH ENCOUNTERED THE ERROR, AND WILL REPORT     **
**    HOW MUCH DATA HAS BEEN CORRECTLY COPIED TO THAT       **
**    PARTICULAR OUTPUT TAPE.                               **
**                                                          **
**    Any output DD names from //OUT1 thru //OUT16 may be   **
**    coded in the execution JCL for COPYMODS, so that up   **
**    to 16 output tapes may be created.  But, if none      **
**    of these DD names is present, COPYMODS will force     **
**    PARM=READ automatically, and it will issue a          **
**    special message to //SYSPRINT saying that it did so.  **
**                                                          **
**  COPYMODS has some optional DD's which will be used      **
**    if they are present.  These following DD's are used   **
**    by the PARMCHEK program, when COPYMODS is executed.   **
**                                                          **
**  //SYSIN    - Extra space to enter PARM keywords.        **
**               Also, the only place to enter the          **
**               "quantity" keywords, which start in        **
**               column 1 of a SYSIN card.                  **
**                                                          **
**         OUTVOLALL=volser      (up to 6 characters)       **
**         TAPEOWNER=owner name  (up to 10 characters)      **
**         FILELIMIT=nnn         (numeric)                  **
**         LABELIMIT=nnn         (numeric)                  **
**         PRINTRCDS=nnn         (numeric)                  **
**                                                          **
**  //PARMREPT - Diagnostic output from the PARMCHEK        **
**               program.  LRECL=133,RECFM=FBA.             **
**                                                          **
**    In addition, the COPYMODS program itself has some     **
**    extra DD's, which are required if the appropriate     **
**    options are set:                                      **
**                                                          **
**  //LABLDUMP - An FB-80 file, or member of a pds, to      **
**               receive the images of all tape labels      **
**               read, together with some control cards     **
**               that COPYMODS generates.  This DD name     **
**               is necessary if the LABLDUMP option is     **
**               in effect.                                 **
**                                                          **
**  //LABADDIN - An FB-80 file, or member of a pds, which   **
**               contains the set of labels to be spliced   **
**               into an NL tape to create an SL tape.      **
**               This DD name is necessary if the LABADDIN  **
**               option of COPYMODS is in effect.  Usually  **
**               the LABADDIN file is a previous result of  **
**               a LABLDUMP operation, or it is an altered  **
**               or edited version of a previously created  **
**               LABLDUMP file.                             **
**                                                          **
**  This program has to be assembled with PARM=BATCH in     **
**    the Assembler EXEC parms.  The entire PARMCHEK        **
**    program has to be included in the assembly, because   **
**    PARMCHEK has to be fitted to the current level of     **
**    the COPYMODS program.                                 **
**                                                          **
**************************************************************
**                                                          **
**  REQUIRED DD NAMES (used by the COPYMODS program):       **
**                                                          **
**  //IN       -  Points to the Input Tape.  Only not       **
**                required in a tape init operation, if     **
**                the INITVOLS option is in effect.         **
**                Otherwise, //IN is always required.       **
**                                                          **
**  //OUT1 thru - Any of these 16 DD names can be coded.    **
**  //OUT16       These are for the output tapes.  These    **
**                are not required if the READ (readonly)   **
**                option is in effect.  Any one of these    **
**                16 possible DD names may be coded, even   **
**                if some numbers have been skipped.  For   **
**                instance, if you have one output tape,    **
**                it may be defined by //OUT13.  It is      **
**                not necessary to code //OUT1.             **
**                                                          **
**  //SYSPRINT  - The output dataset to contain all the     **
**                COPYMODS operation information that was   **
**                called for by the various options set,    **
**                including the OPTIONS display itself.     **
**                This dataset should be LRECL=133,         **
**                RECFM=FBA.                                **
**                                                          **
**************************************************************
**                                                          **
**  PROGRAM STRUCTURE:                                      **
**                                                          **
**  This program is no longer a single CSECT as it was in   **
**    the old days.  There are now the following CSECTs,    **
**    which should all be assembled together:               **
**                                                          **
**    (The #PAN$AUD and @PAN$AUD CSECTs are eyecatchers.)   **
**                                                          **
**   COPYMODS - The main processing module, which contains  **
**              most of the tape copy/reading processing.   **
**                                                          **
**   TRTCSECT - The translate tables for Hex printing of    **
**              tape records, and for ASCII translation.    **
**                                                          **
**   COPYMOPT - The separate routine which reads the PARM   **
**              bits that have been set, and which prints   **
**              a report in SYSPRINT showing the options    **
**              that are in effect.                         **
**                                                          **
**   PARMCHEK - All the PARM and SYSIN input processing is  **
**              done here.  PARM bits are passed back to    **
**              COPYMODS in R1, the User Area is passed     **
**              back to COPYMODS in R2.                     **
**                                                          **
**   PARMTABL - Now a separate CSECT in the PARMCHEK        **
**              program, this table contains all the option **
**              bit meanings and their default settings.    **
**                                                          **
**   LABELCHK - Now a separate CSECT to check whether a     **
**              record read by COPYMODS is part of a set    **
**              of label records or not.                    **
**                                                          **
**   PRINTLBL - A separate CSECT to interpret all tape      **
**              label contents in a report line.            **
**                                                          **
**   MSGCSECT - Contains all the texts of the messages      **
**              used by the COPYMODS CSECT.  Addressed      **
**              by two new macros:  MVFMS which does        **
**              operations on fields in the messages, and   **
**              PTMS, which prints a message to SYSPRINT.   **
**                                                          **
**              Two new macros, ADRSMS and DROPMS, now can  **
**              be used to address this area, and save      **
**              a lot of addressability space, because      **
**              normal assembler instructions can be used   **
**              in between them, and the addressability     **
**              will not be redundantly repeated.  The      **
**              new PTMSN macro is PTMS without the         **
**              addressability built in, to put in between  **
**              ADRSMS and DROPMS.                          **
**                                                          **
**   FOOTAGE  - Code to calculate footage on a tape, as     **
**              though the data were on a 6250 bpi reel.    **
**              This code came from Florida Power Company   **
**              SS0104 Tapemap program.  Used by the        **
**              FOOTAGE keyword.                            **
**                                                          **
**  COPYMODS, PARMCHEK, and COPYMOPT are separate programs, **
**  but they must be coordinated, and at the same level, so **
**  to be safe, they should always be assembled together.   **
**  The LABELCHK program has the same status.  It must be   **
**  assembled together with the COPYMODS program.  Same     **
**  with the PRINTLBL program and the FOOTAGE program.      **
**                                                          **
**  - - - - - - - - - - - - - - - - - - - - - - - - - - - - **
**                                                          **
**  GENERAL OUTLINE OF PROGRAM CALLS                        **
**  ------- ------- -- ------- -----                        **
**                                                          **
**  COPYMODS is the first program to get control.  The      **
**  V-CONs for TRTCSECT and the PARMCHEK program are saved  **
**  and the entry locations are stored in fullwords for     **
**  later use.  Same for PRINTLBL and FOOTAGE entry points. **
**                                                          **
**  PARMCHEK is immediately called, and it opens //SYSIN    **
**  if that ddname is present.  If //PARMREPT is present,   **
**  it is also used by the PARMCHEK program.                **
**                                                          **
**  After PARMCHEK has returned all parm bit settings to    **
**  COPYMODS and all user-quantities, the settings are      **
**  examined by COPYMODS and inconsistent settings are      **
**  adjusted:  For instance, if LABADDIN is on, LABLDUMP    **
**  has to be turned off, because only one of these can be  **
**  done in one run.  These inconsistencies are all fixed,  **
**  and then COPYMODS processing starts.                    **
**                                                          **
**  (To examine the effect of the COPYMODS parm correction, **
**  code the CODEDPRM option to obtain a "before and after" **
**  option comparison report.)                              **
**                                                          **
**  COPYMOPT is called to display all the options that have **
**  been set, if the OPTION parm has been set.  This is     **
**  done to //SYSPRINT.  If any adjustments of options have **
**  been made, you can see the final result in the SYSPRINT **
**  report that has been produced by COPYMOPT.              **
**                                                          **
**  A PARM of CODEDPRM causes COPYMOPT to be called twice,  **
**  once with the corrected parm bits, and the second time, **
**  using the saved original parm bits, as returned by the  **
**  PARMCHEK program.                                       **
**                                                          **
**  The //SYSPRINT DD is opened and closed by COPYMOPT,     **
**  and opened again by COPYMODS.  This allows SYSPRINT     **
**  to be viewed under SDSF before the tapes are mounted,   **
**  so you can see the OPTIONS report(s) there.             **
**                                                          **
**  A significant note is, that the PARMREPT contains the   **
**  options as they have been set by the PARMCHEK program,  **
**  with no alteration.  The COPYMOPT call, which produces  **
**  the OPTIONS display in //SYSPRINT, occurs after the     **
**  adjustments for inconsistent parm settings has been     **
**  made by COPYMODS.  If you want to see the effect of     **
**  these adjustments, code the CODEDPRM keyword to obtain  **
**  a comparison report showing the original options as     **
**  originally coded.                                       **
**                                                          **
**  After that, COPYMODS does its things, depending on the  **
**  options that have been set.  Most of the processing is  **
**  done in the COPYMODS csect, except for the HEXPRT       **
**  option, where the translation tables are in the         **
**  TRTCSECT csect.                                         **
**                                                          **
**  The LABELCHK program is called whenever an 80-byte      **
**  record is read, to see whether that record is part of   **
**  a set of tape labels.                                   **
**                                                          **
**  Whenver a label is to be interpreted to SYSPRINT, the   **
**  PRINTLBL program is called.                             **
**                                                          **
**  If the FOOTAGE keyword is used, the FOOTAGE program     **
**  is called at approximately the end of each file read    **
**  from the input tape.  FOOTAGE is driven by the contents **
**  of fields in a workarea, which, in the COPYMODS CSECT,  **
**  is at label LABELTYP.  Most of the fields in this       **
**  workarea are fed from the end-of-file routine, after    **
**  label MARKFILE, and from the EXCP READs, near label     **
**  INFROMIN, and the BYTESCOP field of number of bytes     **
**  moved by the latest EXCP READ.                          **
**                                                          **
**************************************************************
**                                                          **
**  NEW FEATURES ADDED BY SAM GOLOB:                        **
**                                                          **
**  (Also please see the individual Level nnn changes, as   **
**   listed in this code, below, for more information.)     **
**                                                          **
**   It is recommended that you view the PARMTABL entries   **
**   and look at the supplied #MANUAL member in the         **
**   distribution pds, CBT File 229, for even more info.    **
**                                                          **
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **
**                                                          **
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **
**                                                          **
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **
**       BE CORRECTLY COPIED.                               **
**                                                          **
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **
**       FOUND ON THE INPUT TAPE.                           **
**                                                          **
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **
**       MAIN SOURCE CODE.                                  **
**                                                          **
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **
**       INVOKE THIS ACTION.                                **
**                                                          **
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **
**                                                          **
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **
**                                                          **
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **
**                                                          **
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **
**       SERVICE.                                           **
**                                                          **
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **
**                                                          **
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **
**                                                          **
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **
**                                                          **
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **
**       TAPEOWNER=xxxxxxxxxx                               **
**       FILELIMIT=nnnn                                     **
**       LABELIMIT=nnnn                                     **
**       PRINTRCDS=nnnn                                     **
**         or                                               **
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **
**                                                          **
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **
**                                                          **
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **
**       IN THE EXTERNAL LABEL DATASET.                     **
**                                                          **
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **
**                                                          **
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **
**       DATA FILE HAS BEEN WRITTEN.                        **
**                                                          **
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **
**       EXTERNAL LABEL DATASET.                            **
**                                                          **
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **
**       THE HDR2.                                          **
**                                                          **
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **
**       INPUT TAPE.  USE A PARM OF INITVOLS.  ASCII TAPES  **
**       ARE INITTED WITH A PARM OF EITHER INASC3 OR        **
**       INASC4, FOR ASCII LEVEL 3 AND ASCII LEVEL 4        **
**       RESPECTIVELY.  A PARM OF INASCII DEFAULTS TO       **
**       ASCII LEVEL 3.                                     **
**                                                          **
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **
**       IN A SYSIN CARD.  14 CHARACTER TAPE OWNERS ARE     **
**       SUPPORTED FOR ASCII TAPES.  IBM SL TAPES HAVE      **
**       10 CHARACTERS IN THE TAPE OWNER FIELD.             **
**                                                          **
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **
**       IS INTERPRETED AS SL FILES, AND MULTIPLIED BY 3.   **
**       IF NOT, THEN IT IS INTERPRETED AS NL.  SL          **
**       INTERPRETATION OF FILE NUMBERS CAN BE FORCED,      **
**       USING THE SLLIM PARM KEYWORD.  NL INTERPRETATION   **
**       IS FORCED USING THE NLLIM PARM KEYWORD.            **
**                                                          **
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **
**       BYTE TOTALS COMING FROM DATA FILES.                **
**                                                          **
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **
**       TO PRINT THEM.)                                    **
**                                                          **
**       IF YOU ARE CONFUSED THAT THE OPTION REPORT DOES    **
**       NOT SEEM TO REFLECT THE OPTION KEYWORDS YOU ARE    **
**       CODING IN YOUR JCL, PLEASE BE AWARE THAT COPYMODS  **
**       DOES SOME OPTION ADJUSTMENTS TO RESOLVE APPARENT   **
**       INCONSISTENCIES WITH THE PARM SETTINGS.  TO GET    **
**       A "BEFORE AND AFTER" REPORT FOR THIS ACTION, CODE  **
**       THE "CODEDPRM" PARM KEYWORD.                       **
**                                                          **
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).  IF A TAPE      **
**       FILE (EBCDIC SL TAPES ONLY) HAS MORE THAN 1        **
**       MILLION BLOCKS IN IT, THEN THIS FIELD IS USED.     **
**       OTHERWISE IT IS BLANKS.                            **
**                                                          **
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **
**       DATA BLOCKS ON THE TAPE.                           **
**                                                          **
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **
**       THESE WILL STILL BE CORRECTLY STRIPPED OFF.  IF    **
**       FILE LIMITING IS IN EFFECT, THEN THE INPUT TAPE    **
**       IS ASSUMED TO BE SL, AND THE NUMBER CODED IN THE   **
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **
**       INPUT TAPE.                                        **
**                                                          **
**       FOR PARM=STRIP OPERATIONS, COPYMODS USES THE       **
**       LABELCHK ROUTINE TO DETERMINE IF A TAPE FILE IS    **
**       REALLY A LABEL, SO IT WILL STRIP OFF A LABEL FILE  **
**       WHEREVER IT OCCURS.  THIS IS NOT LIKE THE COPYSLNL **
**       PROGRAM, WHICH ASSUMES THAT EACH DATA FILE IS      **
**       SANDWICHED BETWEEN TWO LABEL FILES, AND WHICH      **
**       DOES THE STRIPPING BY "COUNTING" AND NOT BY        **
**       "FEELING".                                         **
**                                                          **
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **
**                                                          **
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **
**                                                          **
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **
**                                                          **
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **
**                                                          **
**  28.  SUPPORT FOR ANSI/ISO (ASCII) TAPES.  LEVELS 3 AND  **
**       4 ARE SUPPORTED.  COPYMODS CAN INIT ASCII TAPES    **
**       (KEYWORDS INASC3 AND INASC4), AND CAN PERFORM      **
**       ALL ITS FUNCTIONALITY ON THEM.  14 CHARACTER TAPE  **
**       OWNER FIELD IS SUPPORTED FOR ASCII TAPES, AS WELL  **
**       AS MOST OF THE OTHER DIFFERENCES BETWEEN ASCII     **
**       LABEL FORMATS AND IBM (EBCDIC) LABEL FORMATS.      **
**                                                          **
**  29.  SECURITY INDICATORS IN TAPE LABELS CAN BE TURNED   **
**       OFF IN THE COPIED TAPES USING THE SECOFF KEYWORD.  **
**       THESE INDICATORS (TURNED OFF) ARE:                 **
**        ASCII SPACE IN BYTE 11 OF ASCII VOL1 LABEL.       **
**        ASCII SPACE IN BYTE 54 OF ASCII XXX1 LABELS.      **
**        EBCDIC 0 IN BYTE 54 OF IBM XXX1 LABELS.           **
**       IF THESE HAD BEEN ANYTHING OTHER THAN THE ABOVE,   **
**       THE SECOFF KEYWORD WILL CAUSE THEM TO BE RESET     **
**       AS ABOVE, TO INDICATE NO DATASET PROTECTION.       **
**                                                          **
**       RACF OR OTHER SECURITY MAY OVERRIDE THESE LABEL    **
**       SECURITY INDICATORS, BUT WE HAVE THE ABILITY TO    **
**       COMPLETELY TURN THEM OFF AT THE TAPE LABEL LEVEL.  **
**       THE NOSECOFF KEYWORD NULLIFIES THE EFFECT OF THE   **
**       SECOFF KEYWORD.                                    **
**                                                          **
**  30.  COPYMODS CAN TRANSPARENTLY (WITH NO FURTHER EFFORT **
**       ON THE PROGRAMMER'S PART) READ PAST LEADING TAPE   **
**       MARKS ON THE INPUT TAPE.  THESE MAY BE EITHER      **
**       COPIED TO THE OUTPUT TAPES (KEYWORD LTMCOPY) OR    **
**       NOT COPIED TO THE OUTPUT TAPES (KEYWORD LTMSKIP).  **
**       MORE EXTENSIVE "LTM SERVICE" HAS BEEN BUILT INTO   **
**       THIS PROGRAM.                                      **
**                                                          **
**  31.  COPYMODS CAN DISPLAY 6250 BPI FOOTAGES FOR THE     **
**       FILES ON THE TAPE, USING THE FOOTAGE KEYWORD.      **
**       FOOTAGE CALCULATIONS FOR EACH FILE, AS WELL AS     **
**       FOOTAGE FOR THE ENTIRE TAPE, UP TO THE CURRENT     **
**       FILE, ARE DISPLAYED.                               **
**                                                          **
**  32.  COPYMODS WILL DISPLAY MINIMUM AND MAXIMUM BLOCK    **
**       SIZES FOR EACH TAPE FILE READ, WHEN THE MINMAX     **
**       OPTION IS CODED.                                   **
**                                                          **
**  33.  COPYMODS CAN OPTIONALLY SHOW THE SIZE OF EACH      **
**       TAPE DATA BLOCK (TECHNICALLY CALLED A "RECORD")    **
**       ON THE TAPE, USING THE RECSIZE OPTION.  AS CODED   **
**       CURRENTLY, RECSIZE CAN PRODUCE A LOT OF SYSPRINT   **
**       OUTPUT, SINCE IT PRODUCES ONE LINE PER TAPE DATA   **
**       BLOCK.  THE RECSIZE OPTION DISPLAYS DETAILS,       **
**       WHICH THE MINMAX OPTION SUMMARIZES.  IF RECSIZE    **
**       IS CODED, THEN THE MINMAX OPTION IS FORCED ON.     **
**                                                          **
**************************************************************
         EJECT
**************************************************************
**  CHANGE LOG:                                             **
**                                                          **
** LEVEL 003                                                **
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS                * **
**                                                          **
** LEVEL 004                                                **
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER           * **
**             A HEADER LABEL.  THIS MEANS AN SL          * **
**             FILE WITHOUT ANY DATA IN IT.  AND          * **
**             IF THIS IS THE CASE, DON'T STOP            * **
**             COPYING FILES.                             * **
**                                                          **
** LEVEL 005                                                **
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE             * **
**             R12,R11.                                   * **
**                                                          **
** LEVEL 006                                                **
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP           * **
**             TO 16 OUTPUT TAPES FROM OUT1 TO            * **
**             OUT16.                                     * **
**                                                          **
** LEVEL 007 AND 008                                        **
**  03/14/00 - CLEANED UP SPELLING ON ERROR               * **
**             MESSAGES AND FIXED DOCUMENTATION.          * **
**             ADDED EYECATCHERS COSMETICALLY.            * **
**                                                          **
** LEVEL 009                                                **
**  03/21/00 - STOP AFTER INITTED MVS TAPE                * **
**                                                          **
** LEVEL 010                                                **
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS          * **
**             FOR BLOCK SIZES FROM 32K TO 64K.           * **
**                                                          **
**             I MADE AN ATTEMPT TO COPY DOS/VSE          * **
**             TAPES THAT HAVE LEADING TAPE               * **
**             MARKS.  THERE IS A CHOICE TO               * **
**             EITHER COPY ALL THE LEADING                * **
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO         * **
**             DISCARD THEM ALL.  YOU USE A PARM          * **
**             OF LTMSKIP TO DISCARD LEADING              * **
**             TAPEMARKS, AND ANY OTHER PARM, OR          * **
**             NO PARM, WILL CAUSE THE PROGRAM TO         * **
**             COPY THEM TO THE OUTPUT TAPES.             * **
**                                                          **
** LEVEL 011                                                **
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE          * **
**             BY ENDING THE JOB NORMALLY AFTER           * **
**             ONE TAPEMARK.                              * **
**                                                        * **
**             IF VOL1 LABEL IS DETECTED, THEN            * **
**             PUT OUT A MESSAGE SAYING SO, AND           * **
**             INDICATING THE VOLSER THAT WAS             * **
**             FOUND.  THIS PROGRAM WAS WRITTEN           * **
**             ORIGINALLY WITH THE INTENT OF              * **
**             HANDLING NL TAPES, SO THAT THE             * **
**             CONDITIONS WHICH RESULT FROM               * **
**             HAVING SL TAPES, HAD TO BE                 * **
**             ACCOUNTED FOR LATER.                       * **
**                                                          **
** LEVEL 012                                                **
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2               * **
**             HAVING ONLY ONE TAPE MARK AFTER              **
**             THEM.                                        **
**                                                          **
** LEVEL 013                                                **
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD            * **
**             LABEL TYPES, AND THE SETTING OF              **
**             FLAGS TO INDICATE EACH TYPE.                 **
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **
**             MOVE NON-LABEL-RELATED FLAGS OUT             **
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **
**             EASY PRINTING OF LABEL CONTENTS,             **
**             BUT NO EXTRA PRINTING IS DONE AT             **
**             THIS LEVEL.                                  **
**                                                          **
** LEVEL 014                                                **
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN              * **
**             PARM SCANNER THAT IS EASY TO                 **
**             MODIFY, AND TO SUPPLY SYNONYMS               **
**             FOR THE PARMS.  ADDED SUPPORT,               **
**             VIA THE LBLINFO PARM, TO PRINT               **
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **
**             EOV2 LABEL INFORMATION, IF IT IS             **
**             FOUND ON THE INPUT TAPE.  THAT IS,           **
**             IF THE INPUT TAPE IS SL.                     **
**                                                          **
**             FOR A LIST OF PERMISSIBLE PARMS,             **
**             SEE LABEL PARMTABL.                          **
**                                                          **
** LEVEL 015                                                **
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY          * **
**             TO TURN OFF A PARM FLAG AS WELL AS           **
**             THE ABILITY TO TURN IT ON. INCREASED         **
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **
**             BYTE.                                        **
**                                                          **
** LEVEL 016                                                **
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY          * **
**             TO SET ANY PARM SETTING AS A                 **
**             DEFAULT.  A SETTING FOR A DEFAULT            **
**             ENTRY THAT IS LATER IN THE TABLE,            **
**             WILL OVERRIDE A SETTING FOR A                **
**             DEFAULT THAT WAS SET EARLIER IN THE          **
**             TABLE.  SETTING A PARM EXPLICITLY            **
**             IN THE JCL, WILL OVERRIDE ANY                **
**             DEFAULT SETTING FOR THAT PARM.               **
**                                                          **
** LEVEL 017                                                **
**  05/11/00 - USED THE PARM SCANNER TO MAKE A            * **
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **
**             KINDS OF TAPE LABELS.  IF YOU WANT           **
**             ALL OF THEM, YOU JUST HAVE A PARM            **
**             THAT THROWS ALL OF THE FLAGS.  ALL           **
**             OF THIS IS CODED IN PARMTABL AND             **
**             THE FLAGS ARE USED IN PRTXXX1 AND            **
**             PRTXXX2.                                     **
**                                                          **
** LEVEL 018                                                **
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE          * **
**             VOLSER OF THE COPIED TAPES, TO               **
**             MATCH THE VOLSER INDICATED IN THE            **
**             OUTXX DD NAMES.  THIS IS DONE WITH           **
**             THE CHGVOL PARM KEYWORD.  THIS               **
**             ACTION ONLY OCCURS IF THE INPUT              **
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **
**             DETECTED.  THE COPIED VOL1 LABEL             **
**             IS ALTERED BEFORE THE WRITE.                 **
**                                                          **
** LEVEL 019                                                **
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1            * **
**             AND EOV2 LABELS THAT ARE IN THE              **
**             MIDDLE OF A TAPE.  OF COURSE THIS            **
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **
**             CAN HAPPEN WHEN YOU COPY FILES               **
**             WITH THE COPYFILE PROGRAM, FROM              **
**             THE END OF ONE TAPE, TO THE                  **
**             BEGINNING OR THE MIDDLE OF                   **
**             ANOTHER.  COPYFILE HAS NOT BEEN              **
**             FIXED AS YET NOT TO DO THIS, BUT IT          **
**             COPIES THE EOV LABELS AS IS.  THIS           **
**             NEW OPTION IS CALLED EOVCHG OR               **
**             EOV2EOF; THE EOV LABELS ARE                  **
**             CHANGED (IN THE COPIED TAPES) TO             **
**             EOF, AND A MESSAGE IS WRITTEN THAT           **
**             REPORTS THIS FACT.                           **
**                                                          **
** LEVEL 020                                                **
**  06/29/00 - ADDED THE PARM OF READ OR READONLY         * **
**             TO ALLOW A RUN OF COPYMODS THAT              **
**             JUST READS THE INPUT TAPE, AND DOES          **
**             NOT MAKE COPIES.                             **
**                                                          **
** LEVEL 021                                                **
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY             * **
**             IEHINITTED TAPES.                            **
**                                                          **
** LEVEL 022                                                **
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD         * **
**             LABELS FROM A TAPE, TO AN FB-80              **
**             OUTPUT FILE.  PARM IS LABLDUMP.              **
**                                                          **
** LEVEL 023                                              * **
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **
**             ONLY IMPLEMENTATION SO FAR IS TO             **
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **
**             SAME VALUE, BUT NOT NECESSARILY TO           **
**             WHAT IS IN THE OUTX  DD CARD.  IN            **
**             ORDER TO USE THE FACILITY, YOU HAVE          **
**             TO CODE                                      **
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **
**             OF THE SYSIN CARD FILE.  IF THERE            **
**             ARE NO VALID OUTVOLALL= CARDS IN             **
**             SYSIN, THEN THE EFFECT IS THE SAME           **
**             AS CODING CHGVOL.                            **
**                                                          **
**             FIXED LABEL DUMP OPTION SO THAT THE          **
**             DUMPED LABELS HAVE CONTROL CARDS             **
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **
**             FUNCTION IN LEVEL 24 NEEDS THESE             **
**             CONTROL CARDS.                               **
**                                                          **
** LEVEL 024                                              * **
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **
**             OUTPUT COPIES FROM NL INPUT AND A            **
**             SET OF LABELS CREATED BY LABLDUMP.           **
**             CHANGED THE DCB NAMES AND DD CARDS           **
**             AND OPTION NAMES FOR LABEL DUMP AND          **
**             RESTORE.                                     **
**                                                          **
**             CHANGED PROGRAM INITIALIZATION TO            **
**             A STANDARD FORM.  GOT RID OF PRIME           **
**             AND TERME MACROS.  HAVE 5 BASE               **
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **
**                                                          **
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **
**             LABELS ON AN SL TAPE, AND WON'T              **
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **
**             TAPE IS SL, ACCIDENTALLY.                    **
**                                                          **
** LEVEL 025                                              * **
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **
**             SYSIN AND SEARCH FOR ALL PARMS.              **
**                                                          **
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **
**             BE USED.                                     **
**                                                          **
**             ANY CARD IN SYSIN WHICH IS NOT A             **
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **
**                TAPEOWNER=xxxxxxxxxx                      **
**                FILELIMIT=nnnn                            **
**                LABELIMIT=nnnn                            **
**                PRINTRCDS=nnnn                            **
**                  or                                      **
**                OUTVOLALL=volser ,                        **
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **
**             AND ANY PARM THAT IS CODED IN THE            **
**             PARM TABLE, CAN BE CODED IN SYSIN,           **
**             AND IT WILL OVERRIDE THE PARM IN             **
**             THE EXEC CARD (SINCE SYSIN IS                **
**             SCANNED LATER IN THE PROCESSING).            **
**                                                          **
**             INCLUDED A BLOCK COUNT CORRECTION AS         **
**             DEFAULT, WHEN WRITING STANDARD LABELS        **
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **
**                                                          **
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **
**             THE CONTENTS OF STANDARD LABELS FOUND        **
**             WHEN COPYING AN INPUT TAPE.                  **
**                                                          **
** LEVEL 026                                              * **
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **
**             RESPECT CHGVOL AND OUTVOLALL= .              **
**                                                          **
** LEVEL 027                                              * **
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **
**             BE ABLE TO DO EOV2EOF PROCESSING             **
**                                                          **
** LEVEL 028                                              * **
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **
**             STANDARD USER LABEL SUPPORT.                 **
**                                                          **
** LEVEL 029                                              * **
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **
**             STANDARD USER LABELS.                        **
**                                                          **
** LEVEL 030                                              * **
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **
**             OUTPUT TAPES, DURING THE COPY.               **
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **
**                                                          **
**             FIXED THE EYECATCHERS A BIT.                 **
**                                                          **
**             AGAIN FIXED COPY OF INITTED TAPES.           **
**                                                          **
** LEVEL 031                                              * **
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **
**                                                          **
** LEVEL 032                                              * **
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **
**             LABADDIN PROCESSING WHEN THERE ARE           **
**             MORE LABELS IN THE EXTERNAL LABEL            **
**             DATASET, THAN THERE ARE NL FILES             **
**             IN THE INPUT TAPE.  DEFAULT IS TO            **
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **
**             SAYS TO STOP AT THE END OF NL FILES          **
**             AND NOT WRITE NULL SL FILES TO               **
**             CORRESPOND TO THE EXTRA EXTERNAL             **
**             LABELS.                                      **
**                                                          **
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **
**             OF WRITING AN EXTRA HEADER LABEL SET,        **
**             AND THEN BACKING OVER IT AND CLOSING.        **
**                                                          **
** LEVEL 033                                              * **
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **
**             PROCESSING WHEN THE LAST LABEL SET           **
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **
**             A HDR2 LABEL IN THE LAST LABEL SET,          **
**             AND COPYMODS (WITH LBLFIX ON) WILL           **
**             ACT AS IF AN ENDOFLABELHEADER CARD           **
**             WERE THERE (SO IT WRITES A TAPEMARK          **
**             AND THE DATA AND A TAPEMARK), AND IT         **
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **
**             PLUS THE MEASURED BLOCK COUNTS FROM          **
**             THE DATA FILE.  AN EOF2 IS COPIED            **
**             FROM THE EXISTING HDR2 AND EOF IS            **
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **
**             THE END.                                     **
**                                                          **
** LEVEL 034                                              * **
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **
**             THE CLOSE.  THIS LETS THE CLOSE DO           **
**             THE REWIND, AND LEAVES THE WRITTEN           **
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **
**             THAT WAS INCOMPLETELY WRITTEN IS             **
**             NOT ERASED.                                  **
**                                                          **
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **
**             CONDITION IS FLAGGED WITH A PROPER           **
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **
**             FOR THAT DRIVE IS BYPASSED.                  **
**                                                          **
**             THIS PROBLEM HAS EXISTED SINCE THE           **
**             FIRST VERSION OF THIS PROGRAM.               **
**                                                          **
**             CAREFUL TO FLAG ALL THE EXTRA DD             **
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **
**             THESE ARE THE OPENDFLG SETTINGS.             **
**                                                          **
** LEVEL 035                                              * **
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **
**             TAPES, BY NOT REUSING THE WRITE              **
**             IOB WITHOUT REFRESHING THE PARTS             **
**             THAT ARE USED BY IOS.  THIS IS THE           **
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **
**                                                          **
**             LABLDUMP OF AN IEHINITTED TAPE               **
**             PRODUCES AN ENDOFLABELHEADERINIT             **
**             CARD, IN ANTICIPATION OF CREATING            **
**             A TAPE INITIALIZATION ROUTINE FROM           **
**             EXTERNAL LABELS.  (INITVOLS IN THE           **
**             NEXT LEVEL, IS BETTER.)                      **
**                                                          **
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **
**                                                          **
** LEVEL 036                                              * **
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **
**             ALSO CHANGE TAPE OWNER INFORMATION           **
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **
**                                                          **
**             TO INIT TAPES WITH NO INPUT TAPE,            **
**             USE A PARM OF INITVOLS.                      **
**                                                          **
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **
**                                                          **
**             CONSOLIDATED CHGVOL CODE INTO A              **
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **
**                                                          **
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **
**             STEPPING ON EACH OTHER.                      **
**                                                          **
** LEVEL 037                                              * **
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **
**             NL TAPES ON THE INPUT TAPE.  IF THE          **
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **
**             IS MULTIPLIED BY 3, AND THE BIGGER           **
**             VALUE IS USED.                               **
**                                                          **
**             COPYMODS WILL ONLY COPY INPUT TAPE           **
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **
**             VALUE, IF THERE IS ONE.                      **
**                                                          **
**             INTERNALLY, THE FILELIMIT= KEYWORD           **
**             SETS THE PARM VALUE OF LIMFILE OR            **
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **
**             THE PROGRAM ACTION.                          **
**                                                          **
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **
**             PROGRAM COUNTS BYTES READ FROM THE           **
**             INPUT TAPE FILES, AND TOTALS THEM AT         **
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **
**             THIS ACTION.                                 **
**                                                          **
** LEVEL 038                                              * **
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **
**             RUNNING BYTE TOTALS AS WELL AS THE           **
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **
**             FILES.                                       **
**                                                          **
** LEVEL 039                                              * **
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **
**             THEREFORE WE HAVE PARMFLG1 THRU              **
**             PARMFLG5 TO USE AS OPTION BYTES.             **
**                                                          **
** LEVEL 040                                              * **
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **
**             AND I WANT TO BE ABLE TO MATCH THEIR         **
**             COUNT, SO A USER WILL BE ABLE TO             **
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **
**                                                          **
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **
**             NOT INITTING TAPES, YOU DON'T GET AN         **
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **
**             WHAT TO DO.                                  **
**                                                          **
** LEVEL 041                                              * **
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **
**             OF LABEL SETS IN THE LABADDIN FILE           **
**             THAT COPYMODS WILL PROCESS.  EVEN            **
**             IF THE LABADDIN FILE CONTAINS MANY           **
**             LABEL SETS, THE NUMBER PROCESSED WILL        **
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **
**                                                          **
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **
**             THE LABADDIN FILE, AND CONSIDERS THE         **
**             FILE TO END AFTER NNN OF THEM.               **
**                                                          **
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **
**             THIS CHOPS PROCESSING OFF TOO SOON           **
**             WHEN EOV LABELS ARE PRESENT.                 **
**                                                          **
** LEVEL 042                                              * **
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **
**             BAL R7, AND USED R6 AS SIXTH BASE            **
**             REGISTER.                                    **
**                                                          **
** LEVEL 043                                              * **
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **
**             "OPTION" PARAMETER.  CALL IS TO A            **
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **
**             PROGRAM COPYMOPT SHOULD BE BATCH             **
**             ASSEMBLED AND LINKEDITED WITH                **
**             THE COPYMODS PROGRAM.                        **
**                                                          **
**             CHANGED THE WORDING OF SOME OF THE           **
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **
**                                                          **
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **
**             LABADDIN WAS IN EFFECT.                      **
**                                                          **
** LEVEL 044                                              * **
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **
**                                                          **
** LEVEL 045                                              * **
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **
**             COMPLETION OF THE COPY. SUPPWTO.             **
**                                                          **
** LEVEL 046                                              * **
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **
**             TO HI ORDER FIELD WHEN DOING BLOCK           **
**             COUNT CORRECTION.                            **
**                                                          **
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **
**                                                          **
** LEVEL 047                                              * **
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **
**             DUMP OF TAPES WHICH CONTAIN LARGE            **
**             NUMBERS OF DATA RECORDS.  IF THE             **
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **
**                                                          **
** LEVEL 048                                              * **
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **
**             IS THERE IN THE JCL, THEN OPEN IT.           **
**                                                          **
** LEVEL 049                                              * **
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **
**             BYTE COUNTS AND DATA BYTE COUNTS,            **
**             INSTEAD OF TOTAL BYTE COUNTS.                **
**                                                          **
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE           * **
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **
**             EACH LABEL.  IT DOES NOT MATTER              **
**             WHERE THE LABELS ARE, IN THE INPUT           **
**             TAPE--THEY WILL BE STRIPPED OFF THE          **
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **
**             NUMBER IS MULTIPLIED BY 3, AND THE           **
**             COPYING IS CUT OFF AFTER 3*nnn,              **
**             TREATED AS BLP, ON THE INPUT TAPE.           **
**                                                          **
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **
**             COPYMODS TRIES TO DETECT WHETHER THE         **
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **
**             WE CAN NOW FORCE THE nnn TO BE               **
**             INTERPRETED AS NL USING THE NLLIM            **
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **
**             INTERPRETED AS 3*nnn USING THE SLLIM         **
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **
**             OTHER KEYWORD IS ALSO CODED.                 **
**                                                          **
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **
**             DURING THE WRITE OF THE TAPE MARK.           **
**                                                          **
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **
**             BEFORE ISSUING ABEND 069.                    **
**                                                          **
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **
**             SYSPRINT DATASET.                            **
**                                                          **
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **
**                                                          **
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **
**             OF THE MAIN CSECT.                           **
**                                                          **
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **
**             PARM SCAN IN DETAIL.                         **
**                                                          **
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **
**                                                          **
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **
**             PROGRAM AND NOT BY COPYMODS.                 **
**                                                          **
**             COPYMODS CALLS PARMCHEK, AND UPON RETURN,    **
**             PARMCHEK RETURNS THE ADDRESSES OF TWO AREAS. **
**             R1 CONTAINS THE ADDRESS OF THE PARMFLGS      **
**             FIELD WITHIN THE PARMCHEK PROGRAM CODE,      **
**             AND R2 CONTAINS THE ADDRESS OF THE STRTVALU  **
**             FIELD IN THE PARMCHEK PROGRAM.  COPYMODS     **
**             COPIES THIS DATA INTO THE CORRESPONDING      **
**             FIELDS IN ITS OWN CODE, WHICH THEREFORE      **
**             MUST MATCH THAT SAME CODE IN THE PARMCHEK    **
**             PROGRAM.                                     **
**                                                          **
**             THUS, ON RETURN FROM THE PARMCHEK PROGRAM,   **
**             COPYMODS HAS ACCESS TO ALL THE PARM BIT      **
**             SETTINGS, AND TO ALL THE QUANTITIES RETURNED **
**             FROM THE PARMCHEK PROGRAM ACTION INTO THE    **
**             USER FIELD AREA.                             **
**                                                          **
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **
**             TAPES--TO FIGURE OUT HOW SHORT....           **
**                                                          **
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **
**             POSSIBLE.                                    **
**                                                          **
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **
**             IN ERROR.                                    **
**                                                          **
** LEVEL 060 - NEW PARM UNEXWTO, AND NOUNEXWT (TO TURN IT   **
**             OFF).  THIS WILL SEND A WTOR TO THE OPERATOR **
**             WHEN ONE OF THE TAPES IS TOO SHORT.  (NOW    **
**             IT IS THE DEFAULT, AS IN THE OLD DAYS.)      **
**                                                          **
** LEVEL 061 - FIX BUG. IF SYSIN IS PRESENT BUT NOT CODED   **
**             EXPLICITLY IN THE PARMS, THE OPTION WAS      **
**             MARKED AS NOSYSIN IN THE OPTIONS DISPLAY.    **
**                                                          **
**             FIX BUG. AFTER LEVEL 057, PARMCHEK WAS NOT   **
**             CALLED PROPERLY, AND THE ORIGINAL COPYMODS   **
**             PARMS WERE LOST.  PRESERVE ORIGINAL PARMS    **
**             IN PARMSTRT FIELD WHICH IS ACCESSIBLE TO     **
**             R2, WHEN IT IS PASSED TO THE PARMCHEK        **
**             PROGRAM.                                     **
**                                                          **
**             UPDATE PROGRAM DOCUMENTATION TO REFLECT THE  **
**             CHANGES IN PROGRAM STRUCTURE AND DESIGN.     **
**                                                          **
** LEVEL 062 - FIX DOC A BIT MORE.                          **
**             TEN PARM BITS INSTEAD OF FIVE.               **
**             CHANGES TO COPYMODS, COPYMOPT, PARMCHEK.     **
**                                                          **
** LEVEL 063 - RC = 16 IF AT LEAST ONE SHORT OUTPUT TAPE    **
**             WAS ENCOUNTERED, AND THE WTOR WAS ISSUED.    **
**             RC = 8 IF ONE ERROR IN THE OUTPUT TAPES      **
**             OCCURRED, WITHOUT ISSUING A WTOR.            **
**                                                          **
** LEVEL 064 - Return Code adjustments.                     **
**                                                          **
** LEVEL 065 - REWIND Tapes before initting in INITVOLS     **
**             processing.                                  **
**             HEXPRT now works for INITVOLS.               **
**             HEXPRT now prints the external labels in a   **
**             LABADDIN operation.                          **
**             TAPEOWNER= is now honored for an INITVOLS    **
**             operation (this fixes a bug).                **
**             Number for FILELIMIT=nnn is now filled in,   **
**             in the message, when the EBCDIC value        **
**             exists.                                      **
**             Fix another bug--Tape Owner not altered--    **
**             now use the value of tape owner passed from  **
**             the PARMCHEK program.                        **
**                                                          **
** LEVEL 066 - Cosmetic changes.                            **
**             Save original PARM pointer in COPYMODS       **
**             csect itself.  (It got lost after PARMCHEK   **
**             call.)                                       **
**                                                          **
** LEVEL 067 - Introduce ability to INIT ASCII tapes        **
**             (ISO/ANSI) Level 3 or Level 4, with the      **
**             INASC3 or INASC4 keywords.  You can control  **
**             if the HEXPRT is interpreted in EBCDIC or    **
**             ASCII using the ASCII or the EBCDIC          **
**             keywords.  For an ASCII tape init, ASCII     **
**             print interpretation is turned on by         **
**             default.  If you are initting an ASCII       **
**             tape using the INASCII keyword, a Level 3    **
**             ASCII tape will be created.                  **
**                                                          **
**             ASCII Level 4 is only supported in MVS at    **
**             the OS/390 2.4 level and higher.             **
**                                                          **
** LEVEL 068 - Split off label checking routine into a      **
**             separate program, LABELCHK, which is         **
**             assembled with COPYMODS together.            **
**                                                          **
** LEVEL 069 - More ASCII label detection support.          **
**             LABLDUMP now works for ASCII tapes.  The     **
**             control cards in the LABLDUMP DD name have   **
**             been translated into ASCII, the same as the  **
**             labels and the data.  PARM=STRIP now works   **
**             for ASCII tapes.                             **
**                                                          **
**             Fixed a bug where OUTVOLALL didn't work      **
**             for volumes other than VOLUME1.              **
**                                                          **
** LEVEL 070 - More ASCII label detection support.          **
**             LABADDIN works for ASCII tapes now.          **
**             BLKCNT option fixed to convert corrected     **
**             block counts to ASCII when necessary.        **
**             EOVTOEOF now works for ASCII and IBM tapes,  **
**             because a call to LABELCHK now returns the   **
**             altered copy of INAREA to the main program.  **
**             A parm of EOV2 now requires a space after    **
**             it, so as not to interfere with EOV2EOF.     **
**                                                          **
** LEVEL 071 - PRINT LABELS support for ASCII tapes.        **
**                                                          **
**             LBI support for XXX2 print of label          **
**             contents.  Big blocksizes are printed        **
**             in the XXX2 print message if they exist      **
**             in the labels.  This is for IBM labels.      **
**                                                          **
**             Support 14-character tape owner for          **
**             ANSI/ISO (ASCII) tapes.                      **
**                                                          **
**             Other cosmetic changes and many bug fixes.   **
**                                                          **
** LEVEL 072 - Separate all label print operations into a   **
**             call to a separate CSECT called PRINTLBL.    **
**             Now there is a unified label print routine   **
**             for both EXTLBLIN and INAREA label input.    **
**                                                          **
** LEVEL 073 - Separate messages into their own CSECT.      **
**             Address with PTMS macro, and special setup.  **
**             Assembler instructions which access fields   **
**             in the MSGCSECT CSECT are created with the   **
**             new MVFMS macro.                             **
**                                                          **
** LEVEL 074 - Fix LTM service and reporting.               **
**                                                          **
** LEVEL 075 - Implement SECOFF (security indicators in     **
**             labels turned off in the copied tapes).      **
**             Involves VOL1 (byte 11) for ASCII tapes.     **
**             XXX1 (byte 54) which is turned to C'0' for   **
**             EBCDIC (IBM) tapes, and which is turned to   **
**             ASCII space (X'20') for ASCII tapes.         **
**                                                          **
** LEVEL 076 - Implement FOOTAGE keyword to measure each    **
**             tape file approximately, giving a 6250 bpi   **
**             footage calculation.  This code originally   **
**             came from the SS0104 tape mapping program    **
**             from the Florida Power Corporation.          **
**             Cumulative footages for the entire tape up   **
**             to the current file, are also displayed.     **
**                                                          **
**             Introduced the FOOTDIAG keyword, to print    **
**             diagnostics in the footage calculation.      **
**             Most of the FOOTAGE workarea fields are      **
**             displayed.                                   **
**                                                          **
** LEVEL 077 - Save addressability space by replacing       **
**             multiple MVFMS invocations with ADRSMS and   **
**             DROPMS macros, to get addressability to      **
**             MSGCSECT, and keep it for a while.  Also     **
**             further reduced the program size by making   **
**             a PTMSN macro that doesn't re-do the         **
**             addressability that PTMS does.  This is for  **
**             putting in between a ADRSMS and a DROPMS.    **
**                                                          **
** LEVEL 078   Add CODEDPRM option to report PARM options   **
**             before they were adjusted by COPYMODS.       **
**                                                          **
**             There was no way to turn off the INITVOLS    **
**             option with a parm.  So I coded the NOINITVO **
**             option, to turn off the INITVOLS option      **
**             bit.  So tape init will only be in effect    **
**             if INITVOLS is explicitly coded.  Report     **
**             NOINITVO in the options report, if this      **
**             option is set off.  Remember that coding     **
**             the INITVOLS keyword also turns on the       **
**             CHGVOL option, so that the JCL volser gets   **
**             propagated into the newly initiated tape.    **
**             Coding NOINITVO only turns off the INITVOLS  **
**             parm bit, and not the CHGVOL bit, as this    **
**             should be the proper way to do it.           **
**                                                          **
**             If no //OUTn DD cards are coded in the JCL,  **
**             COPYMODS would have run through the WRITEs   **
**             without writing, and it would look like a    **
**             normal run.  The logical fix would be to     **
**             force READONLY on, and say in a message      **
**             that you have done so. (That's what I did.)  **
**                                                          **
** LEVEL 079   Added MINMAX option to report largest and    **
**             smallest block sizes for each file read.     **
**                                                          **
** LEVEL 080   Added RECSIZE option to report individual    **
**             size of tape blocks, one at a time.  This    **
**             option produces one record in SYSPRINT for   **
**             each tape data block because it is reporting **
**             that block's size.  So this option should    **
**             not be a default since it makes a lot of     **
**             output.  Shows details of the MINMAX         **
**             display, so RECSIZE implies MINMAX.  If      **
**             RECSIZE is coded, MINMAX is switched on.     **
**                                                          **
**             Got rid of "SBG MM/YY" type comments.        **
**                                                          **
** LEVEL 081   Fix problem in PARM=STRIP code where a       **
**             label image in the middle of tape data was   **
**             stripped off.                                **
**                                                          **
** LEVEL 082   Fix problem in PARM=STRIP code where an      **
**             80-byte tape block would cause no tape mark  **
**             to be written at the end of the current      **
**             file.  Made STRIP diagnostics a separate     **
**             parm called DGSTRI and NODGSTRI.             **
**                                                          **
** LEVEL 083   Fix carriage control column for STRIP        **
**             diagnostic messages.  Option DGSTRI.         **
**                                                          **
** LEVEL 084   Added option SHOOVL, which displays          **
**             the first 80 bytes of the first block of     **
**             each output tape, to determine if it is      **
**             a VOL1 label, and what kind of VOL1 label.   **
**             Added option KEEPVOL, KEEPVL.  This option   **
**             looks at the VOL1 label of the output tape,  **
**             and keeps it in the copied tape, if the      **
**             input tape VOL1 label is compatible with it. **
**             The principal reason for having this, is if  **
**             a scratch tape is the copied tape, you do    **
**             not necessarily know its volser in advance.  **
**                                                          **
** LEVEL 085   Size constraint relief.  Already ran out of  **
**             6 base registers.  GETMAIN a workarea and    **
**             put extra stuff there, addressable with R13. **
**                                                          **
**             Allow READ and SHOOVL at the same time,      **
**             so that you can do a "dry run" without tape  **
**             copying.  Now you can see what is on the     **
**             output tapes you have mounted, without       **
**             overlaying them as soon as you saw what      **
**             used to be there.                            **
**                                                          **
** LEVEL 086   Revamp the MSGCSECT processing to handle     **
**             messages of any length, not only 133.        **
**             Also allow insertion of any print control    **
**             characters via the macro, and not in the     **
**             message itself.  Redo macros PTMS and PTMSN. **
**                                                          **
