*          DATA SET CBT990     AT LEVEL 059 AS OF 07/13/03               00001
   TITLE 'COPYMODS -- TAPE COPY PROGRAM'                                 00002
**************************************************************           00003
**************************************************************           00004
**                                                          **           00005
**                                                          **           00006
**  MODULE: COPYMODS.   WRITTEN BY PAUL TOKHEIM, AFAFC.     **           00007
**                                                          **           00008
**                                                          **           00009
**  PURPOSE: COPY ALL FILES OF AN INPUT TAPE TO ONE TO 16   **           00010
**     OUTPUT TAPES.  THE ORIGINAL PURPOSE OF THIS PROGRAM  **           00011
**     IS FOR COPYING THE SHARE MVS MODS TAPE.              **           00012
**                                                          **           00013
**                                                          **           00014
**  METHOD: COPYMODS FIRST DETERMINES WHICH OUTPUT DD'S ARE **           00015
**    PRESENT. THE INPUT TAPE IS READ USING EXCP AND THE    **           00016
**    APPROPRIATE OUTPUT TAPES ARE WRITTEN USING EXCP.      **           00017
**    ANY LABELS ON THE INPUT WILL BE COPIED. ANY LABELS ON **           00018
**    THE OUTPUT TAPES WILL BE DESTROYED.  IF AN ERROR      **           00019
**    OCCURS ON THE INPUT TAPE, THE PROGRAM WILL ABEND WITH **           00020
**    A USER 69 ABEND.  IF AN ERROR OCCURS ON AN OUTPUT     **           00021
**    TAPE, THE PROGRAM WILL QUIT WRITING TO THE TAPE       **           00022
**    WHICH ENCOUNTERED THE ERROR.                          **           00023
**                                                          **           00024
**  This program has to be assembled with PARM=BATCH in     **           00024
**    the Assembler EXEC parms.  The entire PARMCHEK        **           00024
**    program has to be included in the assembly, because   **           00024
**    PARMCHEK has to be fitted to the current level of     **           00024
**    the COPYMODS program.                                 **           00024
**                                                          **           00025
**************************************************************           00026
**  NEW FEATURES ADDED BY SAM GOLOB:                        **           00027
**                                                          **           00028
**                                                          **           00029
**   1.  64K BLOCKS ON A TAPE CAN BE COPIED.                **           00030
**                                                          **           00031
**   2.  UP TO 16 OUTPUT DDNAMES ALLOWED.                   **           00032
**                                                          **           00033
**   3.  INITTED TAPES, AND SL MULTIVOLUME TAPES CAN        **           00034
**       BE CORRECTLY COPIED.                               **           00035
**                                                          **           00036
**   4.  ALL STANDARD LABEL INFORMATION, OR ANY             **           00037
**       PARTICULAR LABEL TYPES, CAN BE PRINTED, IF         **           00038
**       FOUND ON THE INPUT TAPE.                           **           00039
**                                                          **           00040
**   5.  A FLEXIBLE TABLE-DRIVEN PARM KEYWORD SCANNER       **           00041
**       WAS ADDED.  THIS ALLOWS FOR EASY SETTING OF        **           00042
**       PROGRAM DEFAULTS, AND KEYWORD SYNONYMS.  SEE       **           00043
**       LABEL PARMTABL.  THE PARM SCANNER IS NOW A         **           00044
**       SEPARATE PROGRAM CALLED PARMCHEK, WHICH MUST BE    **           00045
**       ASSEMBLED IN BATCH, TOGETHER WITH THE COPYMODS     **           00045
**       MAIN SOURCE CODE.                                  **           00045
**                                                          **           00045
**   6.  OPTIONALLY, THE VOLSER OF THE OUTPUT TAPES         **           00046
**       CAN BE SET TO THE JCL VOLSER, INSTEAD OF THE       **           00047
**       INPUT TAPE'S VOLSER.  USE THE CHGVOL PARM TO       **           00048
**       INVOKE THIS ACTION.                                **           00049
**                                                          **           00050
**   7.  TAPES WITH LEADING TAPE MARKS CAN BE COPIED        **           00051
**       EITHER AS-IS, OR WITH THE LEADING TAPE MARKS       **           00052
**       LEFT OFF.  OPTION OF LTMSKIP OR LTMCOPY.           **           00053
**                                                          **           00054
**   8.  EOV LABELS IN THE MIDDLE OF A TAPE, CAN NOW BE     **           00055
**       CHANGED TO EOF LABELS, IF THE TAPE WAS CREATED     **           00056
**       AS A COMPOSITE, BY THE COPYFILE PROGRAM.  THE      **           00057
**       PARM IS EOV2EOF (SEE PARMTABL FOR ALL ACCURATE     **           00058
**       AND CURRENT PARM KEYWORD SETTINGS).  THIS ALSO     **           00059
**       WORKS WHEN ADDING EXTERNAL LABELS TO AN NL TAPE.   **           00060
**                                                          **           00061
**   9.  COPYMODS CAN NOW BE RUN READ-ONLY FOR THE INPUT    **           00062
**       TAPE, USING PARMS OF READ, READONLY, OR NOWRITE.   **           00063
**                                                          **           00064
**  10.  COPYMODS CAN READ A TAPE (EITHER WHILE COPYING     **           00065
**       IT, OR IN READ-ONLY MODE), AND DUMP ALL THE TAPE   **           00066
**       LABELS TO AN FB-80 OUTPUT FILE WITH A DDNAME OF    **           00067
**       LABLDUMP.  USE A PARM OF LABLDUMP TO INVOKE THIS   **           00068
**       SERVICE.                                           **           00069
**                                                          **           00070
**  11.  COPYMODS CAN READ AN SL TAPE AND DUMP THE LABELS   **           00071
**       OFF INTO AN OUTPUT FILE.  THESE LABEL IMAGES HAVE  **           00072
**       EXTRA CONTROL CARDS ADDED.  THESE LABELS CAN BE    **           00073
**       MERGED WITH THE FILES IN AN NL VERSION OF THE      **           00074
**       SAME TAPE, AND A NEW SL TAPE CREATED.  BY DEFAULT, **           00075
**       BLOCK COUNTS IN THE EOF1 AND EOV1 OF THE OUTPUT    **           00076
**       TAPE ARE CORRECTED TO SHOW THE ACTUAL BLOCK        **           00077
**       COUNTS ON THE TAPE, BUT THIS ACTION CAN BE         **           00078
**       MANUALLY TURNED OFF WITH A PARM SETTING.           **           00079
**                                                          **           00080
**  11a. IF YOU CODE A PARM OF SYSIN IN THE PARM FIELD OF   **           00081
**       THE EXEC CARD, THEN COPYMODS NOW TAKES PARM INPUT  **           00082
**       FROM SYSIN, AND THESE CAN OVERRIDE THE OTHER PARMS **           00083
**       IN THE EXEC CARD, BECAUSE SYSIN IS SEARCHED LATER. **           00084
**                                                          **           00085
**       (BUT YOU DON'T HAVE TO CODE PARM=SYSIN IN THE PARM **           00086
**       FIELD OF THE EXEC CARD.  IF THE SYSIN DDNAME IS    **           00087
**       PRESENT IN THE JCL, PARMCHEK WILL OPEN IT, AND     **           00088
**       WILL USE IT TO SCAN FOR PARMS.  SG - 07/03).       **           00089
**                                                          **           00090
**  11b. ANY SPECIAL SYSIN KEYWORD, SUCH AS:                **           00090
**       TAPEOWNER=xxxxxxxxxx                               **           00090
**       FILELIMIT=nnnn                                     **           00090
**       LABELIMIT=nnnn                                     **           00090
**       PRINTRCDS=nnnn                                     **           00090
**         or                                               **           00090
**       OUTVOLALL=volser , WILL CAUSE THE REST OF A SYSIN  **           00091
**       CARD TO BE IGNORED FOR PARMS FROM THE PARM TABLE.  **           00091
**                                                          **           00090
**  11c. OUTVOLALL=volser , STARTING IN COLUMN1 OF A SYSIN  **           00091
**       CARD, WILL CAUSE ALL OUTPUT VOL1 LABELS TO BE      **           00092
**       OVERWRITTEN WITH THE CODED VOLSER.  THE REST OF    **           00093
**       THAT CARD IS NOT SEARCHED FOR PARMS.               **           00094
**                                                          **           00095
**  12.  OVERLAYING OF THE VOLSER (IN THE VOL1 LABEL)       **           00096
**       CAN ALSO BE DONE IF YOU ARE ADDING EXTERNAL        **           00097
**       LABELS TO AN NL TAPE.  THE OUTPUT TAPES CAN        **           00098
**       HAVE DIFFERENT VOLSER'S FROM THE VOL1 LABEL        **           00099
**       IN THE EXTERNAL LABEL DATASET.                     **           00100
**                                                          **           00101
**  13.  LABLDUMP AND LABADDIN NOW TAKE IBM STANDARD USER   **           00102
**       LABELS (SUL) INTO ACCOUNT.  UP TO 8 UHLn AND/OR    **           00103
**       UTLn LABELS ALLOWED.  THEREFORE, YOU CAN MAKE A    **           00103
**       TAPE WITH ANY USER LABELS YOU WANT, EVEN THOUGH    **           00104
**       YOUR SYSTEM CAN'T CREATE SUCH A TAPE BY ITSELF.    **           00105
**       LABLDUMP DUMPS ALL THE LABEL RECORDS FROM AN SL    **           00106
**       TAPE TO AN EXTERNAL FILE (WITH SPECIAL CONTROL     **           00107
**       CARDS), AND LABADDIN CAN ADD THESE LABELS TO AN    **           00108
**       NL TAPE TO MAKE AN SL TAPE.  (OF COURSE, YOU CAN   **           00109
**       EDIT THE LABEL FILE ON DISK BEFORE USING IT TO     **           00110
**       CREATE A NEW SL TAPE FROM AN NL TAPE.)             **           00111
**                                                          **           00112
**  14.  DEFAULT ACTION OF COPYMODS WITH LABADDIN IS THAT   **           00113
**       IT IS "LABEL DRIVEN".  THAT IS, IF THERE ARE MORE  **           00114
**       NL TAPE FILES THAN EXTERNAL LABELS, THE PROGRAM    **           00115
**       STOPS WHEN IT RUNS OUT OF LABELS.  IF THERE ARE    **           00116
**       MORE LABEL SETS THAN FILES, THE OUTPUT TAPE IS     **           00117
**       WRITTEN WITH NULL STANDARD LABEL FILES UNTIL THE   **           00118
**       LABEL DATASET IS EXHAUSTED, EVEN AFTER THE LAST    **           00119
**       DATA FILE HAS BEEN WRITTEN.                        **           00120
**                                                          **           00121
**       A NEW OPTION CALLED NOEXNULL ALLOWS COPYMODS TO    **           00122
**       STOP AS SOON AS THE NL TAPE FILES ARE EXHAUSTED,   **           00123
**       EVEN IF THERE ARE ADDITIONAL LABEL SETS IN THE     **           00124
**       EXTERNAL LABEL DATASET.                            **           00125
**                                                          **           00126
**  15.  WHEN DOING LABADDIN PROCESSING, IF THE LAST LABEL  **           00127
**       SET IN THE EXTERNAL LABEL FILE HAS A HDR1 AND A    **           00128
**       HDR2 LABEL, BUT NO ENDOFLABELHEADER AND NO EOF1    **           00129
**       AND NO EOF2, THE LBLFIX PARAMETER ALLOWS THE       **           00130
**       PROGRAM TO ACT AS IF THESE CONTROL CARDS WERE      **           00131
**       THERE.  THE EOF1 IS BUILT FROM THE HDR1 AND THE    **           00132
**       MEASURED BLOCK COUNT, AND THE EOF2 IS BUILT FROM   **           00133
**       THE HDR2.                                          **           00134
**                                                          **           00135
**  16.  COPYMODS CAN NOW INIT TAPES WITHOUT COPYING AN     **           00136
**       INPUT TAPE.  USE A PARM OF INITVOLS.               **           00137
**                                                          **           00138
**  17.  COPYMODS CAN NOW CHANGE THE OWNER INFORMATION      **           00139
**       IN THE VOL1 LABEL.  USE THE TAPEOWNER= KEYWORD     **           00140
**       IN A SYSIN CARD.                                   **           00141
**                                                          **           00142
**  18.  COPYMODS CAN LIMIT ITSELF IN THE NUMBER OF FILES   **           00143
**       COPIED, IF THE FILELIMIT=NN KEYWORD IS CODED IN    **           00144
**       SYSIN.  IF THE INPUT IS SL, THEN THE FILELIMIT     **           00145
**       IS INTERPRETED AS SL FILES.  IF NOT, THEN IT IS    **           00146
**       INTERPRETED AS NL.                                 **           00147
**                                                          **           00148
**  19.  USING THE "BYTES" PARAMETER, COPYMODS WILL REPORT  **           00149
**       BYTE COUNTS FOR ALL FILES IN THE INPUT TAPE, AND   **           00150
**       TOTAL BYTES FOR THE ENTIRE TAPE.  THE "CUMTOT"     **           00151
**       PARAMETER REPORTS CUMULATIVE BYTE TOTALS OVER      **           00152
**       MANY FILES, AND IMPLIES THAT THE "BYTES" PARM      **           00153
**       IS ALSO IN EFFECT.  A VARIANT OF THE "CUMTOT"      **           00154
**       PARAMETER IS THE "CUMSEP" PARAMETER, WHICH REPORTS **           00155
**       CUMULATIVE BYTE TOTALS, FILE BY FILE, BUT CUMSEP   **           00156
**       SEPARATES BYTE TOTALS COMING FROM LABELS, FROM THE **           00157
**       BYTE TOTALS COMING FROM DATA FILES.                **           00158
**                                                          **           00159
**  20.  COPYMODS NOW PRINTS "OPTIONS IN EFFECT" WITH THE   **           00160
**       "OPTION" PARAMETER.  (DEFAULT AS DISTRIBUTED, IS   **           00161
**       TO PRINT THEM.)                                    **           00162
**                                                          **           00163
**  21.  BLOCK CORRECTION FOR EOF1 AND EOV1 LABELS NOW      **           00164
**       TAKES THE HIGH ORDER 4 BYTES OF THE BLOCK COUNT    **           00165
**       INTO ACCOUNT.  THIS IS A DIFFERENT FIELD IN THE    **           00166
**       EOF1 OR EOV1 LABEL (LAST 4 BYTES).                 **           00167
**                                                          **           00168
**  22.  COPYMODS CAN NOW DO A QUICK DUMP OF TAPE LABELS,   **           00169
**       WITHOUT READING THE TAPE DATA.  USE THE PARM OF    **           00170
**       LBDQUICK (WHICH IMPLIES READONLY), JUST TO DO      **           00171
**       A LABLDUMP AND "FORWARD SPACE FILE" OVER THE       **           00172
**       DATA BLOCKS ON THE TAPE.                           **           00173
**                                                          **           00174
**  23.  USING PARM=STRIP, COPYMODS CAN STRIP ALL LABELS    **           00175
**       FROM SL TAPES TO MAKE NL OUTPUT TAPES.  IF         **           00176
**       FILE LIMITING IS NOT IN EFFECT (NO FILELIMIT=nnn   **           00177
**       CARD IN SYSIN), THEN THE LABELS AND THE TAPE MARK  **           00178
**       THAT FOLLOWS EACH ONE, WILL NOT BE WRITTEN TO THE  **           00179
**       OUTPUT TAPE(S).  IT DOES NOT MATTER WHERE THE      **           00180
**       LABELS ARE, ON THE TAPE, SO IF YOU HAVE SOME KIND  **           00181
**       OF MESSED-UP TAPE WITH LABELS IN THE WRONG PLACE,  **           00182
**       THESE WILL STILL BE STRIPPED OFF.  IF FILE         **           00183
**       LIMITING IS IN EFFECT, THEN THE INPUT TAPE IS      **           00184
**       ASSUMED TO BE SL, AND THE NUMBER CODED IN THE      **           00185
**       FILELIMIT=nnn SYSIN CARD IS MULTIPLIED BY 3, AND   **           00186
**       THE COPYING IS STOPPED AFTER THAT POINT OF THE     **           00187
**       INPUT TAPE.                                        **           00188
**                                                          **           00189
**  24.  IF YOU HAVE SPECIFIED FILELIMIT=nnn IN A SYSIN     **           00190
**       CARD AND HAVE THEREFORE INVOKED FILE LIMITING,     **           00191
**       YOU CAN FORCE THE nnn TO BE INTERPRETED AS NL,     **           00192
**       USING THE NLLIM PARM, AND YOU CAN FORCE THE nnn    **           00193
**       TO BE INTERPRETED AS SL (AND THEREFORE BE          **           00194
**       MULTIPLIED BY 3), BY USING THE SLLIM PARM.         **           00195
**                                                          **           00196
**  25.  USING PARM=IDRCOFF, YOU CAN INDICATE THAT THE      **           00197
**       TAPE IS NON-COMPRESSED.  THIS IS USEFUL FOR AWS    **           00198
**       FORMAT TAPES WHICH REALLY AREN'T RUNNING ON THE    **           00199
**       3490 HARDWARE AND ABOVE.  SO YOU JUST INDICATE     **           00200
**       THEM AS UNCOMPRESSED, AND THE VIRTUAL TAPE LABELS  **           00201
**       DO NOT INDICATE TO MVS THAT IDRC IS ON.  THIS      **           00202
**       ALLOWS A 3420 OR 3480 VIRTUAL DEVICE TO READ THE   **           00203
**       TAPE, WITHOUT INCURRING AN S413-40 ABEND.          **           00204
**                                                          **           00205
**  26.  USING PARM=HEXPRT, THE FIRST 132 BYTES OF THE      **           00206
**       FIRST n RECORDS IN EACH FILE ARE PRINTED IN HEX    **           00207
**       AND EBCDIC.  DEFAULT FOR n IS 4.  THIS CAN BE      **           00208
**       OVERRIDDEN BY CODING PRINTRCDS=nnn IN THE SYSIN    **           00209
**       CARD, STARTING IN COLUMN 1.  GLOBAL VARIABLE       **           00210
**       &HEXDFLA CAN BE SET AT ASSEMBLY TIME, TO CHANGE    **           00211
**       THE DEFAULT n RECORDS TO BE HEX PRINTED.           **           00212
**                                                          **           00213
**  27.  THE PARM SCANNING PROGRAM PARMCHEK, CUSTOMIZED     **           00214
**       TO THIS VERSION OF COPYMODS, NOW DOES THE PARM     **           00215
**       SCANNING INSTEAD OF THE INLINE PARMCHK SUBROUTINE. **           00216
**       THEREFORE, THIS PROGRAM SHOULD BE ASSEMBLED IN     **           00217
**       BATCH, TOGETHER WITH THE PARMCHEK PROGRAM.         **           00218
**       THIS ALSO ALLOWS OPTIONAL DDNAME //PARMREPT TO     **           00219
**       BE CODED, TO SHOW THE RESULTS FROM THE PARM SCAN.  **           00220
**                                                          **           00221
**************************************************************           00222
         EJECT                                                           00223
**************************************************************           00224
**  CHANGE LOG:                                             **           00225
**                                                          **           00226
** LEVEL 003                                                **           00227
**  03/03/00 - ALLOW COPYING OF 64K BLOCKS        SBG 03/00 **           00228
**                                                          **           00229
** LEVEL 004                                                **           00230
**  03/03/00 - CHECK FOR DOUBLE TAPE MARK AFTER   SBG 03/00 **           00231
**             A HEADER LABEL.  THIS MEANS AN SL  SBG 03/00 **           00232
**             FILE WITHOUT ANY DATA IN IT.  AND  SBG 03/00 **           00233
**             IF THIS IS THE CASE, DON'T STOP    SBG 03/00 **           00234
**             COPYING FILES.                     SBG 03/00 **           00235
**                                                          **           00236
** LEVEL 005                                                **           00237
**  03/03/00 - GET AWAY FROM R13 AS BASE, USE     SBG 03/00 **           00238
**             R12,R11.                           SBG 03/00 **           00239
**                                                          **           00240
** LEVEL 006                                                **           00241
**  03/12/00 - ENLARGED THE PROGRAM TO ALLOW UP   SBG 03/00 **           00242
**             TO 16 OUTPUT TAPES FROM OUT1 TO    SBG 03/00 **           00243
**             OUT16.                             SBG 03/00 **           00244
**                                                          **           00245
** LEVEL 007 AND 008                                        **           00246
**  03/14/00 - CLEANED UP SPELLING ON ERROR       SBG 03/00 **           00247
**             MESSAGES AND FIXED DOCUMENTATION.  SBG 03/00 **           00248
**             ADDED EYECATCHERS COSMETICALLY.    SBG 03/00 **           00249
**                                                          **           00250
** LEVEL 009                                                **           00251
**  03/21/00 - STOP AFTER INITTED MVS TAPE        SBG 03/00 **           00252
**                                                          **           00253
** LEVEL 010                                                **           00254
**  03/24/00 - FIXED THE BLOCK SIZE CALCULATIONS  SBG 03/00 **           00255
**             FOR BLOCK SIZES FROM 32K TO 64K.   SBG 03/00 **           00256
**                                                          **           00257
**             I MADE AN ATTEMPT TO COPY DOS/VSE  SBG 03/00 **           00258
**             TAPES THAT HAVE LEADING TAPE       SBG 03/00 **           00259
**             MARKS.  THERE IS A CHOICE TO       SBG 03/00 **           00260
**             EITHER COPY ALL THE LEADING        SBG 03/00 **           00261
**             TAPEMARKS TO AN OUTPUT TAPE, OR TO SBG 03/00 **           00262
**             DISCARD THEM ALL.  YOU USE A PARM  SBG 03/00 **           00263
**             OF LTMSKIP TO DISCARD LEADING      SBG 03/00 **           00264
**             TAPEMARKS, AND ANY OTHER PARM, OR  SBG 03/00 **           00265
**             NO PARM, WILL CAUSE THE PROGRAM TO SBG 03/00 **           00266
**             COPY THEM TO THE OUTPUT TAPES.     SBG 03/00 **           00267
**                                                          **           00268
** LEVEL 011                                                **           00269
**  03/24/00 - PROPERLY ACCOUNT FOR INITTED TAPE  SBG 03/00 **           00270
**             BY ENDING THE JOB NORMALLY AFTER   SBG 03/00 **           00271
**             ONE TAPEMARK.                      SBG 03/00 **           00272
**                                                SBG 03/00 **           00273
**             IF VOL1 LABEL IS DETECTED, THEN    SBG 03/00 **           00274
**             PUT OUT A MESSAGE SAYING SO, AND   SBG 03/00 **           00275
**             INDICATING THE VOLSER THAT WAS     SBG 03/00 **           00276
**             FOUND.  THIS PROGRAM WAS WRITTEN   SBG 03/00 **           00277
**             ORIGINALLY WITH THE INTENT OF      SBG 03/00 **           00278
**             HANDLING NL TAPES, SO THAT THE     SBG 03/00 **           00279
**             CONDITIONS WHICH RESULT FROM       SBG 03/00 **           00280
**             HAVING SL TAPES, HAD TO BE         SBG 03/00 **           00281
**             ACCOUNTED FOR LATER.               SBG 03/00 **           00282
**                                                          **           00283
** LEVEL 012                                                **           00284
**  04/19/00 - ACCOUNT FOR SL EOV1 AND EOV2       SBG 04/00 **           00285
**             HAVING ONLY ONE TAPE MARK AFTER              **           00286
**             THEM.                                        **           00287
**                                                          **           00288
** LEVEL 013                                                **           00289
**  04/30/00 - ORGANIZE THE CHECK FOR STANDARD    SBG 04/00 **           00290
**             LABEL TYPES, AND THE SETTING OF              **           00291
**             FLAGS TO INDICATE EACH TYPE.                 **           00292
**             SEE NEW SUBROUTINE CALLED LABELCHK.          **           00293
**             MOVE NON-LABEL-RELATED FLAGS OUT             **           00294
**             OF THE LBLFLAG FLAG.  PREPARE FOR            **           00295
**             EASY PRINTING OF LABEL CONTENTS,             **           00296
**             BUT NO EXTRA PRINTING IS DONE AT             **           00297
**             THIS LEVEL.                                  **           00298
**                                                          **           00299
** LEVEL 014                                                **           00300
**  05/02/00 - ADDED A FLEXIBLE TABLE-DRIVEN      SBG 05/00 **           00301
**             PARM SCANNER THAT IS EASY TO                 **           00302
**             MODIFY, AND TO SUPPLY SYNONYMS               **           00303
**             FOR THE PARMS.  ADDED SUPPORT,               **           00304
**             VIA THE LBLINFO PARM, TO PRINT               **           00305
**             HDR1, HDR2, EOF1, EOF2, EOV1,                **           00306
**             EOV2 LABEL INFORMATION, IF IT IS             **           00307
**             FOUND ON THE INPUT TAPE.  THAT IS,           **           00308
**             IF THE INPUT TAPE IS SL.                     **           00309
**                                                          **           00310
**             FOR A LIST OF PERMISSIBLE PARMS,             **           00311
**             SEE LABEL PARMTABL.                          **           00312
**                                                          **           00313
** LEVEL 015                                                **           00314
**  05/07/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00315
**             TO TURN OFF A PARM FLAG AS WELL AS           **           00316
**             THE ABILITY TO TURN IT ON. INCREASED         **           00317
**             THE SIZE OF A PARM TABLE ENTRY BY ONE        **           00318
**             BYTE.                                        **           00319
**                                                          **           00320
** LEVEL 016                                                **           00321
**  05/08/00 - GAVE THE PARM SCANNER THE ABILITY  SBG 05/00 **           00322
**             TO SET ANY PARM SETTING AS A                 **           00323
**             DEFAULT.  A SETTING FOR A DEFAULT            **           00324
**             ENTRY THAT IS LATER IN THE TABLE,            **           00325
**             WILL OVERRIDE A SETTING FOR A                **           00326
**             DEFAULT THAT WAS SET EARLIER IN THE          **           00327
**             TABLE.  SETTING A PARM EXPLICITLY            **           00328
**             IN THE JCL, WILL OVERRIDE ANY                **           00329
**             DEFAULT SETTING FOR THAT PARM.               **           00330
**                                                          **           00331
** LEVEL 017                                                **           00332
**  05/11/00 - USED THE PARM SCANNER TO MAKE A    SBG 05/00 **           00333
**             DIFFERENCE BETWEEN PRINTING VARIOUS          **           00334
**             KINDS OF TAPE LABELS.  IF YOU WANT           **           00335
**             ALL OF THEM, YOU JUST HAVE A PARM            **           00336
**             THAT THROWS ALL OF THE FLAGS.  ALL           **           00337
**             OF THIS IS CODED IN PARMTABL AND             **           00338
**             THE FLAGS ARE USED IN PRTXXX1 AND            **           00339
**             PRTXXX2.                                     **           00340
**                                                          **           00341
** LEVEL 018                                                **           00342
**  05/22/00 - ADDED THE PROVISION TO CHANGE THE  SBG 05/00 **           00343
**             VOLSER OF THE COPIED TAPES, TO               **           00344
**             MATCH THE VOLSER INDICATED IN THE            **           00345
**             OUTXX DD NAMES.  THIS IS DONE WITH           **           00346
**             THE CHGVOL PARM KEYWORD.  THIS               **           00347
**             ACTION ONLY OCCURS IF THE INPUT              **           00348
**             TAPE IS SL, AND SO A VOL1 LABEL IS           **           00349
**             DETECTED.  THE COPIED VOL1 LABEL             **           00350
**             IS ALTERED BEFORE THE WRITE.                 **           00351
**                                                          **           00352
** LEVEL 019                                                **           00353
**  06/06/00 - ADDED THE PROVISION TO FIX EOV1    SBG 06/00 **           00354
**             AND EOV2 LABELS THAT ARE IN THE              **           00355
**             MIDDLE OF A TAPE.  OF COURSE THIS            **           00356
**             ISN'T SUPPOSED TO HAPPEN, BUT IT             **           00357
**             CAN HAPPEN WHEN YOU COPY FILES               **           00358
**             WITH THE COPYFILE PROGRAM, FROM              **           00359
**             THE END OF ONE TAPE, TO THE                  **           00360
**             BEGINNING OR THE MIDDLE OF                   **           00361
**             ANOTHER.  COPYFILE HAS NOT BEEN              **           00362
**             FIXED AS YET NOT TO DO THIS, BUT IT          **           00363
**             COPIES THE EOV LABELS AS IS.  THIS           **           00364
**             NEW OPTION IS CALLED EOVCHG OR               **           00365
**             EOV2EOF; THE EOV LABELS ARE                  **           00366
**             CHANGED (IN THE COPIED TAPES) TO             **           00367
**             EOF, AND A MESSAGE IS WRITTEN THAT           **           00368
**             REPORTS THIS FACT.                           **           00369
**                                                          **           00370
** LEVEL 020                                                **           00371
**  06/29/00 - ADDED THE PARM OF READ OR READONLY SBG 06/00 **           00372
**             TO ALLOW A RUN OF COPYMODS THAT              **           00373
**             JUST READS THE INPUT TAPE, AND DOES          **           00374
**             NOT MAKE COPIES.                             **           00375
**                                                          **           00376
** LEVEL 021                                                **           00377
**  07/06/00 - FIX COPYMODS TO CORRECTLY COPY     SBG 07/00 **           00378
**             IEHINITTED TAPES.                            **           00379
**                                                          **           00380
** LEVEL 022                                                **           00381
**  09/10/00 - COPYMODS CAN DUMP THE IBM STANDARD SBG 09/00 **           00382
**             LABELS FROM A TAPE, TO AN FB-80              **           00383
**             OUTPUT FILE.  PARM IS LABLDUMP.              **           00384
**                                                          **           00385
** LEVEL 023                                      SBG 09/00 **           00386
**  09/11/00 - ALLOWS LIMITED SYSIN INPUT OPTIONALLY.       **           00387
**             ONLY IMPLEMENTATION SO FAR IS TO             **           00388
**             CHANGE ALL OUTPUT VOLSER'S TO THE            **           00389
**             SAME VALUE, BUT NOT NECESSARILY TO           **           00390
**             WHAT IS IN THE OUTX  DD CARD.  IN            **           00391
**             ORDER TO USE THE FACILITY, YOU HAVE          **           00392
**             TO CODE                                      **           00393
**             OUTVOLALL=XXXXXX STARTING IN COL 1           **           00394
**             OF THE SYSIN CARD FILE.  IF THERE            **           00395
**             ARE NO VALID OUTVOLALL= CARDS IN             **           00396
**             SYSIN, THEN THE EFFECT IS THE SAME           **           00397
**             AS CODING CHGVOL.                            **           00398
**                                                          **           00399
**             FIXED LABEL DUMP OPTION SO THAT THE          **           00400
**             DUMPED LABELS HAVE CONTROL CARDS             **           00401
**             AFTER THEM.  THE EXTERNAL ADD LABELS         **           00402
**             FUNCTION IN LEVEL 24 NEEDS THESE             **           00403
**             CONTROL CARDS.                               **           00404
**                                                          **           00405
** LEVEL 024                                      SBG 09/00 **           00406
**  09/14/00 - ADDED CAPABILITY OF CREATING SL              **           00407
**             OUTPUT COPIES FROM NL INPUT AND A            **           00408
**             SET OF LABELS CREATED BY LABLDUMP.           **           00409
**             CHANGED THE DCB NAMES AND DD CARDS           **           00410
**             AND OPTION NAMES FOR LABEL DUMP AND          **           00411
**             RESTORE.                                     **           00412
**                                                          **           00413
**             CHANGED PROGRAM INITIALIZATION TO            **           00414
**             A STANDARD FORM.  GOT RID OF PRIME           **           00415
**             AND TERME MACROS.  HAVE 5 BASE               **           00416
**             REGISTERS TO LEAVE ROOM FOR EXPANSION.       **           00417
**                                                          **           00418
**             CHECK FOR VOL1 RECORD AS FIRST RECORD        **           00419
**             ON THE INPUT TAPE.  WON'T WRITE MORE         **           00420
**             LABELS ON AN SL TAPE, AND WON'T              **           00421
**             DAMAGE THE OUTPUT TAPES, IF THE INPUT        **           00422
**             TAPE IS SL, ACCIDENTALLY.                    **           00423
**                                                          **           00424
** LEVEL 025                                      SBG 09/00 **           00425
**  09/20/00 - COPYMODS CAN NOW TAKE INPUT FROM             **           00426
**             SYSIN AND SEARCH FOR ALL PARMS.              **           00427
**                                                          **           00439
**             IF A SYSIN DD CARD IS PRESENT, IT WILL       **           00439
**             BE USED.                                     **           00439
**                                                          **           00439
**             ANY CARD IN SYSIN WHICH IS NOT A             **           00430
**             KEYWORD PARAMETER STARTING IN COLUMN 1,      **           00431
**                TAPEOWNER=xxxxxxxxxx                      **           00432
**                FILELIMIT=nnnn                            **           00432
**                LABELIMIT=nnnn                            **           00432
**                PRINTRCDS=nnnn                            **           00432
**                  or                                      **           00432
**                OUTVOLALL=volser ,                        **           00432
**             IS SEARCHED BY THE PARMLOOP ROUTINE,         **           00433
**             AND ANY PARM THAT IS CODED IN THE            **           00434
**             PARM TABLE, CAN BE CODED IN SYSIN,           **           00435
**             AND IT WILL OVERRIDE THE PARM IN             **           00436
**             THE EXEC CARD (SINCE SYSIN IS                **           00437
**             SCANNED LATER IN THE PROCESSING).            **           00438
**                                                          **           00439
**             INCLUDED A BLOCK COUNT CORRECTION AS         **           00440
**             DEFAULT, WHEN WRITING STANDARD LABELS        **           00441
**             FROM AN EXTERNAL FILE.  THE CORRECTED        **           00442
**             BLOCK COUNTS ARE WRITTEN TO THE EOF1         **           00443
**             AND EOV1 LABELS IN THE OUTPUT TAPES.         **           00444
**                                                          **           00445
**             WHEN WRITING TAPE LABELS FROM AN EXTERNAL    **           00446
**             FILE, INCLUDED AN OPTION TO PRINT THEIR      **           00447
**             CONTENTS, IN THE SAME WAY, AS PRINTING       **           00448
**             THE CONTENTS OF STANDARD LABELS FOUND        **           00449
**             WHEN COPYING AN INPUT TAPE.                  **           00450
**                                                          **           00451
** LEVEL 026                                      SBG 09/00 **           00452
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00453
**             RESPECT CHGVOL AND OUTVOLALL= .              **           00454
**                                                          **           00455
** LEVEL 027                                      SBG 09/00 **           00456
**  09/22/00 - ON LABADDIN, COPYMODS SHOULD                 **           00457
**             BE ABLE TO DO EOV2EOF PROCESSING             **           00458
**                                                          **           00459
** LEVEL 028                                      SBG 09/00 **           00460
**  09/25/00 - ON LABADDIN AND LABLDUMP, PUT IN             **           00461
**             STANDARD USER LABEL SUPPORT.                 **           00462
**                                                          **           00463
** LEVEL 029                                      SBG 09/00 **           00464
**  09/25/00 - FIX LABEL PRINTING REPORTS FOR               **           00465
**             STANDARD USER LABELS.                        **           00466
**                                                          **           00467
** LEVEL 030                                      SBG 09/00 **           00468
**  09/27/00 - CORRBLKS PARM ALLOWS FIXING OF               **           00469
**             EOF1 AND EOV1 BLOCK COUNTS IN THE            **           00470
**             OUTPUT TAPES, DURING THE COPY.               **           00471
**             WRITE MESSAGE THAT THIS IS IN EFFECT.        **           00472
**                                                          **           00473
**             FIXED THE EYECATCHERS A BIT.                 **           00474
**                                                          **           00475
**             AGAIN FIXED COPY OF INITTED TAPES.           **           00476
**                                                          **           00477
** LEVEL 031                                      SBG 09/00 **           00478
**  09/28/00 - MADE SURE WITH LABADDIN WHEN YOU             **           00479
**             HAVE EXTRA LABELS AND ADD NULL FILES,        **           00480
**             THAT 2 TM'S ARE WRITTEN AFTER THE            **           00481
**             HDR2 RECORDS, BEFORE THE EOF1'S.             **           00482
**                                                          **           00483
** LEVEL 032                                      SBG 10/00 **           00484
**  10/02/00 - NEW NOEXNULL OPTION CONTROLS                 **           00485
**             LABADDIN PROCESSING WHEN THERE ARE           **           00486
**             MORE LABELS IN THE EXTERNAL LABEL            **           00487
**             DATASET, THAN THERE ARE NL FILES             **           00488
**             IN THE INPUT TAPE.  DEFAULT IS TO            **           00489
**             WRITE EXTRA NULL SL FILES.  NOEXNULL         **           00490
**             SAYS TO STOP AT THE END OF NL FILES          **           00491
**             AND NOT WRITE NULL SL FILES TO               **           00492
**             CORRESPOND TO THE EXTRA EXTERNAL             **           00493
**             LABELS.                                      **           00494
**                                                          **           00495
**             THIS HAS TO BE DONE WITH A TECHNIQUE         **           00496
**             OF WRITING AN EXTRA HEADER LABEL SET,        **           00497
**             AND THEN BACKING OVER IT AND CLOSING.        **           00498
**                                                          **           00499
** LEVEL 033                                      SBG 10/00 **           00500
**  10/05/00 - NEW LBLFIX OPTION FIXES LABADDIN             **           00501
**             PROCESSING WHEN THE LAST LABEL SET           **           00502
**             IN THE EXTERNAL LABEL FILE IS PARTLY         **           00503
**             MISSING.  ALL YOU NEED IS A HDR1 AND         **           00504
**             A HDR2 LABEL IN THE LAST LABEL SET,          **           00505
**             AND COPYMODS (WITH LBLFIX ON) WILL           **           00506
**             ACT AS IF AN ENDOFLABELHEADER CARD           **           00507
**             WERE THERE (SO IT WRITES A TAPEMARK          **           00508
**             AND THE DATA AND A TAPEMARK), AND IT         **           00509
**             CONSTRUCTS THE EOF1 FROM THE HDR1            **           00510
**             PLUS THE MEASURED BLOCK COUNTS FROM          **           00511
**             THE DATA FILE.  AN EOF2 IS COPIED            **           00512
**             FROM THE EXISTING HDR2 AND EOF IS            **           00513
**             PUT IN.  2 TAPEMARKS ARE WRITTEN ON          **           00514
**             THE END.                                     **           00515
**                                                          **           00516
** LEVEL 034                                      SBG 10/00 **           00517
**  10/10/00 - WHEN AN ERROR THAT IS NOT A UNIT             **           00518
**             CHECK IS PRESENT ON AN OUTPUT TAPE           **           00519
**             DRIVE, NO REWIND IS PERFORMED BEFORE         **           00520
**             THE CLOSE.  THIS LETS THE CLOSE DO           **           00521
**             THE REWIND, AND LEAVES THE WRITTEN           **           00522
**             DATA ON THE TAPE.  THIS WAY, A TAPE          **           00523
**             THAT WAS INCOMPLETELY WRITTEN IS             **           00524
**             NOT ERASED.                                  **           00525
**                                                          **           00526
**             END-OF-TAPE (UNIT EXCEPTION ON WRITE)        **           00527
**             CONDITION IS FLAGGED WITH A PROPER           **           00528
**             MESSAGE FOR THE CONTEXT, AND THE WTOR        **           00529
**             FOR THAT DRIVE IS BYPASSED.                  **           00530
**                                                          **           00531
**             THIS PROBLEM HAS EXISTED SINCE THE           **           00532
**             FIRST VERSION OF THIS PROGRAM.               **           00533
**                                                          **           00534
**             CAREFUL TO FLAG ALL THE EXTRA DD             **           00535
**             NAMES AS CLOSED BEFORE CLOSING THEM.         **           00536
**             THESE ARE THE OPENDFLG SETTINGS.             **           00537
**                                                          **           00538
** LEVEL 035                                      SBG 10/00 **           00539
**  10/12/00 - TRY TO FIX COPYING OF INITTED                **           00540
**             TAPES, BY NOT REUSING THE WRITE              **           00541
**             IOB WITHOUT REFRESHING THE PARTS             **           00542
**             THAT ARE USED BY IOS.  THIS IS THE           **           00543
**             CLEARIOB SUBROUTINE. (IT DOESN'T HELP.)      **           00544
**                                                          **           00545
**             LABLDUMP OF AN IEHINITTED TAPE               **           00546
**             PRODUCES AN ENDOFLABELHEADERINIT             **           00547
**             CARD, IN ANTICIPATION OF CREATING            **           00548
**             A TAPE INITIALIZATION ROUTINE FROM           **           00549
**             EXTERNAL LABELS.  (INITVOLS IN THE           **           00550
**             NEXT LEVEL, IS BETTER.)                      **           00551
**                                                          **           00552
**             FIXED BUG OF WRITING 2 EOV2 LABELS.          **           00553
**                                                          **           00554
** LEVEL 036                                      SBG 10/00 **           00555
**  10/17/00 - CAN INIT TAPES FROM PROGRAM-GENERATED        **           00556
**             CARD IMAGES.  ADD TAPEOWNER= KEYWD           **           00557
**             IN SYSIN DD NAME.  THIS KEYWORD CAN          **           00558
**             ALSO CHANGE TAPE OWNER INFORMATION           **           00559
**             IN THE VOL1 LABEL FOR REGULAR COPIES,        **           00560
**             ALTHOUGH IT WAS WRITTEN FOR TAPE INITS.      **           00561
**                                                          **           00562
**             TO INIT TAPES WITH NO INPUT TAPE,            **           00563
**             USE A PARM OF INITVOLS.                      **           00564
**                                                          **           00565
**             TAPEOWNER=  AND  OUTVOLALL=  KEYWORDS        **           00566
**             BOTH TURN ON THE OUTVOL PARM OPTION.         **           00567
**                                                          **           00568
**             CONSOLIDATED CHGVOL CODE INTO A              **           00569
**             SUBROUTINE TO SIMPLIFY THE PROGRAM.          **           00570
**                                                          **           00571
**             CLEANED CHGVOL CODE TO HANDLE LABADDIN       **           00572
**             AS WELL AS TAPE INPUT, WITHOUT THEM          **           00573
**             STEPPING ON EACH OTHER.                      **           00574
**                                                          **           00575
** LEVEL 037                                      SBG 10/00 **           00576
**  10/31/00 - ADDED FILELIMIT= KEYWORD TO SYSIN            **           00577
**             CARDS.  THE PROGRAM FEELS FOR SL OR          **           00578
**             NL TAPES ON THE INPUT TAPE.  IF THE          **           00579
**             INPUT TAPE IS SL, THEN THE FILELIMIT         **           00580
**             IS MULTIPLIED BY 3, AND THE BIGGER           **           00581
**             VALUE IS USED.                               **           00582
**                                                          **           00583
**             COPYMODS WILL ONLY COPY INPUT TAPE           **           00584
**             FILES UP TO THE LIMIT OF THE FILELIMIT       **           00585
**             VALUE, IF THERE IS ONE.                      **           00586
**                                                          **           00587
**             INTERNALLY, THE FILELIMIT= KEYWORD           **           00588
**             SETS THE PARM VALUE OF LIMFILE OR            **           00589
**             FILELIM, AND THAT PARM IS WHAT DRIVES        **           00590
**             THE PROGRAM ACTION.                          **           00591
**                                                          **           00592
**             BYTES PARM KEYWORD ADDED.  IF SO, THE        **           00593
**             PROGRAM COUNTS BYTES READ FROM THE           **           00594
**             INPUT TAPE FILES, AND TOTALS THEM AT         **           00595
**             THE END.  NOBYTES KEYWORD WILL NULLIFY       **           00596
**             THIS ACTION.                                 **           00597
**                                                          **           00598
** LEVEL 038                                      SBG 11/00 **           00599
**  11/01/00 - ADDED CUMTOT KEYWORD WHICH IMPLIES           **           00600
**             THE BYTES KEYWORD.  THIS OPTION KEEPS        **           00601
**             RUNNING BYTE TOTALS AS WELL AS THE           **           00602
**             BYTE COUNTS FOR THE INDIVIDUAL TAPE          **           00603
**             FILES.                                       **           00604
**                                                          **           00605
** LEVEL 039                                      SBG 11/00 **           00606
**  11/01/00 - EXPANDED THE SIZE OF PARMTABL TO             **           00607
**             TAKE 5 BYTES OF PARMS INSTEAD OF 3.          **           00608
**             THEREFORE WE HAVE PARMFLG1 THRU              **           00609
**             PARMFLG5 TO USE AS OPTION BYTES.             **           00610
**                                                          **           00611
** LEVEL 040                                      SBG 11/00 **           00612
**  11/03/00 - SPLIT BYTE TOTALS TO SEPARATE OUT            **           00613
**             THE INPUT TAPE'S BYTE COUNT COMING FROM      **           00614
**             LABELS.  INNOVATION'S FATAR GIVES TAPE       **           00615
**             BYTE COUNTS NOT COUNTING LABEL BYTES,        **           00616
**             AND I WANT TO BE ABLE TO MATCH THEIR         **           00617
**             COUNT, SO A USER WILL BE ABLE TO             **           00618
**             EXPLAIN IT.  ALSO, I WANT TO BE ABLE         **           00619
**             TO GET A NL BYTE COUNT FROM AN SL TAPE.      **           00620
**                                                          **           00621
**             PUT IN PROTECTION FOR "IN" DDNAME, SO        **           00622
**             IF IT ISN'T CODED IN THE JCL, AND YOU'RE     **           00623
**             NOT INITTING TAPES, YOU DON'T GET AN         **           00624
**             S200 ABEND, BUT A MESSAGE TELLING YOU        **           00625
**             WHAT TO DO.                                  **           00626
**                                                          **           00627
** LEVEL 041                                      SBG 11/00 **           00628
**  11/05/00 - LABELIMIT=NNN WILL LIMIT THE NUMBER          **           00629
**             OF LABEL SETS IN THE LABADDIN FILE           **           00630
**             THAT COPYMODS WILL PROCESS.  EVEN            **           00631
**             IF THE LABADDIN FILE CONTAINS MANY           **           00632
**             LABEL SETS, THE NUMBER PROCESSED WILL        **           00633
**             BE NNN ONLY.  LABELIMIT=NNN IS CODED         **           00634
**             AS A SYSIN CARD, LIKE FILELIMIT=NNN.         **           00635
**                                                          **           00636
**             LABELIMIT=NNN COUNTS THE NUMBER OF           **           00637
**             ----ENDOFLABELTRAILER CARDS SEEN IN          **           00638
**             THE LABADDIN FILE, AND CONSIDERS THE         **           00639
**             FILE TO END AFTER NNN OF THEM.               **           00640
**                                                          **           00641
**  11/06/00 - FIXED A BUG THAT I INTRODUCED A WHILE        **           00642
**             BACK AT LABEL WRITE17.  THERE SHOULDN'T      **           00643
**             BE A TEST FOR LBLFLAG,X'80' (EOV2).          **           00644
**             THIS CHOPS PROCESSING OFF TOO SOON           **           00645
**             WHEN EOV LABELS ARE PRESENT.                 **           00646
**                                                          **           00647
** LEVEL 042                                      SBG 11/00 **           00648
**  11/06/00 - TURNED ALL BAL R6 ROUTINES INTO              **           00649
**             BAL R7, AND USED R6 AS SIXTH BASE            **           00650
**             REGISTER.                                    **           00651
**                                                          **           00652
** LEVEL 043                                      SBG 11/00 **           00653
**  11/08/00 - PRINT "OPTIONS IN EFFECT" WITH THE           **           00654
**             "OPTION" PARAMETER.  CALL IS TO A            **           00655
**             SUBPROGRAM THAT WRITES TO SYSPRINT.          **           00656
**             PROGRAM COPYMOPT SHOULD BE BATCH             **           00657
**             ASSEMBLED AND LINKEDITED WITH                **           00658
**             THE COPYMODS PROGRAM.                        **           00659
**                                                          **           00660
**             CHANGED THE WORDING OF SOME OF THE           **           00661
**             PARMS TO "SHUT OFF" OPTIONS, SLIGHTLY,       **           00662
**             TO ACCOMMODATE THE COPYMOPT PROGRAM.         **           00663
**                                                          **           00664
**  12/02/00 - FIXED BUG AFTER INTRODUCING THE OPTIONS      **           00665
**             PARAMETER.  WRLBLFLG,X'01' WAS ON            **           00666
**             UNCONDITIONALLY, INSTEAD OF ONLY WHEN        **           00667
**             LABADDIN WAS IN EFFECT.                      **           00668
**                                                          **           00669
** LEVEL 044                                      SBG 12/00 **           00670
**  12/02/00 - ENHANCED OPTIONS DISPLAY                     **           00671
**                                                          **           00672
** LEVEL 045                                      SBG 12/00 **           00673
**  12/05/00 - OPTION TO SUPPRESS WTO AT GOOD               **           00674
**             COMPLETION OF THE COPY. SUPPWTO.             **           00675
**                                                          **           00676
** LEVEL 046                                      SBG 12/00 **           00677
**  12/07/00 - SAVE FULL 10 DIGITS OF BLOCK COUNT.          **           00678
**             7 DIGITS ARE DISPLAYED IN THE REPORT.        **           00679
**             PUT IN FIX TO MOVE HI ORDER 4 DIGITS         **           00680
**             TO HI ORDER FIELD WHEN DOING BLOCK           **           00681
**             COUNT CORRECTION.                            **           00682
**                                                          **           00683
**             PRINT ROUTINE FOR EOF1, EOV1 FIXED.          **           00684
**                                                          **           00685
** LEVEL 047                                      SBG 12/00 **           00686
**  12/11/00 - LBDQUICK OPTION ALLOWS A QUICK LABEL         **           00687
**             DUMP OF TAPES WHICH CONTAIN LARGE            **           00688
**             NUMBERS OF DATA RECORDS.  IF THE             **           00689
**             ONLY TASK IS TO DUMP THE LABELS, YOU         **           00690
**             CAN NOW FSF PAST THE NON-LABEL DATA.         **           00691
**                                                          **           00692
** LEVEL 048                                      SBG 05/02 **           00693
**  05/19/02 - MAKE SYSIN AN OPTIONAL DDNAME, SO            **           00694
**             YOU DON'T HAVE TO LOOK IN THE PARMS          **           00695
**             TO SEE IF YOU SHOULD OPEN IT.  IF IT         **           00696
**             IS THERE IN THE JCL, THEN OPEN IT.           **           00697
**                                                          **           00698
** LEVEL 049                                      SBG 05/02 **           00699
**  05/20/02 - ADD CUMSEP AND NOCUMSEP OPTIONS,             **           00700
**             TO SEPARATE CUMULATIVE TOTALS BY LABEL       **           00701
**             BYTE COUNTS AND DATA BYTE COUNTS,            **           00702
**             INSTEAD OF TOTAL BYTE COUNTS.                **           00703
**                                                          **           00704
** LEVEL 050 - ADD PARM=STRIP, TO NOT COPY TAPE   SBG 10/02 **           00705
**  10/16/02   LABELS, AND ONE TAPE MARK AFTER              **           00706
**             EACH LABEL.  IT DOES NOT MATTER              **           00707
**             WHERE THE LABELS ARE, IN THE INPUT           **           00708
**             TAPE--THEY WILL BE STRIPPED OFF THE          **           00709
**             OUTPUT TAPE.  FILE LIMITING IS TREATED       **           00710
**             AS IN NORMAL SL TAPES.  THE FILE LIMIT       **           00711
**             NUMBER IS MULTIPLIED BY 3, AND THE           **           00712
**             COPYING IS CUT OFF AFTER 3*nnn,              **           00713
**             TREATED AS BLP, ON THE INPUT TAPE.           **           00714
**                                                          **           00715
** LEVEL 051 - WHEN LIMITING FILES TO BE COPIED, USING      **           00716
**             THE FILELIMIT=nnn SYSIN CARD, NORMALLY       **           00717
**             COPYMODS TRIES TO DETECT WHETHER THE         **           00718
**             INPUT TAPE IS SL, OR NL.  THEN, THE nnn      **           00719
**             NUMBER (IF THE TAPE IS SL) IS MULTIPLIED     **           00720
**             BY 3, AND (IF THE TAPE IS NL) THE nnn        **           00721
**             NUMBER IS USED AS-IS.  IN THIS LEVEL,        **           00722
**             WE CAN NOW FORCE THE nnn TO BE               **           00723
**             INTERPRETED AS NL USING THE NLLIM            **           00724
**             KEYWORD, AND WE CAN FORCE nnn TO BE          **           00725
**             INTERPRETED AS 3*nnn USING THE SLLIM         **           00726
**             KEYWORD.  NONLLIM AND NOSLLIM REVERT         **           00727
**             THE PROGRAM TO THE DEFAULT, UNLESS THE       **           00728
**             OTHER KEYWORD IS ALSO CODED.                 **           00729
**                                                          **           00730
** LEVEL 052 - WHEN WRITING A TAPE MARK USING EXCP,         **           00731
**             YOU HAVE TO ADJUST THE "BYTES MOVED"         **           00732
**             FIELD IN OUTCCW+6(2) TO A SMALL VALUE,       **           00733
**             SUCH AS X'0001'.  SO IN THAT CASE, WE        **           00734
**             SAVE THE "BYTES MOVED" FIELD TO LABEL        **           00735
**             SAVBYTES, AND REPLACE IT WITH X'0001'        **           00736
**             DURING THE WRITE OF THE TAPE MARK.           **           00737
**                                                          **           00738
** LEVEL 053 - OPTION OF IDRCOFF TO TURN OFF 3490E OR 3590  **           00739
**             OR IDRC INDICATORS IN THE TAPE LABELS.       **           00739
**             ALSO, ON INPUT ERROR, CLOSE ALL THE FILES    **           00740
**             BEFORE ISSUING ABEND 069.                    **           00741
**                                                          **           00742
** LEVEL 054 - HEX PRINT FIRST 132 BYTES OF FIRST N         **           00743
**             RECORDS OF EACH FILE.  IF KEYWORD HEXPRT     **           00744
**             IS CODED, A DEFAULT OF 4 BLOCKS FROM EACH    **           00745
**             TAPE FILE WILL BE DUMPED (THE WAY TAPESCAN   **           00746
**             DOES IT).  YOU CAN OVERRIDE THIS VALUE BY    **           00747
**             CODING PRINTRCDS=nnn IN SYSIN, STARTING IN   **           00748
**             COLUMN 1.  RECORDS ARE DUMPED INTO THE       **           00749
**             SYSPRINT DATASET.                            **           00750
**                                                          **           00751
** LEVEL 055 - MAKE DEFAULT NUMBER OF RECORDS TO HEX PRINT, **           00752
**             A GLOBAL ASSEMBLER VARIABLE, &HEXDFLA.       **           00753
**             DISTRIBUTION VALUE IS SET TO 4, AS ABOVE.    **           00754
**                                                          **           00755
** LEVEL 056 - TAKE THE TRANSLATE TABLES FOR HEX PRINT OUT  **           00756
**             OF THE MAIN CSECT.                           **           00757
**                                                          **           00758
** LEVEL 057 - USE THE PARMCHEK SEPARATED PARMSCAN PROGRAM  **           00759
**             INSTEAD OF THE PARMCHK SUBROUTINE FOR        **           00760
**             SCANNING PARM AND SYSIN CARDS.  THIS ALSO    **           00761
**             ALLOWS THE USE OF THE OPTIONAL DDNAME OF     **           00762
**             //PARMREPT TO LOOK AT THE ACTION OF THE      **           00763
**             PARM SCAN IN DETAIL.                         **           00764
**                                                          **           00765
**             PARMCHEK HAS TO BE ASSEMBLED TOGETHER WITH   **           00765
**             COPYMODS.  BE SURE TO CODE PARM=BATCH IN     **           00765
**             THE EXECUTION OF THE ASSEMBLER.  THE VERSION **           00765
**             OF THE PARMCHEK PROGRAM HAS TO BE MATCHED    **           00765
**             WITH THE VERSION OF THE COPYMODS PROGRAM.    **           00765
**                                                          **           00765
**             AS A RESULT OF THIS, THE PARMS ARE ONLY TO   **           00766
**             BE CHANGED IN THE PARMCHEK PROGRAM, AND      **           00767
**             //SYSIN IS ONLY OPENED BY THE PARMCHEK       **           00768
**             PROGRAM AND NOT BY COPYMODS.                 **           00769
**                                                          **           00770
**             QUANTITIES YIELDED BY THE PARMCHEK PROGRAM   **           00771
**             ARE PASSED BACK TO COPYMODS IN R2, TO THE    **           00772
**             USER AREA THAT COMES AFTER THE STRTVALU      **           00773
**             LABEL.  IN BOTH PROGRAMS, COPYMODS AND       **           00774
**             PARMCHEK, THE CODE FROM THE STRTVALU TO THE  **           00775
**             ENDVALUE LABELS HAS TO BE IDENTICAL AND      **           00776
**             MATCHING, IN ALL ITS LABELS AND QUANTITIES.  **           00777
**                                                          **           00778
** LEVEL 058 - UPON ERROR WITH ONE OF THE OUTPUT TAPES,     **           00759
**             REPORT NUMBER OF FILES CORRECTLY COPIED,     **           00778
**             NUMBER OF BLOCKS COPIED FROM LAST FILE,      **           00778
**             AND TOTAL BYTE COUNT COPIED TO THAT OUTPUT   **           00778
**             TAPE.  THIS IS A REMEDY FOR SHORT OUTPUT     **           00778
**             TAPES--TO FIGURE OUT HOW SHORT....           **           00778
**                                                          **           00778
** LEVEL 059 - DOCUMENTATION CHANGES TO MAKE ALL THE        **           00759
**             FEATURE DESCRIPTIONS AS CONSISTENT AS        **           00778
**             POSSIBLE.                                    **           00778
**                                                          **           00778
**             FIX OUTPUT ERROR MESSAGES TO REFLECT PROPER  **           00778
**             UNIT ADDRESS AND VOLSER OF THE OUTPUT UNIT   **           00778
**             IN ERROR.                                    **           00778
**                                                          **           00778
**************************************************************           00779
**************************************************************           00780
         MACRO                                                           04562
&NAME    HEX   &TO,&LEN,&FROM                                            04563
&NAME    DS    0H                                                        04564
         ST    R4,SAV4HEX                                                04565
         STM   15,1,HEXSAVE                                              04566
         LA    1,&FROM                                                   04567
         LA    0,&LEN                                                    04568
         LA    15,&TO                                                    04569
         BAL   4,HEX                                                     04570
         L     R4,SAV4HEX                                                04571
         LM    15,1,HEXSAVE                                              04572
         MEND                                                            04573
         EJECT                                                           00781
         YREGS                                                           00782
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                00783
         GBLA  &HEXDFLA                                                  00784
* ------------------------------------------------------------------ *   00785
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   00786
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   00787
* ------------------------------------------------------------------ *   00788
&HEXDFLA SETA  4                                                         00789
&HEXDFLC SETC  '&HEXDFLA'                                                00790
COPYMODS CSECT                                                           00791
         USING *,R15                                          SBG 03/00  00792
         B     EYECATCH                                       SBG 03/00  00793
         DC    C'HEX DUMP '                                              00794
HEXDFLCC DC    C'&HEXDFLC'                                               00795
         DC    C' RECORDS '                                              00796
HEXDFLL  EQU   L'HEXDFLCC                                                00797
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 00798
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  00799
         DC    C'COPYMODS Level 059 '                         SBG 03/00  00800
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  00801
         DC    C'SYSIN IN PARMCHEK PGM'                                  00802
SAVEAREA DC    18F'0'                                                    00803
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  00804
         SAVE  (14,12)                                                   00805
         LR    R5,R1          SAVE PARM POINTER                          00806
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   00807
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          00808
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         00809
         LR    R13,R1               NEW SAVE AREA ADDRESS                00810
         DROP  R15                                                       00811
* -----                       SET UP SIX BASE REGISTERS                  00812
         USING COPYMODS,R12,R11,R10,R9,R8,R6                             00813
         LR    R12,R15                                                   00814
         LA    R11,4095(,R12)                                            00815
         LA    R11,1(,R11)                                               00816
         LA    R10,4095(,R11)                                            00817
         LA    R10,1(,R10)                                               00818
         LA    R9,4095(,R10)                                             00819
         LA    R9,1(,R9)                                                 00820
         LA    R8,4095(,R9)                                              00821
         LA    R8,1(,R8)                                                 00822
         LA    R6,4095(,R8)                                              00823
         LA    R6,1(,R6)                                                 00824
         LR    R1,R5          RESTORE PARM POINTER                       00825
         L     R0,=V(TRTCSECT)                                           00826
         ST    R0,SAVTRTCS                                               00827
* ----------------------------------------------------------------- *    00828
*        BAL   R7,PARMCHK       FLAG ALL PARMS CODED,         SBG 04/00  00829
*                          AND CHECK FOR SYSIN ADDITIONALLY.  SBG 09/00  00830
* ----------------------------------------------------------------- *    00831
         L     R0,=V(PARMCHEK)                                           00832
         ST    R0,ENTRYPT                                                00833
         L     R15,ENTRYPT        GET ENTRY POINT OF CALLED PROGRAM      00834
         LA    R1,PARMFLGS             POINT TO PARM FLAGS               00835
         LA    R2,STRTVALU             LOAD USER AREA ADDRESS            00836
         BALR  R14,R15                 DO CALL                           00837
         ST    R1,PARMADDR             GET ADDRESS OF RETURNED PARMS     00838
         ST    R2,VALUSAVE             ADDRESS OF RETURNED USER AREA     00839
         MVC   PARMFLGS(PARMFLLN),0(R1)   MOVE RESULT BACK TO PARMS      00840
         MVC   STRTVALU(ENDVALUE),0(R2)   MOVE GENERATED VALUES BACK     00841
* ----------------------------------------------------------------- *    00842
* ----------------------------------------------------------------- *    00843
*              SUBMITTED PARMS SHOULD BE FINALIZED BY NOW           *    00844
*       ----   NOW MAKE PARM ADJUSTMENTS TO BE CONSISTENT   ----    *    00845
* ----------------------------------------------------------------- *    00846
         BAL   R7,CLEARSAV      CLEAR SAVE AREAS IF LBLFIX IS ON         00847
         TM    PARMFLG1,X'20'   ARE WE SKIPPING LTM'S?        SBG 04/00  00848
         BZ    COPYLTMS         NO. WE'RE COPYING THEM.       SBG 04/00  00849
*                               YES. WE'RE SKIPPING THEM, SO  SBG 04/00  00850
         MVC   LTMRPTI,SKIPPED  MOVE INDICATOR TO REPORT      SBG 03/00  00851
         B     SKIPLTMS         AND DO OTHER INITIALIZATION   SBG 03/00  00852
COPYLTMS MVC   LTMRPTI,COPIED   MOVE INDICATOR TO REPORT      SBG 03/00  00853
SKIPLTMS DS    0H                                             SBG 06/00  00854
* ----- * ----- * ------                                                 00855
         TM    PARMFLG3,X'C0'   IS NOEXNULL OR LBLFIX ON?                00856
         BZ    NONOEXNL         NO. BYPASS ADJUSTMENT                    00857
         OI    PARMFLG2,X'80'   LABADDIN HAS TO BE ON                    00858
NONOEXNL DS    0H                                                        00859
* ----- * ----- * ------                                                 00860
* ----- * ----- * ------ *------                                         00861
         TM    PARMFLG4,X'01'   IS CUMSEP ON?                            00862
         BZ    NOCUMSEP         NO. BYPASS ADJUSTMENT                    00863
         OI    PARMFLG3,X'08'   CUMSEP IMPLIES CUMTOT IS ON              00864
NOCUMSEP DS    0H                                                        00865
* ----- * ----- * ------ *------                                         00866
* ----- * -----                                                          00867
         TM    PARMFLG3,X'08'   IS CUM TOTALS ON?                        00868
         BZ    NOCUMTOT         NO. BYPASS ADJUSTMENT                    00869
         OI    PARMFLG3,X'04'   CUMTOT IMPLIES BYTES HAS TO BE ON        00870
NOCUMTOT DS    0H                                                        00871
* ----- * -----                                                          00872
*  -------------- CODE TO MAKE SURE LABADDIN DOES NOT OCCUR              00873
*  -------------- TOGETHER WITH LABLDUMP OPTION. ---------------- *      00874
         TM    PARMFLG2,X'80'          ARE WE CREATING LABELS?           00875
         BZ    CANLBDMP                NO. WE CAN DUMP LABELS.           00876
         NI    PARMFLG2,FF-X'10'       YES. TURN OFF LABLDUMP            00877
         NI    PARMFLG2,FF-X'08'       YES. TURN OFF READ ONLY TOO       00878
*                                      BECAUSE WE'RE COPYING TO SL.      00879
         OI    WRLBLFLG,X'01'      INITIALIZE TO READ LABELS             00880
CANLBDMP DS    0H                                                        00881
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - BELOW *    00882
         TM    PARMFLG4,X'80'   IS LBDQUICK ON?                          00883
         BZ    NOLBDQUI         NO. BYPASS THESE ADJUSTMENTS             00884
         OI    PARMFLG2,X'08'   READ-ONLY HAS TO BE ON                   00885
         OI    PARMFLG2,X'10'   LABLDUMP HAS TO BE ON                    00886
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                00887
NOLBDQUI DS    0H                                                        00888
*** --- ***** ------------------- LBDQUICK PARM ADJUSTMENTS - ABOVE *    00889
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - BELOW *     00890
         TM    PARMFLG4,X'02'      IS STRIP ON?                          00891
         BZ    NOSTRADJ            NO. NO OTHER PARM ADJUSTMENTS         00892
         NI    PARMFLG2,FF-X'80'   LABADDIN HAS TO BE OFF                00893
         NI    PARMFLG2,FF-X'40'   OUTVOL   HAS TO BE OFF                00894
         NI    PARMFLG4,FF-X'80'   LBDQUICK HAS TO BE OFF                00895
         NI    PARMFLG2,FF-X'01'   CHGVOL OFF                            00896
         NI    PARMFLG3,FF-X'01'   INITVOL OFF                           00897
NOSTRADJ DS    0H                  END of the STRIP adjustments          00898
*** ----> ***** ------------------- STRIP PARM ADJUSTMENTS - ABOVE *     00899
* ----------------------------------------------------------------- *    00900
* --           PARMS HAVE NOW BEEN ADJUSTED                      -- *    00901
* --    ----   NOW REPORT OPTIONS IF WANTED   ----               -- *    00902
* ----------------------------------------------------------------- *    00903
* --                                                             -- *    00904
         TM    PARMFLG4,X'20'      ARE WE REPORTING OPTIONS?             00905
         BZ    NOOPTRPT            NO - BYPASS CALLING SUBPROGRAM        00906
         STM   R14,R12,SAV14T12  SAVE THESE REGISTERS                    00907
         LA    R1,PARMFLGS       POINT TO QUANTITY TO BE PASSED          00908
         L     R15,=V(COPYMOPT)  LOAD V-CON FOR SUBPROGRAM               00909
         LTR   R15,R15           WAS SUBPROGRAM PRESENT?                 00910
         BZ    NOOPTRP1          NO. DON'T CALL IT                       00911
         BALR  R14,R15           CALL SUBPROGRAM                         00912
NOOPTRP1 LM    R14,R12,SAV14T12  RESTORE THESE REGISTERS                 00913
NOOPTRPT DS    0H                                                        00914
*  -------------------------------------------------------------- *      00915
         STM   R14,R3,SAV14T03   GET READY TO SAVE INPUT VOL  SBG 06/00  00916
         RDJFCB IN                                                       00917
         MVC   INVOLJ(6),INJFCB+118    SAVE INPUT VOLUME FROM JCL        00918
         MVC   SUCCESSR+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  00919
         MVC   READOMSG+60(6),INJFCB+118   COPY TO READ MESSG SBG 06/00  00920
         LM    R14,R3,SAV14T03   RESTORE REGISTERS                TEST   00921
         XC    FULLWORK,FULLWORK  CLEAR WORK AREA             SBG 03/00  00922
         MVC   FILECNT,=F'1'  INITIALIZE FOR FILE NUMBER                 00923
         MVI   DATFLAG,X'10' INITIALIZE FLAG-NO DATA READ YET SBG 03/00  00924
         SPACE 3                                                         00925
OPENSYSP DS    0H                                                        00926
*                                                                        00927
*  DETERMINE WHICH OUTPUT DD'S ARE PRESENT                               00928
*                                                                        00929
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  00930
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  00931
         BO    OPENS      YES--SKIP ALL THE TIOT FOR OUT DD'S SBG 06/00  00932
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  00933
         L     R2,16          R2=CVT                                     00934
         L     R2,0(,R2)      R2=TCB WORDS                               00935
         L     R2,4(,R2)      R2=MY TCB                                  00936
         L     R2,12(,R2)     R2=TIOT                                    00937
         LA    R2,24(,R2)     R2=FIRST DD ENTRY                          00938
TIOTLOOP CLC   0(4,R2),=XL4'00' END OF TIOT?                             00939
         BE    OVOLOV         YES, CHECK FOR OUTPUT VOL OVERRIDES        00940
         CLC   4(8,R2),OUT1+40  OUTPUT FILE NUMBER 1?                    00941
         BNE   TIOT1          NO                                         00942
         OI    FLAG1,OP1      SHOW IT                                    00943
         STM   R14,R3,SAV14T03                                    TEST   00944
         RDJFCB OUT1                                                     00945
         MVC   VOLUME1(6),OUTJFCB+118    SAVE VOLUME SERIAL              00946
         MVC   VOLDD,DDOUT1                                              00947
         LM    R14,R3,SAV14T03                                    TEST   00948
         B     TIOTNEXT       CONTINUE                                   00949
TIOT1    CLC   4(8,R2),OUT2+40  OUTPUT FILE NUMBER 2?                    00950
         BNE   TIOT2          NO                                         00951
         OI    FLAG1,OP2      SHOW IT                                    00952
         STM   R14,R3,SAV14T03                                    TEST   00953
         RDJFCB OUT2                                                     00954
         MVC   VOLUME2(6),OUTJFCB+118    SAVE VOLUME SERIAL              00955
         MVC   VOLDD,DDOUT2                                              00956
         LM    R14,R3,SAV14T03                                    TEST   00957
         B     TIOTNEXT       CONTINUE                                   00958
TIOT2    CLC   4(8,R2),OUT3+40  OUTPUT FILE NUMBER 3?                    00959
         BNE   TIOT3          NO                                         00960
         OI    FLAG1,OP3      SHOW IT                                    00961
         STM   R14,R3,SAV14T03                                    TEST   00962
         RDJFCB OUT3                                                     00963
         MVC   VOLUME3(6),OUTJFCB+118    SAVE VOLUME SERIAL              00964
         MVC   VOLDD,DDOUT3                                              00965
         LM    R14,R3,SAV14T03                                    TEST   00966
         B     TIOTNEXT       CONTINUE                                   00967
TIOT3    CLC   4(8,R2),OUT4+40  OUTPUT FILE NUMBER 4?                    00968
         BNE   TIOT4          NO                                         00969
         OI    FLAG1,OP4      SHOW IT                                    00970
         STM   R14,R3,SAV14T03                                    TEST   00971
         RDJFCB OUT4                                                     00972
         MVC   VOLUME4(6),OUTJFCB+118    SAVE VOLUME SERIAL              00973
         MVC   VOLDD,DDOUT4                                              00974
         LM    R14,R3,SAV14T03                                    TEST   00975
         B     TIOTNEXT       CONTINUE                                   00976
TIOT4    CLC   4(8,R2),OUT5+40  OUTPUT FILE NUMBER 5?                    00977
         BNE   TIOT5          NO                                         00978
         OI    FLAG1,OP5      SHOW IT                                    00979
         STM   R14,R3,SAV14T03                                    TEST   00980
         RDJFCB OUT5                                                     00981
         MVC   VOLUME5(6),OUTJFCB+118    SAVE VOLUME SERIAL              00982
         MVC   VOLDD,DDOUT5                                              00983
         LM    R14,R3,SAV14T03                                    TEST   00984
         B     TIOTNEXT       CONTINUE                                   00985
TIOT5    CLC   4(8,R2),OUT6+40  OUTPUT FILE NUMBER 6?                    00986
         BNE   TIOT6          NO                                         00987
         OI    FLAG1,OP6      SHOW IT                                    00988
         STM   R14,R3,SAV14T03                                    TEST   00989
         RDJFCB OUT6                                                     00990
         MVC   VOLUME6(6),OUTJFCB+118    SAVE VOLUME SERIAL              00991
         MVC   VOLDD,DDOUT6                                              00992
         LM    R14,R3,SAV14T03                                    TEST   00993
         B     TIOTNEXT       CONTINUE                                   00994
TIOT6    CLC   4(8,R2),OUT7+40  OUTPUT FILE NUMBER 7?                    00995
         BNE   TIOT7          NO                                         00996
         OI    FLAG1,OP7      SHOW IT                                    00997
         STM   R14,R3,SAV14T03                                    TEST   00998
         RDJFCB OUT7                                                     00999
         MVC   VOLUME7(6),OUTJFCB+118    SAVE VOLUME SERIAL              01000
         MVC   VOLDD,DDOUT7                                              01001
         LM    R14,R3,SAV14T03                                    TEST   01002
         B     TIOTNEXT       CONTINUE                                   01003
TIOT7    CLC   4(8,R2),OUT8+40  OUTPUT FILE NUMBER 8?                    01004
         BNE   TIOT8          NO                                         01005
         OI    FLAG1,OP8      SHOW IT                                    01006
         STM   R14,R3,SAV14T03                                    TEST   01007
         RDJFCB OUT8                                                     01008
         MVC   VOLUME8(6),OUTJFCB+118    SAVE VOLUME SERIAL              01009
         MVC   VOLDD,DDOUT8                                              01010
         LM    R14,R3,SAV14T03                                    TEST   01011
         B     TIOTNEXT       CONTINUE                                   01012
TIOT8    CLC   4(8,R2),OUT9+40  OUTPUT FILE NUMBER 9?                    01013
         BNE   TIOT9          NO                                         01014
         OI    FLAG2,OP9      SHOW IT                                    01015
         STM   R14,R3,SAV14T03                                    TEST   01016
         RDJFCB OUT9                                                     01017
         MVC   VOLUME9(6),OUTJFCB+118    SAVE VOLUME SERIAL              01018
         MVC   VOLDD,DDOUT9                                              01019
         LM    R14,R3,SAV14T03                                    TEST   01020
         B     TIOTNEXT       CONTINUE                                   01021
TIOT9    CLC   4(8,R2),OUT10+40  OUTPUT FILE NUMBER 10?                  01022
         BNE   TIOT10         NO                                         01023
         OI    FLAG2,OP10     SHOW IT                                    01024
         STM   R14,R3,SAV14T03                                    TEST   01025
         RDJFCB OUT10                                                    01026
         MVC   VOLUME10(6),OUTJFCB+118    SAVE VOLUME SERIAL             01027
         MVC   VOLDD,DDOUT10                                             01028
         LM    R14,R3,SAV14T03                                    TEST   01029
         B     TIOTNEXT       CONTINUE                                   01030
TIOT10   CLC   4(8,R2),OUT11+40  OUTPUT FILE NUMBER 11?                  01031
         BNE   TIOT11         NO                                         01032
         OI    FLAG2,OP11     SHOW IT                                    01033
         STM   R14,R3,SAV14T03                                    TEST   01034
         RDJFCB OUT11                                                    01035
         MVC   VOLUME11(6),OUTJFCB+118    SAVE VOLUME SERIAL             01036
         MVC   VOLDD,DDOUT11                                             01037
         LM    R14,R3,SAV14T03                                    TEST   01038
         B     TIOTNEXT       CONTINUE                                   01039
TIOT11   CLC   4(8,R2),OUT12+40  OUTPUT FILE NUMBER 12?                  01040
         BNE   TIOT12         NO                                         01041
         OI    FLAG2,OP12     SHOW IT                                    01042
         STM   R14,R3,SAV14T03                                    TEST   01043
         RDJFCB OUT12                                                    01044
         MVC   VOLUME12(6),OUTJFCB+118    SAVE VOLUME SERIAL             01045
         MVC   VOLDD,DDOUT12                                             01046
         LM    R14,R3,SAV14T03                                    TEST   01047
         B     TIOTNEXT       CONTINUE                                   01048
TIOT12   CLC   4(8,R2),OUT13+40  OUTPUT FILE NUMBER 13?                  01049
         BNE   TIOT13         NO                                         01050
         OI    FLAG2,OP13     SHOW IT                                    01051
         STM   R14,R3,SAV14T03                                    TEST   01052
         RDJFCB OUT13                                                    01053
         MVC   VOLUME13(6),OUTJFCB+118    SAVE VOLUME SERIAL             01054
         MVC   VOLDD,DDOUT13                                             01055
         LM    R14,R3,SAV14T03                                    TEST   01056
         B     TIOTNEXT       CONTINUE                                   01057
TIOT13   CLC   4(8,R2),OUT14+40  OUTPUT FILE NUMBER 14?                  01058
         BNE   TIOT14         NO                                         01059
         OI    FLAG2,OP14     SHOW IT                                    01060
         STM   R14,R3,SAV14T03                                    TEST   01061
         RDJFCB OUT14                                                    01062
         MVC   VOLUME14(6),OUTJFCB+118    SAVE VOLUME SERIAL             01063
         MVC   VOLDD,DDOUT14                                             01064
         LM    R14,R3,SAV14T03                                    TEST   01065
         B     TIOTNEXT       CONTINUE                                   01066
TIOT14   CLC   4(8,R2),OUT15+40  OUTPUT FILE NUMBER 15?                  01067
         BNE   TIOT15         NO                                         01068
         OI    FLAG2,OP15     SHOW IT                                    01069
         STM   R14,R3,SAV14T03                                    TEST   01070
         RDJFCB OUT15                                                    01071
         MVC   VOLUME15(6),OUTJFCB+118    SAVE VOLUME SERIAL             01072
         MVC   VOLDD,DDOUT15                                             01073
         LM    R14,R3,SAV14T03                                    TEST   01074
         B     TIOTNEXT       CONTINUE                                   01075
TIOT15   CLC   4(8,R2),OUT16+40  OUTPUT FILE NUMBER 16?                  01076
         BNE   TIOTNEXT       NO                                         01077
         OI    FLAG2,OP16     SHOW IT                                    01078
         STM   R14,R3,SAV14T03                                    TEST   01079
         RDJFCB OUT16                                                    01080
         MVC   VOLUME16(6),OUTJFCB+118    SAVE VOLUME SERIAL             01081
         MVC   VOLDD,DDOUT16                                             01082
         LM    R14,R3,SAV14T03                                    TEST   01083
         B     TIOTNEXT       CONTINUE                                   01084
TIOTNEXT SR    R3,R3                                                     01085
         IC    R3,0(,R2)      R3=LENGTH OF DD ENTRY                      01086
         AR    R2,R3          R2=NEXT DD ENTRY                           01087
         B     TIOTLOOP       GO CHECK IT                                01088
*  ---------------------------------------------------------  SBG 09/00  01089
*  --------  DO WE PROPAGATE OUTPUT VOLSER TO ALL OUTPUTS ? --------*    01090
OVOLOV   TM    PARMFLG2,X'20'    IS SYSIN PRESENT                        01091
         BZ    NOVOLOV           NO. CAN'T OVERRIDE OUTPUT VOLSERS.      01092
         TM    OVERFLAG,X'01'    IS THERE AN OVERRIDE PENDING?           01093
         BZ    NOVOLOV           NOPE.  JUST GET OUT.                    01094
         MVC   VOLALL,VOLSTG     PROPAGATE VOLSER TO ALL OUTPUTS         01095
NOVOLOV  DS    0H                                                        01096
*  ---------------------------------------------------------  SBG 09/00  01097
         SPACE 3                                                         01098
*  -----------------------------------------------------------------  *  01099
*                                                                        01100
*  OPEN ALL FILES   -  EXCEPT SYSIN, WHICH IS FINISHED ALREADY           01101
*                                                                        01102
*  -----------------------------------------------------------------  *  01103
OPENS    DS    0H               START OPENING FILES                      01104
         OPEN  (SYSPRINT,OUTPUT)                                         01105
         TM    PARMFLG3,X'01'    INIT TAPES ONLY?                        01106
         BO    OPENMOVE                                                  01107
*----- TESTS FOR EXTRA DD CARDS REQUIRED - EXTRA FILES TO BE OPENED.     01108
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  01109
         BZ    OPNLABIN         NO. CHECK IF WE NEED LABADDIN.    09/00  01110
         OPEN  (LABLDUMP,OUTPUT)                              SBG 09/00  01111
         TM    LABLDUMP+48,X'10'     IS THE DD OPEN  ?                   01112
         BZ    NOLBLDD        NO. FLAG ERROR AND CHECK LABADDIN.         01113
         OI    OPENDFLG,X'01'     FLAG THAT LABLDUMP IS OPEN.            01114
         B     OPNLABIN           CHECK FOR LABADDIN DDNAME              01115
NOLBLDD  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01116
         MVC   LINE(133),LDMPMSG   DISPLAY MISSING DD MESSAGE            01117
         PUT   SYSPRINT,LINE                                             01118
         OI    ENDITFLG,X'01'   FLAG THAT LABLDUMP NOT OPEN.             01119
OPNLABIN TM    PARMFLG2,X'80'   DO WE NEED LABADDIN?                     01120
         BZ    CHKENDIT         NO. SEE IF ANYTHING ELSE IS BAD          01121
         OPEN  (LABADDIN,INPUT)                                          01122
         TM    LABADDIN+48,X'10'     IS THE DD OPEN  ?                   01123
         BZ    NOLABIN        NO. FLAG THE ERROR & MESSAGE               01124
         OI    OPENDFLG,X'04'     FLAG THAT LABADDIN IS OPEN.            01125
         B     CHKENDIT        GO CHECK IF WE HAVE TO END.               01126
NOLABIN  MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01127
         MVC   LINE(133),NLABMSG   DISPLAY MISSING DD MESSAGE            01128
         PUT   SYSPRINT,LINE                                             01129
         OI    ENDITFLG,X'04'   FLAG THAT LABADDIN NOT OPEN.             01130
CHKENDIT TM    ENDITFLG,X'07'   CHECK IF WE HAVE TO END                  01131
         BZ    OPENIN           NOTHING WRONG.  GO ON.                   01132
ENDEM    DS    0H            WE GOTTA GET OUT. WHICH DDS STILL OPEN?     01133
         CLOSE (SYSPRINT)                                                01134
         TM    OPENDFLG,X'01'   IS LABLDUMP DD OPEN?                     01135
         BZ    TRYCLABN         NO.  TRY IF SYSIN IS OPEN.               01136
         NI    OPENDFLG,FF-X'01'   MARK FILE AS CLOSED                   01137
         CLOSE (LABLDUMP)                                                01138
TRYCLABN TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01139
         BZ    REALYEND         NO.  GET OUT.                            01140
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01141
         CLOSE (LABADDIN)                                                01142
REALYEND B     THEEND1                                                   01143
         EJECT                                                           01144
OPENIN   OPEN  (IN,INPUT)                                                01145
         TM    IN+48,X'10'                                               01146
         BO    INISOPEN                                                  01147
** --- IF IN DDNAME IS NOT OPEN ----- BELOW ------------------ *         01148
         TM    PARMFLG3,X'01'       INITTING TAPES?                      01149
         BO    INISOPEN             OK. SHOULDN'T COME HERE, BUT         01150
*                                   BYPASS MESSAGE.                      01151
         MVC   LINE(133),LINE-1     CLEAR MESSAGE LINE                   01152
         MVC   LINE(133),INNOTOPN   MOVE IN MESSAGE TEXT                 01153
         PUT   SYSPRINT,LINE        PUT OUT MESSAGE                      01154
         B     ENDEM                GO TO CLOSE FILES, AND OUT.          01155
** --- IF IN DDNAME IS NOT OPEN ----- ABOVE ------------------ *         01156
INISOPEN DS    0H                                                        01157
         TM    PARMFLG3,X'02'     LIMIT FILES TO BE COPIED?              01158
         BO    OPENINCK           DO PRELIMINARY OPEN IF SO              01159
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01160
         TM    PARMFLG2,X'80'     ARE WE DOING LABADDIN ?                01161
         BZ    NOINITOP           NO. DON'T DO PRELIMINARY OPEN          01162
* ----                                                                   01163
OPENINCK DS    0H                                                        01164
         LA    R2,IN              POINT TO IN DCB                        01165
         ST    R2,REWDCBPT        TELL IOB TO REWIND IN                  01166
         MVC   REWECB,=F'0'       INITIALIZE REW'S ECB                   01167
         EXCP  REWIOB                                                    01168
         WAIT  ECB=REWECB                                                01169
         MVC   INECB,=F'0'        INITIALIZE IN'S ECB                    01170
         EXCP  INIOB                                                     01171
         WAIT  ECB=INECB                                                 01172
         CLC   INAREA(4),=C'VOL1' IS THE TAPE IBM SL ?                   01173
         BNE   RESETIN            NO. JUST REWIND TO REPOSITION.         01174
         OI    SLFLAG,X'01'       INDICATE INPUT TAPE IS SL              01175
         TM    PARMFLG2,X'80'     ARE WE HERE FOR LABADDIN?              01176
         BO    OPENINXX           VOL1 IS NOT LEGITIMATE FOR LABADDIN    01177
****** ------ BELOW ------ SL FILE NUMBERS.                              01178
         TM    PARMFLG3,X'02'     ARE WE LIMITING INPUT FILES?           01179
         BZ    OPENINXX           NO, GET OUT OF ROUTINE                 01180
         CLC   LINFILE,=F'0'      IS THERE A POSITIVE LIMIT NUMBER?      01181
         BE    RESETIN            NO. JUST RESET TAPE W/O ERROR MSG      01182
**** ----- >>>>>   Force file limiting by SL   - - -  below              01183
         TM    PARMFLG4,X'08'        PARM to force SL reckoning of lim   01184
         BZ    NOSLFLIM              Not set, bypass code for it         01185
         MVC   LTGFILE(4),LSLFILE    Use coded FILELIMIT number          01186
         MVC   LIMFMSG+11(10),LIMCHAR                                    01187
         MVC   LIMFMSG+68(2),=C'SL'  And mark msg as an SL reckoning     01188
         MVC   LINE(133),LINE-1      Clear message line                  01189
         MVC   LINE(133),FORCESLM    Say you'll force limiting by SL     01190
         PUT   SYSPRINT,LINE         Write msg                           01191
         TM    PARMFLG4,X'0C'        Are both NLLIM and SLLIM coded?     01192
         BNO   SLLIMRES              No. only SLLIM. So go on.           01193
         MVC   LINE(133),LINE-1      Clear message line                  01194
         MVC   LINE(133),TWOFORCE    Say you'll force limiting by SL     01195
         PUT   SYSPRINT,LINE         Write msg                           01196
SLLIMRES DS    0H                                                        01197
         B     RESETIN                                                   01198
NOSLFLIM DS    0H                                                        01199
**** ----- >>>>>   Force file limiting by SL   - - -  above              01200
**** ----- >>>>>   Force file limiting by NL   - - -  below              01201
         TM    PARMFLG4,X'04'        PARM to force NL reckoning of lim   01202
         BZ    NONLFLIM              Not set, bypass code for it         01203
         MVC   LTGFILE(4),LINFILE    Use coded FILELIMIT number          01204
         MVC   LIMFMSG+11(10),LIMCHAR                                    01205
         MVC   LIMFMSG+68(2),=C'NL'  And mark msg as an NL reckoning     01206
         MVC   LINE(133),LINE-1      Clear message line                  01207
         MVC   LINE(133),FORCENLM    Say you'll force limiting by NL     01208
         PUT   SYSPRINT,LINE         Write msg                           01209
         B     RESETIN                                                   01210
NONLFLIM DS    0H                                                        01211
**** ----- >>>>>   Force file limiting by NL   - - -  above              01212
* -- > Strip test                                                        01213
         TM    PARMFLG4,X'02'        Are we stripping labels?            01214
         BZ    OPENINXW              No. Bypass this section.            01215
         TM    PARMFLG3,X'02'        Are we limiting files also?         01216
         BO    OPENINXW              Yes. Use SL number.                 01217
         MVC   LTGFILE(4),LINFILE    STRIP no LIMFILE, move NL number.   01218
         MVC   LIMFMSG+11(10),LIMCHAR                                    01219
         MVC   LIMFMSG+68(2),=C'SL'  But indicate that input is SL       01220
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01221
OPENINXW DS    0H                                                        01222
* -- > Strip test                                                        01223
         MVC   LTGFILE(4),LSLFILE    MOVE IN 3 TIMES SET LIMIT FOR SL    01224
         MVC   LIMFMSG+11(10),LIMCHAR                                    01225
         MVC   LIMFMSG+68(2),=C'SL'  MOVE SL INTO FILE NUMBER MESSAGE    01226
         B     RESETIN            REWIND INPUT TAPE WITHOUT ERROR MSG    01227
OPENINXX DS    0H                                                        01228
****** ------ ABOVE ------ SL FILE NUMBERS.                              01229
* --                         WE HAVE VOL1 LABEL. NASTY MSG AND QUIT.     01230
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01231
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01232
         PUT   SYSPRINT,LINE      WRITE MSG                              01233
RESETLAD TM    OPENDFLG,X'04'   IS LABADDIN DD OPEN?                     01234
         BZ    RESETEND         NO.  GET OUT.                            01235
         NI    OPENDFLG,FF-X'04'   MARK FILE AS CLOSED                   01236
         CLOSE (LABADDIN)                                                01237
RESETEND CLOSE (IN)                                                      01238
         B     THEEND1                                                   01239
* --                      NO VOL1 LABEL. ASSUME NL TAPE SO CONTINUE.     01240
RESETIN  DS    0H                                                        01241
         MVC   REWECB,=F'0'                                              01242
         EXCP  REWIOB                                                    01243
         WAIT  ECB=REWECB                                                01244
NOINITOP DS    0H                                                        01245
* -------------- LABADDIN CHECK FOR SL TAPE ------------------------ *   01246
         TM    PARMFLG2,X'10'     TEST IF LABLDUMP IS NEEDED.            01247
         BZ    NOLBLDMP           ISN'T. NO POINT TO RDJFCB.             01248
READJLDM RDJFCB LABLDUMP                MOVE JFCB TO AREA                01249
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01250
         BNZ   NOLBLDD                  IF NOT, FLAG                     01251
         ST    R7,SAVE7REG              SAVE R7                          01252
         LA    R7,LBLJFCB               POINT TO JFCB AREA               01253
         USING JFCBLK,R7                MAP THE AREA                     01254
         MVC   LDMPOUTM+38(44),JFCBDSNM                                  01255
         MVC   LDMPOUTM+89(8),JFCBELNM                                   01256
         MVC   LDMPOUTM+105(6),JFCBVOLS                                  01257
         MVC   LINE(133),LINE-1                                          01258
         MVC   LINE(133),LDMPOUTM                                        01259
         PUT   SYSPRINT,LINE                                             01260
         DROP  R7                                                        01261
         L     R7,SAVE7REG              RESTORE R7                       01262
NOLBLDMP DS    0H               SKIP LABLDUMP RDJFCB.         SBG 09/00  01263
         TM    PARMFLG2,X'80'     TEST IF LABLDUMP IS NEEDED.            01264
         BZ    NOLBLSIN           ISN'T. NO POINT TO RDJFCB.             01265
READJLIN RDJFCB LABADDIN                MOVE JFCB TO AREA                01266
         LTR   R15,R15                  DDNAME SHOULD BE THERE           01267
         BNZ   NOLABIN                  IF NOT, FLAG                     01268
         ST    R7,SAVE7REG              SAVE R7                          01269
         LA    R7,LBNJFCB               POINT TO JFCB AREA               01270
         USING JFCBLK,R7                MAP THE AREA                     01271
         MVC   LDMPINMS+38(44),JFCBDSNM                                  01272
         MVC   LDMPINMS+89(8),JFCBELNM                                   01273
         MVC   LDMPINMS+105(6),JFCBVOLS                                  01274
         MVC   LINE(133),LINE-1                                          01275
         MVC   LINE(133),LDMPINMS                                        01276
         PUT   SYSPRINT,LINE                                             01277
         DROP  R7                                                        01278
         L     R7,SAVE7REG              RESTORE R7                       01279
NOLBLSIN DS    0H               SKIP LABADDIN RDJFCB.         SBG 09/00  01280
* --- READ ONLY CODE ------------------ BELOW --------------- SBG 06/00  01281
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  01282
         BZ    OPENMOVE   NO. CONTINUE WITH ALL THE OPENS.    SBG 06/00  01283
*                         OTHERWISE PUT INITIAL READONLY MSG  SBG 06/00  01284
         MVC   LINE(133),READOMSG    MOVE READ-ONLY MESSAGE   SBG 06/00  01285
         PUT   SYSPRINT,LINE  WRITE INITIAL MESSAGE SHOWING READONLY     01286
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01287
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01288
         BZ    NOLIMFMR         NO, SKIP MESSAGE                         01289
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01290
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01291
         PUT   SYSPRINT,LINE                                             01292
NOLIMFMR DS    0H                                                        01293
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01294
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01295
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01296
         BZ    N1LIMHEX         NO, SKIP MESSAGE                         01297
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01298
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01299
         BO    N1LIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01300
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01301
         B     N1LIMPRT             AND PRINT IT                         01302
N1LIMDEF DS    0H                                                        01303
         MVC   LIMPMSG+11(10),PRTCHAR                                    01304
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01305
N1LIMPRT PUT   SYSPRINT,LINE        AND PRINT IT                         01306
N1LIMHEX DS    0H                                                        01307
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01308
         B     READIN                                         SBG 06/00  01309
* --- READ ONLY CODE ------------------ ABOVE --------------- SBG 06/00  01310
OPENMOVE MVC   FLAG3(2),FLAG1 SAVE INDICATION OF WHICH FILES ARE HERE    01311
*                             THIS ALSO MOVES FLAG2 TO FLAG4  SBG 03/00  01312
*  ---------------------------------------------------------  SBG 03/00  01313
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                  01314
         TM    PARMFLG5,X'20'   IS HEXPRT LIMITATION IN EFFECT?          01315
         BZ    NOLIMHEX         NO, SKIP MESSAGE                         01316
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01317
         TM    PRTHEXOV,X'01'   HAS DEFAULT BEEN OVERRIDDEN?             01318
         BO    NOLIMDEF         YES. MOVE APPROPRIATE MESSAGE.           01319
         MVC   LINE(133),LIMHMSG    MOVE MESSAGE TEXT IN                 01320
         B     NOLIMPRT             AND PRINT IT                         01321
NOLIMDEF DS    0H                                                        01322
         MVC   LIMPMSG+11(10),PRTCHAR                                    01323
         MVC   LINE(133),LIMPMSG    MOVE MESSAGE TEXT IN                 01324
NOLIMPRT PUT   SYSPRINT,LINE                                             01325
NOLIMHEX DS    0H                                                        01326
* -- HEXPRT LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                  01327
         TM    PARMFLG3,X'01'   INIT TAPES ONLY?                         01328
         BZ    OPENOINT                                                  01329
         MVC   INITCOPD,INITCREA    MOVE APPROPRIATE MESSAGE IN          01330
         B     NOCORPRT                                                  01331
OPENOINT DS    0H                                                        01332
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01333
         TM    PARMFLG3,X'20'   IS BLOCK COUNT CORRECTION IN EFFECT      01334
         BZ    NOCORPRT         IF NOT, DON'T PRINT MESSAGE              01335
         ST    R7,SAVE7REG                                               01336
         BAL   R7,PRTBLCNT      LET THE USER KNOW OPTION IS ACTIVE       01337
         L     R7,SAVE7REG                                               01338
NOCORPRT DS    0H                                                        01339
* ---- BLOCK COUNT CORRECTION ON TAPE COPY - PRINT MESSAGE -------- *    01340
* -- FILE LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                    01341
         TM    PARMFLG3,X'02'   IS FILE LIMITATION IN EFFECT?            01342
         BZ    NOLIMFMS         NO, SKIP MESSAGE                         01343
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01344
         MVC   LINE(133),LIMFMSG    MOVE MESSAGE TEXT IN                 01345
         PUT   SYSPRINT,LINE                                             01346
NOLIMFMS DS    0H                                                        01347
* -- FILE LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                    01348
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- BELOW --- *                   01349
         TM    PARMFLG4,X'10'   IS LABEL LIMITATION IN EFFECT?           01350
         BZ    NOLIMLMR         NO, SKIP MESSAGE                         01351
         MVC   LINE,LINE-1      CLEAR MSG LINE                           01352
         MVC   LIMLMSG+11(10),LABCHAR                                    01353
         MVC   LINE(133),LIMLMSG    MOVE MESSAGE TEXT IN                 01354
         PUT   SYSPRINT,LINE                                             01355
NOLIMLMR DS    0H                                                        01356
* -- LABEL LIMIT MESSAGE IF APPLICABLE --- ABOVE --- *                   01357
**** ---- >>> Message that labels are being stripped <<< ---- below ***  01358
         TM    PARMFLG4,X'02'     Are labels being stripped?             01359
         BZ    NOSTRMSG                                                  01360
         MVC   LINE(133),LINE-1   Clear message line                     01361
         MVC   LINE(133),STRPMSG  Show we're stripping labels            01362
         PUT   SYSPRINT,LINE                                             01363
NOSTRMSG DS    0H                                                        01364
**** ---- >>> Message that labels are being stripped <<< ---- above ***  01365
         TM    FLAG1,OP1      OUTPUT 1 PRESENT?                          01366
         BZ    OPEN1          NO                                         01367
         OPEN  (OUT1,OUTPUT)                                             01368
OPEN1    TM    FLAG1,OP2      OUTPUT 2 PRESENT?                          01369
         BZ    OPEN2          NO                                         01370
         OPEN  (OUT2,OUTPUT)                                             01371
OPEN2    TM    FLAG1,OP3      OUTPUT 3 PRESENT?                          01372
         BZ    OPEN3          NO                                         01373
         OPEN  (OUT3,OUTPUT)                                             01374
OPEN3    TM    FLAG1,OP4      OUTPUT 4 PRESENT?                          01375
         BZ    OPEN4          NO                                         01376
         OPEN  (OUT4,OUTPUT)                                             01377
OPEN4    TM    FLAG1,OP5      OUTPUT 5 PRESENT?                          01378
         BZ    OPEN5          NO                                         01379
         OPEN  (OUT5,OUTPUT)                                             01380
OPEN5    TM    FLAG1,OP6      OUTPUT 6 PRESENT?                          01381
         BZ    OPEN6          NO                                         01382
         OPEN  (OUT6,OUTPUT)                                             01383
OPEN6    TM    FLAG1,OP7      OUTPUT 7 PRESENT?                          01384
         BZ    OPEN7          NO                                         01385
         OPEN  (OUT7,OUTPUT)                                             01386
OPEN7    TM    FLAG1,OP8      OUTPUT 8 PRESENT?                          01387
         BZ    OPEN8          NO                                         01388
         OPEN  (OUT8,OUTPUT)                                             01389
OPEN8    TM    FLAG2,OP9      OUTPUT 9 PRESENT?                          01390
         BZ    OPEN9          NO                                         01391
         OPEN  (OUT9,OUTPUT)                                             01392
OPEN9    TM    FLAG2,OP10     OUTPUT 10 PRESENT?                         01393
         BZ    OPEN10         NO                                         01394
         OPEN  (OUT10,OUTPUT)                                            01395
OPEN10   TM    FLAG2,OP11     OUTPUT 11 PRESENT?                         01396
         BZ    OPEN11         NO                                         01397
         OPEN  (OUT11,OUTPUT)                                            01398
OPEN11   TM    FLAG2,OP12     OUTPUT 12 PRESENT?                         01399
         BZ    OPEN12         NO                                         01400
         OPEN  (OUT12,OUTPUT)                                            01401
OPEN12   TM    FLAG2,OP13     OUTPUT 13 PRESENT?                         01402
         BZ    OPEN13         NO                                         01403
         OPEN  (OUT13,OUTPUT)                                            01404
OPEN13   TM    FLAG2,OP14     OUTPUT 14 PRESENT?                         01405
         BZ    OPEN14         NO                                         01406
         OPEN  (OUT14,OUTPUT)                                            01407
OPEN14   TM    FLAG2,OP15     OUTPUT 15 PRESENT?                         01408
         BZ    OPEN15         NO                                         01409
         OPEN  (OUT15,OUTPUT)                                            01410
OPEN15   TM    FLAG2,OP16     OUTPUT 16 PRESENT?                         01411
         BZ    READIN         NO                                         01412
         OPEN  (OUT16,OUTPUT)                                            01413
         EJECT                                                           01414
* --------------------------------------------------------- *            01415
*                                                           *            01416
*  READ INPUT                                               *            01417
*                                                           *            01418
* --------------------------------------------------------- *            01419
*                                                           *            01420
*    THIS IS WHERE RECORDS ARE READ IN FROM.  IF EXTERNAL   *            01421
*    LABELS ARE BEING MERGED WITH A NL TAPE TO MAKE AN SL   *            01422
*    TAPE, THEN A SET OF LABELS IS READ IN AT INEXTLAB      *            01423
*    AND THE TAPE DATA IS READ IN FROM THE INPUT TAPE, AT   *            01424
*    THIS POINT.  THE DIFFERENCE WHEN WRITING THE OUTPUTS,  *            01425
*    IS CREATED BY POINTING THE OUTIOB EITHER AT THE INAREA *            01426
*    WHEN WRITING TAPE BLOCKS, OR AT THE EXTLABIN AREA,     *            01427
*    WHEN WRITING THE OUTPUT TAPES FROM THE EXTERNAL LABELS.*            01428
*                                                           *            01429
* --------------------------------------------------------- *            01430
READIN   DS    0H                                                        01431
         TM    PARMFLG3,X'01'     INITTING TAPES ONLY?                   01432
         BO    TLITWRIT                                                  01433
         NI    L80FLAG,FF-X'01'   TURN OFF 80-BYTE INDICATOR  SBG 03/00  01434
         NI    LBLFLAG,FF-X'04'   TURN OFF VOL1 FLAG                     01435
         MVI   INECB,X'00'    INITIALIZE ECB                             01436
* ------------------------------------------------------------------ *   01437
*   DO WE GET RECORDS FROM THE "IN" DDNAME, IN OTHER WORDS,          *   01438
*   FROM THE INPUT TAPE?  OR DO WE GET RECORDS FROM THE EXTERNAL     *   01439
*   LABEL FILE?  THIS IS DETERMINED BY THE SETTING OF WRLBLFLG,X'01' *   01440
* ------------------------------------------------------------------ *   01441
         TM    PARMFLG2,X'80' IS LABEL WRITE OPTION ON?                  01442
         BZ    NONLSL0        NO. IGNORE THIS CODE                       01443
         TM    WRLBLFLG,X'01' CHECK FLAG TO WRITE FROM LABADDIN          01444
         BO    INEXTLAB       GO GET LABELS FROM EXTERNAL FILE           01445
NONLSL0  DS    0H                                                        01446
* ----------------------------------------------------------- SBG 09/00  01447
INFROMIN DS    0H             INPUT IS FROM THE INPUT TAPE               01448
***** --------------- LIMITING FILES ------------------ ***** BELOW *    01449
         TM    PARMFLG3,X'02'     LIMITING FILES?                        01450
         BZ    INOLIMIT           NO - BYPASS THIS CODE                  01451
         TM    EOFINFLG,X'01'     AT LOGICAL END OF INPUT?               01452
         BZ    INOLIMIT           NOT YET - JUST GO ON                   01453
         B     READIN1            SIMULATE SECOND TAPE MARK BY FORCE     01454
*                                 AND DON'T DO MORE READS OF INPUT TAPE  01455
INOLIMIT DS    0H                                                        01456
***** --------------- LIMITING FILES ------------------ ***** ABOVE *    01457
*** ----- ***** --------------------------- LBDQUICK STUFF -- BELOW *    01458
         TM    PARMFLG4,X'80'     IS LBDQUICK IN EFFECT                  01459
         BZ    NOLBDADJ           NO. BYPASS INITIAL READS AND FEELS     01460
         OI    LBDQFLG,X'01'      TURN ON LBDQ FLAG TO SHORTEN CHECK     01461
         ST    R7,SAVE7RG3        SAVE R7 FOR SAFETY                     01462
         BAL   R7,LBDQREAD        PERFORM LBDQUICK PRELIMINARY READ      01463
         L     R7,SAVE7RG3        RESTORE R7                             01464
         NI    LBDQFLG,FF-X'01'   TURN OFF LBDQ FLAG                     01465
NOLBDADJ DS    0H                                                        01466
*** ----- ***** --------------------------- LBDQUICK STUFF -- ABOVE *    01467
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*
*
*       Since there is a possibility that the WRITE will
*       not work for one of the output ddnames, we have
*       to save the total bytes successfully moved to the
*       currently open output tapes.  Also file count for
*       this tape, and block count for this file.
*
         MVC   PRVBY,TOTBY        Total bytes before this READ
         MVC   FILECNTP,FILECNT   Total file count before this READ
         MVC   BLOKCNTP,BLOKCNT   Total block count before this READ
*
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*
         EXCP  INIOB          READ                                       01468
         WAIT  ECB=INECB      WAIT FOR READ                              01469
         TM    INCSW+4,X'01'  WAS TM READ?                               01470
         BO    READIN1        YES                                        01471
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                01472
         BNE   INERR          NO -- ERROR                                01473
         MVI   OUTCCW,X'01'   SET OUTPUT CCW TO WRITE                    01474
*        LH    R2,INCCW+6     R2=READ LENGTH                  SBG 03/00  01475
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY    SBG 03/00  01476
         MVC   HALFWORK(2),INCCW+6   READ LENGTH              SBG 03/00  01477
         L     R2,FULLWORK    LOAD R2 WITH FULL LOW ORDER     SBG 03/00  01478
*        LH    R3,INCSW+6     R3=RESIDUAL BYTE COUNT          SBG 03/00  01479
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT      SBG 03/00  01480
         L     R3,FULLWORK    LOAD R3 WITH FULL LOW ORDER     SBG 03/00  01481
         SR    R2,R3          R2=ACTUAL LENGTH READ                      01482
         STH   R2,BYTESCOP    SAVE QUANTITY OF BYTES COPIED              01483
*----  Accumulate Total Bytes for Short Tapes  --  Below ------*
         ST    R7,TOTB7REG        Save BAL Register
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED
         LA    R3,TOTBY           POINT REGISTER TO LABEL COUNTER
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL
         L     R7,TOTB7REG        Restore BAL Register
*----  Accumulate Total Bytes for Short Tapes  --  Above ------*
*-*-*-------->>    HEX PRINT   -   BELOW    <<---------*-*-*             01484
         TM    PARMFLG5,X'20'    IS HEX PRINTING ON?                     01485
         BZ    NPRTHEX           NO. SKIP THIS CODE.                     01486
         ST    R7,R7HXPRT        SAVE R7.                                01487
         BAL   R7,HEXPRINT       PRINT CURRENT RECORD IN HEX.            01488
         L     R1,BCTLIMIT       LOAD REGISTER FOR DECREMENT             01489
         BCTR  R1,0              LOWER BY ONE                            01490
         ST    R1,BCTLIMIT       PUT IT BACK FOR NEXT PASS               01491
         L     R7,R7HXPRT        RESTORE R7.                             01492
NPRTHEX  DS    0H                                                        01493
*-*-*-------->>    HEX PRINT   -   ABOVE    <<---------*-*-*             01494
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG               01495
**** ----  BYTE COUNTS ---- BELOW                                        01496
         TM    PARMFLG3,X'04' ARE WE COUNTING BYTES?                     01497
         BZ    INNOBYTE       NO, SKIP INCREMENT                         01498
         LA    R3,DBIN        POINT REGISTER TO COUNTER                  01499
         BAL   R7,ADDCOUNT    INCREMENT WITH BYTE COUNT                  01500
INNOBYTE DS    0H                                                        01501
**** ----  BYTE COUNTS ---- ABOVE                                        01502
         NI    DATFLAG,FF-X'10'  SHOW REAL DATA HAS BEEN READ SBG 03/00  01503
*  --- BELOW ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01504
         C     R2,=F'80'      DID WE READ 80-BYTE BLOCK LAST? SBG 03/00  01505
         BNE   READGO1        NO. SKIP THIS PROCESSING.       SBG 03/00  01506
         OI    L80FLAG,X'01'  INDICATE 80-BYTE RECORD READ    SBG 03/00  01507
         BAL   R7,LABELCHK    CHECK FOR ALL KINDS OF SL       SBG 04/00  01508
*                             FORMATS, AND SET FLAGS          SBG 04/00  01509
*                             ACCORDINGLY.  OPTIONALLY        SBG 04/00  01510
*                             PRINT LABEL INFO FOUND.         SBG 04/00  01511
******** ------------ COUNT BYTES IN LABELS ONLY ---- BELOW              01512
         TM    PARMFLG3,X'04'     GATHERING LABEL COUNTS?                01513
         BZ    LBLNOCNT                                                  01514
         TM    ISLBLFLG,X'01'     WAS LAST INPUT RECORD A LABEL?         01515
         BZ    LBLNOCNT                                                  01516
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01517
         LA    R3,LABIN           POINT REGISTER TO LABEL COUNTER        01518
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01519
LBLNOCNT DS    0H                                                        01520
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** BELOW              01521
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01522
         BZ    STRNOSKP           NO. SKIP THE STRIPPING FLAGGING        01523
****-->>                below  -  Test of LRECL=80 and not a label
         ST    R2,SAVER2A         Save contents of R2
         L     R2,BYTESMVD        Get size of this record.
         C     R2,=F'80'          80 bytes exactly in record?
         BNE   YSTRPFLG           No. Not an exception.
         TM    ISLBLFLG,X'03'     Was last input record a label?         02508
         BZ    NSTRPFLG           No. Don't turn on STRIPFLG.
YSTRPFLG DS    0H
         OI    STRIPFLG,X'01'     FLAG THAT WE'RE STRIPPING              02517
NSTRPFLG DS    0H                 Jump here to not turn on STRIPFLG.
         L     R2,SAVER2A
****-->>                above  -  Test of LRECL=80 and not a label
         B     READGO1            AND CONTINUE READ PROCESSING           01525
SAVER2A  DC    F'0'
STRNOSKP DS    0H                                                        01526
**---->    TEST IF LABELS ARE TO BE STRIPPED  <----** ABOVE              01527
******** ------------ COUNT BYTES IN LABELS ONLY ---- ABOVE              01528
*  --- ABOVE ---  CODE TO DETECT SL BEFORE 2 TAPE MARKS.      SBG 03/00  01529
*                                                             SBG 04/00  01530
*  --- BELOW ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01531
         TM    PARMFLG2,X'80'     ARE WE ADDING LABELS?                  01532
         BZ    READGO1            NO. WE CAN GO ON.                      01533
         TM    ISLBLFLG,X'01'     DID WE JUST READ A LABEL?              01534
         BZ    READGO1            NO DON'T CHECK FOR SL                  01535
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     01536
         MVC   LINE(133),NOLABSL  DISPLAY NO SL ON SL MSG                01537
         PUT   SYSPRINT,LINE      WRITE MSG                              01538
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    01539
         CLOSE (LABADDIN)                                                01540
NOSLSOUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            01541
*  --- ABOVE ---  DON'T ADD LABELS TO SL TAPE ---------.      SBG 03/00  01542
         EJECT                                                           01543
*  ----------------------------------------------------------------  *   01544
*  --- BELOW ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01545
INEXTLAB DS    0H           WRITE A BLOCK OF LABELS TO OUTPUT TAPE       01546
*                           INPUT IS FROM THE EXTERNAL LABEL FILE        01547
*  ----------------------------------------------------------------  *   01548
         TM    PARMFLG2,X'80'   IS LABEL WRITE OPTION SET?               01549
         BZ    GETBLOKZ         NO. NEVER COME HERE AGAIN.               01550
**** --------- END OF DATA ON TAPE INPUT ----   BELOW   ---- ****        01551
         TM    INEODFLG,X'02'   DID WE RUN OUT OF TAPE DATA?             01552
         BZ    STILTAPE                                                  01553
         TM    WRLBLFLG,X'02'   ARE WE WRITING AN EXTRA TAPEMARK?        01554
         BZ    STILTAPE                                                  01555
         B     WRTTAPMK                                                  01556
STILTAPE DS    0H                                                        01557
**** --------- END OF DATA ON TAPE INPUT ----   ABOVE   ---- ****        01558
         TM    WRLBLFLG,X'08'       COMING HERE FROM EOF ON LABADDIN?    01559
         BZ    DOTHEGET             NO. DO THE FILE GETS.                01560
         TM    PARMFLG3,X'80'       IS LBLFIX IN EFFECT?                 01561
         BO    LBLINEND             GO TO EOFRTN AND FIX MISSING DATA    01562
         B     CLOSMALL             EOD. DON'T TRY TO GET MORE.          01563
DOTHEGET DS    0H                                                        01564
*** ---                                                                  01565
         TM    PARMFLG4,X'10'   ARE WE LIMITING LABEL SETS?              01566
         BZ    DOGETALW         NO. DO THE GET ALWAYS.                   01567
         TM    EOFLBFLG,X'01'   HAVE WE REACHED THE LIMIT?               01568
         BZ    DOGETALW         NO. KEEP GETTING LABELS.                 01569
         B     LBLINEND       LIMIT REACHED. ACT AS IF NO MORE LABELS.   01570
DOGETALW DS    0H                                                        01571
*** ---                                                                  01572
         GET   LABADDIN,EXTLBLIN                                         01573
         CLI   EXTLBLIN,C'*'    IS IT A COMMENT CARD?                    01574
         BE    INEXTLAB         IF IT IS, IGNORE IT.                     01575
         CLC   =C'----ENDOFLABELHEADER ',EXTLBLIN                        01576
         BE    ENDHEADR       YES, WRITE TAPE MARK & REINIT WRITE        01577
         CLC   =C'----ENDOFLABELTRAILER',EXTLBLIN                        01578
         BE    ENDTRAIL             YES. INDICATE DATA FOLLOWS           01579
* ---------------------------------  EOV2EOF  BELOW  ------------- *     01580
         CLC   =C'----ENDOFLABELTRAILEREOV',EXTLBLIN                     01581
*        BE    LBLINEND       EOV2. ONLY ONE TAPEMARK AND OUT            01582
         BNE   NTRALEOV            NOT FOLLOWING AN EOV TRAILER          01583
         OI    LBLLFLAG,X'80'      SAY YOU'VE SEEN THIS CONTROL CARD     01584
         NI    LBLLFLAG,FF-X'40'   SHOW NOT AT ENDOFHEADER               01585
         TM    PARMFLG2,X'04'      EOV TO EOF PROCESSING IN EFFECT?      01586
         BZ    TRAILEOV            NO. ONE TAPE MARK AND OUT             01587
TRAILEOF B     ENDTRAIL            YES. TREAT LIKE A TRAILER             01588
TRAILEOV B     LBLINEND            NO EOV2EOF. SAME AS BEFORE.           01589
NTRALEOV DS    0H                                                        01590
* ---------------------------------  EOV2EOF  ABOVE  ------------- *     01591
         CLC   EXTLBLIN(4),=C'VOL1' IS THE CARD A VOL1?                  01592
         BNE   NLABVOL1             NO. CHECK FOR OTHER CARDS            01593
         OI    LBLLFLAG,X'04'       SHOW VOL1 SEEN IN EXTERNAL LABELS    01594
         B     GOTVOL01             PROCESS THE VOL1                     01595
NLABVOL1 DS    0H                                                        01596
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - BELOW                01597
         CLC   EXTLBLIN(4),=C'HDR1'                                      01598
         BNE   NLABHDR1                                                  01599
         OI    LBLLFLAG,X'01'       SHOW HDR1 HAS BEEN SEEN              01600
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01601
         MVC   HDR1SAV(80),EXTLBLIN  SAVE HDR1 CARD                      01602
         B     ENDIBMSL                                                  01603
NLABHDR1 DS    0H                                                        01604
         CLC   EXTLBLIN(4),=C'HDR2'                                      01605
         BNE   NLABHDR2                                                  01606
         OI    LBLLFLAG,X'02'       SHOW HDR2 HAS BEEN SEEN              01607
         NI    LBLLFLAG,FF-X'30'    SHOW NOT TRAILERS                    01608
         MVC   HDR2SAV(80),EXTLBLIN  SAVE HDR2 CARD                      01609
         B     ENDIBMSL                                                  01610
NLABHDR2 DS    0H                                                        01611
***** ----- *****                                                        01612
         CLC   EXTLBLIN(4),=C'EOF1'                                      01613
         BNE   NLABEOF1                                                  01614
         OI    LBLLFLAG,X'10'       SHOW EOF1 HAS BEEN SEEN              01615
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01616
         B     ENDIBMSL                                                  01617
NLABEOF1 DS    0H                                                        01618
         CLC   EXTLBLIN(4),=C'EOF2'                                      01619
         BNE   NLABEOF2                                                  01620
         OI    LBLLFLAG,X'20'       SHOW EOF2 HAS BEEN SEEN              01621
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01622
         B     ENDIBMSL                                                  01623
NLABEOF2 DS    0H                                                        01624
***** ----- *****                                                        01625
         CLC   EXTLBLIN(4),=C'EOV1'                                      01626
         BNE   NLABEOV1                                                  01627
         OI    LBLLFLAG,X'10'       AS IF EOF1 HAS BEEN SEEN             01628
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01629
         B     ENDIBMSL                                                  01630
NLABEOV1 DS    0H                                                        01631
         CLC   EXTLBLIN(4),=C'EOV2'                                      01632
         BNE   NLABEOV2                                                  01633
         OI    LBLLFLAG,X'20'       AS IF EOF2 HAS BEEN SEEN             01634
         NI    LBLLFLAG,FF-X'07'    SHOW NOT HEADERS OR VOL1             01635
         B     ENDIBMSL                                                  01636
NLABEOV2 DS    0H                                                        01637
ENDIBMSL DS    0H                                                        01638
***** ----- *****  CHECK EXTERNAL LABELS FOR TYPE - ABOVE                01639
ISITHDR  CLC   EXTLBLIN(3),=C'HDR'  IS THE CARD A HDR?                   01640
         BE    WRTLABEL             ASSUME THAT HDRS FOLLOW              01641
* -------------- EOF2EOV BELOW ----------------- *                       01642
ISITEOV  DS    0H                                                        01643
         CLC   EXTLBLIN(3),=C'EOV'                                       01644
         BNE   NOEOF2V                                                   01645
         TM    PARMFLG2,X'04'       IS EOV2EOF IN EFFECT?                01646
         BZ    NOEOF2V                                                   01647
         MVC   EXTLBLIN(3),=C'EOF'                                       01648
NOEOF2V  DS    0H                                                        01649
* -------------- EOF2EOV ABOVE ----------------- *                       01650
* ----------                                                             01651
         TM    PARMFLG1,X'01'       ARE WE CORRECTING BLOCK COUNTS?      01652
         BZ    BLNOCORR             NO. SKIP THIS.                       01653
ISITEOF1 CLC   EXTLBLIN(4),=C'EOF1'     DO ON EOF1                       01654
         BE    CORBLKCT                                                  01655
         CLC   EXTLBLIN(4),=C'EOV1'     DO ON EOV1                       01656
         BE    CORBLKCT                                                  01657
BLNOCORR B     EOFOREOV                                                  01658
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** BELOW          01659
ADDEOF2  TM    WRLBLFLG,X'08'       COMING FROM LBLINEND?                01660
         BZ    NOMKEOF2             WE STILL CAN GET A REAL ONE.         01661
         TM    PARMFLG3,X'80'       FIXING LABELS?                       01662
         BZ    NOMKEOF2             NO. DON'T MAKE EOF2 IF MISSING       01663
MAKEEOF2 DS    0H                                                        01664
         MVC   EXTLBLIN(80),HDR2SAV                                      01665
         MVC   EXTLBLIN(3),=C'EOF'                                       01666
NOMKEOF2 DS    0H                                                        01667
****** ----- LABEL FIX CODE FOR EOF2 OR EOV2 ----- ****** ABOVE          01668
* ----------                                                             01669
EOFOREOV CLC   EXTLBLIN(2),=C'EO'   EOF OR EOV ?                         01670
         BE    WRTLABEL             SET UP TO WRITE ANOTHER SET          01671
**** ---- ****                                                           01672
         CLC   EXTLBLIN(3),=C'UHL'  USER HEADER LABEL ?                  01673
         BNE   NOTLUHL                                                   01674
         OI    LBLLFLAG,X'08'       MARK THAT UHL SEEN IN EXT LABELS     01675
         B     WRTLABEL             WRITE USER HEADER LABELS TO OUTPUTS  01676
NOTLUHL  DS    0H                                                        01677
**** ---- ****                                                           01678
         CLC   EXTLBLIN(3),=C'UTL'  USER TRAILER LABEL ?                 01679
         BE    WRTLABEL             LEGIT. WRITE TO OUTPUTS.             01680
         B     INEXTLAB     UNKNOWN, GET ANOTHER LABADDIN RECORD         01681
ENDHEADR DS    0H                                                        01682
         OI    LBLLFLAG,X'40'   FLAG THAT YOU'VE SEEN ENDHDR CNTL CARD   01683
         OI    WRLBLFLG,X'04'   ALWAYS SAY WHEN YOU'RE COMING FROM HERE  01684
         NI    LBLLFLAG,FF-X'80'    SHOW NOT AT ENDOFTRAILER             01685
*** -----                                                                01686
         TM    INEODFLG,X'02'       END OF DATA ON INPUT TAPE            01687
         BZ    NOEODFL1                                                  01688
         OI    WRLBLFLG,X'02'       FLAG TO WRITE AN EXTRA TAPE MARK     01689
         B     ENDTRAIL                                                  01690
NOEODFL1 DS    0H                                                        01691
*** -----                                                                01692
         NI    WRLBLFLG,FF-X'01'    DON'T COME HERE NEXT TIME            01693
WRTMNDAT B     FINLABEL             WTM AND SET UP TO WRITE DATA         01694
ENDTRAIL DS    0H                                                        01695
         L     R0,LABELCNT      INCREMENT COUNTER OF EOLTRAILERS         01696
         A     R0,=F'1'         ADD 1 TO COUNT                           01697
         ST    R0,LABELCNT      STORE INCREMENTED COUNT                  01698
*** ---                                                                  01699
         TM    PARMFLG4,X'10'       LIMITING LABELS?                     01700
         BZ    ENDNOLIM             NO. GET OUT OF ROUTINE.              01701
         CLC   LABELCNT,LINLABEL    NUM OF EOFTRAILERS EQUAL LIMIT?      01702
         BL    ENDNOLIM             NOT YET. GET OUT.                    01703
         OI    EOFLBFLG,X'01'       MARK THAT WE'VE REACHED LIMIT.       01704
ENDNOLIM DS    0H                                                        01705
*** ---                                                                  01706
         OI    WRLBLFLG,X'01'       COME HERE NEXT TIME                  01707
         MVI   LBLLFLAG,X'00'       CLEAR ALL FLAGS THAT LABELS SEEN     01708
         OI    LBLLFLAG,X'80'   FLAG THAT YOU'VE SEEN ENDTRLR CNTL CARD  01709
         BAL   R7,CLEARSAV          CLEAR LBLFIX SAVE AREAS              01710
         B     WRTTAPMK                                                  01711
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    01712
CORBLKCT DS    0H                                                        01713
         TM    PARMFLG2,X'80'    TEST IF EXTERNAL LABELS BEING ADDED     01714
         BZ    NOCORBLK          NO. BYPASS.                             01715
         TM    PARMFLG1,X'01'    TEST IF BLOCK COUNT CORRECTION WANTED   01716
         BZ    NOCORBLK          NO. BYPASS.                             01717
*** ---  FIXING LABELS  --- ***                                          01718
         TM    PARMFLG3,X'80'    LABEL FIXING TURNED ON?                 01719
         BZ    NOFIXL1           NO. DON'T FIX.                          01720
         TM    LBLLFLAG,X'10'    HAVE WE SEEN A REAL EOF1?               01721
         BO    NOFIXL1           YES. DON'T CREATE ONE.                  01722
CORFEOF1 MVC   EXTLBLIN(80),HDR1SAV   MOVE SAVED HDR1 AS EOF1            01723
         MVC   EXTLBLIN(3),=C'EOF'    MARK AS AN EOF1 LABEL              01724
NOFIXL1  DS    0H                                                        01725
*** ---  FIXING LABELS  --- ***                                          01726
         MVC   EXTLBLIN+54(6),BLKCNTSV+4    MOVE IN SAVED BLK COUNT      01727
         STM   R2,R3,SAVE2TO3                                            01728
         LA    R3,EXTLBLIN+76          POINT TO HI ORDER LABEL FIELD     01729
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    01730
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 01731
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        01732
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              01733
         LM    R2,R3,SAVE2TO3                                            01734
NOCORBLK B     EOFOREOV                                                  01735
* -- CORRECT BLOCK COUNT IN EOF1 AND EOV1 WHEN WRITING OUTSIDE LABELS    01736
GOTVOL01 DS    0H                                                        01737
         OI    LBLFLAG,X'04'         ACT AS IF WE SAW A VOL1 ON INPUT    01738
         MVC   VOLORIG(6),EXTLBLIN+4   MOVE IN ORIGINAL "VOLSER"         01739
* ----       REPORT OUTVOLALL= VOLUME  ---  BELOW                        01740
         TM    OVERFLAG,X'01'          OUTVOLALL= IS CODED?              01741
         BZ    NOOVLALL                NOPE. DON'T CHANGE REPORT         01742
         MVC   VOLNEW(6),VOLSTG        OVERLAY NEW VOLSER FOR ALL OUTS   01743
NOOVLALL DS    0H                                                        01744
* ----       REPORT OUTVOLALL= VOLUME  ---  ABOVE                        01745
         B     WRTLABEL                                                  01746
WRTLABEL OI    WRLBLFLG,X'01'                                            01747
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        01748
         TM    PARMFLG3,X'10' DO WE PRINT EXT LABELS TO BE WRITTEN       01749
         BZ    NOPRTEXT       FLAG IS NOT ON. DON'T REPORT THEM          01750
TRYPXXX0 DS    0H                                                        01751
         CLC   EXTLBLIN(4),=C'VOL1'                                      01752
         BNE   TRYPUSER                                                  01753
         MVI   LINE-1,C' '                                    SBG 09/00  01754
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 09/00  01755
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 09/00  01756
         MVC   VOL1SER(6),EXTLBLIN+4   REPORT VOLUME SERIAL   SBG 09/00  01757
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 09/00  01758
         MVC   VOL1OWNR(10),EXTLBLIN+41   OWNER INFORMATION   SBG 09/00  01759
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 09/00  01760
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 09/00  01761
         B     NOPRTEXT                                                  01762
TRYPUSER DS    0H                                                        01763
         CLC   EXTLBLIN(3),=C'UHL'     USER HEADER LABEL?                01764
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         01765
         CLC   EXTLBLIN(3),=C'UTL'     USER TRAILER LABEL?               01766
         BE    PUSERPR                 YES.  PRINT ENTIRE LABEL.         01767
         B     TRYPXXX1                                                  01768
PUSERPR  ST    R3,SAVE3REG                                               01769
         LA    R3,EXTLBLIN                                               01770
         BAL   R7,PRTUSER     PRINT LABEL INFO                           01771
         L     R3,SAVE3REG                                               01772
         B     NOPRTEXT                                                  01773
TRYPXXX1 CLC   EXTLBLIN(4),=C'HDR1'                                      01774
         BE    PXXX1PR                                                   01775
         CLC   EXTLBLIN(4),=C'EOF1'                                      01776
         BE    PXXX1PR                                                   01777
         CLC   EXTLBLIN(4),=C'EOV1'                                      01778
         BE    PXXX1PR                                                   01779
         B     TRYPXXX2                                                  01780
PXXX1PR  ST    R3,SAVE3REG                                               01781
         LA    R3,EXTLBLIN                                               01782
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           01783
         L     R3,SAVE3REG                                               01784
         B     NOPRTEXT                                                  01785
TRYPXXX2 CLC   EXTLBLIN(4),=C'HDR2'                                      01786
         BE    PXXX2PR                                                   01787
         CLC   EXTLBLIN(4),=C'EOF2'                                      01788
         BE    PXXX2PR                                                   01789
         CLC   EXTLBLIN(4),=C'EOV2'                                      01790
         BE    PXXX2PR                                                   01791
         B     NOPRTEXT                                                  01792
PXXX2PR  ST    R3,SAVE3REG                                               01793
         LA    R3,EXTLBLIN                                               01794
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           01795
         L     R3,SAVE3REG                                               01796
NOPRTEXT DS    0H             DON'T PRINT EXTERNAL LABEL ON REPORT       01797
* --------------- PRINT LABEL TO BE WRITTEN ------------------- *        01798
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            01799
         MVC   OUTCCW+6(2),=H'80'          LOAD LENGTH OF WRITE          01800
         MVI   OUTCCW,X'01'   SET UP OUTCCW FOR WRITE                    01801
         B     WRITE1         WRITE LABEL RECORD                         01802
FINLABEL MVC   OUTCCW+1(3),=AL3(INAREA)    SET UP DATA WRITE             01803
WRTTAPMK DS    0H                                                        01804
*** ----------------                                                     01805
         TM    INEODFLG,X'02'                                            01806
         BZ    NOEODNOW                                                  01807
         TM    WRLBLFLG,X'04'                                            01808
         BO    ONEFRHDR             ONLY ONE EXTRA TAPEMARK FROM ENDHDR  01809
         TM    WRLBLFLG,X'02'       DO WE WRITE AN EXTRA TAPEMARK?       01810
         BZ    NOEODNOW             WE'RE WRITING ANYWAY.                01811
         NI    WRLBLFLG,FF-X'02'    TURN OFF FLAG FOR SECOND PASS        01812
ONEFRHDR NI    WRLBLFLG,FF-X'04'    AFTER THIS, NOT COMING FROM ENDHDR   01813
NOEODNOW DS    0H                                                        01814
*** ----------------                                                     01815
         MVI   OUTCCW,X'1F'   TAPE MARK OPCODE                           01816
         B     WRITE1         WRITE TAPE MARK                            01817
* ------------------ SPECIAL ROUTINES ------------------------------- *  01818
GETBLOKZ DS    0H             SHOULD NEVER GET HERE IF NO EXT LAB ADD    01819
         NI    WRLBLFLG,FF-X'01'  SAFETY-NEVER RETURN HERE AGAIN         01820
         B     READIN             AND GO BACK WHERE YOU STARTED          01821
* ------------------ SPECIAL ROUTINES ------------------------------- *  01822
LBLINEND DS    0H             STOP COPYING AFTER YOU RUN OUT OF LABELS   01823
         OI    WRLBLFLG,X'08'    SHOW EOF ON LABADDIN                    01824
** BELOW *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  01825
         TM    PARMFLG3,X'80'    IS LBLFIX IN EFFECT?                    01826
         BZ    NOFIXLBL          NO. DON'T TRY IT.                       01827
         BAL   R7,FIXEXTLB       DO FIX EXTERNAL LABEL SET PROCESSING    01828
         TM    WRLBLFLG,X'10'    FINISHED FIXING LABELS                  01829
         BZ    NOFIXLBL          NO. KEEP CYCLING TILL DONE              01830
         B     CLOSMALL          FINISHED, GET OUT.                      01831
NOFIXLBL DS    0H                                                        01832
** ABOVE *** ------------------- *** FIX INCOMPLETE LABEL SET *** -- **  01833
         MVI   OUTCCW,X'1F'   ORDER SECOND TAPE MARK TO BE WRITTEN       01834
         B     READIN2        WRITE OUTPUTS AND FINISH                   01835
* ------------------------------------------------------------------- *  01836
*                                                                        01837
*      WE ASSUME THAT    ----ENDOFLABELTRAILER                           01838
*      WAS THE LAST RECORD IN THE LABEL FILE, AND                        01839
*      IT CAUSED ONE TAPE MARK TO HAVE BEEN WRITTEN                      01840
*      ALREADY.                                                          01841
*                                                                        01842
* ------------------ SPECIAL ROUTINES ------------------------------- *  01843
*  --- ABOVE ---  CODE TO READ IN EXTERNAL LABELS TO THE OUTPUT TAPES.   01844
         EJECT                                                           01845
READGO1  DS    0H                                                        01846
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * BELOW          01847
         TM    PARMFLG3,X'04'  COUNTING BYTES?                           01848
         BZ    READNCNT                                                  01849
         TM    ISLBLFLG,X'01'  LAST READ A LABEL?                        01850
         BO    READNCNT        YES, DON'T COUNT BYTES FOR IT HERE        01851
         L     R2,BYTESMVD        LOAD FULLWORD OF BYTES MOVED           01852
         LA    R3,DBINF           POINT REGISTER TO FILE BYTES ONLY      01853
         BAL   R7,ADDCOUNT        COUNT BYTES IN THIS LABEL              01854
READNCNT DS    0H                                                        01855
******* ---------  BYTE COUNTS FOR NON-LABELS --------- * ABOVE          01856
**---->            LABEL STRIPPING CODE          BELOW                   01857
         TM    PARMFLG4,X'02'     ARE WE STRIPPING LABELS?               01858
         BZ    RDNOSTRP           NO. CONTINUE REGULAR PROCESSING        01859
         TM    STRIPFLG,X'01'     CHECK IF LABEL WAS READ JUST NOW       01860
         BZ    RDNOSTRP           NO IT WASN'T                           01861
         B     READIN             LABEL WAS JUST READ-SKIP THE WRITES.   01862
RDNOSTRP DS    0H                                                        01863
**---->            LABEL STRIPPING CODE          ABOVE                   01864
         STH   R2,OUTCCW+6    STORE FOR WRITE                 SBG 03/00  01865
         STH   R2,OUTBYTL     STORE FOR TALLYING BYTE COUNT LATER        01866
         ST    R7,STOR7REG                                               01867
         L     R7,BLOKCNT                                                01868
         LA    R7,1(,R7)      ADD 1 TO COUNT OF DATA BLOCKS              01869
         ST    R7,BLOKCNT                                                01870
         L     R7,STOR7REG                                               01871
* ------------  WHEN COPYING AN INITTED TAPE ----- BELOW ------  *       01872
         TM    LBLFLAG,X'08'    WAS INITTED HDR1 SEEN?                   01873
         BZ    NOINITT1         DON'T CHANGE PROCESSING IF NOT           01874
         OI    FLAG2A,EOV       YES. WRITE AND GET OUT OF PROGRAM.       01875
NOINITT1 DS    0H                                                        01876
* ------------  WHEN COPYING AN INITTED TAPE ----- ABOVE ------  *       01877
         B     WRITE1         CONTINUE                                   01878
*                                                             SBG 04/00  01879
*  --- BELOW ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  01880
READIN1  DS    0H             COME HERE IF TM WAS READ        SBG 04/00  01881
* ------------------------- ADD LABEL TO NL CODE ----------- *           01882
         TM    PARMFLG2,X'80'   ADDING EXTERNAL LABELS ?                 01883
         BZ    NONLSL1          NO.  BYPASS.                             01884
         OI    WRLBLFLG,X'01'   NEXT READ, GO ADD MORE LABELS            01885
*** ---                                                                  01886
         TM    INEODFLG,X'02'   ARE WE PAST END OF DATA ON TAPE?         01887
         BO    WRITE1           GO DIRECTLY TO WRITE. DO NOT PASS GO.    01888
*                               DO NOT COLLECT 200 DOLLARS.              01889
*** ---                                                                  01890
NONLSL1  DS    0H                                                        01891
* ------------------------- ADD LABEL TO NL CODE ----------- *           01892
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  01893
         TM    PARMFLG2,X'10'   DUMPING LABELS TO EXTERNAL FILE?         01894
         BZ    NOCNTLWR         NO.  BYPASS THIS SECTION OF CODE.        01895
         TM    EOLGFLAG,X'01'   DO WE WRITE CONTROL RECD FOR EOH?        01896
         BO    WRCTLHDR         YES. PUT IT OUT.                         01897
         TM    EOLGFLAG,X'02'   DO WE WRITE CONTROL RECD FOR EOF?        01898
         BO    WRCTLEOF         YES. PUT IT OUT.                         01899
         TM    EOLGFLAG,X'04'   DO WE WRITE CONTROL RECD FOR EOV?        01900
         BO    WRCTLEOV         YES. PUT IT OUT.                         01901
         B     NOCNTLWR         NOT READY TO WRITE CNTL RECD. OUT.       01902
WRCTLHDR DS    0H                                                        01903
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  01904
         MVC   LLINE(80),LABELITH   MARK END OF LABEL         SBG 09/00  01905
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  01906
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          01907
WRCTLEOF DS    0H                                                        01908
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  01909
         MVC   LLINE(80),LABELITR   MARK END OF LABEL         SBG 09/00  01910
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  01911
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          01912
WRCTLEOV DS    0H                                                        01913
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  01914
         MVC   LLINE(80),LABELITV   MARK END OF LABEL         SBG 09/00  01915
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  01916
         B     CTWRDONE         FINISHED WRITING CONTROL RECORD          01917
CTWRDONE NI    EOLGFLAG,FF-X'07'     TURN OFF FLAGS AFTER WRITE          01918
NOCNTLWR DS    0H                                                        01919
* -----------------  LABEL DUMP CODE - WHEN TO ADD CONTROL RECORDS -- *  01920
         TM    DATFLAG,X'10'  NO DATA READ YET?               SBG 03/00  01921
         BZ    READINGO       DATA WAS READ-PROCESS NORMALLY  SBG 03/00  01922
         CLC   LTMRPTI,SKIPPED   WE SKIP LEADING TAPEMARKS?   SBG 03/00  01923
         BNE   RDNOSKIP                                       SBG 03/00  01924
         MVI   LINE-1,C' '                                    SBG 03/00  01925
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  01926
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM SKIPPED  SBG 03/00  01927
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  01928
         B     READIN         DO ANOTHER READ                 SBG 03/00  01929
RDNOSKIP DS    0H                                             SBG 03/00  01930
         MVI   LINE-1,C' '                                    SBG 03/00  01931
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  01932
         MVC   LINE(133),LTMRPT  INDICATE LEADING TM COPIED   SBG 03/00  01933
         PUT   SYSPRINT,LINE  WRITE MESSAGE                   SBG 03/00  01934
         B     MARKFILE                                       SBG 03/00  01935
READINGO DS    0H                                             SBG 04/00  01936
*------------------------------------> HEX PRINT LIMIT - BELOW           01937
         TM    PARMFLG5,X'20'          HEX PRINT ON?                     01938
         BZ    NOHXPRST                NO. DON'T ADJUST LIMIT            01939
         MVC   BCTLIMIT(4),PRTLIMIT    RESTORE BCTLIMIT AT EOF           01940
NOHXPRST DS    0H                                                        01941
*------------------------------------> HEX PRINT LIMIT - ABOVE           01942
         ST    R7,STOR7REG                                               01943
         L     R7,FILECNT                                                01944
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  01945
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         01946
         UNPK  FILEDONE+6(5),DWORD+5(3)  UNPACK FILE NUMBER              01947
         ST    R7,FILECNT                                                01948
         L     R7,BLOKCNT                                                01949
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             01950
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         01951
         UNPK  FILEDONE+21(7),DWORD+4(4)  UNPACK BLOCK COUNT             01952
         MVC   BLKCNTSV,BLKCNTSV-1        INITIALIZE TO ZEROS            01953
         UNPK  BLKCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    01954
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        01955
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        01956
         BZ    MARKNCNT           NO-SKIP ROUTINE                        01957
         MVC   FILEBYTE,BYTESPAT  MOVE IN EDIT PATTERN                   01958
         MVC   FILECONT,=C'CONTAINING'                                   01959
         L     R4,DBINH           LOAD REG WITH HI ORDER                 01960
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             01961
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           01962
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  01963
         L     R4,DBINL           LOAD REG WITH LOW ORDER                01964
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            01965
         AP    QWORD,DWORD        AND ADD IT IN                          01966
         ED    FILEBYTE,QWORD+6   DISPLAY COUNT IN LINE                  01967
** ----                                                                  01968
         LM    R4,R5,TOTBYTES                                            01969
         A     R5,DBINL            LOW ORDER COUNT                       01970
         BNO   MARKNOVR            B IF NO OVERFLOW                      01971
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  01972
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   01973
MARKNOVR DS    0H                                                        01974
         A     R4,DBINH            HIGH ORDER                            01975
         STM   R4,R5,TOTBYTES      AND STORE THE NEW TOTAL               01976
** ----                                                                  01977
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             01978
         BZ    MARKISNL            NO. DON'T ADD TOTALS                  01979
         LM    R4,R5,LABBYTES                                            01980
         A     R5,LABINL           LOW ORDER COUNT                       01981
         BNO   MARKNOVL            B IF NO OVERFLOW                      01982
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  01983
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   01984
MARKNOVL DS    0H                                                        01985
         A     R4,LABINH           HIGH ORDER                            01986
         STM   R4,R5,LABBYTES      AND STORE THE NEW TOTAL               01987
* - >                                                                    01988
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          01989
         BZ    NOSEPLBL                                                  01990
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   01991
         MVC   FILECUMT,=C'CUM LABEL:'                                   01992
         LM    R4,R5,LABBYTES    RELOAD CORRECT COUNTS                   01993
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           01994
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        01995
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   01996
         CVD   R5,DWORD          LOW ORDER WORD                          01997
         AP    QWORD,DWORD       AND ADD IT IN                           01998
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              01999
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02000
NOSEPLBL DS    0H                                                        02001
* - >                                                                    02002
         B     MARKNOLB                                                  02003
MARKISNL DS    0H                                                        02004
         TM    ISLBLFLG,X'01'      CAME FROM READING LABELS?             02005
         BO    MARKNOLB                                                  02006
         LM    R4,R5,FILBYTES                                            02007
         A     R5,DBINFL           LOW ORDER COUNT                       02008
         BNO   MARKNOVF            B IF NO OVERFLOW                      02009
         N     R5,=X'7FFFFFFF'     GET RID OF SIGN BYTE                  02010
         LA    R4,1(R4)            ADD 1 TO HIGH ORDER                   02011
MARKNOVF DS    0H                                                        02012
         A     R4,DBINFH           HIGH ORDER                            02013
         STM   R4,R5,FILBYTES                                            02014
* - >                                                                    02015
         TM    PARMFLG4,X'01'     IS CUMSEP ON?                          02016
         BZ    NOSEPDAT                                                  02017
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02018
         MVC   FILECUMT,=C'CUM DATA :'                                   02019
         LM    R4,R5,FILBYTES    RELOAD CORRECT COUNTS                   02020
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02021
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02022
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02023
         CVD   R5,DWORD          LOW ORDER WORD                          02024
         AP    QWORD,DWORD       AND ADD IT IN                           02025
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02026
         B     MARKNCN1            BYPASS PRINT OF COMPLETE TOTAL        02027
NOSEPDAT DS    0H                                                        02028
* - >                                                                    02029
MARKNOLB DS    0H                                                        02030
** ----                                                                  02031
         TM    PARMFLG3,X'08'     CUMULATIVE BYTE TOTALS?                02032
         BZ    MARKNCN2           NO-SKIP ROUTINE                        02033
* - >                                                                    02034
         MVC   FILETBYE,BYTESPAT  MOVE IN EDIT PATTERN                   02035
         MVC   FILECUMT,=C'CUM TOTAL:'                                   02036
         LM    R4,R5,TOTBYTES    RELOAD CORRECT COUNTS                   02037
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02038
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02039
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02040
         CVD   R5,DWORD          LOW ORDER WORD                          02041
         AP    QWORD,DWORD       AND ADD IT IN                           02042
         ED    FILETBYE,QWORD+6     MAKE NUMBER DISPLAYABLE              02043
* - >                                                                    02044
MARKNCN1 B     MARKNCNE           AVOID BLANKING OUT LINE                02045
MARKNCNT DS    0H                                                        02046
         MVC   FILEPBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02047
MARKNCN2 MVC   FILETBYT(44),LINE44   BLANK OUT THIS PART OF MESSAGE      02048
MARKNCNE DS    0H                                                        02049
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02050
         PUT   SYSPRINT,FILEDONE  WRITE IT                               02051
**** ---- BYTE COUNTS --------------------------- BELOW ---- ****        02052
         TM    PARMFLG3,X'04'     COUNTING BYTES?                        02053
         BZ    MARKNTOT           NO-SKIP ROUTINE                        02054
         MVC   FILECONT,=C'          '                                   02055
         MVC   FILECUMT,=C'          '                                   02056
         SR    R4,R4          ZERO BLOCK COUNT FOR NEW FILE              02057
         ST    R4,DBINH            ZERO BYTE COUNT                       02058
         ST    R4,DBINL            ZERO BYTE COUNT                       02059
         ST    R4,LABINH           ZERO BYTE COUNT                       02060
         ST    R4,LABINL           ZERO BYTE COUNT                       02061
         ST    R4,DBINFH           ZERO BYTE COUNT                       02062
         ST    R4,DBINFL           ZERO BYTE COUNT                       02063
MARKNTOT DS    0H                                                        02064
**** ---- BYTE COUNTS --------------------------- ABOVE ---- ****        02065
MARKFILE DS    0H                                                        02066
         SR    R7,R7          ZERO BLOCK COUNT FOR NEW FILE              02067
         ST    R7,BLOKCNT                                                02068
         L     R7,FILECNT                                                02069
         LA    R7,1(,R7)      ADD 1 TO FILE NUMBER                       02070
         ST    R7,FILECNT                                                02071
         L     R7,STOR7REG                                               02072
         TM    DATFLAG,X'10'  STILL NO REAL DATA READ?        SBG 03/00  02073
         BO    NOLBL          YES, DON'T TEST FOR 2ND TMK     SBG 03/00  02074
*** ---  FILE LIMITING CODE ---  BELOW ---- ***                          02075
         TM    PARMFLG3,X'02'    ARE WE LIMITING INPUT FILES             02076
         BZ    MARKFILA          NO - SKIP THIS CODE                     02077
         CLC   LTGFILE,FILECNT   IS FILECOUNT + 1 BIGGER THAN LIMIT?     02078
         BNL   MARKFILA          NO - NO RESTRICTIONS                    02079
         OI    EOFINFLG,X'01'    YES - CONSIDER AS END OF INPUT DATA     02080
MARKFILA DS    0H                                                        02081
*** ---  FILE LIMITING CODE ---  ABOVE ---- ***                          02082
         TM    PARMFLG4,X'02'   Stripping labels?                        02083
         BZ    MARKSTRX         no - bypass strip-related code           02084
         TM    STRIPFLG,X'01'   DID WE JUST SKIP A LABEL?                02085
         BZ    MARKSTRX         NO. CONTINUE PROCESSING                  02086
         NI    STRIPFLG,FF-X'01'   JUST SKIPPING ONE T.M. - NO MORE.     02087
         B     READIN           YES. SKIP WRITING THE T.M. TOO           02088
MARKSTRX DS    0H                                                        02089
*  BREAK IN HERE TO DETECT EOV AND STOP AFTER 1 TAPEMARK      SBG 04/00  02090
         TM    LBLFLAG,X'C0'  DID WE SEE AN EOV1 OR EOV2?     SBG 04/00  02091
         BZ    MARKGO         NO. TEST FOR 2ND TM             SBG 04/00  02092
         B     READIN2        YES. WRITE TO OUTPUTS & END     SBG 04/00  02093
MARKGO   CLI   OUTCCW,X'1F'   2ND TM IN A ROW?                           02094
         BE    TESTEND        YES. TEST IF RIGHT AFTER LABELS SBG 03/00  02095
NOLBL    MVI   OUTCCW,X'1F'   SET OUTPUT CCW TO WRITE TM      SBG 03/00  02096
         B     WRITE1         GO WRITE TM TO OUTPUTS                     02097
*  --- BELOW ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02098
TESTEND  TM    LBLFLAG,X'03'  TEST FOR PREV HDR1 OR HDR2      SBG 03/00  02099
         BZ    INEODATA       NOT EITHER. END AS USUAL.       SBG 03/00  02100
TESTGOON MVI   LBLFLAG,X'00'  CLEAR LABEL FLAGS FOR NEXT READ SBG 03/00  02101
         B     NOLBL          GO ON WITHOUT SETTING EOV FLAG  SBG 03/00  02102
*  --- ABOVE ---  CODE TO GO ON IF LABEL BEFORE 2 TAPE MARKS. SBG 03/00  02103
*                                                             SBG 04/00  02104
*  --- ABOVE ---  PROCESSING WHEN TAPE MARK WAS ENCOUNTERED   SBG 04/00  02105
INEODATA DS    0H                                                        02106
         OI    INEODFLG,X'03'   INDICATE END OF DATA ON INPUT TAPE       02107
*                                                                        02108
READIN2  DS    0H                                                        02109
*  --- BELOW ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02110
         TM    PARMFLG2,X'80'    WRITING NEW LABELS ON OUTPUT TAPE?      02111
         BZ    READ2GO           NO. BYPASS THIS CODE.                   02112
         TM    PARMFLG3,X'40'    NO EXTRA LABELS AFTER END OF TAPE DATA  02113
         BO    READ2STP          YES, CUT OFF EXTRA STD LABELS           02114
         TM    WRLBLFLG,X'04'    COMING HERE FROM ENDHEADR?              02115
         BZ    NOEXTMK           NO                                      02116
         B     WRTTAPMK                                                  02117
NOEXTMK  TM    INEODFLG,X'01'    DID WE GET HERE FROM 2 TMKS ?           02118
         BZ    READ2GO           NO. BYPASS REST OF CODE.                02119
         OI    WRLBLFLG,X'01'    NEXT READ WILL BE FROM LABELS.          02120
         NI    INEODFLG,FF-X'01'  ONLY COME HERE ONCE                    02121
         MVI   LBLFLAG,X'00'     DON'T CONTROL WITH INPUT TAPE LABELS    02122
         B     READIN            DON'T WRITE FINAL TAPE MARK YET         02123
READ2STP DS    0H                                                        02124
         BAL   R7,BACKEXTH       BACKSPACE OVER EXTRA HEADERS            02125
READ2GO  DS    0H                                                        02126
*  --- ABOVE ---  ARE WE WRITING EXTERNAL LABELS AND EOF ON INPUT?       02127
         OI    FLAG2A,EOV     INDICATE EOV ON INPUT                      02128
* --- >>>  ------------------ below -------- Skip writing last T.M.      02129
* -------------------------------------------------------------- *       02130
*            When stripping labels, somehow an extra             *       02131
*            tape mark gets written.  This is a kludge           *       02132
*            to correct that.....                                *       02133
* -------------------------------------------------------------- *       02134
         TM    PARMFLG4,X'02'    Stripping Labels?                       02135
         BZ    READ2GNS          No. don't skip writing last t.m.        02136
*        MVC   LINE(133),LINE-1       CLEAR LINE                         02137
*        MVC   LINE(133),DIAGMS1      Diagnostic message #1              02138
*        PUT   SYSPRINT,LINE                                             02139
         B     WRITE17           Do not write the extra tape mark        02140
READ2GNS DS    0H                                                        02141
* --- >>>  ------------------ above -------- Skip writing last T.M.      02142
         B     WRITE1                                                    02143
         SPACE 3                                                         02144
TLITWRIT DS    0H                                                        02145
         TM    PARMFLG3,X'01'                                            02146
         BZ    TLITWRIE                                                  02147
         MVC   OUTCCW+1(3),=AL3(EXTLBLIN)  SET UP LABEL WRITE            02148
         OI    WRLBLFLG,X'01'                                            02149
TLITSKP1 DS    0H                                                        02150
         TM    INIT1FLG,X'01'          NOT FIRST PASS THRU?              02151
         BO    TLITSKP2                GO TO SECOND PASS FOR HDR1        02152
         OI    LBLFLAG,X'04'           SIMULATE VOL1 FROM TAPE INPUT     02153
         NI    LBLFLAG,FF-X'03'        SIMULATE NO HDR1 OR HDR2          02154
         OI    LBLLFLAG,X'04'          SIMULATE VOL1 FROM EXT LABELS     02155
         NI    LBLLFLAG,FF-X'03'       SIMULATE NO HDR1 OR HDR2          02156
         MVC   EXTLBLIN(80),VOL1LABL   STUFF THE INPUT AREA WITH VOL1    02157
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02158
         OI    INIT1FLG,X'01'          DON'T PASS THRU HERE AGAIN        02159
         B     WRITE1                  WRITE THIS VOL1 TO OUTPUTS        02160
TLITSKP2 DS    0H                                                        02161
         OI    LBLFLAG,X'09'           SIMULATE HDR1 AND INITTED HDR1    02162
         OI    LBLLFLAG,X'01'          SIMULATE HDR1 FROM EXT LABELS     02163
         MVC   EXTLBLIN(80),HDR1INIT   STUFF THE INPUT AREA WITH HDR1    02164
         MVC   OUTCCW+6(2),=H'80'      SET OUTPUT SIZE TO 80 BYTES       02165
         OI    FLAG2A,EOV              INDICATE EOV ON INPUT             02166
         OI    INIT1FLG,X'02'          SHOW WRITE THAT I'VE BEEN HERE    02167
         B     WRITE1                  WRITE INITTED HDR1 TO OUTPUTS     02168
TLITWRIE DS    0H                                                        02169
*                                                                        02170
*  WRITE TO OUTPUT TAPES                                                 02171
*                                                                        02172
WRITE1   DS    0H                                             SBG 06/00  02173
         CLI   OUTCCW,X'1F'     Are we writing a Tape Mark?              02174
         BNE   WRNOTPMK         No. Don't touch bytes to be moved        02175
         MVC   SAVBYTES(2),OUTCCW+6   Yes. Save bytes moved              02176
         MVC   OUTCCW+6(2),=X'0001'   and just put in count of 1.        02177
WRNOTPMK DS    0H                                                        02178
* --- READ ONLY CODE ------------------------------- BELOW -- SBG 06/00  02179
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02180
         BO    WRITE17    YES--NO WRITES - ONLY READS         SBG 06/00  02181
* --- READ ONLY CODE ------------------------------- ABOVE -- SBG 06/00  02182
         TM    FLAG1,OP1      IS THIS OUTPUT PRESENT?                    02183
         BZ    WRITE2         NO                                         02184
         MVC   VOLCHG(6),VOLUME1     MOVE IN JCL OR OUTVOLALL VOLSER     02185
         MVC   DDOCHG(5),DDOUT1      MOVE IN OUTPUT DD NAME FOR MESSAGE  02186
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02187
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02188
         LA    R2,OUT1        R2=ADDRESS OF CURRENT DCB                  02189
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02190
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02191
         EXCP  OUTIOB         WRITE IT                                   02192
         WAIT  ECB=OUTECB     WAIT FOR IT                                02193
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02194
         BNE   OUTERR         NO - ERROR                                 02195
WRITE2   TM    FLAG1,OP2      IS THIS OUTPUT PRESENT?                    02196
         BZ    WRITE3         NO                                         02197
         MVC   VOLCHG(6),VOLUME2     MOVE IN JCL OR OUTVOLALL VOLSER     02198
         MVC   DDOCHG(5),DDOUT2      MOVE IN OUTPUT DD NAME FOR MESSAGE  02199
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02200
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02201
         LA    R2,OUT2        R2=ADDRESS OF CURRENT DCB                  02202
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02203
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02204
         EXCP  OUTIOB         WRITE IT                                   02205
         WAIT  ECB=OUTECB     WAIT FOR IT                                02206
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02207
         BNE   OUTERR         NO - ERROR                                 02208
WRITE3   TM    FLAG1,OP3      IS THIS OUTPUT PRESENT?                    02209
         BZ    WRITE4         NO                                         02210
         MVC   VOLCHG(6),VOLUME3     MOVE IN JCL OR OUTVOLALL VOLSER     02211
         MVC   DDOCHG(5),DDOUT3      MOVE IN OUTPUT DD NAME FOR MESSAGE  02212
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02213
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02214
         LA    R2,OUT3        R2=ADDRESS OF CURRENT DCB                  02215
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02216
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02217
         EXCP  OUTIOB         WRITE IT                                   02218
         WAIT  ECB=OUTECB     WAIT FOR IT                                02219
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02220
         BNE   OUTERR         NO - ERROR                                 02221
WRITE4   TM    FLAG1,OP4      IS THIS OUTPUT PRESENT?                    02222
         BZ    WRITE5         NO                                         02223
         MVC   VOLCHG(6),VOLUME4     MOVE IN JCL OR OUTVOLALL VOLSER     02224
         MVC   DDOCHG(5),DDOUT4      MOVE IN OUTPUT DD NAME FOR MESSAGE  02225
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02226
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02227
         LA    R2,OUT4        R2=ADDRESS OF CURRENT DCB                  02228
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02229
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02230
         EXCP  OUTIOB         WRITE IT                                   02231
         WAIT  ECB=OUTECB     WAIT FOR IT                                02232
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02233
         BNE   OUTERR         NO - ERROR                                 02234
WRITE5   TM    FLAG1,OP5      IS THIS OUTPUT PRESENT?                    02235
         BZ    WRITE6         NO                                         02236
         MVC   VOLCHG(6),VOLUME5     MOVE IN JCL OR OUTVOLALL VOLSER     02237
         MVC   DDOCHG(5),DDOUT5      MOVE IN OUTPUT DD NAME FOR MESSAGE  02238
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02239
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02240
         LA    R2,OUT5        R2=ADDRESS OF CURRENT DCB                  02241
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02242
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02243
         EXCP  OUTIOB         WRITE IT                                   02244
         WAIT  ECB=OUTECB     WAIT FOR IT                                02245
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02246
         BNE   OUTERR         NO - ERROR                                 02247
WRITE6   TM    FLAG1,OP6      IS THIS OUTPUT PRESENT?                    02248
         BZ    WRITE7         NO                                         02249
         MVC   VOLCHG(6),VOLUME6     MOVE IN JCL OR OUTVOLALL VOLSER     02250
         MVC   DDOCHG(5),DDOUT6      MOVE IN OUTPUT DD NAME FOR MESSAGE  02251
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02252
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02253
         LA    R2,OUT6        R2=ADDRESS OF CURRENT DCB                  02254
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02255
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02256
         EXCP  OUTIOB         WRITE IT                                   02257
         WAIT  ECB=OUTECB     WAIT FOR IT                                02258
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02259
         BNE   OUTERR         NO - ERROR                                 02260
WRITE7   TM    FLAG1,OP7      IS THIS OUTPUT PRESENT?                    02261
         BZ    WRITE8         NO                                         02262
         MVC   VOLCHG(6),VOLUME7     MOVE IN JCL OR OUTVOLALL VOLSER     02263
         MVC   DDOCHG(5),DDOUT7      MOVE IN OUTPUT DD NAME FOR MESSAGE  02264
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02265
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02266
         LA    R2,OUT7        R2=ADDRESS OF CURRENT DCB                  02267
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02268
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02269
         EXCP  OUTIOB         WRITE IT                                   02270
         WAIT  ECB=OUTECB     WAIT FOR IT                                02271
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02272
         BNE   OUTERR         NO - ERROR                                 02273
WRITE8   TM    FLAG1,OP8      IS THIS OUTPUT PRESENT?                    02274
         BZ    WRITE9         NO                                         02275
         MVC   VOLCHG(6),VOLUME8     MOVE IN JCL OR OUTVOLALL VOLSER     02276
         MVC   DDOCHG(5),DDOUT8      MOVE IN OUTPUT DD NAME FOR MESSAGE  02277
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02278
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02279
         LA    R2,OUT8        R2=ADDRESS OF CURRENT DCB                  02280
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02281
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02282
         EXCP  OUTIOB         WRITE IT                                   02283
         WAIT  ECB=OUTECB     WAIT FOR IT                                02284
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02285
         BNE   OUTERR         NO - ERROR                                 02286
WRITE9   TM    FLAG2,OP9      IS THIS OUTPUT PRESENT?                    02287
         BZ    WRITE10        NO                                         02288
         MVC   VOLCHG(6),VOLUME9     MOVE IN JCL OR OUTVOLALL VOLSER     02289
         MVC   DDOCHG(5),DDOUT9      MOVE IN OUTPUT DD NAME FOR MESSAGE  02290
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02291
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02292
         LA    R2,OUT9        R2=ADDRESS OF CURRENT DCB                  02293
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02294
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02295
         EXCP  OUTIOB         WRITE IT                                   02296
         WAIT  ECB=OUTECB     WAIT FOR IT                                02297
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02298
         BNE   OUTERR         NO - ERROR                                 02299
WRITE10  TM    FLAG2,OP10     IS THIS OUTPUT PRESENT?                    02300
         BZ    WRITE11        NO                                         02301
         MVC   VOLCHG(6),VOLUME10    MOVE IN JCL OR OUTVOLALL VOLSER     02302
         MVC   DDOCHG(5),DDOUT10     MOVE IN OUTPUT DD NAME FOR MESSAGE  02303
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02304
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02305
         LA    R2,OUT10       R2=ADDRESS OF CURRENT DCB                  02306
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02307
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02308
         EXCP  OUTIOB         WRITE IT                                   02309
         WAIT  ECB=OUTECB     WAIT FOR IT                                02310
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02311
         BNE   OUTERR         NO - ERROR                                 02312
WRITE11  TM    FLAG2,OP11     IS THIS OUTPUT PRESENT?                    02313
         BZ    WRITE12        NO                                         02314
         MVC   VOLCHG(6),VOLUME11    MOVE IN JCL OR OUTVOLALL VOLSER     02315
         MVC   DDOCHG(5),DDOUT11     MOVE IN OUTPUT DD NAME FOR MESSAGE  02316
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02317
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02318
         LA    R2,OUT11       R2=ADDRESS OF CURRENT DCB                  02319
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02320
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02321
         EXCP  OUTIOB         WRITE IT                                   02322
         WAIT  ECB=OUTECB     WAIT FOR IT                                02323
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02324
         BNE   OUTERR         NO - ERROR                                 02325
WRITE12  TM    FLAG2,OP12     IS THIS OUTPUT PRESENT?                    02326
         BZ    WRITE13        NO                                         02327
         MVC   VOLCHG(6),VOLUME12    MOVE IN JCL OR OUTVOLALL VOLSER     02328
         MVC   DDOCHG(5),DDOUT12     MOVE IN OUTPUT DD NAME FOR MESSAGE  02329
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02330
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02331
         LA    R2,OUT12       R2=ADDRESS OF CURRENT DCB                  02332
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02333
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02334
         EXCP  OUTIOB         WRITE IT                                   02335
         WAIT  ECB=OUTECB     WAIT FOR IT                                02336
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02337
         BNE   OUTERR         NO - ERROR                                 02338
WRITE13  TM    FLAG2,OP13     IS THIS OUTPUT PRESENT?                    02339
         BZ    WRITE14        NO                                         02340
         MVC   VOLCHG(6),VOLUME13    MOVE IN JCL OR OUTVOLALL VOLSER     02341
         MVC   DDOCHG(5),DDOUT13     MOVE IN OUTPUT DD NAME FOR MESSAGE  02342
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02343
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02344
         LA    R2,OUT13       R2=ADDRESS OF CURRENT DCB                  02345
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02346
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02347
         EXCP  OUTIOB         WRITE IT                                   02348
         WAIT  ECB=OUTECB     WAIT FOR IT                                02349
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02350
         BNE   OUTERR         NO - ERROR                                 02351
WRITE14  TM    FLAG2,OP14     IS THIS OUTPUT PRESENT?                    02352
         BZ    WRITE15        NO                                         02353
         MVC   VOLCHG(6),VOLUME14    MOVE IN JCL OR OUTVOLALL VOLSER     02354
         MVC   DDOCHG(5),DDOUT14     MOVE IN OUTPUT DD NAME FOR MESSAGE  02355
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02356
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02357
         LA    R2,OUT14       R2=ADDRESS OF CURRENT DCB                  02358
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02359
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02360
         EXCP  OUTIOB         WRITE IT                                   02361
         WAIT  ECB=OUTECB     WAIT FOR IT                                02362
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02363
         BNE   OUTERR         NO - ERROR                                 02364
WRITE15  TM    FLAG2,OP15     IS THIS OUTPUT PRESENT?                    02365
         BZ    WRITE16        NO                                         02366
         MVC   VOLCHG(6),VOLUME15    MOVE IN JCL OR OUTVOLALL VOLSER     02367
         MVC   DDOCHG(5),DDOUT15     MOVE IN OUTPUT DD NAME FOR MESSAGE  02368
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02369
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02370
         LA    R2,OUT15       R2=ADDRESS OF CURRENT DCB                  02371
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02372
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02373
         EXCP  OUTIOB         WRITE IT                                   02374
         WAIT  ECB=OUTECB     WAIT FOR IT                                02375
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02376
         BNE   OUTERR         NO - ERROR                                 02377
WRITE16  TM    FLAG2,OP16     IS THIS OUTPUT PRESENT?                    02378
         BZ    WRITE17        NO                                         02379
         MVC   VOLCHG(6),VOLUME16    MOVE IN JCL OR OUTVOLALL VOLSER     02380
         MVC   DDOCHG(5),DDOUT16     MOVE IN OUTPUT DD NAME FOR MESSAGE  02381
         BAL   R7,CHANGVOL           PROCESS CHANGE OF VOL1 IF ANY       02382
         BAL   R7,CLEARIOB    CLEAR SECTIONS OF IOB BEFORE REUSE         02383
         LA    R2,OUT16       R2=ADDRESS OF CURRENT DCB                  02384
         ST    R2,OUTDCBPT    PUT IT IN IOB                              02385
         MVI   OUTECB,X'00'   INITIALIZE ECB                             02386
         EXCP  OUTIOB         WRITE IT                                   02387
         WAIT  ECB=OUTECB     WAIT FOR IT                                02388
         CLI   OUTECB,X'7F'   WRITE COMPLETE NORMALLY?                   02389
         BNE   OUTERR         NO - ERROR                                 02390
WRITE17  DS    0H                                                        02391
         CLI   OUTCCW,X'1F'   Have we written a Tape Mark?               02392
         BNE   WR17NTPM       No. Don't correct bytes moved field        02393
         MVC   OUTCCW+6(2),SAVBYTES    Yes. Restore bytes moved field    02394
WR17NTPM DS    0H                                                        02395
         TM    LBLFLAG,X'08'  INITTED HDR1 SEEN?                         02396
         BO    ENDINPUT       YES. CLOSE.                                02397
         TM    FLAG2A,EOV     END OF INPUT?                              02398
         BO    ENDINPUT       YES - QUIT                                 02399
         B     READIN         NO - LOOP                                  02400
         SPACE 3                                                         02401
*                                                                        02402
*  ERROR ON INPUT -- TELL OPERATOR AND ABEND                             02403
*                                                                        02404
INERR    TM    INCSW+4,X'02'  UNIT CHECK?                                02405
         BZ    INERR1         NO - ASSUME DATA CHECK                     02406
         MVC   LINE(133),INEQC  SET ERROR MESSAGE                        02407
         MVC   INERR3+16(25),INEQC+12  MOVE ERROR MESSAGE TO WTOR        02408
         B     INERR2         CONTINUE                                   02409
INERR1   MVC   LINE(133),INDCK  SET ERROR MESSAGE                        02410
         MVC   INERR3+16(20),INDCK+12  MOVE ERROR MESSAGE TO WTOR        02411
INERR2   PUT   SYSPRINT,LINE  WRITE ERROR MESSAGE                        02412
         MVI   INECB,X'00'    RESET ECB                                  02413
INERR3   WTOR  '                          -- ACKNOWLEDGE',REPLY,       X 02414
               6,INECB,ROUTCDE=(3)                                       02415
         WAIT  ECB=INECB      WAIT FOR OPERATOR TO SEE THE MESSAGE       02416
*                             WHO CARES WHAT THE REPLY IS                02417
         OI    ABENDFLG,X'01'    Turn on ABEND Flag                      02418
         B     CLOSMALL                                                  02419
*        ABEND 69             QUIT                                       02420
         SPACE 3                                                         02421
*                                                                        02422
*  ERROR ON OUTPUT -- TELL OPERATOR THEN TERMINATE THIS OUTPUT ONLY      02423
*                                                                        02424
OUTERR   NI    UNEXFLAG,FF-X'01'  CLEAR BIT ON UNIT EXCEPTION FLAG       02425
         MVC   LINE(133),LINE-1   CLEAR OUTPUT LINE
         TM    OUTCSW+4,X'02' UNIT CHECK?                                02426
         BO    OUTERUC        YES. HANDLE IT.                            02427
         TM    OUTCSW+4,X'01' UNIT EXCEPTION ON WRITE?                   02428
         BZ    OUTERR1        NO. ASSUME DATA CHECK.                     02429
         OI    UNEXFLAG,X'01'     FLAG THAT WE HAVE UNIT EXCEPTION       02430
         MVC   LINE(133),OUTUNEX  SET UNIT EXCEPTION ERROR MESSAGE       02431
         B     OUTERR2            GO FILL IN REST OF THE INFO            02432
OUTERUC  MVC   LINE(133),OUTEQC  SET ERROR MESSAGE                       02433
         B     OUTERR2        CONTINUE                                   02434
OUTERR1  MVC   LINE(133),OUTDCK  SET ERROR MESSAGE                       02435
OUTERR2  LH    R4,40(,R2)     R4=TIOT OFFSET                             02189
         L     R5,16          R5=CVT                                     02190
         L     R5,0(,R5)      R5=TCB WORDS                               02191
         L     R5,4(,R5)      R5=MY TCB                                  02192
         L     R5,12(,R5)     R5=TIOT                                    02193
         AR    R4,R5          R4=TIOT ENTRY FOR THIS OUTPUT              02194
         MVC   LINE+35(5),4(R4)  MOVE DDNAME TO MESSAGE                  02195
         MVC   SAVDDN(5),4(R4)   Save DDNAME
         L     R4,16(,R4)     R4=UCB FOR THIS OUTPUT                     02196
*        MVC   LINE+48(3),13(R4)  MOVE UNIT ADDRESS TO MESSAGE           02197
*        MVI   LINE+47,X'40'        SUPPRESS X IN MESSAGE
*        MVI   SAVUNIT,X'40'        BLANK FIRST BYTE
*        MVC   SAVUNIT+1(3),13(R4)  AND SAVE 3 DIGIT UCB
         HEX   LINE+47,2,4(R4)      CONVERT HEX UNIT TO DISPLAY
         HEX   SAVUNIT,2,4(R4)      AND SAVE IT FOR SECOND MESSAGE
         MVC   LINE+60(6),28(R4)  MOVE VOLSER TO MESSAGE                 02198
         MVC   SAVVOLSR(6),28(R4)  AND SAVE IT TOO
         MVC   SAVELINE(133),LINE
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02199
*    ------------------>    SECOND MESSAGE FOR DDNAME, WITH COUNTS.
         MVC   LINE(133),LINE-1      CLEAR LINE
         MVC   LINE(133),OUTCOUNT    How much was copied?
*    ------------------>    GET DDNAME, UNIT NAME, VOLSER INTO MESSAGE
         MVC   LINE+35(5),SAVDDN     MOVE DDNAME TO MESSAGE              02442
         MVC   LINE+47(4),SAVUNIT    MOVE UNIT ADDRESS TO MESSAGE        02444
         MVC   LINE+60(6),SAVVOLSR   MOVE VOLSER TO MESSAGE              02445
*    ------------------>    PRINT OUT FILE COUNT BEFORE THIS READ
         L     R7,FILECNTP    FILE COUNT JUST BEFORE THIS READ EXCP      01944
         CVD   R7,DWORD       CONVERT FILE NUMBER TO DECIMAL  SBG 03/00  01945
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         01946
         UNPK  LINE+16(5),DWORD+5(3)  UNPACK FILE NUMBER                 01947
*    ------------------>    PRINT OUT BLOCK COUNT BEFORE THIS READ
         L     R7,BLOKCNTP    BLOCK COUNT JUST BEFORE THIS READ          01949
         CVD   R7,DWORD       CONVERT BLOCK COUNT TO DECIMAL             01950
         OI    DWORD+7,X'0F'  MAKE SIGN READABLE                         01951
         MVC   PRVCNTSV,PRVCNTSV-1        INITIALIZE TO ZEROS            01953
         UNPK  PRVCNTSV(10),DWORD+2(6)    SAVE 10 DIGITS OF BLK COUNT    01954
         MVC   LINE+86(10),PRVCNTSV       MOVE IT INTO MESSAGE
*    ------------------>    PRINT OUT BYTE COUNT BEFORE THIS READ
         L     R4,PRVBYH          LOAD REG WITH HI ORDER                 01960
         CVD   R4,DWORD           CONVERT HI ORDER TO PACKED             01961
         ZAP   QWORD,DWORD        PUT IT INTO PACKED HOLD AREA           01962
         MP    QWORD,TWO31        MULT BY 2 TO THE 31ST                  01963
         L     R4,PRVBYL          LOAD REG WITH LOW ORDER                01964
         CVD   R4,DWORD           CONVERT LOW ORDER TO PACKED            01965
         AP    QWORD,DWORD        AND ADD IT IN                          01966
         MVC   LINE+104(26),BYTESPAT  MOVE IN EDIT PATTERN
         ED    LINE+104(26),QWORD+6   DISPLAY COUNT IN LINE              01967
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02446
         TM    UNEXFLAG,X'01'   WAS THIS A UNIT EXCEPTION ONLY           02447
         BO    OUTERR4A         IF SO, SKIP THE WTOR BECAUSE             02448
*                               THIS IS A SEMI-NORMAL CONDITION          02449
*                               AND WHY INVOLVE THE OPERATOR?            02450
         MVC   OUTERR4+16(54),SAVELINE+12  MOVE ERROR MESSAGE TO WTOR    02451
OUTERR3  MVI   OUTECB,X'00'   RESET ECB                                  02452
OUTERR4  WTOR  '                                                       X 02453
               -- REPLY GO TO CONTINUE',REPLY,2,OUTECB,ROUTCDE=(3)       02454
         WAIT  ECB=OUTECB     WAIT FOR OPERATOR TO REPLY                 02455
         CLC   REPLY(2),=C'GO'  CORRECT REPLY?                           02456
         BNE   OUTERR3        NO - TRY AGAIN                             02457
* ------------------------------------------------------------------- *  02458
*        REWIND BEFORE CLOSE RUINS WHATEVER OUTPUT HAS BEEN WRITTEN   *  02459
*        ALREADY.  DON'T DO IT ON END-OF-TAPE CONDITIONS.             *  02460
* ------------------------------------------------------------------- *  02461
*        ST    R2,REWDCBPT    PUT DCB ADDRESS IN REWIND IOB              02462
*        EXCP  REWIOB         REWIND TAPE WITH THE ERROR                 02463
*                             DON'T BOTHER WAITING FOR REWIND            02464
* ------------------------------------------------------------------- *  02465
OUTERR4A OI    FLAG2A,ERR     INDICATE THAT THERE WAS AN ERROR           02466
         LA    R3,OUT1        R3=DCB FOR OUTPUT 1                        02467
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02468
         BNE   OUTERR5        NO                                         02469
         NI    FLAG1,FF-OP1   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02470
         B     WRITE2         CONTINUE WITH OTHER OUTPUT                 02471
OUTERR5  LA    R3,OUT2        R3=DCB FOR OUTPUT 2                        02472
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02473
         BNE   OUTERR6        NO                                         02474
         NI    FLAG1,FF-OP2   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02475
         B     WRITE3         CONTINUE WITH OTHER OUTPUT                 02476
OUTERR6  LA    R3,OUT3        R3=DCB FOR OUTPUT 3                        02477
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02478
         BNE   OUTERR7        NO                                         02479
         NI    FLAG1,FF-OP3   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02480
         B     WRITE4         CONTINUE WITH OTHER OUTPUT                 02481
OUTERR7  LA    R3,OUT4        R3=DCB FOR OUTPUT 4                        02482
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02483
         BNE   OUTERR8        NO                                         02484
         NI    FLAG1,FF-OP4   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02485
         B     WRITE5         CONTINUE WITH OTHER OUTPUT                 02486
OUTERR8  LA    R3,OUT5        R3=DCB FOR OUTPUT 5                        02487
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02488
         BNE   OUTERR9        NO                                         02489
         NI    FLAG1,FF-OP5   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02490
         B     WRITE6         CONTINUE WITH OTHER OUTPUT                 02491
OUTERR9  LA    R3,OUT6        R3=DCB FOR OUTPUT 6                        02492
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02493
         BNE   OUTERR10       NO                                         02494
         NI    FLAG1,FF-OP6   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02495
         B     WRITE7         CONTINUE WITH OTHER OUTPUT                 02496
OUTERR10 LA    R3,OUT7        R3=DCB FOR OUTPUT 7                        02497
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02498
         BNE   OUTERR11       NO                                         02499
         NI    FLAG1,FF-OP7   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02500
         B     WRITE8         CONTINUE WITH OTHER OUTPUT                 02501
OUTERR11 LA    R3,OUT8        R3=DCB FOR OUTPUT 8                        02502
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02503
         BNE   OUTERR12       NO                                         02504
         NI    FLAG1,FF-OP8   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02505
         B     WRITE9         CONTINUE WITH OTHER OUTPUT                 02506
OUTERR12 LA    R3,OUT9        R3=DCB FOR OUTPUT 9                        02507
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02508
         BNE   OUTERR13       NO                                         02509
         NI    FLAG2,FF-OP9   SHOW THIS OUTPUT NOT PRESENT ANY MORE      02510
         B     WRITE10        CONTINUE WITH OTHER OUTPUT                 02511
OUTERR13 LA    R3,OUT10       R3=DCB FOR OUTPUT 10                       02512
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02513
         BNE   OUTERR14       NO                                         02514
         NI    FLAG2,FF-OP10  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02515
         B     WRITE11        CONTINUE WITH OTHER OUTPUT                 02516
OUTERR14 LA    R3,OUT11       R3=DCB FOR OUTPUT 11                       02517
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02518
         BNE   OUTERR15       NO                                         02519
         NI    FLAG2,FF-OP11  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02520
         B     WRITE12        CONTINUE WITH OTHER OUTPUT                 02521
OUTERR15 LA    R3,OUT12       R3=DCB FOR OUTPUT 12                       02522
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02523
         BNE   OUTERR16       NO                                         02524
         NI    FLAG2,FF-OP12  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02525
         B     WRITE13        CONTINUE WITH OTHER OUTPUT                 02526
OUTERR16 LA    R3,OUT13       R3=DCB FOR OUTPUT 13                       02527
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02528
         BNE   OUTERR17       NO                                         02529
         NI    FLAG2,FF-OP13  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02530
         B     WRITE14        CONTINUE WITH OTHER OUTPUT                 02531
OUTERR17 LA    R3,OUT14       R3=DCB FOR OUTPUT 14                       02532
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02533
         BNE   OUTERR18       NO                                         02534
         NI    FLAG2,FF-OP14  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02535
         B     WRITE15        CONTINUE WITH OTHER OUTPUT                 02536
OUTERR18 LA    R3,OUT15       R3=DCB FOR OUTPUT 15                       02537
         CR    R2,R3          WAS THIS THE DCB WITH THE ERROR?           02538
         BNE   OUTERR19       NO                                         02539
         NI    FLAG2,FF-OP15  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02540
         B     WRITE16        CONTINUE WITH OTHER OUTPUT                 02541
*                             THEN IT MUST BE OUTPUT 16                  02542
OUTERR19 NI    FLAG2,FF-OP16  SHOW THIS OUTPUT NOT PRESENT ANY MORE      02543
         B     WRITE17        CONTINUE WITH OTHER OUTPUT                 02544
         SPACE 3                                                         02545
*                                                                        02546
*  END OF INPUT -- FINISH UP                                             02547
*                                                                        02548
ENDINPUT DS    0H                                                        02549
         SPACE 3                                                         02550
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02551
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02552
         BZ    ENDIN0     NO. USE WRITE SUCCESS MESSAGE       SBG 06/00  02553
         MVC   LINE(133),SUCCESSR    MOVE READ-ONLY MESSAGE   SBG 06/00  02554
         B     ENDIN16          WRITE OUT MESSAGE             SBG 06/00  02555
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02556
ENDIN0   MVC   LINE(133),SUCCESS  MOVE MESSAGE TO LINE                   02557
         TM    FLAG2,OP16     OUTPUT 16 COMPLETED?                       02558
         BO    ENDIN1         YES - CONTINUE                             02559
         MVC   LINE+126(5),LINE+131 NO - DON'T SHOW IT                   02560
ENDIN1   TM    FLAG2,OP15     OUTPUT 15 COMPLETED?                       02561
         BO    ENDIN2         YES - CONTINUE                             02562
         MVC   LINE+119(12),LINE+126  NO - DON'T SHOW IT                 02563
ENDIN2   TM    FLAG2,OP14     OUTPUT 14 COMPLETED?                       02564
         BO    ENDIN3         YES - CONTINUE                             02565
         MVC   LINE+112(19),LINE+119  NO - DON'T SHOW IT                 02566
ENDIN3   TM    FLAG2,OP13     OUTPUT 13 COMPLETED?                       02567
         BO    ENDIN4         YES - CONTINUE                             02568
         MVC   LINE+105(26),LINE+112  NO - DON'T SHOW IT                 02569
ENDIN4   TM    FLAG2,OP12     OUTPUT 12 COMPLETED?                       02570
         BO    ENDIN5         YES - CONTINUE                             02571
         MVC   LINE+98(33),LINE+105  NO - DON'T SHOW IT                  02572
ENDIN5   TM    FLAG2,OP11     OUTPUT 11 COMPLETED?                       02573
         BO    ENDIN6         YES - CONTINUE                             02574
         MVC   LINE+91(40),LINE+98  NO - DON'T SHOW IT                   02575
ENDIN6   TM    FLAG2,OP10     OUTPUT 10 COMPLETED?                       02576
         BO    ENDIN7         YES - CONTINUE                             02577
         MVC   LINE+84(47),LINE+91  NO - DON'T SHOW IT                   02578
ENDIN7   TM    FLAG2,OP9      OUTPUT 9 COMPLETED?                        02579
         BO    ENDIN8         YES - CONTINUE                             02580
         MVC   LINE+78(53),LINE+84  NO - DON'T SHOW IT                   02581
ENDIN8   TM    FLAG1,OP8      OUTPUT 8 COMPLETED?                        02582
         BO    ENDIN9         YES - CONTINUE                             02583
         MVC   LINE+72(59),LINE+78  NO - DON'T SHOW IT                   02584
ENDIN9   TM    FLAG1,OP7      OUTPUT 7 COMPLETED?                        02585
         BO    ENDIN10        YES - CONTINUE                             02586
         MVC   LINE+66(65),LINE+72  NO - DON'T SHOW IT                   02587
ENDIN10  TM    FLAG1,OP6      OUTPUT 6 COMPLETED?                        02588
         BO    ENDIN11        YES - CONTINUE                             02589
         MVC   LINE+60(71),LINE+66  NO - DON'T SHOW IT                   02590
ENDIN11  TM    FLAG1,OP5      OUTPUT 5 COMPLETED?                        02591
         BO    ENDIN12        YES - CONTINUE                             02592
         MVC   LINE+54(77),LINE+60  NO - DON'T SHOW IT                   02593
ENDIN12  TM    FLAG1,OP4      OUTPUT 4 COMPLETED?                        02594
         BO    ENDIN13        YES - CONTINUE                             02595
         MVC   LINE+48(83),LINE+54  NO - DON'T SHOW IT                   02596
ENDIN13  TM    FLAG1,OP3      OUTPUT 3 COMPLETED?                        02597
         BO    ENDIN14        YES - CONTINUE                             02598
         MVC   LINE+42(89),LINE+48  NO - DON'T SHOW IT                   02599
ENDIN14  TM    FLAG1,OP2      OUTPUT 2 COMPLETED?                        02600
         BO    ENDIN15        YES - CONTINUE                             02601
         MVC   LINE+36(95),LINE+42  NO - DON'T SHOW IT                   02602
ENDIN15  TM    FLAG1,OP1      OUTPUT 1 COMPLETED?                        02603
         BO    ENDIN16        YES - CONTINUE                             02604
         MVC   LINE+30(101),LINE+36  NO - DON'T SHOW IT                  02605
ENDIN16  PUT   SYSPRINT,LINE  WRITE IT                                   02606
         SPACE 3                                                         02607
*                                                                        02608
*  CLOSE ALL FILES                                                       02609
*                                                                        02610
CLOSMALL DS    0H                                                        02611
*        B     OUTERR        REMOVE - REMOVE - REMOVE
**** ---- BYTE COUNT CODE ---------------- BELOW -------- *              02612
         TM    PARMFLG3,X'04'    COUNTING BYTES?                         02613
         BZ    ENDINTOT          NO - SKIP ROUTINE                       02614
         LM    R4,R5,TOTBYTES    GET TOTAL NUMBER OF BYTES               02615
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02616
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02617
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02618
         CVD   R5,DWORD          LOW ORDER WORD                          02619
         AP    QWORD,DWORD       AND ADD IT IN                           02620
         ED    TOTBPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02621
         PUT   SYSPRINT,TOTBLINE                                         02622
         MVI   LINE,C' '                                                 02623
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02624
         LM    R4,R5,LABBYTES    GET TOTAL NUMBER OF BYTES IN LABELS     02625
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02626
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02627
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02628
         CVD   R5,DWORD          LOW ORDER WORD                          02629
         AP    QWORD,DWORD       AND ADD IT IN                           02630
         ED    TOTLPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02631
         PUT   SYSPRINT,TOTLLINE                                         02632
         MVI   LINE,C' '                                                 02633
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02634
         LM    R4,R5,FILBYTES    GET TOTAL NUMBER OF BYTES IN FILES      02635
         CVD   R4,DWORD          HIGH ORDER WORD OF BYTE COUNT           02636
         ZAP   QWORD,DWORD       DUMP INTO TARGET                        02637
         MP    QWORD,TWO31       MULT BY 2 TO THE 31ST                   02638
         CVD   R5,DWORD          LOW ORDER WORD                          02639
         AP    QWORD,DWORD       AND ADD IT IN                           02640
         ED    TOTWPATT,QWORD+6     MAKE NUMBER DISPLAYABLE              02641
         PUT   SYSPRINT,TOTWLINE                                         02642
         MVI   LINE,C' '                                                 02643
         MVC   LINE+1(L'LINE-1),LINE CLEAR LINE                          02644
ENDINTOT DS    0H                                                        02645
**** ---- BYTE COUNT CODE ---------------- ABOVE -------- *              02646
* --------------------  REPORT THAT WE COPIED INITTED TAPES - BELOW - *  02647
         TM    LBLFLAG,X'08'  HAVE WE COPIED AN INITTED TAPE?            02648
         BZ    NOINITT3       NOPE. DON'T REPORT IT EITHER.              02649
         MVI   LINE-1,C' '                                               02650
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           02651
         MVC   INITSER(6),INVOLUME  MOVE IN VOLSER FROM VOL1             02652
         MVC   LINE(133),INITMSG MSG-WE'RE DOING INITTED TAPE            02653
         PUT   SYSPRINT,LINE  WRITE MESSAGE                              02654
NOINITT3 DS    0H                                                        02655
* --------------------  REPORT THAT WE COPIED INITTED TAPES - ABOVE - *  02656
         TM    PARMFLG3,X'01'   INIT ONLY?                               02657
         BO    NOCLOSIN                                                  02658
         CLOSE (IN)                                                      02659
NOCLOSIN DS    0H                                                        02660
         CLOSE (SYSPRINT)                                                02661
         TM    PARMFLG2,X'10'   DO WE DUMP LABELS?            SBG 09/00  02662
         BZ    NOLBLCLS         NO. NO FILE TO CLOSE          SBG 09/00  02663
         NI    OPENDFLG,FF-X'01'  MARK FILE AS CLOSED                    02664
         CLOSE (LABLDUMP)                                                02665
NOLBLCLS DS    0H               SKIP CLOSE OF LABEL DUMP FILE            02666
         TM    PARMFLG2,X'80'   DO WE ADD LABELS?                        02667
         BZ    NOLABACL         NO. NO FILE TO CLOSE                     02668
         TM    OPENDFLG,X'04'   IS THE FILE OPEN?                        02669
         BZ    NOLABACL         NO. CANNOT CLOSE IT.                     02670
         NI    OPENDFLG,FF-X'04'  MARK FILE AS CLOSED                    02671
         CLOSE (LABADDIN)                                                02672
NOLABACL DS    0H               SKIP CLOSE OF EXTERNAL LABEL FILE        02673
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02674
         TM    PARMFLG2,X'08'   IS THIS RUN READ-ONLY?        SBG 06/00  02675
         BO    THEEND     YES. ONLY CLOSE INPUT AND SYSPRINT. SBG 06/00  02676
* --- READ ONLY CODE ---------------------------------------- SBG 06/00  02677
         TM    FLAG3,OP1      OUTPUT 1 OPEN?                             02678
         BZ    CLOSE1         NO                                         02679
         CLOSE (OUT1)         CLOSE OUTPUT 1                             02680
CLOSE1   TM    FLAG3,OP2      OUTPUT 2 OPEN?                             02681
         BZ    CLOSE2         NO                                         02682
         CLOSE (OUT2)         CLOSE OUTPUT 2                             02683
CLOSE2   TM    FLAG3,OP3      OUTPUT 3 OPEN?                             02684
         BZ    CLOSE3         NO                                         02685
         CLOSE (OUT3)         CLOSE OUTPUT 3                             02686
CLOSE3   TM    FLAG3,OP4      OUTPUT 4 OPEN?                             02687
         BZ    CLOSE4         NO                                         02688
         CLOSE (OUT4)         CLOSE OUTPUT 4                             02689
CLOSE4   TM    FLAG3,OP5      OUTPUT 5 OPEN?                             02690
         BZ    CLOSE5         NO                                         02691
         CLOSE (OUT5)         CLOSE OUTPUT 5                             02692
CLOSE5   TM    FLAG3,OP6      OUTPUT 6 OPEN?                             02693
         BZ    CLOSE6         NO                                         02694
         CLOSE (OUT6)         CLOSE OUTPUT 6                             02695
CLOSE6   TM    FLAG3,OP7      OUTPUT 7 OPEN?                             02696
         BZ    CLOSE7         NO                                         02697
         CLOSE (OUT7)         CLOSE OUTPUT 7                             02698
CLOSE7   TM    FLAG3,OP8      OUTPUT 8 OPEN?                             02699
         BZ    CLOSE8         NO                                         02700
         CLOSE (OUT8)         CLOSE OUTPUT 8                             02701
CLOSE8   TM    FLAG4,OP9      OUTPUT 9 OPEN?                             02702
         BZ    CLOSE9         NO                                         02703
         CLOSE (OUT9)         CLOSE OUTPUT 9                             02704
CLOSE9   TM    FLAG4,OP10     OUTPUT 10 OPEN?                            02705
         BZ    CLOSE10        NO                                         02706
         CLOSE (OUT10)        CLOSE OUTPUT 10                            02707
CLOSE10  TM    FLAG4,OP11     OUTPUT 11 OPEN?                            02708
         BZ    CLOSE11        NO                                         02709
         CLOSE (OUT11)        CLOSE OUTPUT 11                            02710
CLOSE11  TM    FLAG4,OP12     OUTPUT 12 OPEN?                            02711
         BZ    CLOSE12        NO                                         02712
         CLOSE (OUT12)        CLOSE OUTPUT 12                            02713
CLOSE12  TM    FLAG4,OP13     OUTPUT 13 OPEN?                            02714
         BZ    CLOSE13        NO                                         02715
         CLOSE (OUT13)        CLOSE OUTPUT 13                            02716
CLOSE13  TM    FLAG4,OP14     OUTPUT 14 OPEN?                            02717
         BZ    CLOSE14        NO                                         02718
         CLOSE (OUT14)        CLOSE OUTPUT 14                            02719
CLOSE14  TM    FLAG4,OP15     OUTPUT 15 OPEN?                            02720
         BZ    CLOSE15        NO                                         02721
         CLOSE (OUT15)        CLOSE OUTPUT 15                            02722
CLOSE15  TM    FLAG4,OP16     OUTPUT 16 OPEN?                            02723
         BZ    THEEND         NO                                         02724
         CLOSE (OUT16)        CLOSE OUTPUT 16                            02725
         SPACE 3                                                         02726
*                                                                        02727
*  Test for ABEND 069 first.  Did we come from an Input Error?           02728
*                                                                        02729
         TM    ABENDFLG,X'01'    Is ABEND flag on?                       02730
         BZ    THEEND            No.  End normally.                      02731
         ABEND 69                QUIT                                    02732
*                                                                        02733
*  THE END                                                               02734
*                                                                        02735
THEEND   EQU   *                                                         02736
         TM    PARMFLG4,X'40'    DO WE SUPPRESS THE WTO?                 02737
         BO    THEEND1           YES WE DO.                              02738
         MVC   WTOCBT+16(41),FILEDONE                                    02739
WTOCBT   WTO   'CBT990                                              '    02740
         SR    R15,R15        ZERO RETURN CODE                           02741
         TM    FLAG2A,ERR     WAS THERE AN ERROR?                        02742
         BZ    THEEND1        NO                                         02743
         LA    R15,16         SET RETURN CODE                            02744
*        TERME RMK=NO                                                    02745
THEEND1  DS    0H                                                        02746
         L     R13,4(,R13)                                               02747
         RETURN (14,12),RC=0                                             02748
         EJECT                                                           02749
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - *      02750
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05320
*    BAL REGISTER IS R4.                                                 02751
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05308
HEX      DS    0H                                                        05309
         MVC   1(1,R15),0(R1)        Move byte                           05310
         UNPK  0(3,R15),1(2,R15)     Unpack                              05311
         TR    0(2,R15),HEXTAB-240                                       05312
         LA    R15,2(,R15)           Increment output pointer            05313
         LA    R1,1(,R1)             Increment input pointer             05314
         BCT   R0,HEX                Decrement length, then loop         05315
         MVI   0(R15),C' '           Blank the trailing byte             05316
         BR    R4                    Return to caller                    05317
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05318
         SPACE                                                           05319
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05320
*    BAL REGISTER IS R7.                                      SBG 04/00  02751
* --------------------------------------------------------- * SBG 04/00  02752
LABELCHK DS    0H         CHECK FOR PRESENCE OF TAPE LABELS   SBG 04/00  02753
*                         AND SET LABEL FLAGS, ACCORDINGLY,   SBG 04/00  02754
*                         IN THE LBLFLAG BYTE.                SBG 04/00  02755
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  02756
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  02757
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  02758
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  02759
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  02760
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  02761
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  02762
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  02763
* --------------------------------------------------------- * SBG 04/00  02764
* -  CHANGED LOGIC OF LABEL DUMPING CODE FOR UHL AND UTL. - *            02765
* -                                                       - *            02766
* -   NOW:  IF YOU SEE A HDR2, FLAG IT, BUT ONLY WRITE    - *            02767
* -         THE CONTROL CARD WHEN YOU ENCOUNTER THE TAPE  - *            02768
* -         MARK THAT FOLLOWS IT.  THIS LEAVES ROOM FOR   - *            02769
* -         THE USER HEADER LABELS.  SIMILAR LOGIC WITH   - *            02770
* -         EOF2 AND EOV2.  DON'T WRITE THE CONTROL CARDS - *            02771
* -         IMMEDIATELY, BUT WAIT UNTIL THE NEXT TAPEMARK.- *            02772
* --------------------------------------------------------- *            02773
         NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG AT START      02774
         CLC   INAREA(4),=C'VOL1'   IS THIS A VOL1 ?          SBG 04/00  02775
         BE    CVOL1                PROCESS THE VOL1          SBG 04/00  02776
         CLC   INAREA(4),=C'HDR1'   IS THIS A HDR1 ?          SBG 04/00  02777
         BE    CHDR1                PROCESS HDR1              SBG 04/00  02778
         CLC   INAREA(4),=C'HDR2'   THIS A HDR2 ?             SBG 04/00  02779
         BE    CHDR2                PROCESS HDR2              SBG 04/00  02780
         CLC   INAREA(4),=C'EOF1'   THIS AN EOF1 ?            SBG 04/00  02781
         BE    CEOF1                PROCESS EOF1              SBG 04/00  02782
         CLC   INAREA(4),=C'EOF2'   THIS AN EOF2 ?            SBG 04/00  02783
         BE    CEOF2                PROCESS EOF2              SBG 04/00  02784
         CLC   INAREA(4),=C'EOV1'   THIS AN EOV1 ?            SBG 04/00  02785
         BE    CEOV1                PROCESS EOV1              SBG 04/00  02786
         CLC   INAREA(4),=C'EOV2'   THIS AN EOV2 ?            SBG 04/00  02787
         BE    CEOV2                PROCESS EOV2              SBG 04/00  02788
         CLC   INAREA(3),=C'UHL'    THIS A USER HEADER LABEL? SBG 04/00  02789
         BE    CUHL                 PROCESS UHL               SBG 04/00  02790
         CLC   INAREA(3),=C'UTL'    THIS A USER TRAILER LABEL?    04/00  02791
         BE    CUTL                 PROCESS UTL               SBG 04/00  02792
         B     NOTLABEL       80 BYTE RECORD IS NOT IBM SL    SBG 04/00  02793
CVOL1    DS    0H    -------- PROCESS VOL1 LABEL -----------  SBG 05/00  02794
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02795
         BO    CVOL1NPR              YES. JUST TURN ON ISLABEL FLAG      02796
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  BELOW          02797
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   02798
         BZ    CLRIDRCV             NO. SKIP ROUTINE.                    02799
         MVI   INAREA+35,C' '       BLANK THE INDICATOR IN THE VOL1      02800
CLRIDRCV DS    0H                                                        02801
* -->>>>>>            CLEAR IDRC INDICATOR IN VOL1  ----  ABOVE          02802
         MVC   INVOLUME(6),INAREA+4   SAVE SL VOLSER IF THERE SBG 03/00  02803
         MVC   VOLORIG(6),INAREA+4   SAVE SL VOLSER IF THERE  SBG 03/00  02804
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  02805
         TM    PARMFLG2,X'80'       ARE WE ADDING LABELS?                02806
         BZ    CVOLNPRB             NO. WE CAN GO ON.                    02807
         MVC   LINE(133),LINE-1   CLEAR MESSAGE LINE                     02808
         MVC   LINE(133),NOLABSL   DISPLAY NO SL ON SL MSG               02809
         PUT   SYSPRINT,LINE        WRITE MSG                            02810
         NI    OPENDFLG,FF-X'04'    MARK FILE AS CLOSED                  02811
         CLOSE (LABADDIN)                                                02812
CVOL1OUT B     CLOSMALL           CLOSE OTHER FILES AND SCRAM            02813
CVOLNPRB DS    0H                   NOT ADDING SL ONTO SL TAPE.          02814
* ---------------- LABEL ADDING CODE ---------------------- * SBG 09/00  02815
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02816
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  02817
         BZ    CVOL1ND              NO. SKIP PUTTING OUT      SBG 09/00  02818
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02819
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  02820
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02821
CVOL1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  02822
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02823
         OI    LBLFLAG,X'04'  YES. FLAG VOL1 SEEN.            SBG 03/00  02824
         TM    PARMFLG2,X'02'  VOL1-FOUND OPTION OFF?         SBG 05/00  02825
         BZ    CVOL1NPR        YES.  DON'T REPORT VOL1 FOUND  SBG 05/00  02826
         MVI   LINE-1,C' '                                    SBG 03/00  02827
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02828
         MVC   VOL1SER(6),LINE       CLEAR FIELD TO BLANKS    SBG 04/00  02829
         MVC   VOL1SER(6),INVOLUME   REPORT VOLUME SERIAL     SBG 03/00  02830
         MVC   VOL1OWNR(10),LINE     CLEAR FIELD TO BLANKS    SBG 04/00  02831
         MVC   VOL1OWNR(10),INAREA+41   OWNER INFORMATION     SBG 04/00  02832
         MVC   LINE(133),VOL1LBL  INDICATE THAT VOL1 FOUND    SBG 04/00  02833
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 03/00  02834
CVOL1NPR OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  02835
         B     LABCHEND                                       SBG 04/00  02836
CHDR1    DS    0H                                             SBG 04/00  02837
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02838
         BO    CHDR1Z                YES. JUST TURN ON ISLABEL FLAG      02839
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS         SBG 07/00  02840
         OI    LBLFLAG,X'01'  YES. FLAG HDR1 SEEN.            SBG 03/00  02841
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02842
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  02843
         BZ    CHDR1ND              NO. SKIP PUTTING OUT      SBG 09/00  02844
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02845
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  02846
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02847
CHDR1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  02848
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02849
         CLC   INAREA+4(23),ZERO23   WAS TAPE JUST INITTED?   SBG 03/00  02850
         BNE   CHDR1A         NO. THIS IS A HDR1 FOR DATASET  SBG 03/00  02851
* ---------------- LABEL DUMPING CODE --------------------- *            02852
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               02853
         BZ    CHDR1NDM             NO. DON'T PUT ENDOFHDR FOR INIT      02854
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    02855
         MVC   LLINE(80),LABELITI   MOVE IN ENDOFHDRINIT                 02856
         PUT   LABLDUMP,LLINE       WRITE OUT ENDOFLABELHEADERINIT       02857
CHDR1NDM DS    0H                                                        02858
* ---------------- LABEL DUMPING CODE --------------------- *            02859
         OI    LBLFLAG,X'08'  YES. ZERO DSN AND VOLSER HERE   SBG 03/00  02860
         NOP   CHDR1Z         DON'T PRINT LABEL INFO          SBG 05/00  02861
CHDR1A   TM    PARMFLG1,X'02' DO WE PRINT LABELS?             SBG 05/00  02862
         BZ    CHDR1Z         NO. DON'T PRINT.                SBG 05/00  02863
         ST    R3,SAVE3REG                                               02864
         LA    R3,INAREA                                                 02865
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                02866
         BAL   R7,PRTXXX1     PRINT LABEL INFO                SBG 05/00  02867
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               02868
         L     R3,SAVE3REG                                               02869
CHDR1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  02870
         B     LABCHEND                                       SBG 04/00  02871
CHDR2    DS    0H                                             SBG 04/00  02872
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02873
         BO    CHDR2Z                YES. JUST TURN ON ISLABEL FLAG      02874
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  BELOW          02875
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   02876
         BZ    CLRIDRH2             NO. SKIP ROUTINE.                    02877
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             02878
         BNE   CLRIDRH2                                                  02879
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      02880
CLRIDRH2 DS    0H                                                        02881
* -->>>>>>            CLEAR IDRC INDICATOR IN HDR2  ----  ABOVE          02882
         NI    LBLFLAG,X'0F'  TURN OFF EOV, EOF FLAGS IF HDR2 SBG 07/00  02883
         OI    LBLFLAG,X'02'  YES. FLAG HDR2 SEEN.            SBG 03/00  02884
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02885
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  02886
         BZ    CHDR2ND              NO. SKIP PUTTING OUT      SBG 09/00  02887
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02888
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  02889
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02890
         OI    EOLGFLAG,X'01'       INDICATE HDR2 SEEN ON TAPE           02891
CHDR2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  02892
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02893
         TM    PARMFLG1,X'04'   DO WE PRINT LABELS?           SBG 05/00  02894
         BZ    CHDR2Z           NO.                           SBG 05/00  02895
         ST    R3,SAVE3REG                                               02896
         LA    R3,INAREA                                                 02897
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                02898
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02899
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               02900
         L     R3,SAVE3REG                                               02901
CHDR2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  02902
         B     LABCHEND                                       SBG 04/00  02903
CEOF1    DS    0H                                             SBG 04/00  02904
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02905
         BO    CEOF1Z                YES. JUST TURN ON ISLABEL FLAG      02906
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF1      SBG 04/00  02907
         OI    LBLFLAG,X'10'  YES. FLAG EOF1 SEEN.            SBG 03/00  02908
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            02909
BCTCEOF1 DS    0H                                                        02910
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          02911
         BZ    BCTCEOFX             NO. BYPASS ROUTINE.                  02912
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         02913
         STM   R2,R3,SAVE2TO3                                            02914
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     02915
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02916
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02917
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02918
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02919
         LM    R2,R3,SAVE2TO3                                            02920
BCTCEOFX DS    0H                                                        02921
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            02922
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02923
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  02924
         BZ    CEOF1ND              NO. SKIP PUTTING OUT      SBG 09/00  02925
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02926
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  02927
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02928
CEOF1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  02929
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02930
         TM    PARMFLG1,X'08'   DO WE PRINT LABELS?           SBG 05/00  02931
         BZ    CEOF1Z           NO.                           SBG 05/00  02932
         ST    R3,SAVE3REG                                               02933
         LA    R3,INAREA                                                 02934
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                02935
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           02936
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               02937
         L     R3,SAVE3REG                                               02938
CEOF1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  02939
         B     LABCHEND                                       SBG 04/00  02940
CEOF2    DS    0H                                             SBG 04/00  02941
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02942
         BO    CEOF2Z                YES. JUST TURN ON ISLABEL FLAG      02943
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          02944
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   02945
         BZ    CLRIDRF2             NO. SKIP ROUTINE.                    02946
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             02947
         BNE   CLRIDRF2                                                  02948
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      02949
CLRIDRF2 DS    0H                                                        02950
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          02951
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOF2      SBG 04/00  02952
         OI    LBLFLAG,X'20'  YES. FLAG EOF2 SEEN.            SBG 03/00  02953
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02954
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  02955
         BZ    CEOF2ND              NO. SKIP PUTTING OUT      SBG 09/00  02956
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  02957
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  02958
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  02959
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           02960
CEOF2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  02961
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  02962
         TM    PARMFLG1,X'10'   DO WE PRINT LABELS?           SBG 05/00  02963
         BZ    CEOF2Z           NO.                           SBG 05/00  02964
         ST    R3,SAVE3REG                                               02965
         LA    R3,INAREA                                                 02966
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                02967
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           02968
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               02969
         L     R3,SAVE3REG                                               02970
CEOF2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  02971
         B     LABCHEND                                       SBG 04/00  02972
CEOV1    DS    0H                                             SBG 04/00  02973
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            02974
         BO    CEOV1Z                YES. JUST TURN ON ISLABEL FLAG      02975
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV1      SBG 04/00  02976
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  02977
         BZ    CEOVN1         NO, PROCESS ORDINARILY          SBG 06/00  02978
         OI    LBLFLAG,X'10'  INSTEAD, FLAG EOF1 SEEN         SBG 03/00  02979
         NI    LBLFLAG,FF-X'40'   UNFLAG EOV1                            02980
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  02981
         MVI   LINE-1,C' '                                    SBG 03/00  02982
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 03/00  02983
         MVC   LINE(133),EOVCHG   MOVE IN MESSAGE             SBG 06/00  02984
         PUT   SYSPRINT,LINE  MESSAGE THAT WE ALTERED EOV.    SBG 06/00  02985
         B     CEOVY1                                         SBG 06/00  02986
CEOVN1   OI    LBLFLAG,X'40'  YES. FLAG EOV1 SEEN.            SBG 03/00  02987
CEOVY1   DS    0H                                             SBG 09/00  02988
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            02989
BCTCEOV1 DS    0H                                                        02990
         TM    PARMFLG3,X'20'       IS BLK COUNT CORRECTION ON?          02991
         BZ    BCTCEOVX             NO. BYPASS ROUTINE.                  02992
         MVC   INAREA+54(6),BLKCNTSV+4   MOVE IN CORRECTED COUNT         02993
         STM   R2,R3,SAVE2TO3                                            02994
         LA    R3,INAREA+76            POINT TO HI ORDER LABEL FIELD     02995
         LA    R2,BLKCNTSV             LOAD ADDRESS OF HI ORDER COUNT    02996
         ST    R7,SAVE7RG2             SAVE BAL REGISTER                 02997
         BAL   R7,MOVEHICT             MOVE NUMBERS IF NOT ZEROES        02998
         L     R7,SAVE7RG2             RESTORE BAL REGISTER              02999
         LM    R2,R3,SAVE2TO3                                            03000
BCTCEOVX DS    0H                                                        03001
* ------- OUTPUT TAPE BLOCK COUNT CORRECTION -------------- *            03002
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03003
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03004
         BZ    CEOV1ND              NO. SKIP PUTTING OUT      SBG 09/00  03005
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03006
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03007
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03008
CEOV1ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03009
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03010
         TM    PARMFLG1,X'40'   DO WE PRINT LABELS?           SBG 05/00  03011
         BZ    CEOV1Z           NO.                           SBG 05/00  03012
         ST    R3,SAVE3REG                                               03013
         LA    R3,INAREA                                                 03014
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03015
         BAL   R7,PRTXXX1     PRINT LABEL INFO                           03016
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03017
         L     R3,SAVE3REG                                               03018
CEOV1Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03019
         B     LABCHEND                                       SBG 04/00  03020
CEOV2    DS    0H                                             SBG 04/00  03021
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03022
         BO    CEOV2Z                YES. JUST TURN ON ISLABEL FLAG      03023
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  BELOW          03024
         TM    PARMFLG5,X'10'       ARE WE TURNING OFF IDRC INDICATOR?   03025
         BZ    CLRIDRV2             NO. SKIP ROUTINE.                    03026
         CLI   INAREA+34,C'P'       IS IDRC INDICATOR THERE?             03027
         BNE   CLRIDRV2                                                  03028
         MVI   INAREA+34,C' '       BLANK THE INDICATOR IN THE VOL1      03029
CLRIDRV2 DS    0H                                                        03030
* -->>>>>>            CLEAR IDRC INDICATOR IN EOF2  ----  ABOVE          03031
         NI    LBLFLAG,X'F8'  TURN OFF HDR FLAGS IF EOV2      SBG 04/00  03032
         TM    PARMFLG2,X'04' CHANGE EOV TO EOF?              SBG 06/00  03033
         BZ    CEOVN2         NO, PROCESS ORDINARILY          SBG 06/00  03034
         OI    LBLFLAG,X'20'  INSTEAD, FLAG EOF2 SEEN         SBG 03/00  03035
         NI    LBLFLAG,FF-X'80'   UNFLAG EOV2                            03036
         MVC   INAREA(3),=C'EOF'  PLUG IN FOR LABEL COPY      SBG 06/00  03037
         B     CEOVY2                                         SBG 06/00  03038
CEOVN2   OI    LBLFLAG,X'80'  YES. FLAG EOV2 SEEN.            SBG 03/00  03039
CEOVY2   DS    0H                                             SBG 09/00  03040
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03041
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?    SBG 09/00  03042
         BZ    CEOV2ND              NO. SKIP PUTTING OUT      SBG 09/00  03043
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA         SBG 09/00  03044
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO        SBG 09/00  03045
         PUT   LABLDUMP,LLINE       WRITE OUT INFO            SBG 09/00  03046
         TM    PARMFLG2,X'04'       CHANGE EOV TO EOF?                   03047
         BO    CEOV2F               ACT AS THOUGH WE'VE SEEN EOF2        03048
         OI    EOLGFLAG,X'04'       INDICATE EOV2 SEEN ON TAPE           03049
         B     CEOV2ND              AND GET OUT                          03050
CEOV2F   DS    0H                                                        03051
         OI    EOLGFLAG,X'02'       INDICATE EOF2 SEEN ON TAPE           03052
CEOV2ND  DS    0H                   END OF LABEL DUMPING CODE SBG 09/00  03053
* ---------------- LABEL DUMPING CODE --------------------- * SBG 09/00  03054
         TM    PARMFLG1,X'80'   DO WE PRINT LABELS?           SBG 05/00  03055
         BZ    CEOV2Z           NO.                           SBG 05/00  03056
         ST    R3,SAVE3REG                                               03057
         LA    R3,INAREA                                                 03058
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03059
         BAL   R7,PRTXXX2     PRINT LABEL INFO                           03060
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03061
         L     R3,SAVE3REG                                               03062
CEOV2Z   OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL   SBG 04/00  03063
         B     LABCHEND                                       SBG 04/00  03064
*- USER LABEL HANDLING CODE  ------  BELOW  --------------- *            03065
CUHL     DS    0H             HANDLE USER HEADER LABELS                  03066
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03067
         BO    CUHLEN                YES. JUST TURN ON ISLABEL FLAG      03068
         ST    R3,SAVE3REG                                               03069
         LA    R3,INAREA                                                 03070
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03071
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03072
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03073
         L     R3,SAVE3REG                                               03074
* ---------------- LABEL DUMPING CODE --------------------- *            03075
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03076
         BZ    CUHLEN               NO. SKIP PUTTING OUT                 03077
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03078
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03079
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03080
CUHLEN   DS    0H                   END OF LABEL DUMPING CODE            03081
* ---------------- LABEL DUMPING CODE --------------------- *            03082
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03083
         B     LABCHEND                                                  03084
CUTL     DS    0H             HANDLE USER TRAILER LABELS                 03085
         TM    LBDQFLG,X'01'         JUST DOING PRELIM CHECK?            03086
         BO    CUTLEN                YES. JUST TURN ON ISLABEL FLAG      03087
         ST    R3,SAVE3REG                                               03088
         LA    R3,INAREA                                                 03089
         ST    R7,SAVE7BAL    STORE PREVIOUS BAL REGISTER                03090
         BAL   R7,PRTUSER     PRINT LABEL INFO                           03091
         L     R7,SAVE7BAL    RELOAD PREVIOUS BAL REGISTER               03092
         L     R3,SAVE3REG                                               03093
* ---------------- LABEL DUMPING CODE --------------------- *            03094
         TM    PARMFLG2,X'10'       ARE WE DUMPING LABELS?               03095
         BZ    CUTLEN               NO. SKIP PUTTING OUT                 03096
         MVC   LLINE,LLINE-1        CLEAR OUTPUT AREA                    03097
         MVC   LLINE(80),INAREA     MOVE IN LABEL INFO                   03098
         PUT   LABLDUMP,LLINE       WRITE OUT INFO                       03099
CUTLEN   DS    0H                   END OF LABEL DUMPING CODE            03100
* ---------------- LABEL DUMPING CODE --------------------- *            03101
         OI    ISLBLFLG,X'01' INDICATE WE JUST READ A LABEL              03102
         B     LABCHEND                                                  03103
*- USER LABEL HANDLING CODE  ------  ABOVE  --------------- *            03104
NOTLABEL NI    ISLBLFLG,FF-X'01'  TURN OFF "IS LABEL" FLAG    SBG 04/00  03105
LABCHEND BR    R7                                             SBG 04/00  03106
* --------------------------------------------------------- * SBG 05/00  03107
*    BAL REGISTER IS R7.                                      SBG 05/00  03108
* --------------------------------------------------------- * SBG 05/00  03109
VOL1PRT  DS    0H         PRINT MESSAGE THAT VOL1 LABEL WAS   SBG 04/00  03110
*                         ALTERED.                                       03111
         MVI   LINE-1,C' '                                               03112
         MVC   LINE,LINE-1           CLEAR OUTPUT LINE                   03113
         MVC   VOLALT+13(6),LINE     CLEAR OLDVOL FIELD IN MSG           03114
         MVC   VOLALT+35(6),LINE     CLEAR NEWVOL FIELD IN MSG           03115
         MVC   VOLALT+13(6),VOLORIG  MOVE OLD VOL TO MSG                 03116
         MVC   VOLALT+35(6),VOLNEW   MOVE NEW VOL TO MSG                 03117
* ----                                                                   03118
         TM    OVERFLAG,X'01'     ARE WE OVERLAYING ALL OUTPUT VOLSERS?  03119
         BZ    INDVVOLS           NO. REPORT INDIVIDUAL VOLS             03120
         MVC   VOLALT+35(6),VOLSTG   MOVE NEW VOLSER VALUE TO MSG        03121
INDVVOLS DS    0H                                                        03122
* ----                                                                   03123
         MVC   VOLDDN(5),LINE        CLEAR FIELD                         03124
         MVC   VOLDDN(5),VOLDD       MOVE DD NAME IN                     03125
         MVC   LINE(133),VOLALT      MOVE MESSAGE TO PRT                 03126
         PUT   SYSPRINT,LINE         WRITE MESSAGE                       03127
         BR    R7                    RETURN TO CALLER                    03128
* --------------------------------------------------------- * SBG 04/00  03129
*    BAL REGISTER IS R7.                                      SBG 04/00  03130
* --------------------------------------------------------- * SBG 04/00  03131
PRTXXX1  DS    0H                                             SBG 05/00  03132
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03133
         MVI   LINE-1,C' '                                    SBG 05/00  03134
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03135
         MVC   XXX1LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03136
         MVC   XXX1VOL(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03137
         MVC   XXX1VOL(6),21(R3)     REPORT VOLUME SERIAL     SBG 05/00  03138
         MVC   XXX1DSN(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03139
         MVC   XXX1DSN(17),4(R3)     DATASET NAME             SBG 05/00  03140
         MVC   XXX1DSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03141
         MVC   XXX1DSQ(4),31(R3)     DATASET SEQUENCE NUMBER  SBG 05/00  03142
         MVC   XXX1VSQ(4),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03143
         MVC   XXX1VSQ(4),27(R3)     VOLUME SEQUENCE NUMBER   SBG 05/00  03144
         MVC   XXX1BLC(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03145
         MVC   XXX1BLC(6),54(R3)     BLOCK COUNT - 6 DIGITS   SBG 05/00  03146
         MVC   XXX1BLCH(4),LINE      CLEAR FIELD TO BLANKS               03147
         MVC   XXX1BLCH(4),76(R3)    BLOCK COUNT HI ORDER DIGITS         03148
         MVC   XXX1CRD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03149
         MVC   XXX1CRD(6),41(R3)     CREATE DATE - 6 DIGITS   SBG 05/00  03150
         MVC   XXX1EXD(6),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03151
         MVC   XXX1EXD(6),47(R3)     EXPIRE DATE - 6 DIGITS   SBG 05/00  03152
         MVC   LINE(133),XXX1LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03153
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03154
PRTXXX1R BR    R7                                             SBG 05/00  03155
* --------------------------------------------------------- * SBG 04/00  03156
*    BAL REGISTER IS R7.                                      SBG 04/00  03157
* --------------------------------------------------------- * SBG 04/00  03158
PRTXXX2  DS    0H                                             SBG 05/00  03159
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03160
         MVI   LINE-1,C' '                                    SBG 05/00  03161
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03162
         MVC   XXX2LBL+1(4),0(R3)   MOVE LABEL TYPE TO MESSAG SBG 05/00  03163
         MVC   XXX2RFM(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03164
         MVC   XXX2RFM(1),4(R3)      RECFM                    SBG 05/00  03165
         MVC   XXX2BKL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03166
         MVC   XXX2BKL(5),5(R3)      BLOCK LENGTH             SBG 05/00  03167
         MVC   XXX2RCL(5),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03168
         MVC   XXX2RCL(5),10(R3)     RECORD LENGTH            SBG 05/00  03169
         MVC   XXX2TDN(1),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03170
         MVC   XXX2TDN(1),15(R3)     TAPE DENSITY             SBG 05/00  03171
         MVC   XXX2JST(17),LINE      CLEAR FIELD TO BLANKS    SBG 05/00  03172
         MVC   XXX2JST(17),17(R3)     JOB/STEP NAME           SBG 05/00  03173
         MVC   XXX2IDR(3),LINE       CLEAR FIELD TO BLANKS    SBG 05/00  03174
         CLI   34(R3),C'P'           INDICATE IDRC?           SBG 05/00  03175
         BNE   PRX2NOI               NO. SAY NO               SBG 05/00  03176
         MVC   XXX2IDR(3),=C'YES'     IDRC COMPRESSION        SBG 05/00  03177
         B     PRX2MOV                                        SBG 04/00  03178
PRX2NOI  MVC   XXX2IDR(3),=C'NO '                             SBG 04/00  03179
PRX2MOV  MVC   LINE(133),XXX2LBL  MOVE INFO TO PRINT LINE     SBG 05/00  03180
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER       SBG 05/00  03181
PRTXXX2R BR    R7                                             SBG 05/00  03182
* --------------------------------------------------------- * SBG 04/00  03183
*    BAL REGISTER IS R7.                                      SBG 04/00  03184
* --------------------------------------------------------- * SBG 04/00  03185
PRTUSER  DS    0H                                             SBG 05/00  03186
*   R3 POINTS TO THE LABEL IMAGE TO BE PRINTED.                          03187
         MVI   LINE-1,C' '                                    SBG 05/00  03188
         MVC   LINE,LINE-1    CLEAR PRINT LINE                SBG 05/00  03189
         MVI   USERLBL-1,C' '                                            03190
         MVC   USERLBL(133),USERLBL-1                                    03191
         MVC   USERLBL+1(80),0(R3)  MOVE LABEL IMAGE TO MESSAGE          03192
         MVC   LINE(133),USERLBL  MOVE INFO TO PRINT LINE                03193
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03194
PRTUSERR BR    R7                                                        03195
* --------------------------------------------------------- *            03196
*    BAL REGISTER IS R7.                                                 03197
* --------------------------------------------------------- *            03198
PRTBLCNT DS    0H                                                        03199
         MVI   LINE-1,C' '                                               03200
         MVC   LINE,LINE-1    CLEAR PRINT LINE                           03201
         MVC   LINE(133),BLKCNTMS    MESSAGE TO PRINT LINE               03202
         PUT   SYSPRINT,LINE  WRITE MESSAGE WITH VOLSER                  03203
PRTBLCNE BR    R7                                                        03204
* --------------------------------------------------------- *            03205
*    BAL REGISTER IS R7.                                                 03206
* --------------------------------------------------------- *            03207
BACKEXTH DS    0H             BACKSPACE OVER EXTRA HEADER LABELS         03208
         ST    R7,SAVE7REG                                               03209
         TM    WRLBLFLG,X'08'     EOF ON LABADDIN FILE?                  03210
         BO    BACKEXT1           DON'T BACKSPACE OVER LAST LABEL SET    03211
         MVC   OUTCCWPT(4),=A(BACKCCW)                                   03212
BACKEXT1 L     R7,SAVE7REG                                               03213
BACKEXTE BR    R7                                                        03214
* --------------------------------------------------------- *            03215
*    BAL REGISTER IS R7.                                                 03216
* --------------------------------------------------------- *            03217
CLEARSAV DS    0H             CLEAR HDR1, HDR2, AND UHL SAVE AREAS       03218
         ST    R7,SAVE7REG                                               03219
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03220
         BZ    CLEARSV1                 NO. BYPASS CLEAR                 03221
         MVI   HDR1SAV-1,C' '           PRIME WITH BLANK                 03222
         MVC   HDR1SAV(240),HDR1SAV-1     CLEAR                          03223
         MVC   UHL2SAV(240),UHL2SAV-1       HEADER                       03224
         MVC   UHL5SAV(240),UHL5SAV-1         SAVE                       03225
         MVC   UHL8SAV(80),UHL8SAV-1            AREAS                    03226
CLEARSV1 L     R7,SAVE7REG                                               03227
CLEARSVE BR    R7                                                        03228
* --------------------------------------------------------- *            03229
*    BAL REGISTER IS R7.                                                 03230
* --------------------------------------------------------- *            03231
FIXEXTLB DS    0H             FIX AFTER BROKEN EXTERNAL LABEL FILE       03232
         ST    R7,SAVE7REG                                               03233
         TM    PARMFLG3,X'80'           IS LBLFIX OPTION ACTIVE?         03234
         BZ    FIXEXTL1         NO. BYPASS LABEL FIX OPERATION           03235
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ BELOW --- *   03236
         TM    LBLLFLAG,X'03'   DO WE HAVE AT LEAST HDR1 & HDR2          03237
         BNO   FIXEXTL1         NOT THAT MUCH. DON'T ATTEMPT TO FIX      03238
         TM    LBLLFLAG,X'70'   MISSING EOLHDR, EOF1 AND EOF2?           03239
         BZ    FIXALL3                                                   03240
         TM    LBLLFLAG,X'30'   MISSING EOF1 AND EOF2 ONLY?              03241
         BZ    FIXLAST2                                                  03242
         TM    LBLLFLAG,X'20'   MISSING ONLY EOF2?                       03243
         BZ    FIXLAST1                                                  03244
         B     FIXEXTL1         MISSING EOLTRLR DOESN'T GIVE ERROR       03245
* ------   DETERMINE HOW BROKEN THE LABEL FILE IS   ------ ABOVE --- *   03246
FIXALL3  DS    0H            REPLACE EOLHDR, EOF1, AND EOF2              03247
         L     R7,SAVE7REG                                               03248
         B     ENDHEADR      GO TO ENDHEADR PROCESSING AND THROW FLAG    03249
FIXLAST2 DS    0H               REPLACE EOF1 AND EOF2                    03250
         OI    LBLLFLAG,X'10'   MARK EOF1 SEEN                           03251
         L     R7,SAVE7REG                                               03252
         B     CORFEOF1         CREATE EOF1,FIX BLOCK COUNTS,AND WRITE   03253
FIXLAST1 DS    0H               REPLACE EOF2                             03254
         OI    LBLLFLAG,X'20'   MARK EOF2 SEEN                           03255
         L     R7,SAVE7REG                                               03256
         B     ADDEOF2          CREATE THE EOF2                          03257
FIXEXTL1 DS    0H                                                        03258
         OI    WRLBLFLG,X'10'   STOP WRITING LABELS                      03259
         L     R7,SAVE7REG                                               03260
FIXEXTLE BR    R7                                                        03261
* --------------------------------------------------------- *            03262
*    BAL REGISTER IS R7.                                                 03263
* --------------------------------------------------------- *            03264
CLEARIOB DS    0H             CLEAR THE PORTIONS OF THE OUTIOB THAT      03265
*                             IOS USES DURING EXCP PROCESSING.           03266
*                        WE DO NOT WANT TO BLINDLY REUSE THESE IOB'S.    03267
* ------------------------------------------------------------------- *  03268
         MVC   OUTIOB(4),IOB01                                           03269
         MVC   OUTCSW(8),FUL2ZERO                                        03270
         MVC   OUTDCBPT(4),FUL2ZERO                                      03271
         MVC   OUTDCBPT+4(4),FUL2ZERO                                    03272
         MVC   OUTDCBPT+8(4),IOB02                                       03273
CLEARIOE BR    R7                                                        03274
* --------------------------------------------------------- *            03275
*    BAL REGISTER IS R7.                                                 03276
* --------------------------------------------------------- *            03277
CHANGVOL DS    0H             PROCESS CHANGE VOLUME INFO FOR VOL1 LABEL  03278
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03279
         TM    WRLBLFLG,X'01'  ARE WE PROCESSING EXTERNAL LABELS NOW?    03280
         BO    CHEXTLAB        YES. JUST DO THAT STUFF.                  03281
         TM    LBLFLAG,X'04'  ARE WE WRITING A VOL1 LABEL?    SBG 05/00  03282
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03283
         TM    LBLFLAG,X'03'  IS THIS A HDR1 OR A HDR2?                  03284
         BNZ   CHANGVOE       NO. DON'T ATTEMPT TO CHANGE THIS.          03285
         TM    PARMFLG2,X'41' ARE WE CHANGING OUTPUT VOLSERS? SBG 05/00  03286
         BZ    CHANGVOE       NO, GET OUT OF THIS ROUTINE                03287
         MVC   INAREA+4(6),VOLCHG   PUT JCL VOLSER                       03288
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03289
         BZ    CHNOTOWN        NO. DON'T CHANGE OWNER INFORMATION        03290
         CLI   TAPEOWNR,C' '  IS THERE A TAPEOWNER VALUE                 03291
         BE    CHNOTOWN       NO--DON'T CHANGE OWNER INFORMATION THERE   03292
         MVC   INAREA+41(10),TAPEOWNR    MOVE TAPE OWNER INFO IF ANY     03293
         MVC   LINE(133),LINE-1                                          03294
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03295
         MVC   OWNRTID(10),TAPEOWNR      MOVE OWNER INFO INTO MSG        03296
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03297
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03298
         MVC   LINE(133),OWNRMSG                                         03299
         PUT   SYSPRINT,LINE                                             03300
CHNOTOWN DS    0H                                                        03301
         B     CHNOZAPV       TAPE INPUT - DON'T DO EXTERNAL LABELS      03302
*** ---  BELOW  --------  CHANGING VOLSER IN EXTERNAL LABELS             03303
CHEXTLAB DS    0H                                                        03304
         TM    WRLBLFLG,X'01'      IS INPUT FROM EXTERNAL LABELS?        03305
         BZ    CHNOZAPV            NO. DON'T AFFECT EXTLBLIN             03306
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03307
         BO    CHNOZAPV            YES, SKIP SECOND WRITE                03308
         TM    LBLLFLAG,X'04'      VOL1 SEEN RECENTLY?                   03309
         BZ    CHNOZAPV            NO. DON'T CHANGE CARD                 03310
         TM    LBLLFLAG,X'03'      IS THIS A HDR1 OR HDR2?               03311
         BNZ   CHNOZAPV            YES. ONLY CHANGE VOL1 CARD.           03312
         TM    PARMFLG2,X'41'      ARE WE CHANGING OUTPUT VOLSERS?       03313
         BZ    CHNOZAPV            NO. BYPASS.                           03314
         MVC   EXTLBLIN+4(6),VOLCHG       VOL1 IS FROM EXTERNAL LABEL    03315
         TM    PARMFLG2,X'40'  IS OUTVOL PARM IN EFFECT                  03316
         BZ    CHNOZAPV        NO. DON'T CHANGE OWNER INFORMATION        03317
         CLI   TAPEOWNR,C' '       IS THERE ANY CHANGE IN TAPEOWNR?      03318
         BE    CHNOZAPV            NO INFO-THEREFORE NO CHANGE           03319
         MVC   EXTLBLIN+41(10),TAPEOWNR   CHANGE TAPE OWNER TOO          03320
         MVC   LINE(133),LINE-1                                          03321
         MVC   OWNRTID(10),LINE          CLEAR FIELD                     03322
         MVC   OWNRTID(10),TAPEOWNR      MOVE OWNER INFO INTO MSG        03323
         MVC   OWNRDDO(5),LINE           CLEAR FIELD                     03324
         MVC   OWNRDDO(5),DDOCHG         MOVE OUTPUT DDNAME INTO MSG     03325
         MVC   LINE(133),OWNRMSG                                         03326
         PUT   SYSPRINT,LINE                                             03327
CHNOZAPV DS    0H                                                        03328
*** ---  ABOVE  --------  CHANGING VOLSER IN EXTERNAL LABELS             03329
         TM    INIT1FLG,X'02'      SECOND PASS THRU TAPE INIT?           03330
         BO    CHGWRIT             YES, SKIP SECOND WRITE                03331
         TM    LBLFLAG,X'04'       VOL1 FROM TAPE COPY HERE?             03332
         BO    CHGPRINT            YES, PRINT.                           03333
         TM    LBLLFLAG,X'04'      VOL1 FROM EXTERNAL LABELS HERE?       03334
         BO    CHGPRINT            YES, PRINT                            03335
         B     CHGWRIT                                                   03336
CHGPRINT DS    0H                                                        03337
         TM    LBLFLAG,X'33'       HEADERS OR TRAILERS?                  03338
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03339
         TM    LBLLFLAG,X'33'      HEADERS OR TRAILERS IN EXTERNAL LBL   03340
         BNZ   CHGWRIT             ANY OF ABOVE - DON'T PRINT MSG        03341
         MVC   VOLNEW(6),VOLCHG    MOVE VOLUME NAME IN                   03342
         MVC   VOLDD(5),DDOCHG     MOVE THIS OUTPUT DDNAME IN            03343
         ST    R7,SAVE7RG1                                               03344
         BAL   R7,VOL1PRT   PRINT MESSAGE THAT VOLSER CHANGED SBG 05/00  03345
         L     R7,SAVE7RG1                                               03346
CHGWRIT  DS    0H                                             SBG 05/00  03347
* ----------------------------------  PROCESS CHGVOL KEYWORD  SBG 05/00  03348
CHANGVOE BR    R7                  END OF ROUTINE - RETURN               03349
         SPACE 3                                                         03350
* --------------------------------------------------------- *            03351
*    BAL REGISTER IS R7.                                                 03352
* --------------------------------------------------------- *            03353
*   R2 HAS TO POINT TO THE BYTE COUNT FOR THE LAST READ                  03354
*   R3 HAS TO POINT TO THE DOUBLEWORD COUNTER TO BE INCREMENTED          03355
* --------------------------------------------------------- *            03356
ADDCOUNT DS    0H                  ADD BYTE COUNT SUBROUTINE             03357
         L     R4,0(,R3)           LOAD HIGH ORDER COUNTER               03358
         L     R5,4(,R3)           LOAD LOW  ORDER COUNTER               03359
         AR    R5,R2               ADD TO BYTE COUNT                     03360
         BNO   ADDCNOOV            NO OVERFLOW, THEN BRANCH              03361
         LA    R4,1(,R4)           ELSE, OVERFLOW TO HIGH WORD           03362
         X     R5,=X'7FFFFFFF'     GET RID OF SIGN BIT                   03363
ADDCNOOV DS    0H                                                        03364
         ST    R4,0(,R3)           PUT UPDATED COUNTER IN STORAGE        03365
         ST    R5,4(,R3)           PUT UPDATED COUNTER IN STORAGE        03366
ADDCOUNE BR    R7                  END OF ROUTINE - RETURN               03367
* --------------------------------------------------------- *            03368
*    BAL REGISTER IS R7.                                                 03369
* --------------------------------------------------------- *            03370
*   R2 HAS TO POINT TO THE BLOCK COUNTER SAVE AREA  BLKCNTSV.            03371
*   R3 HAS TO POINT TO THE EOF1 OR EOV1 HI ORDER FIELD. +76              03372
* --------------------------------------------------------- *            03373
MOVEHICT DS    0H             MOVE HIGH 4 DIGITS OF BLOCK COUNT          03374
         CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03375
         BE    MOVEHI09                                                  03376
         MVC   0(4,R3),0(R2)                                             03377
         B     MOVEHIEN                                                  03378
         LA    R2,1(,R2)                                                 03379
         LA    R3,1(,R3)                                                 03380
MOVEHI09 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03381
         BE    MOVEHI08                                                  03382
         MVC   0(3,R3),0(R2)                                             03383
         B     MOVEHIEN                                                  03384
         LA    R2,1(,R2)                                                 03385
         LA    R3,1(,R3)                                                 03386
MOVEHI08 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03387
         BE    MOVEHI07                                                  03388
         MVC   0(2,R3),0(R2)                                             03389
         B     MOVEHIEN                                                  03390
         LA    R2,1(,R2)                                                 03391
         LA    R3,1(,R3)                                                 03392
MOVEHI07 CLI   0(R2),C'0'     IS THIS DIGIT ZERO?                        03393
         BE    MOVEHIEN                                                  03394
         MVC   0(1,R3),0(R2)                                             03395
MOVEHIEN BR    R7                                                        03396
* --------------------------------------------------------- *            03397
*    BAL REGISTER IS R7.                                                 03398
* --------------------------------------------------------- *            03399
****                                                                     03400
****    AFTER ONE READ, LOGIC IS AS FOLLOWS:                             03401
****                                                                     03402
****      IF TAPE MARK  - JUST BACK SPACE FILE AND GO ON                 03403
****      IF LABEL FILE - BACK SPACE RECORD AND GO ON                    03404
****      IF DATA FILE  - BACK SPACE RECORD AND FORWARD SPACE FILE,      03405
****                      THEN BACK SPACE FILE OVER TAPE MARK.           03406
****      IF READ ERROR - PROCESS JUST LIKE ANY READ INPUT ERROR         03407
****                                                                     03408
* --------------------------------------------------------- *            03409
LBDQREAD DS    0H             DO ONE READ EXCP AND DECIDE WHAT TO DO     03410
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03411
         EXCP  INIOB          READ                                       03412
         WAIT  ECB=INECB      WAIT FOR READ                              03413
         TM    INCSW+4,X'01'  WAS TM READ?                               03414
         BO    LBDQTM         YES. BACKSPACE BACK OVER IT.               03415
         CLI   INECB,X'7F'    DID READ COMPLETE NORMALLY?                03416
         BNE   LBDQINER       NO -- DO ERROR PROCESSING                  03417
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03418
         MVC   HALFWORK(2),INCCW+6   READ LENGTH                         03419
         L     R2,FULLWORK           LOAD FULLWORD LENGTH                03420
         XC    FULLWORK,FULLWORK     CLEAR AREA COMPLETELY               03421
         MVC   HALFWORK(2),INCSW+6   RESIDUAL BYTE COUNT                 03422
         L     R3,FULLWORK           LOAD FULLWORD LENGTH                03423
         SR    R2,R3                 R2=ACTUAL LENGTH READ               03424
         NI    ISLBLFLG,FF-X'01'     TURN OFF "ISLABEL" FLAG             03425
         C     R2,=F'80'             IS THIS AN 80-BYTE BLOCK?           03426
         BNE   LBDQDATA              NO. WE DON'T HAVE A LABEL FILE      03427
         ST    R7,SAVE7RG4    SAVE BAL REGISTER                          03428
         BAL   R7,LABELCHK    SEE IF YOU'VE GOT A LABEL FILE             03429
         L     R7,SAVE7RG4    RESTORE BAL REGISTER                       03430
         TM    ISLBLFLG,X'01' IS THE CURRENT FILE A LABEL FILE?          03431
         BO    LBDQLABL       JUST BACK SPACE RECORD AND PROCESS         03432
*                             NORMALLY WITHOUT CHANGING ANYTHING.        03433
*                             BUT IF IT IS A DATA FILE,                  03434
         B     LBDQDATA       BACK SPACE RECORD AND FORWARD SPACE FILE   03435
LBDQTM   DS    0H             READ EXCP ENCOUNTERED A TAPE MARK          03436
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03437
         MVC   INCCWPT(4),=A(BK1FCCW)    BACK SPACE OVER T.M.            03438
         EXCP  INIOB          DO THIS EXCP                               03439
         WAIT  ECB=INECB      WAIT FOR READ                              03440
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03441
         BNE   LBDQINER       NO -- ERROR                                03442
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03443
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03444
LBDQINER DS    0H             READ EXCP ENCOUNTERED AN ERROR             03445
         B     INERR          HANDLE JUST LIKE ANY OTHER INPUT ERROR     03446
LBDQLABL DS    0H             READ EXCP ENCOUNTERED A LABEL FILE         03447
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03448
         MVC   INCCWPT(4),=A(BK1BCCW)    BACK SPACE OVER BLOCK READ      03449
         EXCP  INIOB          DO THIS EXCP                               03450
         WAIT  ECB=INECB      WAIT FOR READ                              03451
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03452
         BNE   LBDQINER       NO -- ERROR                                03453
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03454
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03455
LBDQDATA DS    0H             READ EXCP ENCOUNTERED A DATA FILE          03456
         MVC   INECB,=F'0'    INITIALIZE IN'S ECB                        03457
         MVC   INCCWPT(4),=A(BYPDCCW)    BACK SPACE AND THEN FS FILE     03458
         EXCP  INIOB          DO THIS EXCP                               03459
         WAIT  ECB=INECB      WAIT FOR READ                              03460
         CLI   INECB,X'7F'    DID EXCP COMPLETE NORMALLY?                03461
         BNE   LBDQINER       NO -- ERROR                                03462
         MVC   INCCWPT(4),=A(INCCW)      RESTORE PROPER CCW POINTER      03463
         B     LBDQREND       GET OUT OF ROUTINE - WORK DONE             03464
LBDQREND BR    R7                                                        03465
* --------------------------------------------------------- *            03466
*    BAL REGISTER IS R7.                                                 03467
* --------------------------------------------------------- *            03468
****                                                                     03469
****  HEX PRINT ROUTINE - PRINT CURRENT RECORD JUST READ, IN HEX.        03470
****                                                                     03471
* --------------------------------------------------------- *            03472
HEXPRINT DS    0H                                                        03473
         TM    PARMFLG5,X'20' ARE WE DOING HEX PRINT?                    03474
         BZ    NOHEXPRO       NO. DON'T DO THIS CODE.                    03475
         ST    R5,R5HXPRT                                                03476
         L     R5,SAVTRTCS                                               03477
         USING TRTCSECT,R5                                               03478
         L     R0,BCTLIMIT    LOAD REGISTER FOR COMPARE                  03479
         C     R0,=F'0'       HAVE WE PRINTED ALL WE SAID?               03480
         BNH   NOHEXPRO       YES. DON'T EXECUTE THIS ROUTINE.           03481
         L     R2,BYTESMVD    MAKE SURE R2 HAS CURRENT RECORD COUNT      03482
         C     R2,=F'132'     IS RECORD MORE THAN 1 LINE LONG?           03483
         BNH   MOVESIZ1       NO. JUST PRINT LENGTH OF RECORD.           03484
         L     R2,=F'132'     YES. LIMIT TO 132 CHARS.                   03485
MOVESIZ1 DS    0H                                                        03486
         MVC   HEXPRTWK(133),HEXPRTWK-1 CLEAR OUTPUT AREA                03487
         BCTR  R2,0           ONE LESS FOR EXECUTE                       03488
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03489
         EX    R2,MOVRULER    PUT IN HEX RULER                           03490
         PUT   SYSPRINT,LINE                                             03491
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03492
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03493
         EX    R2,PRHEXL0     TRANSLATE TO REMOVE UNPRINTABLES           03494
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03495
         EX    R2,MOVTOLIN    MOVE TRANSLATED DATA TO OUTPUT             03496
         PUT   SYSPRINT,LINE                                             03497
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03498
         EX    R2,PRHEXL1     TRANSLATE TO PRINT FIRST NIBBLE            03499
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03500
         EX    R2,MOVTOLIN    MOVE 1ST HALF OF HEX TO OUTPUT             03501
         PUT   SYSPRINT,LINE                                             03502
         EX    R2,MOVDATIN    MOVE RECORD TO WORK AREA                   03503
         EX    R2,PRHEXL2     TRANSLATE TO PRINT LAST NIBBLE             03504
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE                     03505
         EX    R2,MOVTOLIN    MOVE 2ND HALF OF HEX TO OUTPUT             03506
         PUT   SYSPRINT,LINE                                             03507
         MVC   LINE(133),LINE-1    CLEAR OUTPUT LINE FOR LATER WORK      03508
         B     HEXPREND                                                  03509
MOVDATIN MVC   HEXPRTWK(*-*),INAREA       ***  EXECUTED  ***             03510
MOVRULER MVC   LINE+1(*-*),RULERHEX       ***  EXECUTED  ***             03511
MOVTOLIN MVC   LINE+1(*-*),HEXPRTWK       ***  EXECUTED  ***             03512
PRHEXL0  TR    HEXPRTWK(*-*),TRTBL0       ***  EXECUTED  ***             03513
PRHEXL1  TR    HEXPRTWK(*-*),TRTBL1       ***  EXECUTED  ***             03514
PRHEXL2  TR    HEXPRTWK(*-*),TRTBL2       ***  EXECUTED  ***             03515
HEXPREND DS    0H                                                        03516
         L     R2,BYTESMVD    RESTORE R2 FOR LATER USE                   03517
NOHEXPRO DS    0H                                                        03518
         L     R5,R5HXPRT                                                03519
         DROP  R5                                                        03520
         BR    R7             RETURN TO CALLER                           03521
* --------------------------------------------------------- *            03522
* - - - - - - END - SUBROUTINES   - - - - - - - - - - - - - - SBG 04/00  03523
         EJECT                                                           03524
* - - - - - - C O N S T A N T S   - - - - - - - - - - - - - - - - - - *  03525
BYTESMVD DS    0F             FULLWORD OF CURRENT BYTES MOVED            03526
BYTESCOH DC    H'0'           HI ORDER - SHOULD BE ALWAYS ZERO           03527
BYTESCOP DC    H'0'           CURRENT NUMBER OF BYTES COPIED FROM INPUT  03528
FUL2ZERO DC    2F'0'                                                     03529
IOB01    DC    X'02000000'                                               03530
IOB02    DC    X'00010000'                                               03531
PL4NO3   DC    PL4'3'                                                    03532
BLOKCNTP DC    F'0'                                                      03546
FILECNTP DC    F'1'                                                      03547
TOTBY    DS    0D             BYTE COUNT SAVE AREA FOR TOTAL BYTES
TOTBYH   DC    F'0'
TOTBYL   DC    F'0'
PRVBY    DS    0D             BYTE COUNT SAVE AREA PREVIOUS TOTAL BYTES
PRVBYH   DC    F'0'
PRVBYL   DC    F'0'
DBINF    DS    0D             BYTE COUNT SAVE AREA FOR INPUT FILE        03533
DBINFH   DC    F'0'                                                      03534
DBINFL   DC    F'0'                                                      03535
DBIN     DS    0D             BYTE COUNT SAVE AREA FOR INPUT TOTAL       03536
DBINH    DC    F'0'                                                      03537
DBINL    DC    F'0'                                                      03538
LABIN    DS    0D             BYTE COUNT SAVE AREA FOR INPUT LABELS      03539
LABINH   DC    F'0'                                                      03540
LABINL   DC    F'0'                                                      03541
WORKA    DC    D'0'                                                      03542
WORKL    DC    D'0'                                                      03543
WORKP    DC    D'0'                                                      03544
SAV01MLT DC    D'0'                                                      03545
SAV4HEX  DC    F'0'                  Save BAL register for HEX macro     05333
HEXSAVE  DS    3F                    Register save for HEX macro         05321
BLOKCNT  DC    F'0'                                                      03546
FILECNT  DC    F'1'                                                      03547
LABELCNT DC    F'0'                                                      03548
SAVUNIT  DC    CL4' '
         DC    CL1' '         Need this to absorb blank from HEX macro
SAVDDN   DC    CL5' '
SAVVOLSR DC    CL6' '
SAVBYTES DC    X'0000'                                                   03549
EOFINFLG DC    X'00'          END OF INPUT TAPE FILES WITH LIMFILE       03550
EOFLBFLG DC    X'00'          END OF INPUT LABEL SETS WITH LIMLIMIT      03551
EXEOFLAG DC    X'00'          EXTRA EOFS WITH LABADDIN AND FILELIMIT     03552
UNEXFLAG DC    X'00'          UNIT EXCEPTION FLAG                        03553
*              X'01'          A UNIT EXCEPTION HAS OCCURRE ON AN OUTPUT  03554
INIT1FLG DC    X'00'          FLAG WRITING THE SECOND INIT LABEL         03555
SLFLAG   DC    X'00'          IF DID INITIAL READ, MARK IF SL TAPE       03556
*              X'01'          TAPE IS SL                                 03557
LBDQFLG  DC    X'00'          X'01' IF DOING LBDQUICK PRELIM LAB CHECK   03558
WRLBLFLG DC    X'00'          FLAG TELLING IF WE ARE WRITING LABELS      03559
*              X'00'          WE ARE NOW WRITING DATA FROM THE           03560
*                             INPUT TAPE. X'01' IS OFF.                  03561
*              X'01'          WE ARE NOW WRITING LABELS FROM THE         03562
*                             EXTERNAL FILE                              03563
*              X'02'          WE ARE WRITING AN EXTRA TAPE MARK          03564
*              X'04'          WE CAME FROM THE ENDHEADR LABEL            03565
*              X'08'          WE CAME FROM THE LBLINEND LABEL            03566
*                             THIS MEANS EOF OF THE LABADDIN FILE        03567
*              X'10'          FINISHED FIXING LABELS                     03568
ISLBLFLG DC    X'00'          FLAG INDICATING WE JUST READ A LABEL       03569
*              X'00'          DATA IS NOT A LABEL                        03570
*              X'01'          DATA IS A LABEL                            03571
ENDITFLG DC    X'00'          FLAG INDICATING GET OUT FAST               03572
*              X'01'          BECAUSE OF LABLDUMP DD MISSING             03573
*              X'02'          BECAUSE OF SYSIN    DD MISSING             03574
*              X'04'          BECAUSE OF LABADDIN DD MISSING             03575
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                03576
*              X'01'          LABLDUMP DD IS OPEN                        03577
*              X'02'          SYSIN    DD IS OPEN                        03578
*              X'04'          LABADDIN DD IS OPEN                        03579
OUTBYT   DS    0F                                                        03580
OUTBYTH  DC    X'0000'        HI ORDER SO YOU USE A FULL REGISTER        03581
OUTBYTL  DC    X'0000'        OUTPUT BYTE COUNT BEFORE WRITE             03582
TOTBYTES DC    D'0'                COUNT OF TOTAL BYTES COPIED (BINARY)  03583
LABBYTES DC    D'0'                COUNT OF TOTAL BYTES IN LABELS        03584
FILBYTES DC    D'0'                COUNT OF TOTAL BYTES IN FILES         03585
TWO31    DC    P'2147483648'       2 TO THE 31ST                         03586
TAPEOWNR DC    CL10' '                                                   03587
INVOLUME DC    CL6'      '                                    SBG 03/00  03588
         DC    C'      '                                                 03589
         DC    C'0'                                                      03590
PRVCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      03591
         DC    C'0'                                                      03590
BLKCNTSV DC    C'0000000000'   SAVE FULL BLOCK COUNT FOR DATA FILES      03591
         DC    C'      '                                                 03592
DWORD    DC    D'0'                                                      03593
QWORD    DS    PL16                                                      03594
ZERO23   DC    23C'0'         TEST FOR IEHINITTED HDR1        SBG 03/00  03595
         CNOP  0,8                                                       03596
INCCW    DC    X'02',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  03597
OUTCCW   DC    X'01',AL3(INAREA),X'2000',X'FFFF'              SBG 03/00  03598
REWCCW   DC    X'07',AL3(INAREA),X'6000',X'FFFF'              SBG 03/00  03599
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03600
BACKCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE 2 FILES   03601
BK1FCCW  DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE ONE FILE  03602
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03603
BK1BCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     03604
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03605
BYPDCCW  DC    X'27',AL3(INAREA),X'6000',X'FFFF'     BACKSPACE BLOCK     03606
         DC    X'3F',AL3(INAREA),X'6000',X'FFFF'     FWD SPACE FILE      03607
         DC    X'2F',AL3(INAREA),X'6000',X'FFFF'     BACK OVER T.M.      03608
         DC    X'03',AL3(INAREA),X'2000',X'FFFF'                         03609
INECB    DC    F'0'                                                      03610
INIOB    DC    X'02000000'                                               03611
         DC    A(INECB)                                                  03612
INCSW    DC    2F'0'                                                     03613
INCCWPT  DC    A(INCCW)                                                  03614
         DC    A(IN)                                                     03615
         DC    F'0'                                                      03616
         DC    X'00010000'                                               03617
OUTECB   DC    F'0'                                                      03618
OUTIOB   DC    X'02000000'                                               03619
         DC    A(OUTECB)                                                 03620
OUTCSW   DC    2F'0'                                                     03621
OUTCCWPT DC    A(OUTCCW)                                                 03622
OUTDCBPT DC    A(OUT1)                                                   03623
         DC    F'0'                                                      03624
         DC    X'00010000'                                               03625
REWECB   DC    F'0'                                                      03626
REWIOB   DC    X'02000000'                                               03627
         DC    A(REWECB)                                                 03628
REWCSW   DC    2F'0'                                                     03629
         DC    A(REWCCW)                                                 03630
REWDCBPT DC    A(OUT1)                                                   03631
         DC    F'0'                                                      03632
         DC    X'00010000'                                               03633
         SPACE 3                                                         03634
DDOCHG   DC    C'     '                                                  03635
DDOUT1   DC    C'OUT1 '                                                  03636
DDOUT2   DC    C'OUT2 '                                                  03637
DDOUT3   DC    C'OUT3 '                                                  03638
DDOUT4   DC    C'OUT4 '                                                  03639
DDOUT5   DC    C'OUT5 '                                                  03640
DDOUT6   DC    C'OUT6 '                                                  03641
DDOUT7   DC    C'OUT7 '                                                  03642
DDOUT8   DC    C'OUT8 '                                                  03643
DDOUT9   DC    C'OUT9 '                                                  03644
DDOUT10  DC    C'OUT10'                                                  03645
DDOUT11  DC    C'OUT11'                                                  03646
DDOUT12  DC    C'OUT12'                                                  03647
DDOUT13  DC    C'OUT13'                                                  03648
DDOUT14  DC    C'OUT14'                                                  03649
DDOUT15  DC    C'OUT15'                                                  03650
DDOUT16  DC    C'OUT16'                                                  03651
FLAGLIT  DC    C' - FLAGS - '                                            03652
* --------------------------                                             03653
EOLGFLAG DC    X'00'          END OF LABEL GROUP FLAG - FOR LABLDUMP     03654
*              X'01'          WE ARE IN A HDR GROUP                      03655
*              X'02'          WE ARE IN A EOF GROUP                      03656
*              X'04'          WE ARE IN A EOV GROUP                      03657
* --------------------------                                             03658
INEODFLG DC    X'00'             X'02' IF END OF DATA ON INPUT TAPE      03659
FLAG1    DC    X'00'                                                     03660
OP1      EQU   X'80'                                                     03661
OP2      EQU   X'40'                                                     03662
OP3      EQU   X'20'                                                     03663
OP4      EQU   X'10'                                                     03664
OP5      EQU   X'08'                                                     03665
OP6      EQU   X'04'                                                     03666
OP7      EQU   X'02'                                                     03667
OP8      EQU   X'01'                                                     03668
FLAG2    DC    X'00'                                                     03669
OP9      EQU   X'80'                                                     03670
OP10     EQU   X'40'                                                     03671
OP11     EQU   X'20'                                                     03672
OP12     EQU   X'10'                                                     03673
OP13     EQU   X'08'                                                     03674
OP14     EQU   X'04'                                                     03675
OP15     EQU   X'02'                                                     03676
OP16     EQU   X'01'                                                     03677
FLAG2A   DC    X'00'                                          SBG 03/00  03678
ERR      EQU   X'02'                                                     03679
EOV      EQU   X'01'                                                     03680
FF       EQU   X'FF'                                                     03681
FLAG3    DC    X'00'                                                     03682
FLAG4    DC    X'00'                                                     03683
FLAG4A   DC    X'00'         COPY IMAGE FOR SAFETY'S SAKE     SBG 03/00  03684
L80FLAG  DC    X'00'                                          SBG 03/00  03685
*              X'01'    LAST DATA WAS 80 BYTE RECORD          SBG 03/00  03686
* ---------- *                                                           03687
ABENDFLG DC    X'00'    Should we do an ABEND 069 ?                      03688
*              x'01'    Yes.                                             03689
* ---------- *                                                           03690
LBLFLAG  DC    X'00'    FLAG WHEN TAPE LABELS ARE BEING READ IN          03691
*              X'01'    HDR1 HAS BEEN SEEN                    SBG 03/00  03692
*              X'02'    HDR2 HAS BEEN SEEN                    SBG 03/00  03693
*              X'04'    VOL1 HAS BEEN SEEN                    SBG 03/00  03694
*              X'08'    HDR1 IS FROM AN INITTED TAPE          SBG 03/00  03695
*              X'10'    EOF1 HAS BEEN SEEN                    SBG 04/00  03696
*              X'20'    EOF2 HAS BEEN SEEN                    SBG 04/00  03697
*              X'40'    EOV1 HAS BEEN SEEN                    SBG 04/00  03698
*              X'80'    EOV2 HAS BEEN SEEN                    SBG 04/00  03699
* ---------- *                                                           03700
LBLLFLAG DC    X'00'    FLAG TO IDENTIFY EXTERNAL LABELS BEING READ IN   03701
*              X'01'    HDR1 HAS BEEN READ IN                            03702
*              X'02'    HDR2 HAS BEEN READ IN                            03703
*              X'04'    VOL1 HAS BEEN READ IN                            03704
*              X'08'    UHL  HAS BEEN READ IN                            03705
*              X'10'    EOF1 HAS BEEN READ IN                            03706
*              X'20'    EOF2 HAS BEEN READ IN                            03707
*              X'40'    ----ENDOFLABELHEADER  HAS BEEN READ IN           03708
*              X'80'    ----ENTOFLABELTRAILER HAS BEEN READ IN           03709
* ---------- *                                                           03710
STRIPFLG DC    X'00'                                                     03711
*              X'01'    LABEL HAS BEEN ENCOUNTERED - SKIP IT AND T.M.    03712
DATFLAG  DC    X'00'                                          SBG 03/00  03713
*              X'10'    NO REAL DATA HAS BEEN READ YET        SBG 03/00  03714
* --------------------------------------------------------- * SBG 04/00  03715
VOLDD    DC    C'     '                                                  03716
STOR7REG DS    F                                                         03717
TOTB7REG DS    F
SAV14T03 DC    6F'0'    SAVE REGS 14 THRU 03                  TEST       03718
SAV14T12 DC    16F'0'   SAVE REGS 14 THRU 12                  TEST       03719
BYTESPAT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   03720
         DC    C' BYTES COPIED SUCCESSFULLY FOR:'                        03721
         SPACE 3                                                         03722
LABELITH DC    CL80'----ENDOFLABELHEADER '                               03723
LABELITI DC    CL80'----ENDOFLABELHEADERINIT'                            03724
LABELITR DC    CL80'----ENDOFLABELTRAILER'                               03725
LABELITV DC    CL80'----ENDOFLABELTRAILEREOV'                            03726
* ------------------------ INITIALIZATION OF VOLUMES ---- BELOW ---- *   03727
VOL1LABL DS    0CL80                                                     03728
VOL1LIT  DC    CL4'VOL1'                                                 03729
VOL1SERL DC    CL6' '                                                    03730
VOL1FIL1 DC    CL31' '                                                   03731
VOL1ONER DC    CL10' '                                                   03732
VOL1FIL2 DC    CL29' '                                                   03733
* ------------------------ INITIALIZATION OF VOLUMES --------------- *   03734
HDR1INIT DS    0CL80                                                     03735
HDR1ILIT DC    CL4'HDR1'                                                 03736
HDR1IFIL DC    76C'0'                                                    03737
* ------------------------ INITIALIZATION OF VOLUMES ---- ABOVE ---- *   03738
TOTWLINE DC    C' TOTAL BYTES WITHOUT LABELS: '                          03739
TOTWPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   03740
         DC    CL78' '                                                   03741
TOTLLINE DC    C' TOTAL BYTES IN TAPE LABELS: '                          03742
TOTLPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   03743
         DC    CL78' '                                                   03744
TOTBLINE DC    C' TOTAL BYTES READ ON INPUT : '                          03745
TOTBPATT DC    X'40206B2020206B2020206B2020206B2020206B2020206B202120'   03746
         DC    CL78' '                                                   03747
BLKCNTMS DC    C' BLOCK COUNTS IN EOF1 AND EOV1 ARE BEING CORRECTED FO'  03748
         DC    C'R TAPE COPY OPERATION '                                 03749
         DC    CL58' '                                                   03750
INNOTOPN DC    C' CODE A DD CARD FOR //IN , SINCE THIS OPTION OF COPYM'  03751
         DC    C'ODS NEEDS TO READ AN INPUT TAPE. TO INIT TAPES, CODE '  03752
         DC    C'A PARM OF INITVOLS.'                                    03753
         DC    CL8' '                                                    03754
LDMPOUTM DC    C' LABELS ARE BEING DUMPED.  OUTPUT DSN=               '  03755
         DC    C'                             MEMBER=         VOLUME= '  03756
         DC    C'                          '                             03757
LDMPINMS DC    C' LABELS ARE BEING CREATED.  INPUT DSN=               '  03758
         DC    C'                             MEMBER=         VOLUME= '  03759
         DC    C'                          '                             03760
LDMPMSG  DC    C' WITH THE LABLDUMP PARM CODED, YOU HAVE TO CODE A //L'  03761
         DC    C'ABLDUMP DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  03762
         DC    C' MULTIPLE OF 80           '                             03763
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  03764
         DC    C' IS TREATED AS NL.                                   '  03765
         DC    CL27' '                                                   03766
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  03767
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  03768
         DC    CL27' '                                                   03769
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  03770
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  03771
         DC    CL27' '                                                   03772
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 03773
         DC    CL6'&HEXDFLM'                                             03774
         DC    C' RECORDS WILL'                                          03775
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  03776
         DC    C'SYSIN.'                                                 03777
         DC    CL17' '                                                   03778
STRPMSG  DC    C' STRIPPING LABELS FROM THE OUTPUT TAPES.  ANY LABELS '  03779
         DC    C'ENCOUNTERED ON INPUT, WILL NOT BE WRITTEN TO THE OUTP'  03780
         DC    C'UT TAPES.                 '                             03781
NSYSMSG  DC    C' WITH THE SYSIN    PARM CODED, YOU HAVE TO CODE A //S'  03782
         DC    C'YSIN    DD CARD WITH LRECL=80,RECFM=FB. ANY BLKSIZE A'  03783
         DC    C' MULTIPLE OF 80           '                             03784
NLABMSG  DC    C' WITH THE LABADDIN PARM CODED, CODE A //LABADDIN DD C'  03785
         DC    C'ARD POINTING TO A DATASET OR MEMBER CONTAINING LABEL '  03786
         DC    C'IMAGES.                   '                             03787
NOLABSL  DC    C' WITH THE LABADDIN PARM CODED, YOU CAN''T ADD LABELS '  03788
         DC    C'TO A TAPE THAT IS ALREADY STANDARD LABELED.          '  03789
         DC    C'                           '                            03790
DIAGMS1  DC    C' You have gotten to Diagnostic Message #1 - I am writ'  03791
         DC    C'ing a Tape Mark right now.                           '  03792
         DC    C'                          '                             03793
FORCENLM DC    C' *** File Limiting by NL file numbers has been forced'  03794
         DC    C'.  Divide by 3 for the SL file number ***            '  03795
         DC    C'                          '                             03796
FORCESLM DC    C' *** File Limiting by SL file numbers has been forced'  03797
         DC    C'.  Multiply by 3 for the NL file number ***          '  03798
         DC    C'                          '                             03799
TWOFORCE DC    C' *** File Limiting by SL and NL file numbers both spe'  03800
         DC    C'cified.  SL is now in effect.  If NL is wanted, do no'  03801
         DC    C't code PARM=SLLIM.        '                             03802
INEQC    DC    C' *********** EQUIPMENT CHECK ON INPUT -- COPY '         03803
         DC    C'TERMINATED '                                            03804
         DC    76C'*'                                                    03805
INDCK    DC    C' ********** DATA CHECK ON INPUT -- COPY TERMINATED '    03806
         DC    82C'*'                                                    03807
VOLALT   DC    C' VOL1 VOLSER XXXXXX WAS ALTERED TO XXXXXX'   SBG 03/00  03808
         DC    C' FOR DDNAME '                                           03809
VOLDDN   DC    C'     '                                                  03810
VOLFILL  DC    75C' '                    VOL1 CHANGE MESSAGE  SBG 03/00  03811
OWNRMSG  DC    C' VOL1 TAPE OWNER FIELD WAS CHANGED TO '                 03812
OWNRTID  DC    C'          '                                             03813
OWNRLIT1 DC    C' FOR DDNAME '                                           03814
OWNRDDO  DC    C'     '                                                  03815
OWNRFIL2 DC    68C' '                                                    03816
LTMRPT   DC    C' LEADING TAPE MARK WAS '                     SBG 03/00  03817
LTMRPTI  DC    C'       '                  COPIED OR SKIPPED  SBG 03/00  03818
         DC    103C' '                                        SBG 03/00  03819
EOVCHG   DC    C' EOV LABELS FOUND - CHANGED TO EOF AS PER '  SBG 06/00  03820
         DC    C'EOV2EOF PARM OR OPTION'                      SBG 06/00  03821
         DC    69C' '                                         SBG 06/00  03822
INITCREA DC    C'CREATED WITHOUT INPUT TAPE  '                           03823
INITMSG  DC    C' INITTED TAPE HAS BEEN '                                03824
INITCOPD DC    C'COPIED  - ORIGINAL VOLSER = '                           03825
INITSER  DC    C'      '                                      SBG 03/00  03826
INITBLNK DC    76C' '                                         SBG 03/00  03827
VOL1LBL  DC    C' VOL1 LABEL HAS BEEN DETECTED - VOLSER = '   SBG 03/00  03828
VOL1SER  DC    C'      '                                      SBG 03/00  03829
VOL1OWNT DC    C'     OWNER = '                               SBG 04/00  03830
VOL1OWNR DC    C'          '                                  SBG 04/00  03831
VOL1BLNK DC    63C' '                                         SBG 03/00  03832
         DC    C' '                                                      03833
USERLBL  DC    81C' '                                         SBG 03/00  03834
         DC    52C' '                                                    03835
XXX1LBL  DC    C' XXX1 LABEL: 1STVOL= '                       SBG 05/00  03836
XXX1VOL  DC    C'      '                                      SBG 05/00  03837
XXX1DSNL DC    C' DSN='                                       SBG 05/00  03838
XXX1DSN  DC    C'                 '                           SBG 05/00  03839
XXX1DSQL DC    C' DS SEQ #: '                                 SBG 05/00  03840
XXX1DSQ  DC    C'    '                                        SBG 05/00  03841
XXX1VSQL DC    C' VOL SEQ #: '                                SBG 05/00  03842
XXX1VSQ  DC    C'    '                                        SBG 05/00  03843
XXX1BLCL DC    C' BLK CNT: '                                  SBG 05/00  03844
XXX1BLCH DC    C'    '                                        SBG 05/00  03845
XXX1BLC  DC    C'      '                                      SBG 05/00  03846
XXX1CRDL DC    C' CRDATE: '                                   SBG 05/00  03847
XXX1CRD  DC    C'      '                                      SBG 05/00  03848
XXX1EXDL DC    C' EXDATE: '                                   SBG 05/00  03849
XXX1EXD  DC    C'      '                                      SBG 05/00  03850
XXX1BLNK DC    30C' '                                         SBG 03/00  03851
XXX2LBL  DC    C' XXX2 LABEL: RECFM= '                        SBG 05/00  03852
XXX2RFM  DC    C' '                                           SBG 05/00  03853
XXX2BKLL DC    C'   BLOCK LENGTH: '                           SBG 05/00  03854
XXX2BKL  DC    C'     '                                       SBG 05/00  03855
XXX2RCLL DC    C'   RECORD LENGTH: '                          SBG 05/00  03856
XXX2RCL  DC    C'     '                                       SBG 05/00  03857
XXX2TDNL DC    C'  TAPE DEN: '                                SBG 05/00  03858
XXX2TDN  DC    C' '                                           SBG 05/00  03859
XXX2JSTL DC    C'   JOB/JOB STEP: '                           SBG 05/00  03860
XXX2JST  DC    C'                 '                           SBG 05/00  03861
XXX2IDRL DC    C'   IDRC? '                                   SBG 05/00  03862
XXX2IDR  DC    C'   '                                         SBG 05/00  03863
XXX2BLNK DC    8C' '                                          SBG 03/00  03864
OUTCOUNT DC    C' Files Copied:  XXXXX        ON DD XXXXX, UNIT '        03865
         DC    C'XXXX, VOLUME XXXXXX -- File''s Blocks:  '               03866
OUTCFCNT DC    C'XXXXXXXXXX'
         DC    C'  Bytes:'
OUTCBCNT DC    CL26' '
         DC    C' '                                                      03867
OUTEQC   DC    C' *********** EQUIPMENT CHECK ON DD XXXXX, UNIT '        03865
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         03866
         DC    40C'*'                                                    03867
OUTUNEX  DC    C' *********** TAPE HAS ENDED  ON DD XXXXX, UNIT '        03868
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         03869
         DC    40C'*'                                                    03870
OUTDCK   DC    C' **********       DATA CHECK ON DD XXXXX, UNIT '        03871
         DC    C'XXXX, VOLUME XXXXXX -- THIS OUTPUT TERMINATED '         03872
         DC    40C'*'                                                    03873
FILEDONE DC    C' FILE 00000 CONTAINS 0000000 DATA BLOCKS'               03874
FILEPBYT DS    0CL44                                                     03875
FILEDFL1 DC    C' '                                                      03876
FILECONT DC    C'          '                                             03877
FILEDFL2 DC    C' '                                                      03878
FILEBYTE DC    C' 9,999,999,999,999,999,999'                             03879
         DC    C' BYTES'                                                 03880
FILETBYT DS    0CL44                                                     03881
FILEDFL3 DC    C'    '                                                   03882
FILECUMT DC    C'          '                                             03883
FILEDFL4 DC    C' '                                                      03884
FILETBYE DC    C' 9,999,999,999,999,999,999'                             03885
         DC    8C' '                                                     03886
SUCCESS  DC    C'0COPY CORRECTLY COMPLETED FOR OUT1, OUT2, OUT3, OU'     03887
         DC    C'T4, OUT5, OUT6, OUT7, OUT8, OUT9, OUT10, OUT11, OU'     03888
         DC    C'T12, OUT13, OUT14, OUT15, OUT16  '                      03889
         DC    C'       '          BLANKS FOR COVERING UP     SBG 03/00  03890
READOMSG DC    C'0THIS RUN OF THE COPYMODS PROGRAM IS READ-ONLY. JCL VOX 03891
               LSER: XXXXXX '                                 SBG 06/00  03892
         DC    66C' '                                         SBG 06/00  03893
SUCCESSR DC    C'0TAPE READ CORRECTLY COMPLETED FOR DDNAME IN, VOLUME SX 03894
               ERIAL XXXXXX '                                 SBG 06/00  03895
         DC    66C' '                                         SBG 06/00  03896
         DC    C' '                                                      03897
HEXPRTWK DC    CL133' '                                                  03898
         DC    C' '                                                      03899
LINE     DC    CL133' '                                                  03900
         DC    C' '                                                      03899
SAVELINE DC    CL133' '                                                  03900
LINE44   DC    CL44' '                                                   03901
RULERHEX DS    0CL132                                                    03902
         DC    C'----+----1----+----2----+----3----+----4----+----5--'   03903
         DC    C'--+----6----+----7----+----8----+----9----+----0----+'  03904
         DC    C'----1----+----2----+----3----+----4'                    03905
REPLY    DC    C'      '                                                 03906
COPIED   DC    C'COPIED '                                     SBG 03/00  03907
SKIPPED  DC    C'SKIPPED'                                     SBG 03/00  03908
FULLWORK DS    0F                                             SBG 03/00  03909
         DC    H'0'                                           SBG 03/00  03910
HALFWORK DC    H'0'                HALFWORD WORK AREA         SBG 03/00  03911
         DC    2F'0'               FILLER                     SBG 05/00  03912
***** ------- >>>>>   Received values from PARMCHEK program --- BELOW    03913
* --------------------------------------------------------- * SBG 05/00  03914
PARMFLGS DS    0CL5     5 CONTIGUOUS BYTES OF PARM FLAGS      SBG 04/00  03915
PARMFLG1 DC    X'00'                                          SBG 03/00  03916
*              X'DE'    LABEL INFORMATION WILL BE PRINTED     SBG 03/00  03917
*              X'20'    LEADING TAPE MARKS WILL BE SKIPPED    SBG 03/00  03918
PARMFLG2 DC    X'00'                                          SBG 03/00  03919
PARMFLG3 DC    X'00'                                          SBG 03/00  03920
PARMFLG4 DC    X'00'                                          SBG 03/00  03921
PARMFLG5 DC    X'00'                                          SBG 03/00  03922
PARMFLLN EQU   *-PARMFLGS                                                03923
* --------------------------------------------------------- * SBG 05/00  03924
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     03925
         DS    0F                                                        03926
STRTVALU DS    0CL(ENDVALUE)                                             03927
         DC    A(ENDVALUE)                                               03928
PARMSLEN DC    F'0'                LENGTH OF PARMS                       03929
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       03930
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               03931
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             03932
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             03933
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             03934
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   03935
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   03936
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   03937
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  03938
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  03939
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  03940
PARMTENT DC    CL15' '             PARM TABLE ENTRY DUMP                 03941
         DC    CL7' '              FILLER                                03942
PARMFWRK DC    XL5'00'             FOR TURNING OFF PARM BYTES            03943
*  -----    User Stuff  ---  Needs same order as in PARMCHEK program     03944
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          03945
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  03946
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      03947
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         03948
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         03949
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         03950
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       03951
TAPEOWN  DC    CL10' '                                                   03952
OVERFLAG DC    X'00'                                                     03953
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               03954
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    03955
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         03956
LIMCHAR  DC    CL10' '                                                   03957
LABCHAR  DC    CL10' '                                                   03958
PRTCHAR  DC    CL10' '                                                   03959
ENDVALUE EQU   (*-PARMSLEN)+4                                            03960
***** ------- >>>>>   Received values from PARMCHEK program --- ABOVE    03961
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     03962
* --------------------------------------------------------- * SBG 05/00  03963
*              FORMAT OF PARM TABLE                           SBG 04/00  03964
*              ONE ENTRY IS 15 BYTES                          SBG 04/00  03965
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX    SBG 04/00  03966
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF      SBG 04/00  03967
*                               X'00' SAYS TURN FLAG ON       SBG 04/00  03968
*                               X'10' SET ENTRY AS A DEFAULT  SBG 04/00  03969
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED    SBG 04/00  03970
*                NEXT 5 BYTES:  FLAG SETTINGS - 5 FLAGS,      SBG 04/00  03971
*                                WHICH ALLOWS FOR 40 PARMS    SBG 04/00  03972
*                                THAT DON'T HAVE TO BE        SBG 04/00  03973
*                                SEPARATED BY A COMMA.        SBG 04/00  03974
PBYTES   EQU   5                NUMBER OF PARM SWITCH BYTES   SBG 05/00  03975
* --------------------------------------------------------- * SBG 05/00  03976
EFFS     DC    X'FFFFFFFFFFFFFFFF'                                       03977
* --------------------------------------------------------- *            03978
         SPACE 3                                                         03979
         LTORG                                                           03980
         SPACE 3                                                         03981
         DS    0D                                             SBG 09/00  03982
LBNEXLST DC    X'87',AL3(LBNJFCB)                                        03983
LBNJFCB  DC    44F'0'                                                    03984
         DS    0D                                             SBG 09/00  03985
LBLEXLST DC    X'87',AL3(LBLJFCB)                                        03986
LBLJFCB  DC    44F'0'                                                    03987
         DS    0D                                             SBG 05/00  03988
OUTEXLST DC    X'87',AL3(OUTJFCB)                                        03989
OUTJFCB  DC    44F'0'                                                    03990
         DS    0D                                             SBG 06/00  03991
INEXLST  DC    X'87',AL3(INJFCB)                              SBG 06/00  03992
INJFCB   DC    44F'0'                                         SBG 06/00  03993
         SPACE 3                                                         03994
INVOL    DC    C'      '     INPUT VOLUME NAME FROM VOL1 LABEL           03995
INVOLJ   DC    C'      '     INPUT VOLUME NAME FROM JCL VOLUME           03996
VOLORIG  DC    C'      '     JCL VOLUME NAME - FROM VOL1 LABEL           03997
VOLNEW   DC    C'      '     JCL VOLUME NAME - TO SUBSTITUTE             03998
VOLCHG   DC    C'      '                                                 03999
VOLSTG   DC    C'      '    CARD VOLUME NAME - TO OVERLAY OTHERS         04000
VOLALL   DS    0CL96         16 X 6                                      04001
VOLUME1  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04002
VOLUME2  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04003
VOLUME3  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04004
VOLUME4  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04005
VOLUME5  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04006
VOLUME6  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04007
VOLUME7  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04008
VOLUME8  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04009
VOLUME9  DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04010
VOLUME10 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04011
VOLUME11 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04012
VOLUME12 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04013
VOLUME13 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04014
VOLUME14 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04015
VOLUME15 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04016
VOLUME16 DC    C'      '     JCL VOLUME NAME - FROM RDJFCB               04017
* --------------------------------------------------------- * SBG 05/00  04018
         SPACE 3                                                         04019
IN       DCB   MACRF=(E),DDNAME=IN,DEVD=TA,DSORG=PS,RECFM=U,           X 04020
               EXLST=INEXLST                                             04021
OUT1     DCB   MACRF=(E),DDNAME=OUT1,DEVD=TA,DSORG=PS,RECFM=U,         X 04022
               EXLST=OUTEXLST                                            04023
OUT2     DCB   MACRF=(E),DDNAME=OUT2,DEVD=TA,DSORG=PS,RECFM=U,         X 04024
               EXLST=OUTEXLST                                            04025
OUT3     DCB   MACRF=(E),DDNAME=OUT3,DEVD=TA,DSORG=PS,RECFM=U,         X 04026
               EXLST=OUTEXLST                                            04027
OUT4     DCB   MACRF=(E),DDNAME=OUT4,DEVD=TA,DSORG=PS,RECFM=U,         X 04028
               EXLST=OUTEXLST                                            04029
OUT5     DCB   MACRF=(E),DDNAME=OUT5,DEVD=TA,DSORG=PS,RECFM=U,         X 04030
               EXLST=OUTEXLST                                            04031
OUT6     DCB   MACRF=(E),DDNAME=OUT6,DEVD=TA,DSORG=PS,RECFM=U,         X 04032
               EXLST=OUTEXLST                                            04033
OUT7     DCB   MACRF=(E),DDNAME=OUT7,DEVD=TA,DSORG=PS,RECFM=U,         X 04034
               EXLST=OUTEXLST                                            04035
OUT8     DCB   MACRF=(E),DDNAME=OUT8,DEVD=TA,DSORG=PS,RECFM=U,         X 04036
               EXLST=OUTEXLST                                            04037
OUT9     DCB   MACRF=(E),DDNAME=OUT9,DEVD=TA,DSORG=PS,RECFM=U,         X 04038
               EXLST=OUTEXLST                                            04039
OUT10    DCB   MACRF=(E),DDNAME=OUT10,DEVD=TA,DSORG=PS,RECFM=U,        X 04040
               EXLST=OUTEXLST                                            04041
OUT11    DCB   MACRF=(E),DDNAME=OUT11,DEVD=TA,DSORG=PS,RECFM=U,        X 04042
               EXLST=OUTEXLST                                            04043
OUT12    DCB   MACRF=(E),DDNAME=OUT12,DEVD=TA,DSORG=PS,RECFM=U,        X 04044
               EXLST=OUTEXLST                                            04045
OUT13    DCB   MACRF=(E),DDNAME=OUT13,DEVD=TA,DSORG=PS,RECFM=U,        X 04046
               EXLST=OUTEXLST                                            04047
OUT14    DCB   MACRF=(E),DDNAME=OUT14,DEVD=TA,DSORG=PS,RECFM=U,        X 04048
               EXLST=OUTEXLST                                            04049
OUT15    DCB   MACRF=(E),DDNAME=OUT15,DEVD=TA,DSORG=PS,RECFM=U,        X 04050
               EXLST=OUTEXLST                                            04051
OUT16    DCB   MACRF=(E),DDNAME=OUT16,DEVD=TA,DSORG=PS,RECFM=U,        X 04052
               EXLST=OUTEXLST                                            04053
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04054
               BLKSIZE=133                                               04055
LABLDUMP DCB   MACRF=PM,DDNAME=LABLDUMP,DSORG=PS,RECFM=FB,LRECL=80,    X 04056
               EXLST=LBLEXLST                                            04057
LABADDIN DCB   MACRF=GM,DDNAME=LABADDIN,DSORG=PS,RECFM=FB,LRECL=80,    X 04058
               EXLST=LBNEXLST,EODAD=LBLINEND                             04059
         DC    C' '              BLANK FOR CLEARING AREA      SBG 09/00  04060
LLINE    DC    CL80' '           OUTPUT AREA FOR LABEL DUMP   SBG 09/00  04061
SAVE2TO3 DC    2F'0'                                                     04062
SAVE3REG DC    F'0'                                                      04063
SAVE7BA1 DC    F'0'                                                      04064
SAVE7REG DC    F'0'                                                      04065
SAVE7BAL DC    F'0'                                                      04066
SAVE7RG1 DC    F'0'                                                      04067
SAVE7RG2 DC    F'0'                                                      04068
SAVE7RG3 DC    F'0'                                                      04069
SAVE7RG4 DC    F'0'                                                      04070
R5HXPRT  DC    F'0'                                                      04071
R7HXPRT  DC    F'0'                                                      04072
SAVTRTCS DC    F'0'                                                      04073
ENTRYPT  DC    F'0'                                                      04074
PARMSAVE DC    F'0'                                                      04075
PARMADDR DC    F'0'                                                      04076
VALUSAVE DC    F'0'                                                      04077
         DC    CL4' '                                                    04078
HDR1SAV  DC    CL80' '                                                   04079
HDR2SAV  DC    CL80' '                                                   04080
UHL1SAV  DC    CL80' '                                                   04081
UHL2SAV  DC    CL80' '                                                   04082
UHL3SAV  DC    CL80' '                                                   04083
UHL4SAV  DC    CL80' '                                                   04084
UHL5SAV  DC    CL80' '                                                   04085
UHL6SAV  DC    CL80' '                                                   04086
UHL7SAV  DC    CL80' '                                                   04087
UHL8SAV  DC    CL80' '                                                   04088
CARDIN   DC    CL80' '    SYSIN CARD INPUT AREA                          04089
EXTLBLIN DC    CL80' '    INPUT AREA FOR EXTERNAL LABELS                 04090
         DC    CL80' '    PADDING TO SEPARATE FROM INAREA     SBG 09/00  04091
TRTCSECT CSECT                                                           04092
TRTBL0   DS    0D                                                        04093
         DC    XL16'40404040404040404040404040404040'                    04094
         DC    XL16'40404040404040404040404040404040'                    04095
         DC    XL16'40404040404040404040404040404040'                    04096
         DC    XL16'40404040404040404040404040404040'                    04097
         DC    XL16'404040404040404040404A4B4C4D4E4F'                    04098
         DC    XL16'504040404040404040405A5B5C5D5E5F'                    04099
         DC    XL16'606140404040404040406A6B6C6D6E6F'                    04100
         DC    XL16'404040404040404040407A7B7C7D7E7F'                    04101
         DC    XL16'40818283848586878889404040404040'                    04102
         DC    XL16'40919293949596979899404040404040'                    04103
         DC    XL16'4040A2A3A4A5A6A7A8A9404040404040'                    04104
         DC    XL16'40404040404040404040404040404040'                    04105
         DC    XL16'C0C1C2C3C4C5C6C7C8C9404040404040'                    04106
         DC    XL16'D0D1D2D3D4D5D6D7D8D9404040404040'                    04107
         DC    XL16'E040E2E3E4E5E6E7E8E9404040404040'                    04108
         DC    XL16'F0F1F2F3F4F5F6F7F8F9404040404040'                    04109
TRTBL1   DS    0D                                                        04110
         DC    XL16'F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0'                    04111
         DC    XL16'F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1F1'                    04112
         DC    XL16'F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2'                    04113
         DC    XL16'F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3F3'                    04114
         DC    XL16'F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4F4'                    04115
         DC    XL16'F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5'                    04116
         DC    XL16'F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6F6'                    04117
         DC    XL16'F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7'                    04118
         DC    XL16'F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8'                    04119
         DC    XL16'F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9'                    04120
         DC    XL16'C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1'                    04121
         DC    XL16'C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2'                    04122
         DC    XL16'C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3C3'                    04123
         DC    XL16'C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4C4'                    04124
         DC    XL16'C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5C5'                    04125
         DC    XL16'C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6C6'                    04126
TRTBL2   DS    0D                                                        04127
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04128
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04129
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04130
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04131
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04132
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04133
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04134
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04135
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04136
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04137
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04138
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04139
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04140
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04141
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04142
         DC    XL16'F0F1F2F3F4F5F6F7F8F9C1C2C3C4C5C6'                    04143
         EJECT                                                           04144
JFCBLK   DSECT                                                           04145
         IEFJFCBN LIST=YES                                               04146
COPYMODS CSECT                                                           04147
INAREA   DS    CL65535                                        SBG 03/00  04148
#PAN$AUD CSECT                                                           04149
$PAN#AUD DC    CL30'LEVEL 059 COPYMODS  07/13/03 '                       04150
         END                                                             04151
*          DATA SET COPYMOPT   AT LEVEL 059 AS OF 07/13/03               04152
   TITLE 'COPYMOPT -- TAPE COPY PROGRAM OPTIONS DISPLAY'                 04153
**************************************************************           04154
**************************************************************           04155
**                                                          **           04156
**                                                          **           04157
**  MODULE: COPYMOPT                                        **           04158
**                                                          **           04159
**                                                          **           04160
**  PURPOSE:  SUBROUTINE TO DISPLAY EXECUTION OPTIONS THAT  **           04161
**            HAVE BEEN SET FOR A RUN OF THE COPYMODS       **           04162
**            PROGRAM.                                      **           04163
**                                                          **           04164
**                                                          **           04165
**************************************************************           04166
**************************************************************           04167
         EJECT                                                           04168
         YREGS                                                           04169
COPYMOPT CSECT                                                           04170
         USING *,R15                                          SBG 03/00  04171
*  REG 1 IS POINTING TO THE PARM VALUES SET BY THE COPYMODS PROGRAM.     04172
         B     EYECATCH                                       SBG 03/00  04173
         DC    C'--- '            MAKE EYECATCHER VISIBLE     SBG 03/00  04174
         DC    C'COPYMOPT - DISPLAY OPTIONS FOR THE COPYMODS PROGRAM '   04175
         DC    C'&SYSDATE',C'  ',C'&SYSTIME ',C'--- '         SBG 03/00  04176
SAVEAREA DC    18F'0'                                                    04177
EYECATCH DS    0D             ENSURE ALIGNMENT                SBG 03/00  04178
         SAVE  (14,12)                                                   04179
         LR    R5,R1          SAVE PASSED QUANTITY                       04180
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04181
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04182
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04183
         LR    R13,R1               NEW SAVE AREA ADDRESS                04184
         DROP  R15                                                       04185
* -----                       SET UP TWO BASE REGISTERS                  04186
         USING COPYMOPT,R12,R11                                          04187
         LR    R12,R15                                                   04188
         LA    R11,4095(,R12)                                            04189
         LA    R11,1(,R11)                                               04190
         LR    R1,R5          RESTORE PARM POINTER                       04191
OPTMOVE  DS    0H                                                        04192
         MVC   PARMTBIN(5),0(R1)      MOVE PARMS INTO THIS PGM           04193
         SR    R1,R1                  DON'T POINT R1 INTO LAST PGM       04194
         SR    R5,R5                  DON'T POINT R5 INTO LAST PGM       04195
         OPEN  (SYSPRINT,OUTPUT)                                         04196
         MVC   LINE(133),LINE-1       CLEAR LINE                         04197
         MVC   LINE(133),DISPLINH                                        04198
         PUT   SYSPRINT,LINE                                             04199
         MVC   LINE(133),LINE-1       CLEAR LINE                         04200
         MVC   LINE(133),DISPLINO                                        04201
         PUT   SYSPRINT,LINE                                             04202
         MVC   LINE(133),LINE-1       CLEAR LINE                         04203
         PUT   SYSPRINT,LINE                                             04204
         BAL   R7,FILLOPTS                                               04205
         MVC   LINE(133),LINE-1       CLEAR LINE                         04206
         MVC   LINE(133),DISPOP02                                        04207
         PUT   SYSPRINT,LINE                                             04208
         MVC   LINE(133),LINE-1       CLEAR LINE                         04209
         MVC   LINE(133),DISPOP01                                        04210
         PUT   SYSPRINT,LINE                                             04211
         MVC   LINE(133),LINE-1       CLEAR LINE                         04212
         MVC   LINE(133),DISPOP03                                        04213
         PUT   SYSPRINT,LINE                                             04214
         CLOSE (SYSPRINT)                                                04215
* ----------------------------------------------------------------- *    04216
THEEND   EQU   *                                                         04217
THEEND1  DS    0H                                                        04218
         L     R13,4(,R13)                                               04219
         RETURN (14,12),RC=0                                             04220
         EJECT                                                           04221
* - - - - - - - -   SUBROUTINES   - - - - - - - - - - - - - - - - - *    04222
* ----------------------------------------------------------------- *    04223
*    BAL REGISTER IS R7.                                            *    04224
* ------------------------------------------------------------------*    04225
FILLOPTS DS    0H         FILL OPTIONS DISPLAY AREA AND PRINT            04226
         LA    R3,OPTABLE             POINT TO BEGINNING OF TABLE        04227
         LA    R6,DISPLIN1            POINT TO FIRST DISPLAY LINE        04228
         LA    R2,5(,R6)              POINT TO FIRST TARGET LOCATION     04229
FILLBCT  LA    R4,8                   LOAD BCT QUANTITY                  04230
FILLOOP  CLC   =X'FFFFFFFF',0(R3)                                        04231
         BE    FILOPEND                                                  04232
         MVC   PARMWORK(5),0(R3)      MOVE BYTES TO BE TESTED            04233
         NC    PARMWORK(5),PARMTBIN   CHECK IF BYTE IS ON                04234
         BZ    FILLZER                                                   04235
         MVC   0(10,R2),5(R3)         MOVE OPTION TO DISPLAY - BIT ON    04236
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04237
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04238
         BCT   R4,FILLOOP             LOOP BACK                          04239
         B     FILNEXTB                                                  04240
FILLZER  DS    0H                                                        04241
         MVC   0(10,R2),15(R3)        MOVE OPTION TO DISPLAY - BIT OFF   04242
         LA    R3,OPTENTLN(,R3)       BUMP TO NEXT TABLE ENTRY           04243
         LA    R2,12(,R2)             BUMP TO NEXT DISPLAY AREA          04244
         BCT   R4,FILLOOP             LOOP BACK                          04245
FILNEXTB DS    0H                                                        04246
         MVC   LINE(133),LINE-1       CLEAR OUTPUT AREA                  04247
         MVC   LINE(133),0(R6)        MOVE OPTION DISPLAY INTO LINE      04248
         PUT   SYSPRINT,LINE                                             04249
         LA    R6,133(,R6)            POINT TO BEGINNING OF NEXT LINE    04250
         LA    R2,37(,R2)             BUMP DISPLAY AREA TO NEXT LINE     04251
         B     FILLBCT                RELOAD BCT QUANTITY AND RELOOP     04252
FILOPEND BR    R7                                                        04253
* ----------------------------------------------------------------- *    04254
* ----------  CONSTANTS  ------------------------------------------ *    04255
         LTORG                                                           04256
         DS    0F                                                        04257
PARMTBIN DC    X'0000000000'                                             04258
PARMWORK DC    X'0000000000'                                             04259
PARMZERO DC    X'0000000000'                                             04260
OPTABLE  DS    0D                                                        04261
         DC    X'2000000000',C'LTMSKIP   ',C'LTMCOPY   '                 04262
OPTENTLN EQU   *-OPTABLE                                                 04263
         DC    X'0100000000',C'BLKCNT    ',C'NOBLKCNT  '                 04264
         DC    X'0200000000',C'HDR1      ',C'NOHDR1    '                 04265
         DC    X'0400000000',C'HDR2      ',C'NOHDR2    '                 04266
         DC    X'0800000000',C'EOF1      ',C'NOEOF1    '                 04267
         DC    X'1000000000',C'EOF2      ',C'NOEOF2    '                 04268
         DC    X'4000000000',C'EOV1      ',C'NOEOV1    '                 04269
         DC    X'8000000000',C'EOV2      ',C'NOEOV2    '                 04270
         DC    X'0010000000',C'LABLDUMP  ',C'NOLABLDU  '                 04271
         DC    X'0020000000',C'SYSIN     ',C'NOSYSIN   '                 04272
         DC    X'0040000000',C'OUTVOL ***',C'NOOUTVOL  '                 04273
         DC    X'0080000000',C'LABADDIN  ',C'NOLABADD  '                 04274
         DC    X'0001000000',C'CHGVOL    ',C'NOCHGVOL  '                 04275
         DC    X'0002000000',C'VOLLBL    ',C'NOVOLLBL  '                 04276
         DC    X'0004000000',C'EOVCHG    ',C'NOEOVCHG  '                 04277
         DC    X'0008000000',C'READONLY  ',C'WRITE     '                 04278
         DC    X'0000100000',C'PRADDLBL  ',C'NOPRADDL  '                 04279
         DC    X'0000200000',C'CORRBLKS  ',C'NOCORRBL  '                 04280
         DC    X'0000400000',C'NOEXNULL  ',C'EXNULL    '                 04281
         DC    X'0000800000',C'LBLFIX    ',C'NOLBLFIX  '                 04282
         DC    X'0000010000',C'INITVOLS  ',C'          '                 04283
         DC    X'0000020000',C'LIMFILE **',C'NOLIMFIL  '                 04284
         DC    X'0000040000',C'BYTES     ',C'NOBYTES   '                 04285
         DC    X'0000080000',C'CUMTOT    ',C'NOCUMTOT  '                 04286
         DC    X'0000001000',C'LIMLABEL *',C'NOLIMLAB  '                 04287
         DC    X'0000002000',C'OPTION    ',C'NOOPTION  '                 04288
         DC    X'0000004000',C'SUPPWTO   ',C'NOSUPPWT  '                 04289
         DC    X'0000008000',C'LBDQUICK  ',C'NOLBDQUI  '                 04290
         DC    X'0000000100',C'CUMSEP    ',C'NOCUMSEP  '                 04291
         DC    X'0000000200',C'STRIP     ',C'NOSTRIP   '                 04292
         DC    X'0000000400',C'NLLIM     ',C'NONLLIM   '                 04293
         DC    X'0000000800',C'SLLIM     ',C'NOSLLIM   '                 04294
         DC    X'0000000010',C'IDRCOFF   ',C'NOIDRCOF  '                 04295
HXPRT    DC    X'0000000020',C'HEXPRT    ',C'NOHEXPRT  '                 04296
         DC    X'0000000040',C'          ',C'          '                 04297
         DC    X'0000000080',C'          ',C'          '                 04298
         DC    X'0000000001',C'          ',C'          '                 04299
         DC    X'0000000002',C'          ',C'          '                 04300
         DC    X'0000000004',C'          ',C'          '                 04301
         DC    X'0000000008',C'          ',C'          '                 04302
         DC    X'FFFFFFFFFF'                                             04303
         ORG   HXPRT+10                                                  04304
         DS    0CL4                                                      04305
HXPRTNUM DS    CL4                                                       04306
         ORG                                                             04307
*  -----                                                                 04308
DISPAREA DS    0D                                                        04309
DISPLINH DS    0CL133                                                    04310
         DC    C'1    COPYMODS PROGRAM - EXTENDED TAPE COPY PROGRAM - '  04311
         DC    C'LEVEL 059 - OPTIONS DISPLAY                          '  04312
         DC    27C' '                                                    04313
DISPLINO DS    0CL133                                                    04314
         DC    C'-    OPTIONS IN EFFECT:                              '  04315
         DC    C'                                                     '  04316
         DC    27C' '                                                    04317
DISPOP01 DS    0CL133                                                    04318
         DC    C'      **  THE LIMFILE OPTION IS ONLY SET BY THE  FILE'  04319
         DC    C'LIMIT=   SYSIN CARD                                  '  04320
         DC    27C' '                                                    04321
DISPOP02 DS    0CL133                                                    04322
         DC    C'      *   THE LIMLABEL OPTION IS ONLY SET BY THE LABE'  04323
         DC    C'LIMIT=   SYSIN CARD                                  '  04324
         DC    27C' '                                                    04325
DISPOP03 DS    0CL133                                                    04326
         DC    C'      *** THE OUTVOL OPTION IS ONLY SET BY THE   TAPE'  04327
         DC    C'OWNER=   OR OUTVOLALL=   SYSIN CARDS                 '  04328
         DC    27C' '                                                    04329
SYSPRINT DCB   MACRF=PM,DDNAME=SYSPRINT,DSORG=PS,RECFM=FA,LRECL=133,   X 04330
               BLKSIZE=133                                               04331
         DC    C' '                                                      04332
LINE     DS    CL133                                                     04333
DISPLIN1 DS    0CL133                                                    04334
         DC    C'0    '                                                  04335
DISPL1A  DC    8CL12' '                                                  04336
         DC    32C' '                                                    04337
DISPLIN2 DS    0CL133                                                    04338
         DC    C'     '                                                  04339
DISPL2A  DC    8CL12' '                                                  04340
         DC    32C' '                                                    04341
DISPLIN3 DS    0CL133                                                    04342
         DC    C'     '                                                  04343
DISPL3A  DC    8CL12' '                                                  04344
         DC    32C' '                                                    04345
DISPLIN4 DS    0CL133                                                    04346
         DC    C'     '                                                  04347
DISPL4A  DC    8CL12' '                                                  04348
         DC    32C' '                                                    04349
DISPLIN5 DS    0CL133                                                    04350
         DC    C'     '                                                  04351
DISPL5A  DC    8CL12' '                                                  04352
         DC    32C' '                                                    04353
         SPACE 3                                                         04354
         EJECT                                                           04355
@PAN$AUD CSECT                                                           04356
$PAN#AUD DC    CL30'LEVEL 059 COPYMOPT  07/13/03 '                       04357
         END                                                             04358
*          PARM CHECKER        AT LEVEL 1.4 AS OF 07/13/03               04359
   TITLE 'PARMCHEK -- SET PARM BITS USING A TABLE'                       04360
**************************************************************           04361
**************************************************************           04362
**                                                          **           04363
**                                                          **           04364
**  MODULE:   PARMCHEK - Set option bits, based on          **           04365
**                       keywords coded in PARM and/or      **           04366
**                       SYSIN.                             **           04367
**                                                          **           04368
**  AUTHOR:   Sam Golob                                     **           04369
**                                                          **           04370
**  PURPOSE:  This program converts keywords in a PARM      **           04371
**            field or in SYSIN, into bit settings that     **           04372
**            a program can use, to control options in      **           04373
**            its execution.                                **           04374
**                                                          **           04375
**            This program can be run as a subroutine       **           04376
**            which is called, to set up to 5 bytes of      **           04377
**            bits, up to 40 bits in all, based on the      **           04378
**            settings of keywords in a table.              **           04379
**                                                          **           04380
**            This routine makes it easy to put a lot of    **           04381
**            options into a program.  If you want to       **           04382
**            add options, or use other words in PARM or    **           04383
**            SYSIN to call the same options, all you       **           04384
**            have to do, is to change or add entries in    **           04385
**            a table.  There is no extra coding to be      **           04386
**            done.                                         **           04387
**                                                          **           04388
**            Keywords in the PARM or SYSIN areas do not    **           04389
**            have to be delimited by commas or spaces or   **           04390
**            anything else.  Although for clarity, I'd     **           04391
**            certainly recommend that you put commas or    **           04392
**            spaces between the PARM field keywords.       **           04393
**            Therefore, I'd also advise that when you      **           04394
**            design keywords to put into the table to      **           04395
**            designate options, that you make them         **           04396
**            significantly different from each other.      **           04397
**            There is a length field in the table,         **           04398
**            however, which gives you some more control    **           04399
**            in this area.                                 **           04400
**                                                          **           04401
**            From a calling program, it would be possible  **           04402
**            to call PARMCHEK twice, against two different **           04403
**            tables, to set 10 bytes of options, instead   **           04404
**            of 5 bytes of options, and so forth...        **           04405
**                                                          **           04406
**            This gives you the opportunity of having      **           04407
**            a tremendous number of options, set by        **           04408
**            keywords, in your program, without using      **           04409
**            up valuable "base register space" for such    **           04410
**            coding.                                       **           04411
**                                                          **           04412
**                                                          **           04413
**  METHOD:   Bits, in the 5 bytes of PARMFLGS, are set,    **           04414
**            from a table, based on assembled defaults.    **           04415
**            These default settings are then overridden    **           04416
**            from a scan of words in the PARM field of     **           04417
**            the EXEC card.                                **           04418
**                                                          **           04419
**            If a SYSIN DD card is present, its cards      **           04420
**            are scanned against the table entries, to     **           04421
**            further override the bit settings which       **           04422
**            have already been done by the defaults and    **           04423
**            the PARM field.                               **           04424
**                                                          **           04425
**            The main purpose of this routine is to set    **           04426
**            bits from words.  However, if you need some   **           04427
**            keywords with values, such as (for example)   **           04428
**            FILELIMIT=69  in your program, you may use    **           04429
**            the "user code" section of this program       **           04430
**            to code that stuff in, so that these special  **           04431
**            keywords can be coded in SYSIN.               **           04432
**                                                          **           04433
**            Two sample keywords expecting number values:  **           04434
**            FILELIMIT=nnn  or                             **           04435
**            LABELIMIT=mmm                                 **           04436
**            have been coded here, just to illustrate      **           04437
**            how the user coding might work.               **           04438
**                                                          **           04439
**            Search order is:  Defaults, then PARM in      **           04440
**            the EXEC card, then SYSIN.                    **           04441
**                                                          **           04442
**            As coded here, the FILELIMIT= and             **           04443
**            LABELIMIT= keywords in SYSIN have to be in    **           04444
**            column 1 of the SYSIN cards, and if these     **           04445
**            "special keywords" are present in a card,     **           04446
**            the rest of that card is not scanned for      **           04447
**            the table keywords.                           **           04448
**                                                          **           04449
**            As coded here, the PARMTABL is a separate     **           04450
**            CSECT, addressable by V-CONs from the         **           04451
**            PARMCHEK CSECT.                               **           04452
**                                                          **           04453
**            It would probably be best to invoke the       **           04454
**            PARMCHEK program as a separate CSECT which    **           04455
**            is linkedited with the calling program,       **           04456
**            but it may be LOADed and BALR 14,15 'ed to,   **           04457
**            and run as a separate program.  (See the      **           04458
**            PARMDRVR program that is included in this     **           04459
**            package, as a sample.)                        **           04460
**                                                          **           04461
**    Input:  A fullword containing the address of the      **           04462
**            saved Register 1 from the calling program,    **           04463
**            which points to its parms.                    **           04464
**                                                          **           04465
**            A table containing parms, which is coded      **           04466
**            according to the following rules, and which   **           04467
**            has entries of 15 bytes apiece.               **           04468
**                                                          **           04469
**      FORMAT OF THE PARM TABLE                            **           04470
**                                                          **           04471
**        ONE ENTRY IS 15 BYTES                             **           04472
**                                                          **           04473
**          1ST BYTE:      LENGTH OF THIS PARM WORD IN HEX  **           04474
**                         (This is the word which          **           04475
**                          controls the bit settings.)     **           04476
**                         (up to and including 8 bytes)    **           04477
**                                                          **           04478
**          2ND BYTE:      X'01' says turn bit flag(s) OFF  **           04479
**                         X'00' says turn bit flag(s) ON   **           04480
**                         X'10' set entry as a DEFAULT     **           04481
**                                                          **           04482
**          NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED       **           04483
**                         (This is the word searched on,   **           04484
**                          in the EXEC PARM and SYSIN      **           04485
**                          areas.)                         **           04486
**                                                          **           04487
**          NEXT 5 BYTES:  FLAG BIT settings controlled by  **           04488
**                          this keyword.                   **           04489
**                                                          **           04490
**                         These are the bits which the     **           04491
**                          keyword will flip on (or off).  **           04492
**                                                          **           04493
**                         You may control multiple bits    **           04494
**                          using one keyword.  All bits    **           04495
**                          controlled by this keyword      **           04496
**                          are coded in this entry field.  **           04497
**                                                          **           04498
**          The table is ended by an entry of X'FF's.       **           04499
**                                                          **           04500
**                                                          **           04501
**    Output:  R1 points to a 5-byte area containing the    **           04502
**             40 switch settings.                          **           04503
**                                                          **           04504
**             Sample code to use PARMCHEK output:          **           04505
**                                                          **           04506
**                      ST    R1,PARMADDR                   **           04507
**                      USING PARMFLGS,R1                   **           04508
**             *                                            **           04509
**             PARMFLGS DSECT                               **           04510
**             PARMFLG1 DS    X                             **           04511
**             PARMFLG2 DS    X                             **           04512
**             PARMFLG3 DS    X                             **           04513
**             PARMFLG4 DS    X                             **           04514
**             PARMFLG5 DS    X                             **           04515
**                                                          **           04516
**               then ....                                  **           04517
**                                                          **           04518
**                      TM    PARMFLG2,X'04'                **           04519
**                      BZ    some location                 **           04520
**                        ....                              **           04521
**                                                          **           04522
**             R2 points to the address of a data area      **           04523
**             containing values generated by this          **           04524
**             program.  It's address is at label STRTVALU  **           04525
**             and its length is in the first fullword      **           04526
**             at STRTVALU.                                 **           04527
**                                                          **           04528
**             R2 is accessed in a similar manner to R1.    **           04529
**             See the PARMDRVR program for an example      **           04530
**             illustrating one way in which PARMCHEK       **           04531
**             may be called.                               **           04532
**                                                          **           04533
**                                                          **           04534
**************************************************************           04535
         EJECT                                                           04536
**************************************************************           04537
**                                                          **           04538
**  CHANGE LOG:                                             **           04539
**                                                          **           04540
**    Version 1.1 - Separate Parm Table into different      **           04541
**       CSECT.  Detailed reporting in PARMREPT ddname.     **           04542
**                                                          **           04543
**    Version 1.2 - Uppercase keyword before comparing      **           04544
**       against the table entries.  This assumes you       **           04545
**       will code your table with all uppercase keyword    **           04546
**       entries.                                           **           04547
**                                                          **           04548
**    Version 1.3 - Option for requiring commas or spaces   **           04549
**       as delimiters between parms.  Comment out one      **           04550
**       instruction to require delimiters.                 **           04551
**                                                          **           04552
**    Version 1.4 - Fitted to COPYMODS Level 059.           **           04553
**                                                          **           04554
**************************************************************           04555
**************************************************************           04556
         EJECT                                                           04557
**************************************************************           04558
*  ---------------------------------------------------------------  *    04559
*    This macro is used to display hex values in a printed report.       04560
*  ---------------------------------------------------------------  *    04561
         MACRO                                                           04562
&NAME    HEX   &TO,&LEN,&FROM                                            04563
&NAME    DS    0H                                                        04564
         ST    R4,SAV4HEX                                                04565
         STM   15,1,HEXSAVE                                              04566
         LA    1,&FROM                                                   04567
         LA    0,&LEN                                                    04568
         LA    15,&TO                                                    04569
         BAL   4,HEX                                                     04570
         L     R4,SAV4HEX                                                04571
         LM    15,1,HEXSAVE                                              04572
         MEND                                                            04573
         SPACE                                                           04574
**************************************************************           04575
         GBLC  &LLEV                                                     04576
         GBLC  &HEXDFLT,&HEXDFLL,&HEXDFLM                                04577
         GBLA  &HEXDFLA                                                  04578
&LLEV    SETC  '1.4 '                                                    04579
         YREGS                                                           04580
* ------------------------------------------------------------------ *   04581
*    HEXDFLA IS THE DEFAULT FOR THE NUMBER OF RECORDS TO BE          *   04582
*    HEX DUMPED FROM EACH TAPE FILE.  SET TO 4 IN THE DISTRIBUTION.  *   04583
* ------------------------------------------------------------------ *   04584
         ENTRY CARDREAD                                                  04585
         ENTRY PARMCHEK                                                  04586
&HEXDFLA SETA  4                                                         04587
&HEXDFLC SETC  '&HEXDFLA'                                                04588
PARMCHEK CSECT                                                           04589
         USING *,R15                                                     04590
         B     EYECATCH                                                  04591
         DC    C'HEX DUMP '                                              04592
HEXDFLCC DC    C'&HEXDFLC'                                               04593
         DC    C' RECORDS '                                              04594
HEXDFLL  EQU   L'HEXDFLCC                                                04595
&HEXDFLM SETC  (6-HEXDFLL)' '.'&HEXDFLA'                                 04596
         DC    C'--- '            MAKE EYECATCHER VISIBLE                04597
         DC    C'PARMCHEK - SET BITS FROM PARM KEYWORDS '                04598
         DC    C' - '                                                    04599
         DC    C'PARM INPUT IN SYSIN '                                   04600
         DC    C' - '                                                    04601
         DC    C'LEVEL '                                                 04602
SYSLEV   DC    C'&LLEV'                                                  04603
         DC    C' - '                                                    04604
SYSDAT   DC    C'&SYSDATE'                                               04605
         DC    C'  ',C'&SYSTIME ',C'--- '                                04606
         DC    C'--- '            MAKE EYECATCHER VISIBLE                04607
SAVEAREA DC    18F'0'                                                    04608
EYECATCH DS    0D             ENSURE ALIGNMENT                           04609
         SAVE  (14,12)                                                   04610
         LR    R5,R1          SAVE PARM POINTER                          04611
         LA    R1,SAVEAREA          NEW SAVE-AREA ADDR                   04612
         ST    R1,8(,R13)           FORWARD SAVE-AREA CHAIN PTR          04613
         ST    R13,4(,R1)           BACKWARD SAVE-AREA CHAIN PTR         04614
         LR    R13,R1               NEW SAVE AREA ADDRESS                04615
         DROP  R15                                                       04616
* -----                       SET UP BASE REGISTERS                      04617
         USING PARMCHEK,R12,R11,R10                                      04618
         LR    R12,R15                                                   04619
         LA    R11,4095(,R12)                                            04620
         LA    R11,1(,R11)                                               04621
         LA    R10,4095(,R11)                                            04622
         LA    R10,1(,R10)                                               04623
         LR    R1,R5          RESTORE PARM POINTER                       04624
         ST    R1,PARMSAVE                                               04625
* ----------------------------------------------------------------- *    04626
TIOTSCAN DS    0H             Determine the presence of Optional         04627
*                             DDNAMES:  SYSIN AND PARMREPT.              04628
* ----->                      OPEN them if there is JCL for them.        04629
* ----------------------------------------------------------------- *    04630
         L     R5,16          R5=CVT                                     04631
         L     R5,0(,R5)      R5=TCB WORDS                               04632
         L     R5,4(,R5)      R5=MY TCB                                  04633
         L     R5,12(,R5)     R5=TIOT                                    04634
         LA    R5,24(,R5)     R5=FIRST DD ENTRY                          04635
TIOTLOOP CLC   0(4,R5),=XL4'00' END OF TIOT?                             04636
         BE    TIOTSEND       YES, CHECK FOR OUTPUT VOL OVERRIDES        04637
         CLC   4(8,R5),PARMREPT+40  PARMREPT DDNAME THERE?               04638
         BNE   TIOTSYSN       NO                                         04639
         OI    FLAGSYST,X'01'       SHOW PRESENCE OF PARMREPT DD         04640
         B     TIOTNEXT       CONTINUE                                   04641
TIOTSYSN CLC   4(8,R5),SYSIN+40                                          04642
         BNE   TIOTNEXT                                                  04643
         OI    FLAGSYST,X'02'       SHOW PRESENCE OF SYSIN    DD         04644
         B     TIOTNEXT                                                  04645
TIOTNEXT SR    R3,R3                                                     04646
         IC    R3,0(,R5)      R3=LENGTH OF DD ENTRY                      04647
         AR    R5,R3          R5=NEXT DD ENTRY                           04648
         B     TIOTLOOP       GO CHECK IT                                04649
TIOTSEND DS    0H                                                        04650
***********************************************************************  04651
* GET SYSTEM DATE AND TIME - A standard way to get date and time      *  04652
***********************************************************************  04653
         STM   R14,R2,SAVE1402                                           04654
         TIME  DEC,DATETIME,LINKAGE=SYSTEM,DATETYPE=MMDDYYYY             04655
         OI    DATE+4,X'0F'                                              04656
         UNPK  DATED,DATE                                                04657
         OI    TIME+3,X'0F'                                              04658
         UNPK  TIMED,TIME                                                04659
*                          FILL HEADDATE AREA WITH INFO TO REUSE         04660
         MVC   HEADDATE(2),DATED                                         04661
         MVI   HEADDATE+2,C'/'                                           04662
         MVC   HEADDATE+3(2),DATED+2                                     04663
         MVI   HEADDATE+5,C'/'                                           04664
         MVC   HEADDATE+6(4),DATED+4                                     04665
         MVC   HEADDATE+12(2),TIMED                                      04666
         MVI   HEADDATE+14,C':'                                          04667
         MVC   HEADDATE+15(2),TIMED+2                                    04668
         MVI   HEADDATE+17,C':'                                          04669
         MVC   HEADDATE+18(2),TIMED+4                                    04670
         MVC   MESSAGE1+98(31),HEADDLIT    TODAY'S DATE AND TIME         04671
         LM    R14,R2,SAVE1402                                           04672
***********************************************************************  04673
         MVC   LEVDATE(8),SYSDAT                                         04674
***********************************************************************  04675
         MVC   MESSAGE1+71(21),LEVELLIT    PROGRAM LEVEL AND             04676
* ----------------------------------------------------------------- *    04677
INITCONS DS    0H                                                        04678
         ZAP   TOTMLCNT,=P'0'                                            04679
* ----------------------------------------------------------------- *    04680
CHEKPRNT DS    0H                                                        04681
         TM    FLAGSYST,X'01'                                            04682
         BZ    CHEKPREN                                                  04683
         OPEN  (PARMREPT,OUTPUT)                                         04684
         OI    OPENDFLG,X'01'                                            04685
         MVC   PRTLINE,PRTLINE-1                                         04686
         MVC   PRTLINE,MESSAGE1                                          04687
         PUT   PARMREPT,MESSAGE1                                         04688
         MVC   PRTLINE,PRTLINE-1                                         04689
         PUT   PARMREPT,PRTLINE                                          04690
CHEKPREN DS    0H                                                        04691
* ----------------------------------------------------------------- *    04692
* --------------------------------------------------------- *            04693
PARMCHK  DS    0H         CHECK PARMS AND FLAG THEIR                     04694
*                         PRESENCE OR ABSENCE.                           04695
*            (PERMISSIBLE PARMS ARE CODED IN PARMTABL.)                  04696
PARMINIT L     R1,PARMSAVE    SAVED PARM POINTER                         04697
         L     R1,0(,R1)      Get PARM field                             04698
         LH    R5,0(,R1)      SAVE PARM LENGTH                           04699
         ST    R5,PARMSLEN    STORE FULLWORD VALUE                       04700
         MVC   SAVMSLEN,PARMSLEN                                         04701
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 04702
         LA    R4,2(,R1)      POINT TO START OF JCL PARMS                04703
         ST    R4,PARMSTRT    PUT ADDRESS INTO PGM STORAGE               04704
         LA    R1,0           USE R1 TO MEASURE LENGTH READ              04705
* -----------------------------------------------------------            04706
*   ONE PASS THRU PARM TABLE TO SET DEFAULT ENTRIES BEFORE               04707
*   LOOKING AT JCL OVERRIDES TO THE PARMS.                               04708
* -----------------------------------------------------------            04709
PARMDFLT DS    0H             SET DEFAULTS FROM PARM TABLE               04710
         CLI   0(R2),X'FF'    END OF PARM TABLE?                         04711
         BE    PARMDEND       YES. DEFAULTS SET. CHECK PARMS.            04712
         TM    1(R2),X'10'    IS THIS ENTRY A DEFAULT?                   04713
         BO    PARMDSET       YES, GO SET IT.                            04714
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               04715
         B     PARMDFLT       AND LOOP UNTIL TABLE ENDS.                 04716
PARMDSET TM    1(R2),X'01'    DO WE TURN THIS FLAG OFF?                  04717
         BO    PARMDOFF       YES. FLAGS ARE TURNED OFF..                04718
         OC    PARMFLGS(PBYTES),PTEFLG(R2) NO. FLAG IS TURNED ON.        04719
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               04720
         B     PARMDFLT       CHECK MORE TABLE ENTRIES.                  04721
PARMDOFF MVC   PARMFWRK(PBYTES),PTEFLG(R2)  PARM BYTES TO WRK            04722
         XC    PARMFWRK(PBYTES),EFFS        FLIP PARM BYTES              04723
         NC    PARMFLGS(PBYTES),PARMFWRK    TURN PARM BYTE(S) OFF        04724
         LA    R2,PTELEN(,R2)  NO. BOP TO TEST NEXT ENTRY,               04725
         B     PARMDFLT   LOOP BACK TILL ONE PASS THRU TABLE             04726
PARMDEND LA    R1,0           INITIALIZE COUNTING REGISTER               04727
         L     R2,=V(PARMTABL)  LOAD START OF PARM TABLE                 04728
         L     R4,PARMSTRT    GET ADDRESS FROM PGM STORAGE               04729
* ----------------------------------------------------------------- *    04730
SCANPARM DS    0H                                                        04731
         ST    R7,SAVE7BA0                                               04732
         ZAP   PARMLCNT,=P'0'                                            04733
         ZAP   PARMHITS,=P'0'                                            04734
         BAL   R7,PARMLOOP      Now check the PARM field                 04735
         MVC   SAVPHITS,PARMHITS                                         04736
         MVC   SAVCHRCT,PRMCHRCT                                         04737
         MVC   SAVELCNT,PARMLCNT                                         04738
         AP    TOTMHITS,PARMHITS                                         04739
         AP    TOTMLCNT,PARMLCNT                                         04740
         L     R7,SAVE7BA0                                               04741
* ----------------------------------------------------------------- *    04742
OPNSYSIN TM    FLAGSYST,X'02'   Are we checking SYSIN?                   04743
         BZ    OPNSYSNE         NO. GO FURTHER IN PROCESSING             04744
         OPEN  (SYSIN,INPUT)                                             04745
         TM    SYSIN+48,X'10'        IS THE DD OPEN  ?                   04746
         BZ    NOSYSIN        NO. FLAG THE ERROR & MESSAGE               04747
         OI    OPENDFLG,X'02'     FLAG THAT SYSIN IS OPEN                04748
         B     OPNSYSNE           AND CONTINUE PROCESSING.               04749
NOSYSIN  DS    0H                                                        04750
         B     CARDREND                                                  04751
OPNSYSNE DS    0H                                                        04752
* ----------------------------------------------------------------- *    04753
CHEKCARD TM    FLAGSYST,X'02'     TEST IF SYSIN IS PRESENT               04754
         BZ    CHECKEND           ISN'T. NO POINT TO READ CARDS.         04755
         TM    OPENDFLG,X'02'     IS SYSIN OPEN ?                        04756
         BZ    CHECKEND           ISN'T THERE SO CAN'T LOOK AT IT.       04757
CARDREAD DS    0H              CHECK SYSIN FOR KEYWORDS AND PARMS        04758
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04759
*              Insert User Code Here for Keywords                        04760
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04761
         GET   SYSIN,CARDIN                                              04762
*                                                                        04763
* -- >>              <-- Intercept any keywords you want in SYSIN -->    04764
* -- >>              <--    before you start the table scan       -->    04765
*                                                                        04766
         CLC   =C'OUTVOLALL=',CARDIN    KEYWORD PRESENT IN THIS CARD?    04767
         BE    CDOVOLAL          PROCESS THIS CARD FOR KEYWORD           04768
         CLC   =C'TAPEOWNER=',CARDIN    KEYWORD PRESENT IN THIS CARD?    04769
         BE    TPOWNRAL          PROCESS THIS CARD FOR KEYWORD           04770
         CLC   =C'FILELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    04771
         BE    FILELGET          PROCESS THIS CARD FOR KEYWORD           04772
         CLC   =C'LABELIMIT=',CARDIN    KEYWORD PRESENT IN THIS CARD?    04773
         BE    LABELGET          PROCESS THIS CARD FOR KEYWORD           04774
         CLC   =C'PRINTRCDS=',CARDIN    KEYWORD PRESENT IN THIS CARD?    04775
         BE    PRINTGET          PROCESS THIS CARD FOR KEYWORD           04776
         CLC   =C'/*',CARDIN
         BE    SYSINEND
*                                                                        04777
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04778
* ----         Resume Checking SYSIN in PARM Table                       04779
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04780
CHKPARMS DS    0H                CHECK THIS CARD AGAINST PARMTABL        04781
         ST    R7,SAVE7BA1     SAVE BAL REGISTER                         04782
         LA    R4,CARDIN       POINT PARM SEARCH TO BEGINNING OF CARD    04783
         LA    R5,72           LOAD COLUMN LENGTH FOR SEARCH             04784
         ST    R5,PARMSLEN     LOAD LENGTH INTO FIELD FOR ROUTINE        04785
         L     R2,=V(PARMTABL)   POINT R2 TO PARM TABLE                  04786
         L     R1,TOTCHRCT                                               04787
         A     R1,PRMCHRCT                                               04788
         ST    R1,TOTCHRCT                                               04789
         LA    R1,0            START SEARCH COUNT AT ZERO AGAIN          04790
         ZAP   PARMHITS,=P'0'                                            04791
         ZAP   PARMLCNT,=P'0'                                            04792
         BAL   R7,PARMLOOP     CHECK THIS CARD FOR PARMS                 04793
         AP    TOTMHITS,PARMHITS                                         04794
         AP    TOTMLCNT,PARMLCNT                                         04795
         L     R7,SAVE7BA1     RESTORE BAL REGISTER                      04796
         B     CARDREAD        GET ANOTHER CARD                          04797
* ----                                                                   04798
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04799
*              Handle User Code Here for Keywords                        04800
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04801
CDOVOLAL CLI   CARDIN+10,C' '    IS FIRST VOLSER CHARACTER BLANK?        04802
         BE    CARDREAD                 YES. IGNORE CARD                 04803
         MVC   VOLSTG1(6),CARDIN+10                                      04804
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      04805
         OI    OVERFLAG,X'01'    HOLD ORDER TO PROPAGATE OUTPUT VOLSER   04806
         B     CARDREAD          GET ANOTHER CARD                        04807
TPOWNRAL CLI   CARDIN+10,C' '    IS FIRST OWNER  CHARACTER BLANK?        04808
         BE    CARDREAD                 YES. IGNORE CARD                 04809
         MVC   TAPEOWN(10),CARDIN+10                                     04810
         OI    PARMFLG2,X'40'    SET OUTVOL FLAG ON                      04811
         B     CARDREAD                                                  04812
FILELGET DS    0H                                                        04813
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            04814
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 04815
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      04816
         BL    CARDREAD          YES. IGNORE.                            04817
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          04818
         BH    CARDREAD          YES. IGNORE.                            04819
         OI    PARMFLG3,X'02'    SET FILE LIMIT OPTION ON                04820
         LA    R15,CARDIN+10     STARTING ADDRESS                        04821
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               04822
FILELNUM DS    0H                                                        04823
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  04824
         C     R15,=A(CARDIN+71) END OF CARD?                            04825
         BH    FILELGNM          YES, GET NUMBER                         04826
         CLI   0(R15),C' '       BLANK HERE?                             04827
         BE    FILELGNM          YES, GET NUMBER                         04828
         B     FILELNUM          NO. STEP UP ONE PLACE                   04829
FILELGNM DS    0H                                                        04830
         SR    R15,R1            HOW BIG IS THE NUMBER                   04831
         BCTR  R15,0             LOWER IT FOR EXECUTE                    04832
         EX    R15,PACK          COPY THE NUMBER TO WORK AREA            04833
         EX    R15,MVLIMNUM      COPY THE NUMBER TO MESSAGE AREA         04834
         EX    R15,MVLIMCHR      COPY THE NUMBER TO USER PASS AREA       04835
         CVB   R0,WORKA          CONVERT IT TO BINARY                    04836
         ST    R0,LINFILE        STORE THE VALUE FOR LATER USE           04837
         MP    WORKA,PL4NO3      MULTIPLY BY 3 IF SL FILES               04838
         CVB   R0,WORKA          CONVERT IT TO BINARY                    04839
         ST    R0,LSLFILE        STORE THE VALUE FOR LATER USE           04840
         MVC   LTGFILE(4),LINFILE   STUFF NL VALUE IN FOR STARTERS       04841
FILELCLG DS    0H                                                        04842
         B     CARDREAD                                                  04843
LABELGET DS    0H                                                        04844
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            04845
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 04846
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      04847
         BL    CARDREAD          YES. IGNORE.                            04848
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          04849
         BH    CARDREAD          YES. IGNORE.                            04850
         OI    PARMFLG4,X'10'    SET LABEL LIMIT OPTION ON               04851
         LA    R15,CARDIN+10     STARTING ADDRESS                        04852
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               04853
LABELNUM DS    0H                                                        04854
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  04855
         C     R15,=A(CARDIN+71) END OF CARD?                            04856
         BH    LABELGNM          YES, GET NUMBER                         04857
         CLI   0(R15),C' '       BLANK HERE?                             04858
         BE    LABELGNM          YES, GET NUMBER                         04859
         B     LABELNUM          NO. STEP UP ONE PLACE                   04860
LABELGNM DS    0H                                                        04861
         SR    R15,R1            HOW BIG IS THE NUMBER                   04862
         BCTR  R15,0             LOWER IT FOR EXECUTE                    04863
         EX    R15,PACKL         COPY THE NUMBER TO WORK AREA            04864
         EX    R15,MVLBLNUM      COPY THE NUMBER TO MESSAGE AREA         04865
         EX    R15,MVLABCHR      COPY THE NUMBER TO PASS AREA            04866
         CVB   R0,WORKL          CONVERT IT TO BINARY                    04867
         ST    R0,LINLABEL       STORE THE VALUE FOR LATER USE           04868
LABELCLG DS    0H                                                        04869
         B     CARDREAD                                                  04870
PRINTGET DS    0H                                                        04871
         CLI   CARDIN+10,C' '    IS FIRST NUMBER VALUE BLANK?            04872
         BE    CARDREAD          YES. IGNORE ENTIRE CARD                 04873
         CLI   CARDIN+10,X'F0'   SMALLER THAN ZERO?                      04874
         BL    CARDREAD          YES. IGNORE.                            04875
         CLI   CARDIN+10,X'F9'   BIGGER THAN 9?                          04876
         BH    CARDREAD          YES. IGNORE.                            04877
         OI    PRTHEXOV,X'01'    MARK THAT A VALID CARD WAS READ         04878
         OI    PARMFLG5,X'20'    SET HEXPRT OPTION ON                    04879
         LA    R15,CARDIN+10     STARTING ADDRESS                        04880
         LR    R1,R15            LOAD R1 WITH THIS ADDRESS               04881
PRINTNUM DS    0H                                                        04882
         LA    R15,1(,R15)       BUMP TO NEXT CHARACTER                  04883
         C     R15,=A(CARDIN+71) END OF CARD?                            04884
         BH    PRINTGNM          YES, GET NUMBER                         04885
         CLI   0(R15),C' '       BLANK HERE?                             04886
         BE    PRINTGNM          YES, GET NUMBER                         04887
         B     PRINTNUM          NO. STEP UP ONE PLACE                   04888
PRINTGNM DS    0H                                                        04889
         SR    R15,R1            HOW BIG IS THE NUMBER                   04890
         BCTR  R15,0             LOWER IT FOR EXECUTE                    04891
         EX    R15,PACKP         COPY THE NUMBER TO WORK AREA            04892
         EX    R15,MVPRTNUM      COPY THE NUMBER TO MESSAGE AREA         04893
         EX    R15,MVPRTCHR      COPY THE NUMBER TO PASS AREA            04894
         CVB   R0,WORKP          CONVERT IT TO BINARY                    04895
         ST    R0,PRTLIMIT       STORE THE VALUE FOR LATER USE           04896
         ST    R0,BCTLIMIT       INITIALIZE DECREMENT COUNTER            04897
PRINTCLG DS    0H                                                        04898
         B     CARDREAD                                                  04899
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04900
*              End of User Code Here for Keywords                        04901
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *    04902
CHECKEND DS    0H                                                        04903
* -----------------------------------------------------------            04904
SYSINEND DS    0H                                                        04905
         TM    OPENDFLG,X'02'   IS SYSIN    DD OPEN?                     04906
         BZ    CARDREND         NO.  GET OUT.                            04907
         L     R1,TOTCHRCT                                               04908
         A     R1,PRMCHRCT         Final totals for last card            04909
         ST    R1,TOTCHRCT                                               04910
         NI    OPENDFLG,FF-X'02'   MARK SYSIN FILE AS CLOSED             04911
         CLOSE (SYSIN)                                                   04912
CARDREND DS    0H                                                        04913
         BAL   R7,SUMMREPT                                               04914
         TM    OPENDFLG,X'01'   IS PARMREPT DD OPEN?                     04915
         BZ    PARMRPEN         NO.  GET OUT.                            04916
         NI    OPENDFLG,FF-X'01'   MARK SYSIN FILE AS CLOSED             04917
         CLOSE (PARMREPT)                                                04918
PARMRPEN DS    0H                                                        04919
THEEND   DS    0H                                                        04920
         L     R13,4(,R13)                                               04921
         MVC   16(4,R13),=F'0'          Return code 0     in R15         04922
         MVC   24(4,R13),=A(PARMFLGS)   Address of flags  in R1          04923
         MVC   28(4,R13),=A(STRTVALU)   Address of values in R2          04924
         LM    R14,R12,12(R13)                                           04925
         BR    R14                                                       04926
* -----------------------------------------------------------            04927
*        S U B R O U T I N E S                                           04928
* -----------------------------------------------------------            04929
*   NOW CHECK EACH CHARACTER IN JCL, TO SEE IF IT'S A PARM.              04930
* -----------------------------------------------------------            04931
PARMLOOP C     R1,PARMSLEN    PAST THE END OF PARMS?                     04932
         BNL   PARMFIN        YES - GET OUT                              04933
         L     R2,=V(PARMTABL)  POINT BACK TO BEGINNING OF TABLE         04934
         AP    PARMLCNT,=P'1'  COUNT PARM LOOPS FOR DEBUGGING            04935
BOPPTBL  CLI   0(R2),X'FF'    END OF PARM TABLE?                         04936
         BE    PRMNFND        YES. BUMP AND TRY AGAIN.                   04937
*        ------------------------------------------------------------    04938
*--->                    code to require a delimiter (space, etc)        04939
*                        to enable, comment out the next instruction     04940
*        ------------------------------------------------------------    04941
         B     PRMNODLM         comment this line to require delimiter   04942
         TM    PRMFDFLG,X'01'                                            04943
         BO    PRMNFND                                                   04944
PRMNODLM DS    0H                                                        04945
*--->                                                                    04946
         XR    R5,R5          CLEAR WORK REGISTER FOR REUSE              04947
         IC    R5,0(,R2)      LOAD LENGTH TO BE COMPARED                 04948
         BCTR  R5,0           ONE LESS FOR EXECUTE                       04949
         EX    R5,MOVPARM     MOVE CHARS TO WORK AREA TO UPPERCASE       04950
*                                                                        04951
*   If you want to require parm comparisons as case sensitive,           04952
*    then comment out the following instruction....                      04953
*                                                                        04954
         EX    R5,OCPARM      UPPERCASE WHAT YOU THINK IS THE PARM       04955
*                                                                        04956
         EX    R5,CMPPARM     COMPARE TABLE ENTRY TO UPPERCASED PARM     04957
         BE    PRMFOUND       PARM FOUND AT THIS LOCATION                04958
         LA    R2,PTELEN(,R2)  NEXT TABLE ENTRY                          04959
         B     BOPPTBL        INNER LOOP                                 04960
*                                                                        04961
PRMNFND  DS    0H                                                        04962
*--->                 below - Parm Found flagging to require delimiter   04963
         CLI   0(R4),C' '     Turn off "PARM FOUND" flag if delimiters   04964
         BE    PRMFDOFF                                                  04965
         CLI   0(R4),C','                                                04966
         BE    PRMFDOFF                                                  04967
         B     PRMFDEND                                                  04968
PRMFDOFF DS    0H                                                        04969
         NI    PRMFDFLG,X'FF'-X'01'     Turn off PARM FOUND flag         04970
PRMFDEND DS    0H                                                        04971
*--->                 above - Parm Found flagging to require delimiter   04972
*                                                                        04973
         LA    R4,1(,R4)      FORWARD IN JCL PARMS                       04974
         LA    R1,1(,R1)      MEASURE DISTANCE TRAVELED                  04975
*                                                                        04976
         B     PARMLOOP       TRY AGAIN                                  04977
*                                                                        04978
PRMFOUND DS    0H                                                        04979
*                                                                        04980
*--->                 below - Parm Found flagging to require delimiter   04981
         OI    PRMFDFLG,X'01'    Turn on PARM FOUND flag                 04982
*--->                 above - Parm Found flagging to require delimiter   04983
PRMNOSEP DS    0H                                                        04984
         AP    PARMHITS,=P'1'    COUNT PARM HITS                         04985
         MVC   PARMTENT(PTELEN),0(R2)  DUMP TABLE ENTRY FOUND            04986
         TM    1(R2),X'01'         PARM ON OR OFF?                       04987
         BO    PARMOFF             OFF                                   04988
         OC    PARMFLGS(PBYTES),PTEFLG(R2)   ON. FLAG THE PARM FOUND     04989
         B     PARMGO                        AND GO ON                   04990
PARMOFF  MVC   PARMFWRK(PBYTES),PTEFLG(R2)   PARM BYTES TO WRK           04991
         XC    PARMFWRK(PBYTES),EFFS         FLIP PARM BITS              04992
         NC    PARMFLGS(PBYTES),PARMFWRK     TURN PARM BIT(S) OFF        04993
PARMGO   DS    0H                                                        04994
         XR    R5,R5          Clear Work Reg befor IC                    04995
         IC    R5,0(,R2)      LENGTH OF PARM, FROM THE TABLE             04996
         LA    R1,0(R5,R1)    INCREMENT COUNT BY LENGTH                  04997
         LA    R4,0(R5,R4)    SAME FOR SEARCH POSITION                   04998
         B     PARMLOOP       LOOK FOR MORE PARMS                        04999
PARMFIN  ST    R1,PRMCHRCT    HOW MANY CHARS WE SEARCHED --              05000
*                             COUNT FOR DEBUGGING                        05001
PRMCHEND DS    0H                                                        05002
         BR    R7                                                        05003
MOVPARM  MVC   PARMWORK(1),0(R4)       ** EXECUTED **                    05004
OCPARM   OC    PARMWORK(1),UPCASEOR    ** EXECUTED **                    05005
CMPPARM  CLC   PARMWORK(1),2(R2)       ** EXECUTED **                    05006
* --------------------------------------------------------- *            05007
SUMMREPT DS    0H                  Print details of PARMREPT             05008
         TM    OPENDFLG,X'01'      Is PARMREPT DD open?                  05009
         BZ    SUMMREND            No. Bypass this routine.              05010
         MVC   PRTLINE,PRTLINE-1                                         05011
         MVC   PRTLINE+4(16),=C'Parm Settings:  '                        05012
         HEX   PRTLINE+27,1,PARMFLG1                                     05013
         HEX   PRTLINE+30,1,PARMFLG2                                     05014
         HEX   PRTLINE+33,1,PARMFLG3                                     05015
         HEX   PRTLINE+36,1,PARMFLG4                                     05016
         HEX   PRTLINE+39,1,PARMFLG5                                     05017
         PUT   PARMREPT,PRTLINE                                          05018
         MVC   PRTLINE,PRTLINE-1                                         05019
         PUT   PARMREPT,PRTLINE                                          05020
         MVC   PRTLINE,PRTLINE-1        And print it unformatted first.  05021
         MVC   PRTLINE+4(12),=C'User Area : '                            05022
         HEX   PRTLINE+16,48,STRTVALU                                    05023
         PUT   PARMREPT,PRTLINE                                          05024
         MVC   PRTLINE,PRTLINE-1                                         05025
         MVC   PRTLINE+4(12),=C'UA + x''30'': '                          05026
         HEX   PRTLINE+16,48,STRTVALU+48                                 05027
         PUT   PARMREPT,PRTLINE                                          05028
         MVC   PRTLINE,PRTLINE-1                                         05029
         MVC   PRTLINE+4(12),=C'UA + x''60'': '                          05030
         HEX   PRTLINE+16,56,STRTVALU+96                                 05031
         PUT   PARMREPT,PRTLINE                                          05032
         MVC   PRTLINE,PRTLINE-1                                         05033
         MVC   PRTLINE+4(22),=C'Length of User Area  :'                  05034
         HEX   PRTLINE+30,4,STRTVALU                                     05035
         MVC   PRTLINE+42(6),=C'Hex   '                                  05036
         PUT   PARMREPT,PRTLINE                                          05037
         MVC   PRTLINE,PRTLINE-1                                         05038
         MVC   PRTLINE+4(22),=C'Length of last scan  :'                  05039
         HEX   PRTLINE+30,4,PARMSLEN                                     05040
         MVC   PRTLINE+42(6),=C'Hex   '                                  05041
         PUT   PARMREPT,PRTLINE                                          05042
         MVC   PRTLINE,PRTLINE-1                                         05043
         MVC   PRTLINE+4(22),=C'Length of PARM field :'                  05044
         HEX   PRTLINE+30,4,SAVMSLEN                                     05045
         MVC   PRTLINE+42(6),=C'Hex   '                                  05046
         PUT   PARMREPT,PRTLINE                                          05047
         MVC   PRTLINE,PRTLINE-1                                         05048
         MVC   PRTLINE+4(22),=C'Address of JCL PARMs :'                  05049
         HEX   PRTLINE+30,4,PARMSTRT                                     05050
         MVC   PRTLINE+42(6),=C'Hex   '                                  05051
         PUT   PARMREPT,PRTLINE                                          05052
         MVC   PRTLINE,PRTLINE-1                                         05053
         MVC   PRTLINE+4(22),=C'Last Character Count :'                  05054
         HEX   PRTLINE+30,4,PRMCHRCT                                     05055
         MVC   PRTLINE+42(6),=C'Hex   '                                  05056
         PUT   PARMREPT,PRTLINE                                          05057
         MVC   PRTLINE,PRTLINE-1                                         05058
         MVC   PRTLINE+4(22),=C'Number of PARM Chars :'                  05059
         HEX   PRTLINE+30,4,SAVCHRCT                                     05060
         MVC   PRTLINE+42(6),=C'Hex   '                                  05061
         PUT   PARMREPT,PRTLINE                                          05062
         MVC   PRTLINE,PRTLINE-1                                         05063
         MVC   PRTLINE+4(22),=C'Total Chars Searched :'                  05064
         HEX   PRTLINE+30,4,TOTCHRCT                                     05065
         MVC   PRTLINE+42(6),=C'Hex   '                                  05066
         PUT   PARMREPT,PRTLINE                                          05067
         MVC   PRTLINE,PRTLINE-1                                         05068
         MVC   PRTLINE+4(22),=C'Parm hits in PARM    :'                  05069
         HEX   PRTLINE+30,4,SAVPHITS                                     05070
         MVC   PRTLINE+42(6),=C'Packed'                                  05071
         PUT   PARMREPT,PRTLINE                                          05072
         MVC   PRTLINE,PRTLINE-1                                         05073
         MVC   PRTLINE+4(22),=C'Parm hits last SYSIN :'                  05074
         HEX   PRTLINE+30,4,PARMHITS                                     05075
         MVC   PRTLINE+42(6),=C'Packed'                                  05076
         PUT   PARMREPT,PRTLINE                                          05077
         MVC   PRTLINE,PRTLINE-1                                         05078
         MVC   PRTLINE+4(22),=C'Total Parm Hits      :'                  05079
         HEX   PRTLINE+30,4,TOTMHITS                                     05080
         MVC   PRTLINE+42(6),=C'Packed'                                  05081
         PUT   PARMREPT,PRTLINE                                          05082
         MVC   PRTLINE,PRTLINE-1                                         05083
         MVC   PRTLINE+4(22),=C'Parm loops in PARM   :'                  05084
         HEX   PRTLINE+30,4,SAVELCNT                                     05085
         MVC   PRTLINE+42(6),=C'Packed'                                  05086
         PUT   PARMREPT,PRTLINE                                          05087
         MVC   PRTLINE,PRTLINE-1                                         05088
         MVC   PRTLINE+4(22),=C'Parm loops last SYSIN:'                  05089
         HEX   PRTLINE+30,4,PARMLCNT                                     05090
         MVC   PRTLINE+42(6),=C'Packed'                                  05091
         PUT   PARMREPT,PRTLINE                                          05092
         MVC   PRTLINE,PRTLINE-1                                         05093
         MVC   PRTLINE+4(22),=C'Total Parm Loops     :'                  05094
         HEX   PRTLINE+30,4,TOTMLCNT                                     05095
         MVC   PRTLINE+42(6),=C'Packed'                                  05096
         PUT   PARMREPT,PRTLINE                                          05097
         MVC   PRTLINE,PRTLINE-1                                         05098
         MVC   PRTLINE+4(22),=C'Last Table Entry     :'                  05099
         HEX   PRTLINE+30,15,PARMTENT                                    05100
         PUT   PARMREPT,PRTLINE                                          05101
SUMMREND DS    0H                                                        05102
         BR    R7                                                        05103
* --------------------------------------------------------- *            05104
* --------------------------------------------------------- *            05105
PACK     PACK  WORKA,0(0,1)          <<< EXECUTED >>>                    05106
PACKL    PACK  WORKL,0(0,1)          <<< EXECUTED >>>                    05107
PACKP    PACK  WORKP,0(0,1)          <<< EXECUTED >>>                    05108
MVLIMNUM MVC   LIMFMSG+11(0),0(R1)   <<< EXECUTED >>>                    05109
MVLBLNUM MVC   LIMLMSG+11(0),0(R1)   <<< EXECUTED >>>                    05110
MVPRTNUM MVC   LIMPMSG+11(0),0(R1)   <<< EXECUTED >>>                    05111
MVLIMCHR MVC   LIMCHAR(0),0(R1)      <<< EXECUTED >>>                    05112
MVLABCHR MVC   LABCHAR(0),0(R1)      <<< EXECUTED >>>                    05113
MVPRTCHR MVC   PRTCHAR(0),0(R1)      <<< EXECUTED >>>                    05114
         EJECT                                                           05115
* --------------------------------------------------------- *            05116
WORKA    DC    D'0'                                                      05117
WORKL    DC    D'0'                                                      05118
WORKP    DC    D'0'                                                      05119
PL4NO3   DC    PL4'3'                                                    05120
FF       EQU   X'FF'                                                     05121
LIMFMSG  DC    C' FILELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05122
         DC    C' IS TREATED AS NL.                                   '  05123
         DC    CL27' '                                                   05124
LIMLMSG  DC    C' LABELIMIT=           HAS BEEN CODED IN SYSIN. NUMBER'  05125
         DC    C' REFLECTS THE COUNT OF ----ENDOFLABELTRAILER CARDS.  '  05126
         DC    CL27' '                                                   05127
LIMPMSG  DC    C' PRINTRCDS=           HAS BEEN CODED IN SYSIN. NUMBER'  05128
         DC    C' OF RECORDS FROM EACH TAPE FILE BEING PRINTED OUT.   '  05129
         DC    CL27' '                                                   05130
LIMHMSG  DC    C' HEXPRT OPTION IS ON IN DEFAULT MODE. '                 05131
         DC    CL6'&HEXDFLM'                                             05132
         DC    C' RECORDS WILL'                                          05133
         DC    C' BE HEX PRINTED.  TO OVERRIDE, CODE PRINTRCDS=nnn in '  05134
         DC    C'SYSIN.'                                                 05135
         DC    CL17' '                                                   05136
* --------------------------------------------------------- *            05137
PARMFLGS DS    0CL5     5 CONTIGUOUS BYTES OF PARM FLAGS                 05138
PARMFLG1 DC    X'00'                                                     05139
PARMFLG2 DC    X'00'                                                     05140
PARMFLG3 DC    X'00'                                                     05141
PARMFLG4 DC    X'00'                                                     05142
PARMFLG5 DC    X'00'                                                     05143
* --------------------------------------------------------- *            05144
* - -  The code below has to match exactly in COPYMODS and PARMCHEK.     05145
         DS    0F                                                        05146
STRTVALU DS    0CL(ENDVALUE)                                             05147
         DC    A(ENDVALUE)                                               05148
PARMSLEN DC    F'0'                LENGTH OF PARMS                       05149
SAVMSLEN DC    F'0'                LENGTH OF PARMS                       05150
PARMSTRT DC    F'0'                START ADDR OF JCL PARMS               05151
PRMCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05152
SAVCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05153
TOTCHRCT DC    F'0'                CHAR COUNT FOR PRM SEARCH             05154
SAVPHITS DC    PL4'0'              NUMBER OF PARM HITS                   05155
PARMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05156
TOTMHITS DC    PL4'0'              NUMBER OF PARM HITS                   05157
SAVELCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05158
PARMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05159
TOTMLCNT DC    PL4'0'              NUMBER OF PARM LOOPS                  05160
PARMTENT DC    CL15' '             PARM TABLE ENTRY DUMP                 05161
         DC    CL7' '              FILLER                                05162
PARMFWRK DC    XL5'00'             FOR TURNING OFF PARM BYTES            05163
*  -----    User Stuff                                                   05164
LINLABEL DC    F'0'           LABEL LIMIT VALUE                          05165
PRTLIMIT DC    F'&HEXDFLA'    HEXPRT LIMIT VALUE - DEFAULT IS 4 RECORDS  05166
BCTLIMIT DC    F'&HEXDFLA'    HEXPRT DECREMENT VALUE - DEFAULT IS 4      05167
LINFILE  DC    F'0'           RAW FILE LIMIT VALUE - SAME FOR NL         05168
LSLFILE  DC    F'0'           SL  FILE LIMIT VALUE - 3X NL VALUE         05169
LTGFILE  DC    F'0'           TARGET NUMBER FOR FILE LIMIT VALUE         05170
VOLSTG1  DC    C'      '      CARD VOLUME NAME - TO OVERLAY OTHERS       05171
TAPEOWN  DC    CL10' '                                                   05172
OVERFLAG DC    X'00'                                                     05173
*              X'01'          OUTVOLALL OVERRIDE OF CHGVOL               05174
PRTHEXOV DC    X'00'          HEX PRINT OVERRIDE FLAG                    05175
*              X'01'          PRINTRCDS= HAS BEEN CODED IN SYSIN         05176
LIMCHAR  DC    CL10' '                                                   05177
LABCHAR  DC    CL10' '                                                   05178
PRTCHAR  DC    CL10' '                                                   05179
ENDVALUE EQU   (*-PARMSLEN)+4                                            05180
* - -  The code above has to match exactly in COPYMODS and PARMCHEK.     05181
* --------------------------------------------------------- *            05182
*              FORMAT OF PARM TABLE                                      05183
*              ONE ENTRY IS 15 BYTES                                     05184
*                1ST BYTE:      LENGTH OF THIS PARM IN HEX               05185
*                2ND BYTE:      X'01' SAYS TURN FLAG OFF                 05186
*                               X'00' SAYS TURN FLAG ON                  05187
*                               X'10' SET ENTRY AS A DEFAULT             05188
*                NEXT 8 BYTES:  PARM NAME - LEFT JUSTIFIED               05189
*                NEXT 5 BYTES:  FLAG SETTINGS - 5 FLAGS,                 05190
*                                WHICH ALLOWS FOR 40 PARMS               05191
*                                THAT DON'T HAVE TO BE                   05192
*                                SEPARATED BY A COMMA.                   05193
PBYTES   EQU   5                Number of bytes of parm switches         05194
PTELEN   EQU   15               Length of each table entry               05195
PTEFLG   EQU   PTELEN-PBYTES    Displacement from entry to switch bytes  05196
EFFS     DC    15X'FF'          X'FF' bytes for XORing                   05197
* --------------------------------------------------------- *            05198
PARMTABL CSECT                                                           05199
         DC    X'07',X'00',C'LTMSKIP ',X'2000000000' FIRST ENTRY         05200
         DC    X'07',X'00',C'SKIPLTM ',X'2000000000'                     05201
         DC    X'07',X'11',C'COPYLTM ',X'2000000000' DEFAULT             05202
         DC    X'07',X'01',C'LTMCOPY ',X'2000000000'                     05203
         DC    X'07',X'00',C'LBLINFO ',X'DE00000000'                     05204
         DC    X'06',X'00',C'PRINTL  ',X'DE00000000'                     05205
         DC    X'06',X'00',C'LABELS  ',X'DE00000000'                     05206
         DC    X'06',X'01',C'NOLABL  ',X'DE00000000'                     05207
         DC    X'07',X'11',C'NOLABEL ',X'DE00000000' DEFAULT             05208
         DC    X'04',X'00',C'HDR1    ',X'0200000000'                     05209
         DC    X'06',X'01',C'NOHDR1  ',X'0200000000'                     05210
         DC    X'04',X'00',C'HDR2    ',X'0400000000'                     05211
         DC    X'06',X'01',C'NOHDR2  ',X'0400000000'                     05212
         DC    X'04',X'00',C'EOF1    ',X'0800000000'                     05213
         DC    X'06',X'01',C'NOEOF1  ',X'0800000000'                     05214
         DC    X'04',X'00',C'EOF2    ',X'1000000000'                     05215
         DC    X'06',X'01',C'NOEOF2  ',X'1000000000'                     05216
         DC    X'04',X'00',C'EOV1    ',X'4000000000'                     05217
         DC    X'06',X'01',C'NOEOV1  ',X'4000000000'                     05218
         DC    X'04',X'00',C'EOV2    ',X'8000000000'                     05219
         DC    X'06',X'01',C'NOEOV2  ',X'8000000000'                     05220
         DC    X'04',X'00',C'HDRS    ',X'0600000000'                     05221
         DC    X'06',X'01',C'NOHDRS  ',X'0600000000'                     05222
         DC    X'04',X'00',C'EOFS    ',X'1800000000'                     05223
         DC    X'06',X'01',C'NOEOFS  ',X'1800000000'                     05224
         DC    X'04',X'00',C'EOVS    ',X'C000000000'                     05225
         DC    X'06',X'01',C'NOEOVS  ',X'C000000000'                     05226
         DC    X'06',X'00',C'CHGVOL  ',X'0001000000'                     05227
         DC    X'08',X'11',C'NOCHGVOL',X'0001000000' DEFAULT             05228
         DC    X'06',X'00',C'JCLVOL  ',X'0001000000'                     05229
         DC    X'08',X'01',C'NOJCLVOL',X'0001000000'                     05230
         DC    X'06',X'00',C'NEWVOL  ',X'0001000000'                     05231
         DC    X'08',X'01',C'NONEWVOL',X'0001000000'                     05232
         DC    X'06',X'10',C'VOLLBL  ',X'0002000000' DEFAULT             05233
         DC    X'08',X'01',C'NOVOLLBL',X'0002000000'                     05234
         DC    X'07',X'00',C'EOV2EOF ',X'0004000000'                     05235
         DC    X'08',X'00',C'EOVTOEOF',X'0004000000'                     05236
         DC    X'06',X'00',C'EOVCHG  ',X'0004000000'                     05237
         DC    X'08',X'11',C'NOEOVCHG',X'0004000000' DEFAULT             05238
         DC    X'04',X'00',C'READ    ',X'0008000000'                     05239
         DC    X'08',X'00',C'READONLY',X'0008000000'                     05240
         DC    X'07',X'00',C'NOWRITE ',X'0008000000'                     05241
         DC    X'07',X'11',C'WRITE   ',X'0008000000' DEFAULT             05242
         DC    X'08',X'00',C'LABLDUMP',X'0010000000'                     05243
         DC    X'08',X'11',C'NOLABLDU',X'0010000000' DEFAULT             05244
         DC    X'05',X'00',C'SYSIN   ',X'0020000000'                     05245
         DC    X'07',X'11',C'NOSYSIN ',X'0020000000' DEFAULT             05246
         DC    X'06',X'00',C'OUTVOL  ',X'0040000000'                     05247
         DC    X'08',X'00',C'NOOUTVOL',X'0040000000'                     05248
         DC    X'08',X'00',C'LABADDIN',X'0080800000' INCLUDE LBLFIX      05249
         DC    X'08',X'01',C'NOLABADD',X'0080000000'                     05250
         DC    X'06',X'10',C'BLKCNT  ',X'0100000000' DEFAULT             05251
         DC    X'08',X'01',C'NOBLKCNT',X'0100000000'                     05252
         DC    X'08',X'00',C'PRADDLBL',X'0000100000'                     05253
         DC    X'08',X'01',C'NOPRADDL',X'0000100000'                     05254
         DC    X'08',X'00',C'CORRBLKS',X'0000200000'                     05255
         DC    X'08',X'01',C'NOCORRBL',X'0000200000'                     05256
         DC    X'08',X'00',C'NOEXNULL',X'0000400000'                     05257
         DC    X'08',X'00',C'NOSLNULL',X'0000400000'                     05258
         DC    X'06',X'11',C'EXNULL  ',X'0000400000'                     05259
         DC    X'06',X'01',C'SLNULL  ',X'0000400000'                     05260
         DC    X'06',X'00',C'LBLFIX  ',X'0000800000'                     05261
         DC    X'08',X'01',C'NOLBLFIX',X'0000800000'                     05262
         DC    X'08',X'00',C'INITVOLS',X'0001010000'                     05263
         DC    X'08',X'00',C'INITTAPE',X'0001010000'                     05264
         DC    X'07',X'00',C'LIMFILE ',X'0000020000'                     05265
         DC    X'07',X'00',C'FILELIM ',X'0000020000'                     05266
         DC    X'08',X'01',C'NOLIMFIL',X'0000020000'                     05267
         DC    X'05',X'00',C'BYTES   ',X'0000040000'                     05268
         DC    X'07',X'01',C'NOBYTES ',X'0000040000'                     05269
         DC    X'06',X'00',C'CUMTOT  ',X'0000080000'                     05270
         DC    X'08',X'01',C'NOCUMTOT',X'0000080000'                     05271
         DC    X'08',X'00',C'LIMLABEL',X'0000001000'                     05272
         DC    X'08',X'01',C'NOLIMLAB',X'0000001000'                     05273
         DC    X'06',X'10',C'OPTION  ',X'0000002000'                     05274
         DC    X'08',X'01',C'NOOPTION',X'0000002000'                     05275
         DC    X'07',X'00',C'SUPPWTO ',X'0000004000'                     05276
         DC    X'08',X'11',C'NOSUPPWT',X'0000004000'                     05277
         DC    X'08',X'00',C'LBDQUICK',X'0000008000'                     05278
         DC    X'08',X'01',C'NOLBDQUI',X'0000008000'                     05279
         DC    X'06',X'00',C'CUMSEP  ',X'0000000100'                     05280
         DC    X'08',X'01',C'NOCUMSEP',X'0000000100'                     05281
         DC    X'05',X'00',C'STRIP   ',X'0000000200'                     05282
         DC    X'07',X'11',C'NOSTRIP ',X'0000000200'                     05283
         DC    X'05',X'00',C'NLLIM   ',X'0000000400'                     05284
         DC    X'07',X'01',C'NONLLIM ',X'0000000400'                     05285
         DC    X'05',X'00',C'SLLIM   ',X'0000000800'                     05286
         DC    X'07',X'01',C'NOSLLIM ',X'0000000800'                     05287
         DC    X'07',X'00',C'IDRCOFF ',X'0000000010'                     05288
         DC    X'08',X'01',C'NOIDRCOF',X'0000000010'                     05289
         DC    X'06',X'00',C'HEXPRT  ',X'0000000020'                     05290
         DC    X'08',X'01',C'NOHEXPRT',X'0000000020'                     05291
         DC    X'FFFFFFFFFFFFFFFF'                                       05292
* --------------------------------------------------------- *            05293
PARMCHEK CSECT                                                           05294
         SPACE 3                                                         05295
         LTORG                                                           05296
         SPACE 3                                                         05297
         DS    0D                                                        05298
* --------------------------------------------------------- *            05299
MESSAGE1 DC    CL133'1PARMCHEK - PARM AND SYSIN SCANNING PROGRAM - FOR - 05300
               COPYMODS LVL-059'                                         05301
* --------------------------------------------------------- *            05302
         SPACE 3                                                         05303
SYSIN    DCB   MACRF=GM,DDNAME=SYSIN,DSORG=PS,RECFM=FB,LRECL=80,       X 05304
               EODAD=SYSINEND                                            05305
PARMREPT DCB   DDNAME=PARMREPT,DSORG=PS,MACRF=PM,LRECL=133,RECFM=FBA     05306
* --------------------------------------------------------- *            05307
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05308
HEX      DS    0H                                                        05309
         MVC   1(1,R15),0(R1)        Move byte                           05310
         UNPK  0(3,R15),1(2,R15)     Unpack                              05311
         TR    0(2,R15),HEXTAB-240                                       05312
         LA    R15,2(,R15)           Increment output pointer            05313
         LA    R1,1(,R1)             Increment input pointer             05314
         BCT   R0,HEX                Decrement length, then loop         05315
         MVI   0(R15),C' '           Blank the trailing byte             05316
         BR    R4                    Return to caller                    05317
HEXTAB   DC    C'0123456789ABCDEF'   Translate table                     05318
         SPACE                                                           05319
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05320
HEXSAVE  DS    3F                    Register save for HEX macro         05321
* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - *      05322
* --------------------------------------------------------- *            05323
FLAGSYST DC    X'00'          FLAG INDICATING DCB IS PRESENT             05324
*              X'01'          PARMREPT DD IS PRESENT                     05325
*              X'02'          SYSIN    DD IS PRESENT                     05326
OPENDFLG DC    X'00'          FLAG INDICATING DCB IS OPEN                05327
*              X'01'          PARMREPT DD IS OPEN                        05328
*              X'02'          SYSIN    DD IS OPEN                        05329
* --------------------------------------------------------- *            05330
         SPACE 3                                                         05331
PARMSAVE DC    F'0'                                                      05332
SAV4HEX  DC    F'0'                                                      05333
SAVE2TO3 DC    2F'0'                                                     05334
SAVE3REG DC    F'0'                                                      05335
SAVE7BA0 DC    F'0'                                                      05336
SAVE7BA1 DC    F'0'                                                      05337
PARMWORK DC    CL8' '                                                    05338
UPCASEOR DC    CL8' '                                                    05339
         DC    CL4' '                                                    05340
*    ------------------------ >   Constants for Date and Time - below    05341
SAVE1402 DS    6F                 Extra fullword for safety              05342
TIMED    DS    CL7                                                       05343
DATED    DS    CL9                                                       05344
DATETIME DS    4F                                                        05345
         ORG   DATETIME                                                  05346
TIME     DS    CL4                                                       05347
         DS    CL4                                                       05348
DATE     DS    CL5                                                       05349
         DS    CL3                                                       05350
HEADDLIT DS    0CL31              Literal for headings - date and time   05351
         DC    CL6'Today:'                                               05352
         DC    CL2' '                                                    05353
HEADDATE DC    CL23' '                                                   05354
LEVELLIT DS    0CL21              Level number display for headings      05355
         DC    CL6'Level '                                               05356
LEVELL   DC    CL4'&LLEV'                                                05357
         DC    CL2' ('                                                   05358
LEVDATE  DC    CL8' '             Assembly date for this program         05359
         DC    CL1')'                                                    05360
*    ------------------------ >   Constants for Date and Time - above    05361
*    --------------- >            Output line buffers - below            05362
PRMFDFLG DC    X'00'              Parm Found Flag                        05363
*              X'01'              Parm has been found in this record     05364
         DC    CL3' '                                                    05365
         DC    C' '                                                      05366
LINE     DC    CL133' '                                                  05367
         DC    C' '                                                      05368
CNTLINE  DC    CL133' '                                                  05369
         DC    C' '                                                      05370
OUTLINE  DC    CL133' '                                                  05371
         DC    C' '                                                      05372
PRTLINE  DC    CL133' '                                                  05373
         DC    CL80' '            Padding                                05374
*    --------------- >            Output line buffers - above            05375
*                                                                        05376
CARDIN   DC    CL80' '            SYSIN CARD INPUT AREA                  05377
         END                                                             05378
